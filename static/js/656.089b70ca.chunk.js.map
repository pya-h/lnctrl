{"version":3,"file":"static/js/656.089b70ca.chunk.js","mappings":"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","sources":["math/GraphBox.jsx","math/describer.js","../javascript/esm|/home/py/projects/react/lnctrl/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","views/input-boxes/CoordinateSystem.jsx","views/input-boxes/SimpleParametersList.jsx"],"sourcesContent":["import React from \"react\";\nimport Plot from \"react-plotly.js\";\n\nconst GraphBox = ({ traces, title, width, height = 500 }) => {\n    const temp_layout = {\n        xaxis: {\n            zeroline: true,\n            rangemode: \"tozero\",\n            autotick: false,\n            ticks: \"outside\",\n            tick0: 0,\n            dtick: 0.25,\n            ticklen: 8,\n            tickwidth: 4,\n            tickcolor: \"#000\",\n        },\n        yaxis: {\n            zeroline: true,\n            rangemode: \"tozero\",\n            autotick: false,\n            ticks: \"outside\",\n            tick0: 0,\n            dtick: 0.25,\n            ticklen: 8,\n            tickwidth: 4,\n            tickcolor: \"#000\",\n        },\n    };\n\n    return (\n        <Plot\n            style={{ textAlign: \"center\" }}\n            //id=\"graphBox\"\n            data={traces}\n            layout={{\n                // width: 1000,\n                // autosize: true,\n                margin: {\n                    t: 30, //top margin\n                    l: 30, //left margin\n                    r: 20, //right margin\n                    b: 30, //bottom margin\n                },\n                xaxis: {\n                    rangemode: \"tozero\",\n                },\n                yaxis: {\n                    rangemode: \"tozero\",\n                },\n                height,\n                title,\n                // hoverlabel: { bgcolor: \"#FFF\" },\n                hoverlabel: {align:'auto', boxmode: 'overlay', font:{color:'#000000FF'}},\n                legend: {orientation: 'h'}//, y: -0.3},\n            }}\n        />\n    );\n};\n\nexport default GraphBox;\n","import Complex from \"math/algebra/complex\";\nimport Algebra from \"math/algebra\";\nimport TransferFunction from \"math/algebra/functions/transfer\";\nimport { MathJax } from \"better-react-mathjax\";\nimport { Grid } from \"@mui/material\";\nimport { gridSpacing } from \"store/constant\";\nimport SubCard from \"views/ui-component/cards/SubCard\";\nimport { strictPrecisionFormat } from \"./calculus\";\n\nexport default class Describer {\n    Explain = ({ language = \"fa\" }) => {\n        let describes = [];\n        if (language === \"fa\") describes = this.toPersian();\n        // and other langs ....\n        if (describes) {\n            return (\n                <Grid spacing={gridSpacing} container>\n                    <Grid lg={6} md={6} sm={12} xs={12}  item>\n                        <SubCard>\n                            <Grid\n                                style={{ textAlign: \"center\"}}\n                                spacing={gridSpacing}\n                                container\n                            >\n                                {describes.types &&\n                                    describes.types.map((info, i) => (\n                                        <Grid\n                                            lg={i % 2 ? 9 : 3}\n                                            md={i % 2 ? 9 : 3}\n                                            sm={12}\n                                            xs={12}\n                                            style={{\n                                                color: \"rgba(150, 50, 150, 255)\",\n                                            }}\n                                            item\n                                        >\n                                            <MathJax> {info} </MathJax>\n                                        </Grid>\n                                    ))}\n                            </Grid>\n                        </SubCard>\n                    </Grid>\n                    <Grid lg={6} md={6} sm={12} xs={12} item>\n                        <SubCard>\n                            <Grid\n                                style={{ textAlign: \"center\" }}\n                                spacing={gridSpacing}\n                                container\n                            >\n                                {describes.params &&\n                                    describes.params.map((info, i) => (\n                                        <Grid\n                                            lg={6}\n                                            md={6}\n                                            sm={12}\n                                            xs={12}\n                                            style={{\n                                                color: \"rgba(150, 50, 150, 255)\",\n                                            }}\n                                            item\n                                        >\n                                            <MathJax> {info} </MathJax>\n                                        </Grid>\n                                    ))}\n                            </Grid>\n                        </SubCard>\n                    </Grid>\n                </Grid>\n            );\n        }\n        return null;\n    };\n    constructor(algebra) {\n        if (algebra instanceof TransferFunction) {\n            this.type = \"TrnasferFunction\";\n            // this.tf = algebra.copy();\n            this.tf = algebra; // it just reads the data, no need to make copy of and make app slower;\n            if (algebra.order) this.Order = algebra.order;\n            this.Zeros = Algebra.identify(algebra.getZeros());\n            this.Poles = Algebra.identify(algebra.getPoles());\n            this.RealPoles = algebra.poles.filter(\n                (pi) => !(pi instanceof Complex) || pi.isReal()\n            );\n            this.ImaginaryPoles = algebra.poles.filter(\n                (pi) => pi instanceof Complex && !pi.real() && pi.imaginary()\n            );\n            this.ComplexPoles = algebra.poles.filter(\n                (pi) => pi instanceof Complex\n            );\n            this.MultiplePoles = [];\n            for (const pi of algebra.poles) {\n                const r = algebra.poleOrder(pi);\n                if (r > 1) {\n                    // repeated rootss!!!\n                    if (\n                        this.MultiplePoles.filter((pj) =>\n                            Algebra.areTheseTwoEqual(pi, pj)\n                        ).length === 0\n                    )\n                        this.MultiplePoles.push({\n                            pole: pi.toString(),\n                            order: r,\n                        });\n                }\n            }\n        }\n    }\n\n    functionGroup = () => {\n        if (this.type === \"TrnasferFunction\") {\n            if (this.Order === 2 && this.Poles.length === 2) {\n                const p1 =\n                    this.Poles[0] instanceof Complex\n                        ? this.Poles[0].real()\n                        : this.Poles[0];\n                const p2 =\n                    this.Poles[1] instanceof Complex\n                        ? this.Poles[1].real()\n                        : this.Poles[1];\n                if (p1 <= 0 && p2 <= 0) {\n                    if (this.tf.w_n) {\n                        // meaning that the transfer function is in parametric form\n                        const { zeta } = this.tf;\n                        if (zeta > 1)\n                            return {\n                                name: \"میرای شدید\",\n                                status: \"دو قطب حقیقی پایدار در سمت چپ محور موهومی\",\n                            };\n                        else if (zeta === 1)\n                            return {\n                                name: \"میرای بحرانی\",\n                                status: \"دو قطب حقیقی تکراری پایدار در سمت چپ محور موهومی\",\n                            };\n                        else if (zeta > 0)\n                            return {\n                                name: \"میرای ضعیف نوسانی\",\n                                status: \"دو قطب مختلط مزدوج پایدار در سمت چپ محور موهومی\",\n                            };\n                        else if (zeta === 0)\n                            return {\n                                name: \"نوسانی\",\n                                status: \"دو قطب مختلط مزدوج  پایدار روی محور موهومی\",\n                            };\n                        else if (zeta > -1)\n                            return {\n                                name: \"نامیرای ضعیف نوسانی\",\n                                status: \"دو قطب مختلط مزدوج ناپایدار در سمت راست محور موهومی\",\n                            };\n                        else if (zeta === -1)\n                            return {\n                                name: \"نامیرای بحرانی\",\n                                status: \"دو قطب حقیقی تکراری ناپایدار در سمت راست محور موهومی\",\n                            };\n                        else\n                            return {\n                                name: \"نامیرای شدید\",\n                                status: \"دو قطب حقیقی در سمت راست محور موهومی\",\n                            };\n                    } else if (\n                        !this.RealPoles.length &&\n                        this.ComplexPoles.length === 2\n                    ) {\n                        if (\n                            this.ComplexPoles[0].isConjugateWith(\n                                this.ComplexPoles[1]\n                            )\n                        )\n                            return {\n                                name: \"میرای ضعیف نوسانی\",\n                                status: \"دو قطب مختلط مزدوج با در سمت چپ محور موهومی\",\n                            };\n                    } else if (\n                        this.RealPoles.length === 2 &&\n                        !this.ComplexPoles.length\n                    )\n                        if (this.MultiplePoles.length > 0)\n                            return {\n                                name: \"میرای بحرانی\",\n                                status: \"دو قطب حقیقی تکراری در سمت چپ محور موهومی\",\n                            };\n                        else\n                            return {\n                                name: \"میرای شدید\",\n                                status: \"دو قطب حقیقی در سمت چپ محور موهومی\",\n                            };\n                }\n                const numberOfUnstablePoles =\n                    this.RealPoles.filter((pi) => pi > 0).length +\n                    this.ComplexPoles.filter((cp) => cp.real() > 0).length;\n                let status = `شامل ${numberOfUnstablePoles} قطب ناپایدار در سمت راست محور موهومی`;\n                const numberOfStablePoles =\n                    this.Poles.length - numberOfUnstablePoles;\n                if (numberOfStablePoles)\n                    status += ` و ${numberOfStablePoles} قطب پایدار در سمت چپ`;\n                return {\n                    name: \"ناپایدار\",\n                    status,\n                };\n            } else if (this.Order === 1) return \"پاسخ تابع تبدیل مرتبه اول\";\n        }\n    };\n\n    valueOf = () => {\n        return {\n            poles: {\n                multiple: this.MultiplePoles,\n                complex: this.ComplexPoles,\n                real: this.RealPoles,\n                imaginary: this.ImaginaryPoles,\n            },\n        };\n    };\n\n    toPersian = () => {\n        // return a string containing all zero pole and step response infor mation\n        const types = [],\n            params = [];\n        if (this.type === \"TrnasferFunction\") {\n            if (this.Order) {\n                types.push(\"نوع : \");\n                types.push(`تابع تبدیل مرتبه ی ${this.Order}`);\n            }\n            types.push(\"صفرها : \");\n            types.push(\n                this.Zeros != null && this.Zeros.length\n                    ? this.Zeros.join(\" , \")\n                    : \"ندارد\"\n            );\n\n            \n            const tfGroup = this.functionGroup();\n            types.push(\"وضعیت قطب ها :\");\n            types.push(tfGroup.status);\n            types.push(\"نوع پاسخ پله :\");\n            types.push(tfGroup.name);\n            types.push(\"قطب ها : \");\n            types.push(\n                this.Poles != null && \"$$\" + this.Poles.length\n                    ? this.Poles.join(\" , \")\n                    : \"ندارد\"\n            );\n\n            params.push(\"ثابت زمانی :\");\n            params.push(\n                this.tf.timeConstant ? this.tf.timeConstant + \" s\" : \"-\"\n            );\n            params.push(\"زمان نشست :\");\n            params.push(this.tf.t_settle ? this.tf.t_settle + \" s\" : \"-\");\n            params.push(\"فرکانس طبیعی میراشده :\");\n\n            params.push(\n                this.tf.w_d ? strictPrecisionFormat(this.tf.w_d) + \" Hz\" : \"-\"\n            );\n            params.push(\"زمان اوج :\");\n\n            params.push(\n                this.tf.t_rise\n                    ? strictPrecisionFormat(this.tf.t_rise) + \" s\"\n                    : \"-\"\n            );\n\n            params.push(\"بالازدگی :\");\n            params.push(\n                this.tf.overshoot\n                    ? strictPrecisionFormat(this.tf.overshoot) + \" %\"\n                    : \"-\"\n            );\n            \n            const {Kr, Ka, Ks} = this.tf.errors();\n            params.push(\"ثابت خطای پله (موقعیت) :\");\n            params.push(strictPrecisionFormat(Ks));\n            params.push(\"ثابت خطای شیب (سرعت) :\");\n            params.push(strictPrecisionFormat(Kr));\n            params.push(\"ثابت خطای سهمی (شتاب) :\");\n            params.push(strictPrecisionFormat(Ka)); \n        }\n        return { params, types };\n    };\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useCallback } from \"react\";\nimport \"./input-boxes.css\";\nimport calculus from \"math/calculus/index\";\nimport { useState, useEffect, useRef } from \"react\";\nimport ReactCursorPosition from \"react-cursor-position\";\nimport { Grid, InputAdornment, TextField } from \"@mui/material\";\nimport { MathJax } from \"better-react-mathjax\";\n\n/* react-cursor-position props\n{\n    detectedEnvironment: {\n        isMouseDetected: false,\n        isTouchDetected: false,\n    },\n    elementDimensions: {\n        width: Number,\n        height: Number\n    },\n    isActive: Boolean,\n    isPositionOutside: Boolean,\n    position: {\n        x: Number,\n        y: Number\n    }\n}\n\n*/\n// for enabling mouse down to drag a point\nconst useInterval = (callback, delay) => {\n    const savedCallback = useRef();\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    useEffect(() => {\n        const tick = () => {\n            savedCallback.current();\n        };\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n};\n\nconst axisOffsets = (psize, grids = 5) =>\n    grids >= 5\n        ? psize * (0.2 / 7 + (grids - 5) / ((grids + 1) * (grids + 5)))\n        : -(psize / 10) / (1 + 3.5 * grids) + (psize * 0.2) / 7;\n\nconst CURSOR_Y_OFFSET = 38,\n    DEFAULT_GRIDS = 6;\n\nconst CoordinateSystemContent = ({\n    elementDimensions, // react-cursor-position\n    position, // react-cursor-position\n    isPositionOutside, // react-cursor-position\n    point = { x: 0, y: 0, select: () => {} },\n    extra, // = {point: null, select: null},\n    options = { pointSize: 7, grids: DEFAULT_GRIDS, pointColor: null }, // pointCOLOR\n    scale = 1,\n    viewpoint,\n}) => {\n    const [x, $x] = useState(0);\n    const [y, $y] = useState(0);\n    // css grid\n    const [grids, $grids] = useState(5); // 5x5\n    const [pointSize, $pointSize] = useState(7);\n\n    /* OLD version : \n        const update = (e) => {\n            const xmax = boxObject.offsetWidth / 2,\n                ymax = (boxObject.offsetHeight + 1) / 2; // + 1 is NEEDED?\n            const dx = calculus.round((e.clientX - xmax) / xmax),\n                dy = calculus.round((ymax - e.nativeEvent.offsetY) / ymax);\n            $x(dx * scale);\n            $y(dy * scale);};\n     */\n    const update = (e) => {\n        // const boxObject = document.getElementById(\"#box\");\n        if (!isPositionOutside) {\n            const xmax = elementDimensions.width / 2,\n                ymax = (elementDimensions.height - CURSOR_Y_OFFSET) / 2; // + 1 is NEEDED?\n            const dx = calculus.round((position.x - xmax) / xmax),\n                dy = calculus.round((ymax - position.y) / ymax);\n            const vx = dx * scale * grids,\n                vy = dy * scale * grids;\n            $x(vx);\n            $y(vy);\n            viewpoint(vx, vy);\n        }\n    };\n\n    const updatePointLocation = useCallback(\n        (px, py, index = 0) => {\n            // update CSS\n            const objectPoint = document.getElementById(`#point${index}`);\n            objectPoint.style.setProperty(\"--x\", px);\n            objectPoint.style.setProperty(\n                \"--y\",\n                py - axisOffsets(pointSize, grids)\n            );\n        },\n        [pointSize, grids]\n    );\n\n    const registerPoint = (isExtra = false) => {\n        // update(e);\n        // put a point inside the box\n        // update the values in the caller component (e.g. parameter boxes in examples)\n        if (!isExtra) {\n            if (point && point.select) point.select({ x, y });\n            // for extra point (second point)\n        } else if (extra && extra.select) extra.select({ x, y });\n\n        viewpoint(x, y);\n        // after updating values in the parameter.js components => point prop will be updated => view updater useEffect (immediately in below) will be triggered\n    };\n\n    const [isMouseDown, setMouseDown] = useState(false);\n    useInterval(registerPoint, isMouseDown ? 10 : null);\n    const [isMouseDownForXpoint, setMouseDownForXpoint] = useState(false);\n    useInterval(() => registerPoint(true), isMouseDownForXpoint ? 10 : null);\n\n    useEffect(() => {\n        // view updater useEffect\n        if (point && scale !== 0) {\n            // if(point.x !== x || (point.y !== null && point.y !== y))\n            const px = Number(point.x),\n                py = Number(point.y);\n            const ndx = calculus.round(px / (grids * scale)),\n                ndy = calculus.round(py / (grids * scale));\n            updatePointLocation(ndx * grids, ndy * grids, 0);\n\n            // $x(px);\n            // $y(py);\n        }\n    }, [point, scale, grids, updatePointLocation]);\n\n    // for extra point changes\n    useEffect(() => {\n        // view updater useEffect\n        if (extra && scale !== 0) {\n            // if(extra.x !== x || (extra.y !== null && extra.y !== y))\n            const px = Number(extra.x),\n                py = Number(extra.y);\n            const ndx = calculus.round(px / (grids * scale)),\n                ndy = calculus.round(py / (grids * scale));\n            updatePointLocation(ndx * grids, ndy * grids, 1);\n\n            // $x(px);\n            // $y(py);\n        }\n    }, [extra, scale, grids, updatePointLocation]);\n\n    useEffect(() => {\n        // if dragging put the point out of range of the scale\n        // scale will be expanded\n        // stop dragging to avoid mouse drag bugs\n        setMouseDown(false);\n        setMouseDownForXpoint(false);\n    }, [scale]);\n    // set options:\n    useEffect(() => {\n        if (options.pointSize && options.pointSize >= 0)\n            $pointSize(options.pointSize);\n\n        if (options.grids && options.grids >= 0) $grids(options.grids);\n    }, [options]);\n\n    useEffect(() => {\n        if (grids >= 0 && grids >= 0) {\n            document.documentElement.style.setProperty(\"--grids-x\", grids);\n            document.documentElement.style.setProperty(\"--grids-y\", grids);\n            document.documentElement.style.setProperty(\n                \"--grids-total\",\n                grids * 2\n            );\n        }\n    }, [grids]);\n\n    useEffect(() => {\n        if (pointSize >= 0)\n            document.documentElement.style.setProperty(\n                \"--point-size\",\n                pointSize\n            );\n    }, [pointSize]);\n\n    return (\n        <div\n            id=\"#box\"\n            onMouseEnter={(e) => update(e)}\n            onMouseLeave={(e) => update(e)}\n            onMouseMove={(e) => update(e)}\n            // onClick={() => registerPoint(false)}\n            onMouseUp={() => {\n                setMouseDown(false);\n                setMouseDownForXpoint(false);\n            }}\n            className=\"coordinate-box\"\n        >\n            <div\n                id=\"#point0\"\n                onMouseDown={() => setMouseDown(true)}\n                onMouseUp={() => setMouseDown(false)}\n                className=\"coordinate-point\"\n            ></div>\n            {extra && (\n                <div\n                    id=\"#point1\"\n                    onMouseDown={() => setMouseDownForXpoint(true)}\n                    onMouseUp={() => setMouseDownForXpoint(false)}\n                    className=\"coordinate-point extra-point-color\"\n                ></div>\n            )}\n        </div>\n        /* <i className=\"arrow right\"></i> */\n    );\n};\n\nconst outOfRange = (num, range) =>\n    num > range || num < -range || range - Math.abs(num) < 1.0;\n    \nconst CoordinateSystem = (props) => {\n    const [x, $x] = useState(0);\n    const [y, $y] = useState(0);\n\n    const { options, point, extra } = props;\n    let { grids, defaultScale } = options ? options : { grids: DEFAULT_GRIDS, defaultScale: 1 };\n\n    const [scale, $scale] = useState(defaultScale || 1);\n    const viewpoint = (x, y) => {\n        // updates the vallue of coordinates givent by the child component\n        $x(x);\n        $y(y);\n    };\n\n    // auto expand axis range when the value is near to scale\n    useEffect(() => {\n        const range = grids\n            ? Math.abs(scale * grids)\n            : Math.abs(scale * DEFAULT_GRIDS);\n\n        if (\n            range > 0 &&\n            (outOfRange(point.x, range) ||\n                outOfRange(point.y, range) ||\n                (extra && (outOfRange(extra.x, range) || outOfRange(extra.y, range))))\n        )\n            $scale(scale + 1);\n    }, [point, extra, scale, grids]);\n\n    return (\n        <Grid container>\n            <Grid xs={12} item>\n                <ReactCursorPosition>\n                    <CoordinateSystemContent\n                        {...props}\n                        viewpoint={viewpoint}\n                        scale={scale}\n                    />\n                </ReactCursorPosition>\n            </Grid>\n            <Grid xs={12}>\n                <p style={{ textAlign: \"center\" }}>{\"(\" + calculus.strictPrecisionFormat(x) + \", \" + calculus.strictPrecisionFormat(y) + \")\"}</p>\n            </Grid>\n            <Grid xs={12} item>\n                <TextField\n                    variant=\"outlined\"\n                    value={scale}\n                    sx={{ width: \"100%\" }}\n                    onChange={(e) => $scale(e.target.value)}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"left\">\n                                <MathJax>{\"$$\\\\times$$\"}</MathJax>\n                            </InputAdornment>\n                        ),\n                        endAdornment: (\n                            <InputAdornment position=\"left\">\n                                مقیاس\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default CoordinateSystem;\n","import { Grid, InputAdornment, TextField } from \"@mui/material\";\nimport { MathJax } from \"better-react-mathjax\";\nimport { evaluate } from \"math/calculus\";\nimport { Fragment } from \"react\";\n\nconst SimpleParametersList = ({ parameters, setters, labels, units }) => {\n    return (\n        <Fragment>\n            {parameters instanceof Array &&\n                parameters.map((param, i) => (\n                    <Grid md={12} sm={4} xs={6} item>\n                        <TextField\n                            onChange={(e) => setters[i](e.target.value)}\n                            value={param}\n                            sx={{ width: \"100%\" }}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"left\">\n                                        <MathJax>{labels[i]}</MathJax>\n                                    </InputAdornment>\n                                ),\n                                endAdornment: units[i] && (\n                                    <InputAdornment position=\"right\">\n                                        <MathJax>{units[i]}</MathJax>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </Grid>\n                ))}\n        </Fragment>\n    );\n};\n\nexport default SimpleParametersList;\n"],"names":["traces","title","width","height","style","textAlign","data","layout","margin","t","l","r","b","xaxis","rangemode","yaxis","hoverlabel","align","boxmode","font","color","legend","orientation","Describer","algebra","Explain","language","describes","toPersian","Grid","spacing","gridSpacing","container","lg","md","sm","xs","item","SubCard","types","map","info","i","MathJax","params","functionGroup","type","Order","Poles","length","p1","Complex","real","p2","tf","w_n","zeta","name","status","RealPoles","ComplexPoles","MultiplePoles","isConjugateWith","numberOfUnstablePoles","filter","pi","cp","numberOfStablePoles","valueOf","poles","multiple","complex","imaginary","ImaginaryPoles","push","Zeros","join","tfGroup","timeConstant","t_settle","w_d","strictPrecisionFormat","t_rise","overshoot","errors","Kr","Ka","Ks","TransferFunction","this","order","Algebra","getZeros","getPoles","isReal","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","poleOrder","pj","pole","toString","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","axisOffsets","psize","grids","CoordinateSystemContent","elementDimensions","position","isPositionOutside","point","x","y","select","extra","options","pointSize","pointColor","scale","viewpoint","useState","$x","$y","$grids","$pointSize","update","xmax","ymax","dx","calculus","dy","vx","vy","updatePointLocation","useCallback","px","py","index","objectPoint","document","getElementById","setProperty","registerPoint","isExtra","isMouseDown","setMouseDown","isMouseDownForXpoint","setMouseDownForXpoint","Number","ndx","ndy","documentElement","onMouseEnter","onMouseLeave","onMouseMove","onMouseUp","className","onMouseDown","outOfRange","num","range","Math","abs","props","defaultScale","$scale","variant","sx","onChange","target","InputProps","startAdornment","endAdornment","parameters","setters","labels","units","Fragment","param"],"sourceRoot":""}