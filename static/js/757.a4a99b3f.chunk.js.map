{"version":3,"file":"static/js/757.a4a99b3f.chunk.js","mappings":"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","sources":["views/input-boxes/SimpleParametersList.jsx","views/plotter/PlotlyBox.jsx","views/topics/chapter05/sketching-root-locus/lecture.jsx","views/topics/chapter05/sketching-root-locus/parameters.jsx","views/topics/chapter05/sketching-root-locus/index.jsx","views/ui-component/cards/MainCard.js","../node_modules/@mui/icons-material/ArrowBackIos.js","../node_modules/@mui/icons-material/ArrowForwardIos.js","../node_modules/@mui/icons-material/FilterCenterFocus.js","../node_modules/@mui/icons-material/Fullscreen.js","../node_modules/@mui/material/Stack/Stack.js"],"sourcesContent":["import { Grid, InputAdornment, TextField } from \"@mui/material\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst SimpleParametersList = ({ parameters, setters, labels, units }) => {\r\n    return (\r\n        <Fragment>\r\n            {parameters instanceof Array &&\r\n                parameters.map((param, i) => (\r\n                    <Grid md={12} sm={4} xs={6} item>\r\n                        <TextField\r\n                            onChange={(e) => setters[i](e.target.value)}\r\n                            value={param}\r\n                            sx={{ width: \"100%\" }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"left\">\r\n                                        <MathJax>{labels[i]}</MathJax>\r\n                                    </InputAdornment>\r\n                                ),\r\n                                endAdornment: units[i] && (\r\n                                    <InputAdornment position=\"right\">\r\n                                        <MathJax>{units[i]}</MathJax>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SimpleParametersList;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nconst PlotlyBox = ({ traces, title, width, height = 500, logX, hideX, hideY, yRange, hideLegends }) => {\r\n    /*const temp_layout = {\r\n        xaxis: {\r\n            zeroline: true,\r\n            rangemode: \"tozero\",\r\n            autotick: false,\r\n            ticks: \"outside\",\r\n            tick0: 0,\r\n            dtick: 0.25,\r\n            ticklen: 8,\r\n            tickwidth: 4,\r\n            tickcolor: \"#000\",\r\n        },\r\n        yaxis: {\r\n            zeroline: true,\r\n            rangemode: \"tozero\",\r\n            autotick: false,\r\n            ticks: \"outside\",\r\n            tick0: 0,\r\n            dtick: 0.25,\r\n            ticklen: 8,\r\n            tickwidth: 4,\r\n            tickcolor: \"#000\",\r\n        },\r\n    };*/\r\n    return (\r\n        <Plot\r\n            style={{ textAlign: \"center\" }}\r\n            //id=\"PlotlyBox\"\r\n            data={traces}\r\n            layout={{\r\n                // width: 1000,\r\n                // autosize: true,\r\n                showlegend: !hideLegends,\r\n                margin: {\r\n                    t: 30, //top margin\r\n                    l: 30, //left margin\r\n                    r: 20, //right margin\r\n                    b: 30, //bottom margin\r\n                },\r\n                xaxis: {\r\n                    rangemode: \"tozero\",\r\n                    zeroline: true,\r\n                    type: !logX ? \"dec\" : \"log\",\r\n                    visible: !hideX\r\n                },\r\n                yaxis: {\r\n                    rangemode: \"tozero\",\r\n                    zeroline: true,\r\n                    visible: !hideY,\r\n                    range: yRange\r\n                },\r\n\r\n                height,\r\n                title,\r\n                // hoverlabel: { bgcolor: \"#FFF\" },\r\n                hoverlabel: {align:'auto', boxmode: 'overlay', font:{color:'#000000FF'}},\r\n                legend: {orientation: 'h'}//, y: -0.3},\r\n                \r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default PlotlyBox;\r\n","import SubCard from \"../../../ui-component/cards/SubCard\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport \"views/topics/topics.css\";\r\nimport temp_part1 from \"./temp/part1.png\";\r\nimport temp_part2 from \"./temp/part2.png\";\r\n\r\nconst SketchingRootLocusLecture = () => {\r\n    return (\r\n        <SubCard\r\n            title=\"مکان هندسی فاز ثابت\"\r\n            darkBorder={true}\r\n            sx={{ direction: \"rtl\" }}\r\n        >\r\n            <Typography>\r\n                <Grid item>\r\n                    <img\r\n                        className=\"lecture-image\"\r\n                        src={temp_part1}\r\n                        alt=\"بارگذاری تصویر با مشکل مواجه شد\"\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <img\r\n                        className=\"lecture-image\"\r\n                        src={temp_part2}\r\n                        alt=\"بارگذاری تصویر با مشکل مواجه شد\"\r\n                    />\r\n                </Grid>\r\n            </Typography>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default SketchingRootLocusLecture;\r\n","import { Fab, Grid, Slider, Stack, Typography } from \"@mui/material\";\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport SimpleParametersList from \"views/input-boxes/SimpleParametersList\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport AnimateButton from \"views/ui-component/extended/AnimateButton\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport Fullscreen from \"@mui/icons-material/Fullscreen\";\r\nimport FilterCenterFocusIcon from \"@mui/icons-material/FilterCenterFocus\";\r\nimport { useState } from \"react\";\r\n\r\nconst startLebels = [\"$$Num = [$$\", \"$$Den = [$$\", \"$$N = $$\"];\r\nconst endLabels = [\"$$]$$\", \"$$]$$\", null];\r\n\r\nconst SketchingRootLocusParameters = ({\r\n    rawNumerator,\r\n    rawDenominator,\r\n    $rawNumerator,\r\n    $rawDenominator,\r\n    N,\r\n    $N,\r\n    formula,\r\n    thickness,\r\n    setThickness,\r\n    step,\r\n    setStep,\r\n    finalStep,\r\n    guides,\r\n}) => {\r\n    const [sliderValue, setSliderValue] = useState(25);\r\n\r\n    const updateThickness = (value) => {\r\n        setSliderValue(value);\r\n        setThickness(sliderValue / 5);\r\n    };\r\n    return (\r\n        <SubCard\r\n            darkBorder\r\n            title=\"پارامترها\"\r\n            sx={{\r\n                direction: \"ltr\",\r\n                textAlign: \"right\",\r\n                height: \"100%\",\r\n            }}\r\n        >\r\n            <SubCard>\r\n                <Grid id=\"formulaBox\" container direction=\"row\">\r\n                    <MathJax style={{ margin: \"auto\" }}>{formula}</MathJax>\r\n                </Grid>\r\n            </SubCard>\r\n\r\n            <hr />\r\n            <Grid spacing={gridSpacing} container direction=\"row\">\r\n                <SimpleParametersList\r\n                    parameters={[rawNumerator, rawDenominator, N]}\r\n                    setters={[$rawNumerator, $rawDenominator, $N]}\r\n                    labels={startLebels}\r\n                    units={endLabels}\r\n                />\r\n            </Grid>\r\n            {guides && guides.length && (\r\n                <Grid xs={12} item>\r\n                    <Typography sx={{my: 2, py: 2}} style={{textAlign: \"center\", border: '2px outset lightcoral', borderRadius: '1rem', color: 'coral' }}>\r\n                        {guides[step]}\r\n                    </Typography>\r\n                </Grid>\r\n            )}\r\n            <Grid xs={12} sx={{ mt: 2, pl: 2 }} spacing={gridSpacing} container>\r\n                <Grid style={{ textAlign: \"left\" }} xs={3} item>\r\n                    <Fab\r\n                        size=\"large\"\r\n                        sx={{ p: 2 }}\r\n                        variant=\"circular\"\r\n                        disabled={step <= 0}\r\n                        onClick={() => setStep(step - (step > 0 ? 1 : 0))}\r\n                    >\r\n                        <AnimateButton type=\"scale\" direction=\"down\">\r\n                            <Grid sx={{ mt: 1, ml: 1 }}>\r\n                                <ArrowBackIosIcon />\r\n                            </Grid>\r\n                        </AnimateButton>\r\n                    </Fab>\r\n                </Grid>\r\n                <Grid xs={6} item>\r\n                    <Stack\r\n                        spacing={2}\r\n                        direction=\"row\"\r\n                        sx={{ py: 2, direction: \"ltr\" }}\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <Fullscreen />\r\n                        <Slider\r\n                            aria-label=\"Volume\"\r\n                            value={sliderValue}\r\n                            onChange={(e, value) => updateThickness(value)}\r\n                        />\r\n                        <FilterCenterFocusIcon />\r\n                    </Stack>\r\n                </Grid>\r\n                <Grid xs={3} item>\r\n                    <Fab\r\n                        size=\"large\"\r\n                        sx={{ p: 2 }}\r\n                        variant=\"circular\"\r\n                        disabled={step >= finalStep - 1}\r\n                        onClick={() =>\r\n                            setStep(step + (step < finalStep - 1 ? 1 : 0))\r\n                        }\r\n                    >\r\n                        <AnimateButton type=\"scale\" direction=\"down\">\r\n                            <Grid sx={{ mt: 1 }}>\r\n                                <ArrowForwardIosIcon />\r\n                            </Grid>\r\n                        </AnimateButton>\r\n                    </Fab>\r\n                </Grid>\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default SketchingRootLocusParameters;\r\n","import SketchingRootLocusLecture from \"./lecture\";\r\n\r\n// project imports\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport calculus from \"math/calculus\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport SketchingRootLocusParameters from \"./parameters\";\r\nimport TransferFunction from \"math/algebra/functions/fraction\";\r\nimport { gridSpacing } from \"store/constant\";\r\n// import Describer from \"math/describer\";\r\nimport MainCard from \"views/ui-component/cards/MainCard\";\r\nimport Complex from \"math/algebra/complex\";\r\nimport { joinSorted } from \"toolshed\";\r\nimport PlotlyBox from \"views/plotter/PlotlyBox\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport Equation from \"../../../../math/solvers/equation\";\r\n\r\nconst tfFormula = (tf, index = undefined) =>\r\n    \"$$ \" + tf.label(\"G\", index) + \" $$\";\r\n\r\nconst pointByPointTrace = (x, y, name, markerStyle) => {\r\n    const size = markerStyle?.size || 15,\r\n        symbol = markerStyle?.symbol;\r\n    return {\r\n        x: x instanceof Array ? x : [x],\r\n        y: y instanceof Array ? y : [y],\r\n        type: \"scatter\",\r\n        mode: \"markers\",\r\n        marker: {\r\n            size,\r\n            symbol,\r\n            // color: \"black\",\r\n        },\r\n        name,\r\n    };\r\n};\r\nconst arrowTrace = (direction, x, y = 0, size = 20) =>\r\n    pointByPointTrace(x, y, `Direction${x}`, {\r\n        symbol: `arrow-bar-${direction}`,\r\n        size,\r\n    });\r\n\r\nconst lineDirection = (pzl, pzr) => {\r\n    const traces = [];\r\n    if (pzl.group !== pzr.group) {\r\n        traces.push(\r\n            arrowTrace(\r\n                pzl.group === \"pole\" ? \"right\" : \"left\",\r\n                (pzl.value + pzr.value) / 2\r\n            )\r\n        );\r\n    } else {\r\n        const half = (pzl.value + pzr.value) / 2;\r\n        const positions = [(pzl.value + half) / 2, (pzr.value + half) / 2],\r\n            directions = [\r\n                pzl.group === \"pole\" ? \"right\" : \"left\",\r\n                pzr.group === \"pole\" ? \"left\" : \"right\",\r\n            ];\r\n        for (let idx = 0; idx < positions.length; idx++)\r\n            traces.push(arrowTrace(directions[idx], positions[idx], 0, 15));\r\n    }\r\n    return traces;\r\n};\r\n\r\nconst listRoots = (roots, _type = \"قطب\") =>\r\n    roots.length\r\n        ? \"$$\" +\r\n          roots\r\n              .map((zi, i) => `\\\\quad s_{${i + 1}} = ` + zi.toString())\r\n              .join(\",\") +\r\n          \"$$\"\r\n        : `.سیستم ${_type}ی ندارد`;\r\n\r\nconst SketchingRootLocus = () => {\r\n    const [rawNumerator, $rawNumerator] = useState(\"1\");\r\n    const [rawDenominator, $rawDenominator] = useState(\"1 5 6\");\r\n\r\n    const [stepByStepTraces, $stepByStepTraces] = useState([]);\r\n\r\n    const [G_s, $G_s] = useState(null);\r\n    // const [GInfo, $GInfo] = useState(\"\");\r\n    const [formula, $formula] = useState(null);\r\n    const [N, $N] = useState(100);\r\n    const [thickness, setThickness] = useState(5.0);\r\n    const [step, setStep] = useState(0);\r\n    const [yRange, setYRange] = useState(null);\r\n    const [guides, setGuides] = useState([]);\r\n    const [description, setDescription] = useState([]);\r\n\r\n    //update\r\n    useEffect(() => {\r\n        // k * num / den\r\n        const g_s = new TransferFunction(\r\n            calculus.stringToArray(rawNumerator),\r\n            calculus.stringToArray(rawDenominator)\r\n        );\r\n\r\n        $G_s(g_s);\r\n        $formula(tfFormula(g_s));\r\n        setStep(0);\r\n    }, [rawNumerator, rawDenominator]);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            let maxY = 0;\r\n            const guides = [],\r\n                description = [];\r\n            if (G_s instanceof TransferFunction) {\r\n                const traces = [];\r\n                const [zeros, poles] = G_s.roots();\r\n\r\n                let [zx, zy] = Complex.ToCouples(zeros);\r\n                description.push({ formula: listRoots(zeros, \"صفر\") });\r\n                guides.push(\"یافتن صفرها\");\r\n                // step 0\r\n                traces.push(pointByPointTrace(zx, zy, \"Zeros\"));\r\n                // step 1\r\n                let [px, py] = Complex.ToCouples(poles);\r\n                traces.push(\r\n                    pointByPointTrace(px, py, \"Poles\", { symbol: \"x\" })\r\n                );\r\n                description.push({ formula: listRoots(poles) });\r\n                guides.push(\"یافتن قطب ها\");\r\n                // step 2\r\n                // aAxisPZs ==> zero/poles that are placesd right on the real axis\r\n                const xAxisPZs = joinSorted(\r\n                    zeros\r\n                        .filter((zi) => !(zi instanceof Complex) || zi.isReal())\r\n                        .map((zi) => (zi instanceof Complex ? zi.real() : zi)),\r\n                    poles\r\n                        .filter((pi) => !(pi instanceof Complex) || pi.isReal())\r\n                        .map((pi) => (pi instanceof Complex ? pi.real() : pi)),\r\n                    [\"zero\", \"pole\"],\r\n                    false\r\n                );\r\n                const g_delta = G_s.characteristicEquation();\r\n                const g_deltaRoots = new Equation(g_delta).solve();\r\n\r\n                for (let i = 0; i < xAxisPZs.length - 1; i++) {\r\n                    traces.push(\r\n                        calculus.systemToTrace(\r\n                            (x) => 0,\r\n                            xAxisPZs[i].value,\r\n                            xAxisPZs[i + 1].value,\r\n                            thickness,\r\n                            `{RL${i}}`,\r\n                            false,\r\n                            +N\r\n                        )\r\n                    );\r\n                    guides.push(`یافتن خطوط محور افقی (${i + 1})`);\r\n                    const directions = lineDirection(\r\n                        xAxisPZs[i],\r\n                        xAxisPZs[i + 1]\r\n                    );\r\n                    traces.push(...directions);\r\n                    for (let idx = 0; idx < directions.length; idx++) {\r\n                        guides.push(`یافتن جهت خط شماره ی (${i + 1})`);\r\n\r\n                        description.push({\r\n                            formula:\r\n                                \"$$\" +\r\n                                g_delta.toString() +\r\n                                \" = 0 \\\\\\\\ $$ \" +\r\n                                listRoots(g_deltaRoots, \"ریشه\"),\r\n                            persian: `تعداد شاخه ها = ${g_deltaRoots.length}`,\r\n                        });\r\n                    }\r\n                    description.push({\r\n                        formula:\r\n                            \"$$\" +\r\n                            g_delta.toString() +\r\n                            \" = 0 \\\\\\\\ $$ \" +\r\n                            listRoots(g_deltaRoots, \"ریشه\"),\r\n                        persian: `تعداد شاخه ها = ${g_deltaRoots.length}`,\r\n                    });\r\n                }\r\n                maxY = calculus.max([...zy, ...py]).value;\r\n                setYRange(!isNaN(maxY) ? [-maxY - 1, maxY + 1] : null);\r\n                $stepByStepTraces(traces);\r\n                setGuides(guides);\r\n                setDescription(description);\r\n                // $GInfo(new Describer(G_s));\r\n            }\r\n        } catch (ex) {\r\n            console.log(ex);\r\n        }\r\n    }, [G_s, N, thickness]);\r\n\r\n    return (\r\n        <MainCard>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Typography>\r\n                    <h2 className=\"chapter-section-title\">\r\n                        مکان هندسی قطب های سیستم\r\n                    </h2>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Grid container direction=\"column\" spacing={gridSpacing}>\r\n                    <Grid\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        item\r\n                    >\r\n                        <SketchingRootLocusLecture />\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                        spacing={2}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        container\r\n                    >\r\n                        <Grid\r\n                            md={4}\r\n                            sm={12}\r\n                            xs={12}\r\n                            sx={{ marginTop: \"1%\", width: \"100%\" }}\r\n                            container\r\n                        >\r\n                            <Grid xs={12}>\r\n                                <SketchingRootLocusParameters\r\n                                    rawNumerator={rawNumerator}\r\n                                    rawDenominator={rawDenominator}\r\n                                    $rawNumerator={$rawNumerator}\r\n                                    $rawDenominator={$rawDenominator}\r\n                                    N={N}\r\n                                    $N={$N}\r\n                                    formula={formula}\r\n                                    thickness={thickness}\r\n                                    setThickness={setThickness}\r\n                                    step={step}\r\n                                    setStep={setStep}\r\n                                    finalStep={stepByStepTraces.length}\r\n                                    guides={guides}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid\r\n                            sx={{ py: 2, pl: 2 }}\r\n                            md={8}\r\n                            sm={12}\r\n                            xs={12}\r\n                            container\r\n                            spacing={gridSpacing}\r\n                        >\r\n                            <Grid xs={12} item>\r\n                                <SubCard>\r\n                                    <PlotlyBox\r\n                                        title=\"مکان هندسی\"\r\n                                        traces={stepByStepTraces.slice(\r\n                                            0,\r\n                                            step + 1\r\n                                        )}\r\n                                        yRange={yRange}\r\n                                        hideLegends\r\n                                    />\r\n                                </SubCard>\r\n                            </Grid>\r\n\r\n                            <Grid sx={{ margin: \"auto\", width: \"100%\" }} item>\r\n                                <SubCard>\r\n                                    <Grid\r\n                                        id=\"description\"\r\n                                        container\r\n                                        direction=\"row\"\r\n                                    >\r\n                                        {Boolean(step < description.length) && (\r\n                                            <Typography\r\n                                                sx={{\r\n                                                    m: \"auto\",\r\n                                                    textAlign: \"center\",\r\n                                                    py: 1,\r\n                                                }}\r\n                                            >\r\n                                                <MathJax\r\n                                                    style={{ margin: \"auto\" }}\r\n                                                >\r\n                                                    {description[step].formula}\r\n                                                </MathJax>\r\n                                                <hr />\r\n                                                <Typography\r\n                                                    sx={{\r\n                                                        m: \"auto\",\r\n                                                        textAlign: \"center\",\r\n                                                        fontSize: \"18px\",\r\n                                                    }}\r\n                                                >\r\n                                                    {description[step].persian}\r\n                                                </Typography>\r\n                                            </Typography>\r\n                                        )}\r\n                                    </Grid>\r\n                                </SubCard>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default SketchingRootLocus;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// constant\r\nconst headerSX = {\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n// ==============================|| CUSTOM MAIN CARD ||============================== //\r\n\r\nconst MainCard = forwardRef(\r\n    (\r\n        {\r\n            border = true,\r\n            boxShadow,\r\n            children,\r\n            content = true,\r\n            contentClass = '',\r\n            contentSX = {},\r\n            darkTitle,\r\n            secondary,\r\n            shadow,\r\n            sx = {},\r\n            title,\r\n            ...others\r\n        },\r\n        ref\r\n    ) => {\r\n        const theme = useTheme();\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                {...others}\r\n                sx={{\r\n                    overflowY: 'auto',\r\n                    border: border ? '1px solid' : 'none',\r\n                    borderColor: theme.palette.primary[200] + 75,\r\n                    ':hover': {\r\n                        boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\r\n                    },\r\n                    ...sx\r\n                }}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\r\n                {darkTitle && title && (\r\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\r\n                )}\r\n\r\n                {/* content & header divider */}\r\n                {title && <Divider />}\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={contentSX} className={contentClass}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nMainCard.propTypes = {\r\n    border: PropTypes.bool,\r\n    boxShadow: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    contentSX: PropTypes.object,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    shadow: PropTypes.string,\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nexport default MainCard;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.67 3.87 9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\"\n}), 'ArrowBackIos');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z\"\n}), 'ArrowForwardIos');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 15H3v4c0 1.1.9 2 2 2h4v-2H5v-4zM5 5h4V3H5c-1.1 0-2 .9-2 2v4h2V5zm14-2h-4v2h4v4h2V5c0-1.1-.9-2-2-2zm0 16h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4zM12 9c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'FilterCenterFocus');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"\n}), 'Fullscreen');\n\nexports.default = _default;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_extendSxProp as extendSxProp, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n\n    return output;\n  }, []);\n}\n\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\n\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (ownerState.spacing[breakpoint] != null || ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n\n  return styles;\n};\nconst StackRoot = styled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(style);\nconst Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    component = 'div',\n    direction = 'column',\n    spacing = 0,\n    divider,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = {\n    direction,\n    spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;"],"names":["parameters","setters","labels","units","Fragment","Array","map","param","i","md","sm","xs","item","onChange","e","target","value","sx","width","InputProps","startAdornment","position","endAdornment","traces","title","height","logX","hideX","hideY","yRange","hideLegends","style","textAlign","data","layout","showlegend","margin","t","l","r","b","xaxis","rangemode","zeroline","type","visible","yaxis","range","hoverlabel","align","boxmode","font","color","legend","orientation","SubCard","darkBorder","direction","Typography","Grid","className","src","temp_part1","alt","temp_part2","startLebels","endLabels","rawNumerator","rawDenominator","$rawNumerator","$rawDenominator","N","$N","formula","setThickness","thickness","step","setStep","finalStep","guides","useState","sliderValue","setSliderValue","id","container","MathJax","spacing","gridSpacing","SimpleParametersList","length","my","py","border","borderRadius","mt","pl","Fab","size","p","variant","disabled","onClick","AnimateButton","ml","ArrowBackIos","Stack","alignItems","Fullscreen","Slider","updateThickness","FilterCenterFocus","ArrowForwardIos","pointByPointTrace","x","y","name","markerStyle","symbol","mode","marker","arrowTrace","lineDirection","pzl","pzr","group","push","half","positions","directions","idx","listRoots","roots","_type","zi","toString","join","stepByStepTraces","$stepByStepTraces","G_s","$G_s","$formula","setYRange","setGuides","description","setDescription","useEffect","g_s","TransferFunction","calculus","tf","index","undefined","label","tfFormula","maxY","zeros","poles","Complex","zx","zy","px","xAxisPZs","joinSorted","filter","isReal","real","pi","g_delta","characteristicEquation","g_deltaRoots","Equation","solve","persian","isNaN","ex","console","log","MainCard","marginTop","PlotlyBox","slice","Boolean","m","fontSize","headerSX","mr","forwardRef","ref","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","others","theme","useTheme","overflowY","borderColor","palette","primary","action","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","_excluded","joinChildren","separator","childrenArray","React","reduce","output","child","key","StackRoot","styled","slot","overridesResolver","props","styles","root","ownerState","_extends","display","handleBreakpoints","resolveBreakpointValues","values","breakpoints","propValue","flexDirection","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","deepmerge","row","column","getValue","inProps","themeProps","useThemeProps","extendSxProp","component","divider","other","_objectWithoutPropertiesLoose","_jsx","as"],"sourceRoot":""}