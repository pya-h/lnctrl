{"version":3,"file":"static/js/912.9aa1f5a9.chunk.js","mappings":"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Ac,KACdnhC,KAAKonD,GACLpnD,KAAKkoD,GACLloD,KAAKk7B,IACL7C,WACAA,WACAA,WACA8I,cAAc,KACdnhC,KAAKmnD,GACLnnD,KAAK8nD,GACL9nD,KAAKkoD,GACL7vB,WACAA,WACAA,WACA8I,aAAa,KACbnhC,KAAKqnD,GACLrnD,KAAKm7B,IACLn7B,KAAKq7B,IACLhD,WACAA,WACAA,WACAr4B,KAAKqoD,GACLroD,KAAKgoD,GACL3vB,WACA8I,aAAa,KACbnhC,KAAKunD,GACLvnD,KAAKk7B,IACLl7B,KAAKkoD,GACL7vB,WACAA,WACAA,WACA8I,cAAc,GACdnhC,KAAKi7B,IACLj7B,KAAK0nD,GACL1nD,KAAKgoD,GACLhoD,KAAKq7B,IACLhD,WACAA,WACAA,WACAA,WACA8I,cAAc,IACdnhC,KAAKwnD,GACLxnD,KAAKm7B,IACLn7B,KAAKq7B,IACLhD,WACAA,WACAA,WACA8I,aAAa,IACbnhC,KAAKwnD,GACLxnD,KAAKgoD,GACL3vB,WACAA,WACA8I,aAAa,IACbnhC,KAAKynD,GACLznD,KAAK+nD,GACL/nD,KAAKq7B,IACLhD,WACAA,WACAA,WACA8I,cAAc,GACdnhC,KAAKynD,GACLznD,KAAK8nD,GACL9nD,KAAKgoD,GACL3vB,WACAA,WACAA,WACA8I,cAAc,IACdnhC,KAAK4nD,GACL5nD,KAAKk7B,IACLl7B,KAAKkoD,GACL7vB,WACAA,WACAA,WACA8I,aAAa,IACbnhC,KAAK6nD,GACL7nD,KAAKm7B,IACLn7B,KAAKq7B,IACLhD,WACAA,WACAA,WACAr4B,KAAKuoD,GACLvoD,KAAKgoD,GACL3vB,WACA8I,cAAc,GACdnhC,KAAK2nD,GACL3nD,KAAKm7B,IACLn7B,KAAKq7B,IACLhD,WACAA,WACAA,WACAr4B,KAAK2nD,GACL3nD,KAAKgoD,GACL3vB,WAIAzd,MACAA,MACAA,MACAA,MACAA,MACAA,MACAA,MACAA,MACAA,MACAA,MACAA,MACAA,MACAA,MACAA,MACAA,MACAqtC,EAAgB7rB,MACZr4B,OACFirC,QAAQE,IAAI,k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AG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KA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IAAK,IAAK,IACpH,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7H,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACnH,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACnH,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACnH,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACnH,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClH,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM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","sources":["../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/algebrite/dist/algebrite.js","../node_modules/big-integer/BigInteger.js","../node_modules/nerdamer/Algebra.js","../node_modules/nerdamer/Calculus.js","../node_modules/nerdamer/all.min.js","../node_modules/nerdamer/nerdamer.core.js","../javascript/esm|/home/py/projects/react/lnctrl/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../javascript/esm|/home/py/projects/react/lnctrl/node_modules/@babel/runtime/helpers/esm/typeof.js","../javascript/esm|/home/py/projects/react/lnctrl/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../javascript/esm|/home/py/projects/react/lnctrl/node_modules/@babel/runtime/helpers/esm/createSuper.js","../javascript/esm|/home/py/projects/react/lnctrl/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../javascript/esm|/home/py/projects/react/lnctrl/node_modules/@babel/runtime/helpers/esm/inherits.js","../javascript/esm|/home/py/projects/react/lnctrl/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../javascript/esm|/home/py/projects/react/lnctrl/node_modules/@babel/runtime/helpers/esm/construct.js","../javascript/esm|/home/py/projects/react/lnctrl/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../javascript/esm|/home/py/projects/react/lnctrl/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// Generated by CoffeeScript 2.5.1\n(function() {\n\n  /* arg =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  z\n\n  General description\n  -------------------\n  Returns the angle of complex z.\n\n  */\n  /*\n   Argument (angle) of complex z\n\n    z    arg(z)\n    -    ------\n\n    a    0\n\n    -a    -pi      See note 3 below\n\n    (-1)^a    a pi\n\n    exp(a + i b)  b\n\n    a b    arg(a) + arg(b)\n\n    a + i b    arctan(b/a)\n\n  Result by quadrant\n\n    z    arg(z)\n    -    ------\n\n    1 + i    1/4 pi\n\n    1 - i    -1/4 pi\n\n    -1 + i    3/4 pi\n\n    -1 - i    -3/4 pi\n\n  Notes\n\n    1. Handles mixed polar and rectangular forms, e.g. 1 + exp(i pi/3)\n\n    2. Symbols in z are assumed to be positive and real.\n\n    3. Negative direction adds -pi to angle.\n\n       Example: z = (-1)^(1/3), abs(z) = 1/3 pi, abs(-z) = -2/3 pi\n\n    4. jean-francois.debroux reports that when z=(a+i*b)/(c+i*d) then\n\n      arg(numerator(z)) - arg(denominator(z))\n\n       must be used to get the correct answer. Now the operation is\n       automatic.\n  */\n  /*\n   Returns the coefficient of the imaginary part of complex z\n\n    z    imag(z)\n    -    -------\n\n    a + i b    b\n\n    exp(i a)  sin(a)\n  */\n  /* Power function\n\n    Input:    push  Base\n\n        push  Exponent\n\n    Output:    Result on stack\n  */\n  /*\n  Convert complex z to rectangular form\n\n    Input:    push  z\n\n    Output:    Result on stack\n  */\n  /* det =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  m\n\n  General description\n  -------------------\n  Returns the determinant of matrix m.\n  Uses Gaussian elimination for numerical matrices.\n\n  Example:\n\n    det(((1,2),(3,4)))\n    > -2\n\n  */\n  /* adj =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  m\n\n  General description\n  -------------------\n  Returns the adjunct of matrix m. The inverse of m is equal to adj(m) divided by det(m).\n\n  */\n  /*\n   Guesses a rational for each float in the passed expression\n  */\n  /* arccos =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  x\n\n  General description\n  -------------------\n  Returns the inverse cosine of x.\n\n  */\n  /* arccosh =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  x\n\n  General description\n  -------------------\n  Returns the inverse hyperbolic cosine of x.\n\n  */\n  /* arcsin =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  x\n\n  General description\n  -------------------\n  Returns the inverse sine of x.\n\n  */\n  /* arcsinh =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  x\n\n  General description\n  -------------------\n  Returns the inverse hyperbolic sine of x.\n\n  */\n  /* arctan =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  x\n\n  General description\n  -------------------\n  Returns the inverse tangent of x.\n\n  */\n  /* arctanh =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  x\n\n  General description\n  -------------------\n  Returns the inverse hyperbolic tangent of x.\n\n  */\n  /* besselj =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  x,n\n\n  General description\n  -------------------\n\n  Returns a solution to the Bessel differential equation (Bessel function of first kind).\n\n  Recurrence relation:\n\n    besselj(x,n) = (2/x) (n-1) besselj(x,n-1) - besselj(x,n-2)\n\n    besselj(x,1/2) = sqrt(2/pi/x) sin(x)\n\n    besselj(x,-1/2) = sqrt(2/pi/x) cos(x)\n\n  For negative n, reorder the recurrence relation as:\n\n    besselj(x,n-2) = (2/x) (n-1) besselj(x,n-1) - besselj(x,n)\n\n  Substitute n+2 for n to obtain\n\n    besselj(x,n) = (2/x) (n+1) besselj(x,n+1) - besselj(x,n+2)\n\n  Examples:\n\n    besselj(x,3/2) = (1/x) besselj(x,1/2) - besselj(x,-1/2)\n\n    besselj(x,-3/2) = -(1/x) besselj(x,-1/2) - besselj(x,1/2)\n\n  */\n  /* bessely =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  x,n\n\n  General description\n  -------------------\n\n  Bessel function of second kind.\n\n  */\n  /* ceiling =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  x\n\n  General description\n  -------------------\n\n  Returns the smallest integer not less than x.\n\n  */\n  /* check =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  p\n\n  General description\n  -------------------\n  Returns whether the predicate p is true/false or unknown:\n  0 if false, 1 if true or remains unevaluated if unknown.\n  Note that if \"check\" is passed an assignment, it turns it into a test,\n  i.e. check(a = b) is turned into check(a==b) \n  so \"a\" is not assigned anything.\n  Like in many programming languages, \"check\" also gives truthyness/falsyness\n  for numeric values. In which case, \"true\" is returned for non-zero values.\n  Potential improvements: \"check\" can't evaluate strings yet.\n\n  */\n  /* choose =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  n,k\n\n  General description\n  -------------------\n\n  Returns the number of combinations of n items taken k at a time.\n\n  For example, the number of five card hands is choose(52,5)\n\n  ```\n                            n!\n        choose(n,k) = -------------\n                       k! (n - k)!\n  ```\n  */\n  /* circexp =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  x\n\n  General description\n  -------------------\n\n  Returns expression x with circular and hyperbolic functions converted to exponential forms. Sometimes this will simplify an expression.\n\n  */\n  /* clear =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  x\n\n  General description\n  -------------------\n\n  Completely wipes a variable from the environment (while doing x = quote(x) just unassigns it).\n\n  */\n  /* clearall =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  General description\n  -------------------\n\n  Completely wipes all variables from the environment.\n\n  */\n  /* cofactor =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  m,i,j\n\n  General description\n  -------------------\n  Cofactor of a matrix component.\n  Let c be the cofactor matrix of matrix m, i.e. tranpose(c) = adj(m).\n  This function returns c[i,j].\n\n  */\n  /* conj =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  z\n\n  General description\n  -------------------\n  Returns the complex conjugate of z.\n\n  */\n  /* contract =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  a,i,j\n\n  General description\n  -------------------\n  Contract across tensor indices i.e. returns \"a\" summed over indices i and j.\n  If i and j are omitted then 1 and 2 are used.\n  contract(m) is equivalent to the trace of matrix m.\n\n  */\n  /* cosh =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  x\n\n  General description\n  -------------------\n  Returns the hyperbolic cosine of x\n\n  ```\n              exp(x) + exp(-x)\n    cosh(x) = ----------------\n                     2\n  ```\n\n  */\n  /* deg =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  p,x\n\n  General description\n  -------------------\n  Returns the degree of polynomial p(x).\n\n  */\n  /* denominator =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  x\n\n  General description\n  -------------------\n  Returns the denominator of expression x.\n\n  */\n  /* dim =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  m,n\n\n  General description\n  -------------------\n  Returns the cardinality of the nth index of tensor \"m\".\n\n  */\n  /* do =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  a,b,...\n\n  General description\n  -------------------\n  Evaluates each argument from left to right. Returns the result of the last argument.\n\n  */\n  /* eigenval =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  m\n\n  General description\n  -------------------\n  Compute eigenvalues of m. See \"eigen\" for more info.\n\n  */\n  /* eigenvec =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  m\n\n  General description\n  -------------------\n  Compute eigenvectors of m. See \"eigen\" for more info.\n\n  */\n  /* erf =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Authors\n  -------\n  philippe.billet@noos.fr\n\n  Parameters\n  ----------\n  x\n\n  General description\n  -------------------\n  Error function erf(x).\n  erf(-x)=erf(x)\n\n  */\n  /*\n  Remove terms that involve a given symbol or expression. For example...\n\n    filter(x^2 + x + 1, x)    =>  1\n\n    filter(x^2 + x + 1, x^2)  =>  x + 1\n  */\n  /* dot =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  a,b,...\n\n  General description\n  -------------------\n\n  The inner (or dot) operator gives products of vectors,\n  matrices, and tensors.\n\n  Note that for Algebrite, the elements of a vector/matrix\n  can only be scalars. This allows for example to flesh out\n  matrix multiplication using the usual multiplication.\n  So for example block-representations are not allowed.\n\n  There is an aweful lot of confusion between sw packages on\n  what dot and inner do.\n\n  First off, the \"dot\" operator is different from the\n  mathematical notion of dot product, which can be\n  slightly confusing.\n\n  The mathematical notion of dot product is here:\n    http://mathworld.wolfram.com/DotProduct.html\n\n  However, \"dot\" does that and a bunch of other things,\n  i.e. in Algebrite\n  dot/inner does what the dot of Mathematica does, i.e.:\n\n  scalar product of vectors:\n\n    inner((a, b, c), (x, y, z))\n    > a x + b y + c z\n\n  products of matrices and vectors:\n\n    inner(((a, b), (c,d)), (x, y))\n    > (a x + b y,c x + d y)\n\n    inner((x, y), ((a, b), (c,d)))\n    > (a x + c y,b x + d y)\n\n    inner((x, y), ((a, b), (c,d)), (r, s))\n    > a r x + b s x + c r y + d s y\n\n  matrix product:\n\n    inner(((a,b),(c,d)),((r,s),(t,u)))\n    > ((a r + b t,a s + b u),(c r + d t,c s + d u))\n\n  the \"dot/inner\" operator is associative and\n  distributive but not commutative.\n\n  In Mathematica, Inner is a generalisation of Dot where\n  the user can specify the multiplication and the addition\n  operators.\n  But here in Algebrite they do the same thing.\n\n   https://reference.wolfram.com/language/ref/Dot.html\n   https://reference.wolfram.com/language/ref/Inner.html\n\n   http://uk.mathworks.com/help/matlab/ref/dot.html\n   http://uk.mathworks.com/help/matlab/ref/mtimes.html\n\n  */\n  /*\n   Laguerre function\n\n  Example\n\n    laguerre(x,3)\n\n  Result\n\n       1   3    3   2\n    - --- x  + --- x  - 3 x + 1\n       6        2\n\n  The computation uses the following recurrence relation.\n\n    L(x,0,k) = 1\n\n    L(x,1,k) = -x + k + 1\n\n    n*L(x,n,k) = (2*(n-1)+1-x+k)*L(x,n-1,k) - (n-1+k)*L(x,n-2,k)\n\n  In the \"for\" loop i = n-1 so the recurrence relation becomes\n\n    (i+1)*L(x,n,k) = (2*i+1-x+k)*L(x,n-1,k) - (i+k)*L(x,n-2,k)\n  */\n  /*\n   Return the leading coefficient of a polynomial.\n\n  Example\n\n    leading(5x^2+x+1,x)\n\n  Result\n\n    5\n\n  The result is undefined if P is not a polynomial.\n  */\n  /*\n   Legendre function\n\n  Example\n\n    legendre(x,3,0)\n\n  Result\n\n     5   3    3\n    --- x  - --- x\n     2        2\n\n  The computation uses the following recurrence relation.\n\n    P(x,0) = 1\n\n    P(x,1) = x\n\n    n*P(x,n) = (2*(n-1)+1)*x*P(x,n-1) - (n-1)*P(x,n-2)\n\n  In the \"for\" loop we have i = n-1 so the recurrence relation becomes\n\n    (i+1)*P(x,n) = (2*i+1)*x*P(x,n-1) - i*P(x,n-2)\n\n  For m > 0\n\n    P(x,n,m) = (-1)^m * (1-x^2)^(m/2) * d^m/dx^m P(x,n)\n  */\n  /*\n  Convert complex z to polar form\n\n    Input:    push  z\n\n    Output:    Result on stack\n\n    polar(z) = abs(z) * exp(i * arg(z))\n  */\n  /*\n   Returns the real part of complex z\n\n    z    real(z)\n    -    -------\n\n    a + i b    a\n\n    exp(i a)  cos(a)\n  */\n  /*\n  Taylor expansion of a function\n\n    push(F)\n    push(X)\n    push(N)\n    push(A)\n    taylor()\n  */\n  /*\n  // up to 100 blocks of 100,000 atoms\n\n  #define M 100\n  #define N 100000\n\n  U *mem[M]\n  int mcount\n\n  U *free_list\n  int free_count\n\n  U *\n  alloc(void)\n  {\n    U *p\n    if (free_count == 0) {\n      if (mcount == 0)\n        alloc_mem()\n      else {\n        gc()\n        if (free_count < N * mcount / 2)\n          alloc_mem()\n      }\n      if (free_count == 0)\n        stop(\"atom space exhausted\")\n    }\n    p = free_list\n    free_list = free_list->u.cons.cdr\n    free_count--\n    return p\n  }\n   */\n  /*\n   Compare adjacent terms in s[] and combine if possible.\n\n    Returns the number of terms remaining in s[].\n\n    n  number of terms in s[] initially\n  */\n  /* cross =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept, script_defined\n\n  Parameters\n  ----------\n  u,v\n\n  General description\n  -------------------\n  Returns the cross product of vectors u and v.\n\n  */\n  /* curl =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept, script_defined\n\n  Parameters\n  ----------\n  u\n\n  General description\n  -------------------\n  Returns the curl of vector u.\n\n  */\n  /*\n    Clear all patterns\n  */\n  /*\n  if 0\n\n   * left brace\n\n    for (i = 0; i < h; i++) {\n      if (yindex == YMAX)\n        break\n      chartab[yindex].c = '|'\n      chartab[yindex].x = x - 2\n      chartab[yindex].y = y + i\n      yindex++\n    }\n\n   * right brace\n\n    emit_x++\n\n    for (i = 0; i < h; i++) {\n      if (yindex == YMAX)\n        break\n      chartab[yindex].c = '|'\n      chartab[yindex].x = emit_x\n      chartab[yindex].y = y + i\n      yindex++\n    }\n\n    emit_x++\n\n  endif\n   */\n  /*\n   For example...\n\n    push(F)\n    push(X)\n    filter()\n    F = pop()\n  */\n  /*\n   Symbolic addition\n\n    Terms in a sum are combined if they are identical modulo rational\n    coefficients.\n\n    For example, A + 2A becomes 3A.\n\n    However, the sum A + sqrt(2) A is not modified.\n\n    Combining terms can lead to second-order effects.\n\n    For example, consider the case of\n\n      1/sqrt(2) A + 3/sqrt(2) A + sqrt(2) A\n\n    The first two terms are combined to yield 2 sqrt(2) A.\n\n    This result can now be combined with the third term to yield\n\n      3 sqrt(2) A\n  */\n  /*\n   Table of integrals\n\n  The symbol f is just a dummy symbol for creating a list f(A,B,C,C,...) where\n\n    A  is the template expression\n\n    B  is the result expression\n\n    C  is an optional list of conditional expressions\n  */\n  /*\n   Partition a term\n\n    Input stack:\n\n      term (factor or product of factors)\n\n      free variable\n\n    Output stack:\n\n      constant expression\n\n      variable expression\n  */\n  /*\n    Substitute new expr for old expr in expr.\n\n    Input:  push  expr\n\n      push  old expr\n\n      push  new expr\n\n    Output:  Result on stack\n  */\n  var $, ABS, ADD, ADJ, AND, APPROXRATIO, ARCCOS, ARCCOSH, ARCSIN, ARCSINH, ARCTAN, ARCTANH, ARG, ASSUME_REAL_VARIABLES, ATOMIZE, AUTOEXPAND, BAKE, BESSELJ, BESSELY, BINDING, BINOMIAL, BINOM_check_args, BUF, C1, C2, C3, C4, C5, C6, CEILING, CHECK, CHOOSE, CIRCEXP, CLEAR, CLEARALL, CLEARPATTERNS, CLOCK, COEFF, COFACTOR, CONDENSE, CONJ, CONS, CONTRACT, COS, COSH, Condense, DEBUG, DEBUG_ABS, DEBUG_ARG, DEBUG_CLOCKFORM, DEBUG_IMAG, DEBUG_IS, DEBUG_MULTIPLY, DEBUG_POWER, DEBUG_RATIONALIZE, DEBUG_RECT, DEBUG_SIMPLIFY, DECOMP, DEFINT, DEGREE, DENOMINATOR, DERIVATIVE, DET, DET_check_arg, DIM, DIRAC, DIVISORS, DO, DOT, DOUBLE, DRAW, DRAWX, DSOLVE, E, EIGEN, EIGENVAL, EIGENVEC, EIG_N, EIG_check_arg, EIG_yydd, EIG_yyqq, ERF, ERFC, EVAL, EXP, EXPAND, EXPCOS, EXPSIN, Eval, Eval_Eval, Eval_abs, Eval_add, Eval_adj, Eval_and, Eval_approxratio, Eval_arccos, Eval_arccosh, Eval_arcsin, Eval_arcsinh, Eval_arctan, Eval_arctanh, Eval_arg, Eval_besselj, Eval_bessely, Eval_binding, Eval_binomial, Eval_ceiling, Eval_check, Eval_choose, Eval_circexp, Eval_clear, Eval_clearall, Eval_clearpatterns, Eval_clock, Eval_coeff, Eval_cofactor, Eval_condense, Eval_conj, Eval_cons, Eval_contract, Eval_cos, Eval_cosh, Eval_decomp, Eval_defint, Eval_degree, Eval_denominator, Eval_derivative, Eval_det, Eval_dim, Eval_dirac, Eval_divisors, Eval_do, Eval_dsolve, Eval_eigen, Eval_eigenval, Eval_eigenvec, Eval_erf, Eval_erfc, Eval_exp, Eval_expand, Eval_expcos, Eval_expsin, Eval_factor, Eval_factorial, Eval_factorpoly, Eval_filter, Eval_float, Eval_floor, Eval_for, Eval_function_reference, Eval_gamma, Eval_gcd, Eval_hermite, Eval_hilbert, Eval_imag, Eval_index, Eval_inner, Eval_integral, Eval_inv, Eval_invg, Eval_isinteger, Eval_isprime, Eval_laguerre, Eval_lcm, Eval_leading, Eval_legendre, Eval_log, Eval_lookup, Eval_mod, Eval_multiply, Eval_noexpand, Eval_not, Eval_nroots, Eval_number, Eval_numerator, Eval_operator, Eval_or, Eval_outer, Eval_pattern, Eval_patternsinfo, Eval_polar, Eval_power, Eval_predicate, Eval_prime, Eval_print, Eval_print2dascii, Eval_printcomputer, Eval_printhuman, Eval_printlatex, Eval_printlist, Eval_product, Eval_quote, Eval_quotient, Eval_rank, Eval_rationalize, Eval_real, Eval_rect, Eval_roots, Eval_round, Eval_setq, Eval_sgn, Eval_shape, Eval_silentpattern, Eval_simfac, Eval_simplify, Eval_sin, Eval_sinh, Eval_sqrt, Eval_stop, Eval_subst, Eval_sum, Eval_sym, Eval_symbolsinfo, Eval_tan, Eval_tanh, Eval_taylor, Eval_tensor, Eval_test, Eval_testeq, Eval_testge, Eval_testgt, Eval_testle, Eval_testlt, Eval_transpose, Eval_unit, Eval_user_function, Eval_zero, Evalpoly, FACTOR, FACTORIAL, FACTORPOLY, FILTER, FLOATF, FLOOR, FOR, FORCE_FIXED_PRINTOUT, FUNCTION, Find, GAMMA, GCD, HERMITE, HILBERT, IMAG, INDEX, INNER, INTEGRAL, INV, INVG, INV_check_arg, INV_decomp, ISINTEGER, ISPRIME, LAGUERRE, LAST, LAST_2DASCII_PRINT, LAST_FULL_PRINT, LAST_LATEX_PRINT, LAST_LIST_PRINT, LAST_PLAIN_PRINT, LAST_PRINT, LCM, LEADING, LEGENDRE, LOG, LOOKUP, M, MAXDIM, MAXPRIMETAB, MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES, MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE, MAX_FIXED_PRINTOUT_DIGITS, MAX_PROGRAM_SIZE, MEQUAL, METAA, METAB, METAX, MLENGTH, MOD, MSIGN, MULTIPLY, MZERO, N, NIL, NOT, NROOTS, NROOTS_ABS, NROOTS_DELTA, NROOTS_EPSILON, NROOTS_RANDOM, NROOTS_YMAX, NROOTS_divpoly, NSYM, NUM, NUMBER, NUMERATOR, OPERATOR, OR, OUTER, PATTERN, PATTERNSINFO, PI, POLAR, POWER, PRIME, PRINT, PRINT2DASCII, PRINTFULL, PRINTLATEX, PRINTLIST, PRINTMODE_2DASCII, PRINTMODE_COMPUTER, PRINTMODE_HUMAN, PRINTMODE_LATEX, PRINTMODE_LIST, PRINTOUTRESULT, PRINTPLAIN, PRINT_LEAVE_E_ALONE, PRINT_LEAVE_X_ALONE, PRODUCT, QUOTE, QUOTIENT, RANK, RATIONALIZE, REAL, ROOTS, ROUND, SECRETX, SELFTEST, SETQ, SGN, SHAPE, SILENTPATTERN, SIMPLIFY, SIN, SINH, SPACE_BETWEEN_COLUMNS, SPACE_BETWEEN_ROWS, SQRT, STOP, STR, SUBST, SUM, SYM, SYMBOLSINFO, SYMBOL_A, SYMBOL_A_UNDERSCORE, SYMBOL_B, SYMBOL_B_UNDERSCORE, SYMBOL_C, SYMBOL_D, SYMBOL_I, SYMBOL_IDENTITY_MATRIX, SYMBOL_J, SYMBOL_N, SYMBOL_R, SYMBOL_S, SYMBOL_T, SYMBOL_X, SYMBOL_X_UNDERSCORE, SYMBOL_Y, SYMBOL_Z, TAN, TANH, TAYLOR, TENSOR, TEST, TESTEQ, TESTGE, TESTGT, TESTLE, TESTLT, TIMING_DEBUGS, TOS, TRACE, TRANSPOSE, T_DOUBLE, T_EQ, T_FUNCTION, T_GTEQ, T_INTEGER, T_LTEQ, T_NEQ, T_NEWLINE, T_QUOTASSIGN, T_STRING, T_SYMBOL, U, UNIT, USR_SYMBOLS, VERSION, YMAX, YYE, YYRECT, ZERO, __emit_char, __emit_str, __factor_add, __factorial, __is_negative, __is_radical_number, __lcm, __legendre, __legendre2, __legendre3, __normalize_radical_factors, __rationalize_tensor, _print, abs, absValFloat, absval, absval_tensor, add, addSymbolLeftOfAssignment, addSymbolRightOfAssignment, add_all, add_factor_to_accumulator, add_numbers, add_terms, addf, adj, alloc_tensor, allocatedId, any_denominators, approxAll, approxLogs, approxLogsOfRationals, approxOneRatioOnly, approxRadicals, approxRadicalsOfRationals, approxRationalsOfLogs, approxRationalsOfPowersOfE, approxRationalsOfPowersOfPI, approxRationalsOfRadicals, approxSineOfRationalMultiplesOfPI, approxSineOfRationals, approxTrigonometric, approx_just_an_integer, approx_logarithmsOfRationals, approx_nothingUseful, approx_radicalOfRatio, approx_ratioOfRadical, approx_rationalOfE, approx_rationalOfPi, approx_rationalsOfLogarithms, approx_sine_of_pi_times_rational, approx_sine_of_rational, approxratioRecursive, arccos, arccosh, arcsin, arcsinh, arctan, arctanh, areunivarpolysfactoredorexpandedform, arg, arglist, assignmentFound, avoidCalculatingPowersIntoArctans, bake, bake_poly, bake_poly_term, besselj, bessely, bigInt, bignum_factorial, bignum_float, bignum_power_number, bignum_scan_float, bignum_scan_integer, bignum_truncate, binding, binomial, buffer, build_tensor, caaddr, caadr, caar, cadaddr, cadadr, cadar, caddaddr, caddadr, caddar, caddddr, cadddr, caddr, cadr, called_from_Algebra_block, car, cdaddr, cdadr, cdar, cddaddr, cddar, cdddaddr, cddddr, cdddr, cddr, cdr, ceiling, chainOfUserSymbolsNotFunctionsBeingEvaluated, charTabIndex, chartab, checkFloatHasWorkedOutCompletely, check_esc_flag, check_stack, check_tensor_dimensions, choose, choose_check_args, circexp, clearAlgebraEnvironment, clearRenamedVariablesToAvoidBindingToExternalScope, clear_symbols, clear_term, clearall, clockform, cmpGlyphs, cmp_args, cmp_expr, cmp_terms, cmp_terms_count, codeGen, coeff, cofactor, collectLatexStringFromReturnValue, collectUserSymbols, combine_factors, combine_gammas, combine_terms, compareState, compare_numbers, compare_rationals, compare_tensors, compatible, computeDependenciesFromAlgebra, computeResultsAndJavaScriptFromAlgebra, compute_fa, conjugate, cons, consCount, contract, convert_bignum_to_double, convert_rational_to_double, copy_tensor, cosine, cosine_of_angle, cosine_of_angle_sum, count, countOccurrencesOfSymbol, count_denominators, counter, countsize, d_scalar_scalar, d_scalar_scalar_1, d_scalar_tensor, d_tensor_scalar, d_tensor_tensor, dabs, darccos, darccosh, darcsin, darcsinh, darctan, darctanh, dbesselj0, dbesseljn, dbessely0, dbesselyn, dcos, dcosh, dd, decomp, decomp_product, decomp_sum, defineSomeHandyConstants, define_user_function, defn, defn_str, degree, denominator, derf, derfc, derivative, derivative_of_integral, det, determinant, detg, dfunction, dhermite, dirac, display, display_flag, displaychar, divide, divide_numbers, divisors, divisors_onstack, divpoly, dlog, do_clearPatterns, do_clearall, do_simplify_nested_radicals, dontCreateNewRadicalsInDenominatorWhenEvalingMultiplication, dotprod_unicode, doubleToReasonableString, dpow, dpower, dproduct, draw_flag, draw_stop_return, dsgn, dsin, dsinh, dsum, dtan, dtanh, dupl, eigen, elelmIndex, elem, emit_denominator, emit_denominators, emit_expr, emit_factor, emit_factorial_function, emit_flat_tensor, emit_fraction, emit_function, emit_index_function, emit_multiply, emit_number, emit_numerators, emit_numerical_fraction, emit_power, emit_string, emit_subexpr, emit_symbol, emit_tensor, emit_tensor_inner, emit_term, emit_top_expr, emit_unsigned_expr, emit_x, equal, equaln, equalq, erfc, errorMessage, esc_flag, evaluatingAsFloats, evaluatingPolar, exec, expand, expand_get_A, expand_get_AF, expand_get_B, expand_get_C, expand_get_CF, expand_tensor, expanding, expcos, exponential, expr_level, expsin, f1, f10, f2, f3, f4, f5, f9, f_equals_a, factor, factor_a, factor_again, factor_b, factor_number, factor_small_number, factor_term, factorial, factorpoly, factors, fill_buf, filter, filter_main, filter_sum, filter_tensor, findDependenciesInScript, findPossibleClockForm, findPossibleExponentialForm, findroot, fixup_fraction, fixup_power, flag, floatToRatioRoutine, fmt_index, fmt_level, fmt_x, frame, freeze, functionInvokationsScanningStack, gamma, gamma_of_sum, gammaf, gcd, gcd_main, gcd_numbers, gcd_polys, gcd_powers_with_same_base, gcd_product_product, gcd_product_sum, gcd_sum, gcd_sum_product, gcd_sum_sum, gen, getSimpleRoots, getStateHash, get_binding, get_factor_from_complex_root, get_factor_from_real_root, get_innerprod_factors, get_next_token, get_printname, get_size, get_token, getdisplaystr, glyph, gp, guess, hasImaginaryCoeff, hasNegativeRationalExponent, hash_addition, hash_function, hash_multiplication, hash_power, hashcode_values, hashed_itab, hermite, hilbert, i1, imag, imaginaryunit, index_function, init, initNRoots, inited, inner, inner_f, input_str, integral, integral_of_form, integral_of_product, integral_of_sum, inv, inverse, invert_number, invg, isNumberOneOverSomething, isNumericAtom, isNumericAtomOrTensor, isSimpleRoot, isSmall, isSymbolLeftOfAssignment, isSymbolReclaimable, isZeroAtom, isZeroAtomOrTensor, isZeroLikeOrNonZeroLikeOrUndetermined, isZeroTensor, is_denominator, is_factor, is_small_integer, is_square_matrix, is_usr_symbol, isadd, isalnumorunderscore, isalpha, isalphaOrUnderscore, iscomplexnumber, iscomplexnumberdouble, iscons, isdenominator, isdigit, isdouble, iseveninteger, isfactor, isfactorial, isfloating, isfraction, isidentitymatrix, isimaginarynumber, isimaginarynumberdouble, isimaginaryunit, isinnerordot, isinteger, isintegerfactor, isintegerorintegerfloat, isinv, iskeyword, isminusone, isminusoneoversqrttwo, isminusoneovertwo, isminussqrtthreeovertwo, ismultiply, isnegative, isnegativenumber, isnegativeterm, isnonnegativeinteger, isnpi, isone, isoneover, isoneoversqrttwo, isoneovertwo, isplusone, isplustwo, ispolyexpandedform, ispolyexpandedform_expr, ispolyexpandedform_factor, ispolyexpandedform_term, ispolyfactoredorexpandedform, ispolyfactoredorexpandedform_factor, ispolyfactoredorexpandedform_power, isposint, ispositivenumber, ispower, isquarterturn, isrational, isspace, issqrtthree, issqrtthreeovertwo, isstr, issymbol, issymbolic, istensor, istranspose, isunderscore, isunivarpolyfactoredorexpandedform, itab, italu_hashcode, j1, laguerre, laguerre2, lastFoundSymbol, latexErrorSign, lcm, leading, legendre, length, lessp, level, list, listLength, logarithm, logbuf, lookupsTotal, lu_decomp, madd, makePositive, makeSignSameAs, make_hashed_itab, mask, mcmp, mcmpint, mdiv, mdivrem, meta_mode, mgcd, mini_solve, mint, mmod, mmul, mod, monic, move, moveTos, mp_clr_bit, mp_denominator, mp_numerator, mp_set_bit, mpow, mprime, mroot, mshiftright, msub, mtotal, multinomial_sum, multiply, multiply_all, multiply_all_noexpand, multiply_consecutive_constants, multiply_denominators, multiply_denominators_factor, multiply_denominators_term, multiply_noexpand, multiply_numbers, n_factor_number, negate, negate_expand, negate_noexpand, negate_number, new_integer, new_string, newline_flag, nil_symbols, normaliseDots, normalisedCoeff, normalize_angle, nroots_a, nroots_b, nroots_c, nroots_df, nroots_dx, nroots_fa, nroots_fb, nroots_x, nroots_y, nterms, nthCadr, numerator, numericRootOfPolynomial, o, one, oneElement, one_as_double, out_buf, out_count, out_of_memory, outer, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, parse, parse_internal, parse_p1, parse_p2, parse_time_simplifications, partition, patternHasBeenFound, patternsinfo, performing_roots, polar, polarRectAMinusOneBase, polyform, pop, pop_double, pop_frame, pop_integer, power, power_str, power_sum, power_tensor, predefinedSymbolsInGlobalScope_doNotTrackInDependencies, prime, primetab, print2dascii, printMode, print_ABS_latex, print_ARCCOS_codegen, print_ARCSIN_codegen, print_ARCTAN_codegen, print_BINOMIAL_latex, print_COS_codegen, print_DEFINT_latex, print_DOT_codegen, print_DOT_latex, print_DO_codegen, print_FOR_codegen, print_INV_codegen, print_INV_latex, print_PRODUCT_codegen, print_PRODUCT_latex, print_SETQ_codegen, print_SIN_codegen, print_SQRT_latex, print_SUM_codegen, print_SUM_latex, print_TAN_codegen, print_TESTEQ_latex, print_TESTGE_latex, print_TESTGT_latex, print_TESTLE_latex, print_TESTLT_latex, print_TEST_codegen, print_TEST_latex, print_TRANSPOSE_codegen, print_TRANSPOSE_latex, print_UNIT_codegen, print_a_over_b, print_base, print_base_of_denom, print_char, print_denom, print_double, print_expo_of_denom, print_exponent, print_expr, print_factor, print_factorial_function, print_glyphs, print_index_function, print_list, print_multiply_sign, print_number, print_power, print_str, print_subexpr, print_tensor, print_tensor_inner, print_tensor_inner_latex, print_tensor_latex, print_term, printchar, printchar_nowrap, printline, program_buf, promote_tensor, push, pushTryNotToDuplicate, push_cars, push_double, push_factor, push_frame, push_identity_matrix, push_integer, push_rational, push_symbol, push_term_factors, push_terms, push_zero_matrix, qadd, qdiv, qmul, qpow, qpowf, quickfactor, quickpower, rational, rationalize, rationalize_coefficients, real, reciprocate, rect, recursionLevelNestedRadicalsRemoval, recursiveDependencies, ref, ref1, rememberPrint, remove_negative_exponents, reset_after_error, restore, restoreMetaBindings, rewrite_args, rewrite_args_tensor, roots, roots2, roots3, run, runUserDefinedSimplifications, save, saveMetaBindings, scalar_times_tensor, scan, scan_error, scan_expression, scan_factor, scan_function_call_with_function_name, scan_function_call_without_function_name, scan_index, scan_meta, scan_power, scan_relation, scan_stmt, scan_str, scan_string, scan_subexpr, scan_symbol, scan_tensor, scan_term, scanned, scanningParameters, setM, setSignTo, set_binding, set_component, setq_indexed, sfac_product, sfac_product_f, sgn, shape, show_power_debug, sign, sign_of_term, simfac, simfac_term, simpleComplexityMeasure, simplify, simplifyForCodeGeneration, simplify_1_in_products, simplify_main, simplify_nested_radicals, simplify_polar, simplify_polarRect, simplify_rational_expressions, simplify_rectToClock, simplify_tensor, simplify_trig, simplifyfactorials, sine, sine_of_angle, sine_of_angle_sum, skipRootVariableToBeSolved, sort_stack, square, ssqrt, stack, stackAddsCount, std_symbol, step, step2, stop, strcmp, stringsEmittedByUserPrintouts, subf, subst, subtract, subtract_numbers, swap, symbol, symbolsDependencies, symbolsHavingReassignments, symbolsInExpressionsWithoutAssignments, symbolsLeftOfAssignment, symbolsRightOfAssignment, symbolsinfo, symnum, symtab, take_care_of_nested_radicals, tangent, taylor, tensor, tensor_plus_tensor, tensor_times_scalar, testApprox, test_flag, text_metric, theRandom, token, token_buf, token_str, top, top_level_eval, tos, transform, transpose, transpose_unicode, trigmode, trivial_divide, try_kth_prime, turnErrorMessageToLatex, ucmp, unfreeze, unique, unique_f, update_token_buf, userSimplificationsInListForm, userSimplificationsInStringForm, usr_symbol, verbosing, version, will_be_displayed_as_fraction, ybinomial, ycosh, ydirac, yerf, yerfc, yfloor, yindex, yround, ysinh, yyarg, yybesselj, yybessely, yyceiling, yycondense, yycontract, yycosh, yydegree, yydetg, yydivpoly, yyerf, yyerfc, yyexpand, yyfactorpoly, yyfloat, yyfloor, yyhermite, yyhermite2, yyinvg, yylcm, yylog, yymultiply, yyouter, yypower, yyrationalize, yyround, yysgn, yysimfac, yysinh, yytangent, zero, zzfloat,\n    hasProp = {}.hasOwnProperty;\n\n  bigInt = require('big-integer');\n\n  // also change the version in the package.json file\n  version = \"1.4.0\";\n\n  SELFTEST = 1;\n\n  // size of the symbol table\n  NSYM = 1000;\n\n  DEBUG = false;\n\n  PRINTOUTRESULT = false;\n\n  // printing-related constants\n  PRINTMODE_LATEX = \"PRINTMODE_LATEX\";\n\n  PRINTMODE_2DASCII = \"PRINTMODE_2DASCII\";\n\n  PRINTMODE_COMPUTER = \"PRINTMODE_COMPUTER\";\n\n  PRINTMODE_HUMAN = \"PRINTMODE_HUMAN\";\n\n  PRINTMODE_LIST = \"PRINTMODE_LIST\";\n\n  // when the user uses the generic \"print\" statement\n  // this setting kicks-in.\n  printMode = PRINTMODE_COMPUTER;\n\n  dontCreateNewRadicalsInDenominatorWhenEvalingMultiplication = true;\n\n  recursionLevelNestedRadicalsRemoval = 0;\n\n  do_simplify_nested_radicals = true;\n\n  avoidCalculatingPowersIntoArctans = true;\n\n  rational = (function() {\n    // Symbolic expressions are built by connecting U structs.\n\n    // For example, (a b + c) is built like this:\n\n    //           _______      _______                                _______\n    //          |CONS   |--->|CONS   |----------------------------->|CONS   |\n    //          |       |    |       |                              |       |\n    //          |_______|    |_______|                              |_______|\n    //              |            |                                      |\n    //           ___v___      ___v___      _______      _______      ___v___\n    //          |ADD    |    |CONS   |--->|CONS   |--->|CONS   |    |SYM c  |\n    //          |       |    |       |    |       |    |       |    |       |\n    //          |_______|    |_______|    |_______|    |_______|    |_______|\n    //                           |            |            |\n    //                        ___v___      ___v___      ___v___\n    //                       |MUL    |    |SYM a  |    |SYM b  |\n    //                       |       |    |       |    |       |\n    //                       |_______|    |_______|    |_______|\n    class rational {};\n\n    rational.prototype.a = null; // a bigInteger\n\n    rational.prototype.b = null; // a bigInteger\n\n    return rational;\n\n  }).call(this);\n\n  U = (function() {\n    class U {\n      toString() {\n        return print_expr(this);\n      }\n\n      toLatexString() {\n        return collectLatexStringFromReturnValue(this);\n      }\n\n      constructor() {\n        this.cons = {};\n        this.cons.car = null;\n        this.cons.cdr = null;\n        this.q = new rational();\n      }\n\n    };\n\n    U.prototype.cons = null; // will have a car and cdr\n\n    U.prototype.printname = \"\";\n\n    U.prototype.str = \"\";\n\n    U.prototype.tensor = null;\n\n    // rational number a over b\n    U.prototype.q = null; // will point to a rational\n\n    U.prototype.d = 0.0; // a double\n\n    U.prototype.k = 0;\n\n    U.prototype.tag = 0;\n\n    return U;\n\n  }).call(this);\n\n  errorMessage = \"\";\n\n  // the following enum is for struct U, member k\n  CONS = 0;\n\n  NUM = 1;\n\n  DOUBLE = 2;\n\n  STR = 3;\n\n  TENSOR = 4;\n\n  SYM = 5;\n\n  // the following enum is for indexing the symbol table\n\n  // standard functions first, then nil, then everything else\n  counter = 0;\n\n  ABS = counter++;\n\n  ADD = counter++;\n\n  ADJ = counter++;\n\n  AND = counter++;\n\n  APPROXRATIO = counter++;\n\n  ARCCOS = counter++;\n\n  ARCCOSH = counter++;\n\n  ARCSIN = counter++;\n\n  ARCSINH = counter++;\n\n  ARCTAN = counter++;\n\n  ARCTANH = counter++;\n\n  ARG = counter++;\n\n  ATOMIZE = counter++;\n\n  BESSELJ = counter++;\n\n  BESSELY = counter++;\n\n  BINDING = counter++;\n\n  BINOMIAL = counter++;\n\n  CEILING = counter++;\n\n  CHECK = counter++;\n\n  CHOOSE = counter++;\n\n  CIRCEXP = counter++;\n\n  CLEAR = counter++;\n\n  CLEARALL = counter++;\n\n  CLEARPATTERNS = counter++;\n\n  CLOCK = counter++;\n\n  COEFF = counter++;\n\n  COFACTOR = counter++;\n\n  CONDENSE = counter++;\n\n  CONJ = counter++;\n\n  CONTRACT = counter++;\n\n  COS = counter++;\n\n  COSH = counter++;\n\n  DECOMP = counter++;\n\n  DEFINT = counter++;\n\n  DEGREE = counter++;\n\n  DENOMINATOR = counter++;\n\n  DERIVATIVE = counter++;\n\n  DET = counter++;\n\n  DIM = counter++;\n\n  DIRAC = counter++;\n\n  DIVISORS = counter++;\n\n  DO = counter++;\n\n  DOT = counter++;\n\n  DRAW = counter++;\n\n  DSOLVE = counter++;\n\n  EIGEN = counter++;\n\n  EIGENVAL = counter++;\n\n  EIGENVEC = counter++;\n\n  ERF = counter++;\n\n  ERFC = counter++;\n\n  EVAL = counter++;\n\n  EXP = counter++;\n\n  EXPAND = counter++;\n\n  EXPCOS = counter++;\n\n  EXPSIN = counter++;\n\n  FACTOR = counter++;\n\n  FACTORIAL = counter++;\n\n  FACTORPOLY = counter++;\n\n  FILTER = counter++;\n\n  FLOATF = counter++;\n\n  FLOOR = counter++;\n\n  FOR = counter++;\n\n  FUNCTION = counter++;\n\n  GAMMA = counter++;\n\n  GCD = counter++;\n\n  HERMITE = counter++;\n\n  HILBERT = counter++;\n\n  IMAG = counter++;\n\n  INDEX = counter++;\n\n  INNER = counter++;\n\n  INTEGRAL = counter++;\n\n  INV = counter++;\n\n  INVG = counter++;\n\n  ISINTEGER = counter++;\n\n  ISPRIME = counter++;\n\n  LAGUERRE = counter++;\n\n  //  LAPLACE = counter++\n  LCM = counter++;\n\n  LEADING = counter++;\n\n  LEGENDRE = counter++;\n\n  LOG = counter++;\n\n  LOOKUP = counter++;\n\n  MOD = counter++;\n\n  MULTIPLY = counter++;\n\n  NOT = counter++;\n\n  NROOTS = counter++;\n\n  NUMBER = counter++;\n\n  NUMERATOR = counter++;\n\n  OPERATOR = counter++;\n\n  OR = counter++;\n\n  OUTER = counter++;\n\n  PATTERN = counter++;\n\n  PATTERNSINFO = counter++;\n\n  POLAR = counter++;\n\n  POWER = counter++;\n\n  PRIME = counter++;\n\n  PRINT_LEAVE_E_ALONE = counter++;\n\n  PRINT_LEAVE_X_ALONE = counter++;\n\n  PRINT = counter++;\n\n  PRINT2DASCII = counter++;\n\n  PRINTFULL = counter++;\n\n  PRINTLATEX = counter++;\n\n  PRINTLIST = counter++;\n\n  PRINTPLAIN = counter++;\n\n  PRODUCT = counter++;\n\n  QUOTE = counter++;\n\n  QUOTIENT = counter++;\n\n  RANK = counter++;\n\n  RATIONALIZE = counter++;\n\n  REAL = counter++;\n\n  ROUND = counter++;\n\n  YYRECT = counter++;\n\n  ROOTS = counter++;\n\n  SETQ = counter++;\n\n  SGN = counter++;\n\n  SILENTPATTERN = counter++;\n\n  SIMPLIFY = counter++;\n\n  SIN = counter++;\n\n  SINH = counter++;\n\n  SHAPE = counter++;\n\n  SQRT = counter++;\n\n  STOP = counter++;\n\n  SUBST = counter++;\n\n  SUM = counter++;\n\n  SYMBOLSINFO = counter++;\n\n  TAN = counter++;\n\n  TANH = counter++;\n\n  TAYLOR = counter++;\n\n  TEST = counter++;\n\n  TESTEQ = counter++;\n\n  TESTGE = counter++;\n\n  TESTGT = counter++;\n\n  TESTLE = counter++;\n\n  TESTLT = counter++;\n\n  TRANSPOSE = counter++;\n\n  UNIT = counter++;\n\n  ZERO = counter++;\n\n  // ALL THE SYMBOLS ABOVE NIL ARE KEYWORDS,\n  // WHICH MEANS THAT USER CANNOT REDEFINE THEM\n  NIL = counter++; // nil goes here, after standard functions\n\n  LAST = counter++;\n\n  LAST_PRINT = counter++;\n\n  LAST_2DASCII_PRINT = counter++;\n\n  LAST_FULL_PRINT = counter++;\n\n  LAST_LATEX_PRINT = counter++;\n\n  LAST_LIST_PRINT = counter++;\n\n  LAST_PLAIN_PRINT = counter++;\n\n  AUTOEXPAND = counter++;\n\n  BAKE = counter++;\n\n  ASSUME_REAL_VARIABLES = counter++;\n\n  TRACE = counter++;\n\n  FORCE_FIXED_PRINTOUT = counter++;\n\n  MAX_FIXED_PRINTOUT_DIGITS = counter++;\n\n  YYE = counter++;\n\n  DRAWX = counter++; // special purpose internal symbols\n\n  METAA = counter++;\n\n  METAB = counter++;\n\n  METAX = counter++;\n\n  SECRETX = counter++;\n\n  VERSION = counter++;\n\n  PI = counter++;\n\n  SYMBOL_A = counter++;\n\n  SYMBOL_B = counter++;\n\n  SYMBOL_C = counter++;\n\n  SYMBOL_D = counter++;\n\n  SYMBOL_I = counter++;\n\n  SYMBOL_J = counter++;\n\n  SYMBOL_N = counter++;\n\n  SYMBOL_R = counter++;\n\n  SYMBOL_S = counter++;\n\n  SYMBOL_T = counter++;\n\n  SYMBOL_X = counter++;\n\n  SYMBOL_Y = counter++;\n\n  SYMBOL_Z = counter++;\n\n  SYMBOL_IDENTITY_MATRIX = counter++;\n\n  SYMBOL_A_UNDERSCORE = counter++;\n\n  SYMBOL_B_UNDERSCORE = counter++;\n\n  SYMBOL_X_UNDERSCORE = counter++;\n\n  C1 = counter++;\n\n  C2 = counter++;\n\n  C3 = counter++;\n\n  C4 = counter++;\n\n  C5 = counter++;\n\n  C6 = counter++;\n\n  USR_SYMBOLS = counter++; // this must be last\n\n  E = YYE;\n\n  // TOS cannot be arbitrarily large because the OS seg faults on deep recursion.\n  // For example, a circular evaluation like x=x+1 can cause a seg fault.\n  // At this setting (100,000) the evaluation stack overruns before seg fault.\n  TOS = 100000;\n\n  BUF = 10000;\n\n  MAX_PROGRAM_SIZE = 100001;\n\n  MAXPRIMETAB = 10000;\n\n  MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES = 5;\n\n  MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE = 10;\n\n  //define _USE_MATH_DEFINES // for MS C++\n  MAXDIM = 24;\n\n  // needed for the mechanism to\n  // find all dependencies between variables\n  // in a script\n  symbolsDependencies = {};\n\n  symbolsHavingReassignments = [];\n\n  symbolsInExpressionsWithoutAssignments = [];\n\n  patternHasBeenFound = false;\n\n  predefinedSymbolsInGlobalScope_doNotTrackInDependencies = [\"rationalize\", \"abs\", \"e\", \"i\", \"pi\", \"sin\", \"ceiling\", \"cos\", \"roots\", \"integral\", \"derivative\", \"defint\", \"sqrt\", \"eig\", \"cov\", \"deig\", \"dcov\", \"float\", \"floor\", \"product\", \"root\", \"round\", \"sum\", \"test\", \"unit\"];\n\n  // you can do some little simplifications\n  // at parse time, such as calculating away\n  // immediately simple operations on\n  // constants, removing 1s from products\n  // etc.\n  parse_time_simplifications = true;\n\n  chainOfUserSymbolsNotFunctionsBeingEvaluated = [];\n\n  stringsEmittedByUserPrintouts = \"\";\n\n  // flag use to potentially switch on/off some quirks \"deep\"\n  // in the code due to call from Algebra block.\n  // Currently not used.\n  called_from_Algebra_block = false;\n\n  tensor = (function() {\n    class tensor {\n      constructor() {\n        this.dim = (function() {\n          var o, ref, results;\n          results = [];\n          for (o = 0, ref = MAXDIM; (0 <= ref ? o <= ref : o >= ref); 0 <= ref ? o++ : o--) {\n            results.push(0);\n          }\n          return results;\n        })();\n        this.elem = [];\n      }\n\n    };\n\n    tensor.prototype.ndim = 0; // number of dimensions\n\n    tensor.prototype.dim = null; // dimension length, for each dimension\n\n    tensor.prototype.nelem = 0; // total number of elements\n\n    tensor.prototype.elem = null; // an array containing all the data\n\n    return tensor;\n\n  }).call(this);\n\n  display = (function() {\n    class display {};\n\n    display.prototype.h = 0;\n\n    display.prototype.w = 0;\n\n    display.prototype.n = 0;\n\n    display.prototype.a = []; // will contain an array of c,x,y (color,x,y)\n\n    return display;\n\n  }).call(this);\n\n  text_metric = (function() {\n    class text_metric {};\n\n    text_metric.prototype.ascent = 0;\n\n    text_metric.prototype.descent = 0;\n\n    text_metric.prototype.width = 0;\n\n    return text_metric;\n\n  }).call(this);\n\n  tos = 0; // top of stack\n\n  expanding = 0;\n\n  evaluatingAsFloats = 0;\n\n  evaluatingPolar = 0;\n\n  fmt_x = 0;\n\n  fmt_index = 0;\n\n  fmt_level = 0;\n\n  verbosing = 0;\n\n  primetab = (function() {\n    var ceil, i, j, primes;\n    primes = [2];\n    i = 3;\n    while (primes.length < MAXPRIMETAB) {\n      j = 0;\n      ceil = Math.sqrt(i);\n      while (j < primes.length && primes[j] <= ceil) {\n        if (i % primes[j] === 0) {\n          j = -1;\n          break;\n        }\n        j++;\n      }\n      if (j !== -1) {\n        primes.push(i);\n      }\n      i += 2;\n    }\n    primes[MAXPRIMETAB] = 0;\n    return primes;\n  })();\n\n  esc_flag = 0;\n\n  draw_flag = 0;\n\n  mtotal = 0;\n\n  trigmode = 0;\n\n  logbuf = \"\";\n\n  program_buf = \"\";\n\n  // will contain the variable names\n  symtab = [];\n\n  // will contain the contents of the variable\n  // in the corresponding position in symtab array\n  binding = [];\n\n  isSymbolReclaimable = [];\n\n  arglist = []; // will contain U\n\n  stack = []; // will contain *U\n\n  frame = 0;\n\n  p0 = null; // will contain U\n\n  p1 = null; // will contain U\n\n  p2 = null; // will contain U\n\n  p3 = null; // will contain U\n\n  p4 = null; // will contain U\n\n  p5 = null; // will contain U\n\n  p6 = null; // will contain U\n\n  p7 = null; // will contain U\n\n  p8 = null; // will contain U\n\n  p9 = null; // will contain U\n\n  zero = null; // will contain U\n\n  one = null; // will contain U\n\n  one_as_double = null;\n\n  imaginaryunit = null; // will contain U\n\n  out_buf = \"\";\n\n  out_count = 0;\n\n  test_flag = 0;\n\n  codeGen = false;\n\n  draw_stop_return = null; // extern jmp_buf ?????\n\n  userSimplificationsInListForm = [];\n\n  userSimplificationsInStringForm = [];\n\n  transpose_unicode = 7488;\n\n  dotprod_unicode = 183;\n\n  symbol = function(x) {\n    return symtab[x];\n  };\n\n  iscons = function(p) {\n    return p.k === CONS;\n  };\n\n  isrational = function(p) {\n    return p.k === NUM;\n  };\n\n  isdouble = function(p) {\n    return p.k === DOUBLE;\n  };\n\n  isNumericAtom = function(p) {\n    return isrational(p) || isdouble(p);\n  };\n\n  isstr = function(p) {\n    return p.k === STR;\n  };\n\n  istensor = function(p) {\n    if (p == null) {\n      debugger;\n    } else {\n      return p.k === TENSOR;\n    }\n  };\n\n  // because of recursion, we consider a scalar to be\n  // a tensor, so a numeric scalar will return true\n  isNumericAtomOrTensor = function(p) {\n    var a, i, n, o, ref;\n    if (isNumericAtom(p) || p === symbol(SYMBOL_IDENTITY_MATRIX)) {\n      return 1;\n    }\n    if (!istensor(p) && !isNumericAtom(p)) {\n      //console.log \"p not an atom nor a tensor: \" + p\n      return 0;\n    }\n    n = p.tensor.nelem;\n    a = p.tensor.elem;\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      if (!isNumericAtomOrTensor(a[i])) {\n        //console.log \"non-numeric element: \" + a[i]\n        return 0;\n      }\n    }\n    return 1;\n  };\n\n  issymbol = function(p) {\n    return p.k === SYM;\n  };\n\n  iskeyword = function(p) {\n    return issymbol(p) && symnum(p) < NIL;\n  };\n\n  car = function(p) {\n    if (iscons(p)) {\n      return p.cons.car;\n    } else {\n      return symbol(NIL);\n    }\n  };\n\n  cdr = function(p) {\n    if (iscons(p)) {\n      return p.cons.cdr;\n    } else {\n      return symbol(NIL);\n    }\n  };\n\n  caar = function(p) {\n    return car(car(p));\n  };\n\n  cadr = function(p) {\n    return car(cdr(p));\n  };\n\n  cdar = function(p) {\n    return cdr(car(p));\n  };\n\n  cddr = function(p) {\n    return cdr(cdr(p));\n  };\n\n  caadr = function(p) {\n    return car(car(cdr(p)));\n  };\n\n  caddr = function(p) {\n    return car(cdr(cdr(p)));\n  };\n\n  cadar = function(p) {\n    return car(cdr(car(p)));\n  };\n\n  cdadr = function(p) {\n    return cdr(car(cdr(p)));\n  };\n\n  cddar = function(p) {\n    return cdr(cdr(car(p)));\n  };\n\n  cdddr = function(p) {\n    return cdr(cdr(cdr(p)));\n  };\n\n  caaddr = function(p) {\n    return car(car(cdr(cdr(p))));\n  };\n\n  cadadr = function(p) {\n    return car(cdr(car(cdr(p))));\n  };\n\n  caddar = function(p) {\n    return car(cdr(cdr(car(p))));\n  };\n\n  cdaddr = function(p) {\n    return cdr(car(cdr(cdr(p))));\n  };\n\n  cadddr = function(p) {\n    return car(cdr(cdr(cdr(p))));\n  };\n\n  cddddr = function(p) {\n    return cdr(cdr(cdr(cdr(p))));\n  };\n\n  caddddr = function(p) {\n    return car(cdr(cdr(cdr(cdr(p)))));\n  };\n\n  cadaddr = function(p) {\n    return car(cdr(car(cdr(cdr(p)))));\n  };\n\n  cddaddr = function(p) {\n    return cdr(cdr(car(cdr(cdr(p)))));\n  };\n\n  caddadr = function(p) {\n    return car(cdr(cdr(car(cdr(p)))));\n  };\n\n  cdddaddr = function(p) {\n    return cdr(cdr(cdr(car(cdr(cdr(p))))));\n  };\n\n  caddaddr = function(p) {\n    return car(cdr(cdr(car(cdr(cdr(p))))));\n  };\n\n  // not used yet\n  listLength = function(p) {\n    var startCount;\n    startCount = -1;\n    while (iscons(p)) {\n      p = cdr(p);\n      startCount++;\n    }\n    return startCount;\n  };\n\n  // not used yet\n  nthCadr = function(p, n) {\n    var startCount;\n    startCount = 0;\n    while (startCount <= n) {\n      p = cdr(p);\n      startCount++;\n    }\n    return car(p);\n  };\n\n  isadd = function(p) {\n    return car(p) === symbol(ADD);\n  };\n\n  ismultiply = function(p) {\n    return car(p) === symbol(MULTIPLY);\n  };\n\n  ispower = function(p) {\n    return car(p) === symbol(POWER);\n  };\n\n  isfactorial = function(p) {\n    return car(p) === symbol(FACTORIAL);\n  };\n\n  isinnerordot = function(p) {\n    return (car(p) === symbol(INNER)) || (car(p) === symbol(DOT));\n  };\n\n  istranspose = function(p) {\n    return car(p) === symbol(TRANSPOSE);\n  };\n\n  isinv = function(p) {\n    return car(p) === symbol(INV);\n  };\n\n  // TODO this is a bit of a shallow check, we should\n  // check when we are passed an actual tensor and possibly\n  // cache the test result.\n  isidentitymatrix = function(p) {\n    return p === symbol(SYMBOL_IDENTITY_MATRIX);\n  };\n\n  MSIGN = function(p) {\n    if (p.isPositive()) {\n      return 1;\n    } else if (p.isZero()) {\n      return 0;\n    } else {\n      return -1;\n    }\n  };\n\n  MLENGTH = function(p) {\n    return p.toString().length;\n  };\n\n  MZERO = function(p) {\n    return p.isZero();\n  };\n\n  MEQUAL = function(p, n) {\n    if (p == null) {\n      debugger;\n    }\n    return p.equals(n);\n  };\n\n  reset_after_error = function() {\n    moveTos(0);\n    esc_flag = 0;\n    draw_flag = 0;\n    frame = TOS;\n    evaluatingAsFloats = 0;\n    return evaluatingPolar = 0;\n  };\n\n  $ = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n\n  $.version = version;\n\n  $.isadd = isadd;\n\n  $.ismultiply = ismultiply;\n\n  $.ispower = ispower;\n\n  $.isfactorial = isfactorial;\n\n  $.car = car;\n\n  $.cdr = cdr;\n\n  $.caar = caar;\n\n  $.cadr = cadr;\n\n  $.cdar = cdar;\n\n  $.cddr = cddr;\n\n  $.caadr = caadr;\n\n  $.caddr = caddr;\n\n  $.cadar = cadar;\n\n  $.cdadr = cdadr;\n\n  $.cddar = cddar;\n\n  $.cdddr = cdddr;\n\n  $.caaddr = caaddr;\n\n  $.cadadr = cadadr;\n\n  $.caddar = caddar;\n\n  $.cdaddr = cdaddr;\n\n  $.cadddr = cadddr;\n\n  $.cddddr = cddddr;\n\n  $.caddddr = caddddr;\n\n  $.cadaddr = cadaddr;\n\n  $.cddaddr = cddaddr;\n\n  $.caddadr = caddadr;\n\n  $.cdddaddr = cdddaddr;\n\n  $.caddaddr = caddaddr;\n\n  $.symbol = symbol;\n\n  $.iscons = iscons;\n\n  $.isrational = isrational;\n\n  $.isdouble = isdouble;\n\n  $.isNumericAtom = isNumericAtom;\n\n  $.isstr = isstr;\n\n  $.istensor = istensor;\n\n  $.issymbol = issymbol;\n\n  $.iskeyword = iskeyword;\n\n  $.CONS = CONS;\n\n  $.NUM = NUM;\n\n  $.DOUBLE = DOUBLE;\n\n  $.STR = STR;\n\n  $.TENSOR = TENSOR;\n\n  $.SYM = SYM;\n\n  \n  //(docs are generated from top-level comments, keep an eye on the formatting!)\n  /* abs =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  x\n\n  General description\n  -------------------\n  Returns the absolute value of a real number, the magnitude of a complex number, or the vector length.\n\n  */\n  /*\n   Absolute value of a number,or magnitude of complex z, or norm of a vector\n\n    z    abs(z)\n    -    ------\n\n    a    a\n\n    -a    a\n\n    (-1)^a    1\n\n    exp(a + i b)  exp(a)\n\n    a b    abs(a) abs(b)\n\n    a + i b    sqrt(a^2 + b^2)\n\n  Notes\n\n    1. Handles mixed polar and rectangular forms, e.g. 1 + exp(i pi/3)\n\n    2. jean-francois.debroux reports that when z=(a+i*b)/(c+i*d) then\n\n      abs(numerator(z)) / abs(denominator(z))\n\n       must be used to get the correct answer. Now the operation is\n       automatic.\n  */\n  DEBUG_ABS = false;\n\n  Eval_abs = function() {\n    push(cadr(p1));\n    Eval();\n    return abs();\n  };\n\n  absValFloat = function() {\n    Eval();\n    absval();\n    Eval();\n    return zzfloat();\n  };\n\n  // zzfloat of an abs doesn't necessarily result in a double\n  // , for example if there are variables. But\n  // in many of the tests there should be indeed\n  // a float, these two lines come handy to highlight\n  // when that doesn't happen for those tests.\n  //if !isdouble(stack[tos-1])\n  //  stop(\"absValFloat should return a double and instead got: \" + stack[tos-1])\n  abs = function() {\n    var theArgument;\n    theArgument = top();\n    if (DEBUG_ABS) {\n      console.trace(\">>>>  ABS of \" + theArgument);\n    }\n    numerator();\n    if (DEBUG_ABS) {\n      console.log(\"ABS numerator \" + stack[tos - 1]);\n    }\n    absval();\n    if (DEBUG_ABS) {\n      console.log(\"ABSVAL numerator: \" + stack[tos - 1]);\n    }\n    push(theArgument);\n    denominator();\n    if (DEBUG_ABS) {\n      console.log(\"ABS denominator: \" + stack[tos - 1]);\n    }\n    absval();\n    if (DEBUG_ABS) {\n      console.log(\"ABSVAL denominator: \" + stack[tos - 1]);\n    }\n    divide();\n    if (DEBUG_ABS) {\n      console.log(\"ABSVAL divided: \" + stack[tos - 1]);\n    }\n    if (DEBUG_ABS) {\n      return console.log(\"<<<<<<<  ABS\");\n    }\n  };\n\n  absval = function() {\n    var anyFactorsYet, input;\n    save();\n    p1 = pop();\n    input = p1;\n    if (DEBUG_ABS) {\n      console.log(\"ABS of \" + p1);\n    }\n    // handle all the \"number\" cases first -----------------------------------------\n    if (isZeroAtomOrTensor(p1)) {\n      if (DEBUG_ABS) {\n        console.log(\" abs: \" + p1 + \" just zero\");\n      }\n      push(zero);\n      if (DEBUG_ABS) {\n        console.log(\" --> ABS of \" + input + \" : \" + stack[tos - 1]);\n      }\n      restore();\n      return;\n    }\n    if (isnegativenumber(p1)) {\n      if (DEBUG_ABS) {\n        console.log(\" abs: \" + p1 + \" just a negative\");\n      }\n      push(p1);\n      negate();\n      restore();\n      return;\n    }\n    if (ispositivenumber(p1)) {\n      if (DEBUG_ABS) {\n        console.log(\" abs: \" + p1 + \" just a positive\");\n      }\n      push(p1);\n      if (DEBUG_ABS) {\n        console.log(\" --> ABS of \" + input + \" : \" + stack[tos - 1]);\n      }\n      restore();\n      return;\n    }\n    if (p1 === symbol(PI)) {\n      if (DEBUG_ABS) {\n        console.log(\" abs: \" + p1 + \" of PI\");\n      }\n      push(p1);\n      if (DEBUG_ABS) {\n        console.log(\" --> ABS of \" + input + \" : \" + stack[tos - 1]);\n      }\n      restore();\n      return;\n    }\n    // ??? should there be a shortcut case here for the imaginary unit?\n\n    // now handle decomposition cases ----------------------------------------------\n\n    // we catch the \"add\", \"power\", \"multiply\" cases first,\n    // before falling back to the\n    // negative/positive cases because there are some\n    // simplification thay we might be able to do.\n    // Note that for this routine to give a correct result, this\n    // must be a sum where a complex number appears.\n    // If we apply this to \"a+b\", we get an incorrect result.\n    if (car(p1) === symbol(ADD) && (findPossibleClockForm(p1) || findPossibleExponentialForm(p1) || Find(p1, imaginaryunit))) {\n      if (DEBUG_ABS) {\n        console.log(\" abs: \" + p1 + \" is a sum\");\n      }\n      if (DEBUG_ABS) {\n        console.log(\"abs of a sum\");\n      }\n      // sum\n      push(p1);\n      rect(); // convert polar terms, if any\n      p1 = pop();\n      push(p1);\n      real();\n      push_integer(2);\n      power();\n      push(p1);\n      imag();\n      push_integer(2);\n      power();\n      add();\n      push_rational(1, 2);\n      power();\n      simplify_trig();\n      if (DEBUG_ABS) {\n        console.log(\" --> ABS of \" + input + \" : \" + stack[tos - 1]);\n      }\n      restore();\n      return;\n    }\n    if (car(p1) === symbol(POWER) && equaln(cadr(p1), -1)) {\n      if (DEBUG_ABS) {\n        console.log(\" abs: \" + p1 + \" is -1 to any power\");\n      }\n      // -1 to any power\n      if (evaluatingAsFloats) {\n        if (DEBUG_ABS) {\n          console.log(\" abs: numeric, so result is 1.0\");\n        }\n        push_double(1.0);\n      } else {\n        if (DEBUG_ABS) {\n          console.log(\" abs: symbolic, so result is 1\");\n        }\n        push_integer(1);\n      }\n      if (DEBUG_ABS) {\n        console.log(\" --> ABS of \" + input + \" : \" + stack[tos - 1]);\n      }\n      restore();\n      return;\n    }\n    // abs(a^b) is equal to abs(a)^b IF b is positive\n    if (car(p1) === symbol(POWER) && ispositivenumber(caddr(p1))) {\n      if (DEBUG_ABS) {\n        console.log(\" abs: \" + p1 + \" is something to the power of a positive number\");\n      }\n      push(cadr(p1));\n      abs();\n      push(caddr(p1));\n      power();\n      if (DEBUG_ABS) {\n        console.log(\" --> ABS of \" + input + \" : \" + stack[tos - 1]);\n      }\n      restore();\n      return;\n    }\n    // abs(e^something)\n    if (car(p1) === symbol(POWER) && cadr(p1) === symbol(E)) {\n      if (DEBUG_ABS) {\n        console.log(\" abs: \" + p1 + \" is an exponential\");\n      }\n      // exponential\n      push(caddr(p1));\n      real();\n      exponential();\n      if (DEBUG_ABS) {\n        console.log(\" --> ABS of \" + input + \" : \" + stack[tos - 1]);\n      }\n      restore();\n      return;\n    }\n    if (car(p1) === symbol(MULTIPLY)) {\n      if (DEBUG_ABS) {\n        console.log(\" abs: \" + p1 + \" is a product\");\n      }\n      // product\n      anyFactorsYet = false;\n      p1 = cdr(p1);\n      while (iscons(p1)) {\n        push(car(p1));\n        absval();\n        if (anyFactorsYet) {\n          multiply();\n        }\n        anyFactorsYet = true;\n        p1 = cdr(p1);\n      }\n      if (DEBUG_ABS) {\n        console.log(\" --> ABS of \" + input + \" : \" + stack[tos - 1]);\n      }\n      restore();\n      return;\n    }\n    if (car(p1) === symbol(ABS)) {\n      if (DEBUG_ABS) {\n        console.log(\" abs: \" + p1 + \" is abs of a abs\");\n      }\n      // abs of a abs\n      push_symbol(ABS);\n      push(cadr(p1));\n      list(2);\n      if (DEBUG_ABS) {\n        console.log(\" --> ABS of \" + input + \" : \" + stack[tos - 1]);\n      }\n      restore();\n      return;\n    }\n    /*\n     * Evaluation via zzfloat()\n     * ...while this is in theory a powerful mechanism, I've commented it\n     * out because I've refined this method enough to not need this.\n     * Evaling via zzfloat() is in principle more problematic because it could\n     * require further evaluations which could end up in further \"abs\" which\n     * would end up in infinite loops. Better not use it if not necessary.\n\n     * we look directly at the float evaluation of the argument\n     * to see if we end up with a number, which would mean that there\n     * is no imaginary component and we can just return the input\n     * (or its negation) as the result.\n    push p1\n    zzfloat()\n    floatEvaluation = pop()\n\n    if (isnegativenumber(floatEvaluation))\n      if DEBUG_ABS then console.log \" abs: \" + p1 + \" just a negative\"\n      push(p1)\n      negate()\n      restore()\n      return\n\n    if (ispositivenumber(floatEvaluation))\n      if DEBUG_ABS then console.log \" abs: \" + p1 + \" just a positive\"\n      push(p1)\n      if DEBUG_ABS then console.log \" --> ABS of \" + input + \" : \" + stack[tos-1]\n      restore()\n      return\n     */\n    if (istensor(p1)) {\n      absval_tensor();\n      restore();\n      return;\n    }\n    if (isnegativeterm(p1) || (car(p1) === symbol(ADD) && isnegativeterm(cadr(p1)))) {\n      push(p1);\n      negate();\n      p1 = pop();\n    }\n    if (DEBUG_ABS) {\n      console.log(\" abs: \" + p1 + \" is nothing decomposable\");\n    }\n    push_symbol(ABS);\n    push(p1);\n    list(2);\n    if (DEBUG_ABS) {\n      console.log(\" --> ABS of \" + input + \" : \" + stack[tos - 1]);\n    }\n    return restore();\n  };\n\n  // also called the \"norm\" of a vector\n  absval_tensor = function() {\n    if (p1.tensor.ndim !== 1) {\n      stop(\"abs(tensor) with tensor rank > 1\");\n    }\n    push(p1);\n    push(p1);\n    conjugate();\n    inner();\n    push_rational(1, 2);\n    power();\n    simplify();\n    return Eval();\n  };\n\n  flag = 0;\n\n  Eval_add = function() {\n    var h;\n    h = tos;\n    p1 = cdr(p1);\n    while (iscons(p1)) {\n      push(car(p1));\n      Eval();\n      p2 = pop();\n      push_terms(p2);\n      p1 = cdr(p1);\n    }\n    return add_terms(tos - h);\n  };\n\n  // Add n terms, returns one expression on the stack.\n  stackAddsCount = 0;\n\n  add_terms = function(n) {\n    var h, i, i1, j1, o, ref, ref1, results, s, subsetOfStack;\n    stackAddsCount++;\n    i = 0;\n    h = tos - n;\n    s = h;\n    // ensure no infinite loop, use \"for\"\n    if (DEBUG) {\n      console.log(\"stack before adding terms #\" + stackAddsCount);\n    }\n    //if stackAddsCount == 137\n    //  debugger\n    if (DEBUG) {\n      for (i = o = 0, ref = tos; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n        console.log(print_list(stack[i]));\n      }\n    }\n    for (i = i1 = 0; i1 < 10; i = ++i1) {\n      if (n < 2) {\n        break;\n      }\n      flag = 0;\n      //qsort(s, n, sizeof (U *), cmp_terms)\n      subsetOfStack = stack.slice(h, h + n);\n      subsetOfStack.sort(cmp_terms);\n      stack = stack.slice(0, h).concat(subsetOfStack).concat(stack.slice(h + n));\n      if (flag === 0) {\n        break;\n      }\n      n = combine_terms(h, n);\n    }\n    moveTos(h + n);\n    switch (n) {\n      case 0:\n        if (evaluatingAsFloats) {\n          push_double(0.0);\n        } else {\n          push(zero);\n        }\n        break;\n      case 1:\n        break;\n      default:\n        list(n);\n        p1 = pop();\n        push_symbol(ADD);\n        push(p1);\n        cons();\n    }\n    if (DEBUG) {\n      console.log(\"stack after adding terms #\" + stackAddsCount);\n    }\n    //if stackAddsCount == 5\n    //  debugger\n    if (DEBUG) {\n      results = [];\n      for (i = j1 = 0, ref1 = tos; (0 <= ref1 ? j1 < ref1 : j1 > ref1); i = 0 <= ref1 ? ++j1 : --j1) {\n        results.push(console.log(print_list(stack[i])));\n      }\n      return results;\n    }\n  };\n\n  // Compare terms for order, clobbers p1 and p2.\n  cmp_terms_count = 0;\n\n  cmp_terms = function(p1, p2) {\n    var i, o, ref, t;\n    cmp_terms_count++;\n    //if cmp_terms_count == 52\n    //  debugger\n    i = 0;\n    // numbers can be combined\n    if (isNumericAtom(p1) && isNumericAtom(p2)) {\n      flag = 1;\n      //if DEBUG then console.log \"cmp_terms #\" + cmp_terms_count + \" returns 0\"\n      return 0;\n    }\n    // congruent tensors can be combined\n    if (istensor(p1) && istensor(p2)) {\n      if (p1.tensor.ndim < p2.tensor.ndim) {\n        //if DEBUG then console.log \"cmp_terms #\" + cmp_terms_count + \" returns -1\"\n        return -1;\n      }\n      if (p1.tensor.ndim > p2.tensor.ndim) {\n        //if DEBUG then console.log \"cmp_terms #\" + cmp_terms_count + \" returns 1\"\n        return 1;\n      }\n      for (i = o = 0, ref = p1.tensor.ndim; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n        if (p1.tensor.dim[i] < p2.tensor.dim[i]) {\n          //if DEBUG then console.log \"cmp_terms #\" + cmp_terms_count + \" returns -1\"\n          return -1;\n        }\n        if (p1.tensor.dim[i] > p2.tensor.dim[i]) {\n          //if DEBUG then console.log \"cmp_terms #\" + cmp_terms_count + \" returns 1\"\n          return 1;\n        }\n      }\n      flag = 1;\n      //if DEBUG then console.log \"cmp_terms #\" + cmp_terms_count + \" returns 0\"\n      return 0;\n    }\n    if (car(p1) === symbol(MULTIPLY)) {\n      p1 = cdr(p1);\n      if (isNumericAtom(car(p1))) {\n        p1 = cdr(p1);\n        if (cdr(p1) === symbol(NIL)) {\n          p1 = car(p1);\n        }\n      }\n    }\n    if (car(p2) === symbol(MULTIPLY)) {\n      p2 = cdr(p2);\n      if (isNumericAtom(car(p2))) {\n        p2 = cdr(p2);\n        if (cdr(p2) === symbol(NIL)) {\n          p2 = car(p2);\n        }\n      }\n    }\n    t = cmp_expr(p1, p2);\n    if (t === 0) {\n      flag = 1;\n    }\n    //if DEBUG then console.log \"cmp_terms #\" + cmp_terms_count + \" returns \" + t\n    return t;\n  };\n\n  combine_terms = function(s, n) {\n    var i, i1, j, j1, l1, m1, o, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, t;\n    //debugger\n\n    // I had to turn the coffeescript for loop into\n    // a more mundane while loop because the i\n    // variable was changed from within the body,\n    // which is something that is not supposed to\n    // happen in the coffeescript 'vector' form.\n    // Also this means I had to add a 'i++' jus before\n    // the end of the body and before the \"continue\"s\n    i = 0;\n    while (i < (n - 1)) {\n      check_esc_flag();\n      p3 = stack[s + i];\n      p4 = stack[s + i + 1];\n      if (istensor(p3) && istensor(p4)) {\n        push(p3);\n        push(p4);\n        tensor_plus_tensor();\n        p1 = pop();\n        if (p1 !== symbol(NIL)) {\n          stack[s + i] = p1;\n          for (j = o = ref = i + 1, ref1 = n - 1; (ref <= ref1 ? o < ref1 : o > ref1); j = ref <= ref1 ? ++o : --o) {\n            stack[s + j] = stack[s + j + 1];\n          }\n          n--;\n          i--;\n        }\n        i++;\n        continue;\n      }\n      if (istensor(p3) || istensor(p4)) {\n        i++;\n        continue;\n      }\n      if (isNumericAtom(p3) && isNumericAtom(p4)) {\n        push(p3);\n        push(p4);\n        add_numbers();\n        p1 = pop();\n        if (isZeroAtomOrTensor(p1)) {\n          for (j = i1 = ref2 = i, ref3 = n - 2; (ref2 <= ref3 ? i1 < ref3 : i1 > ref3); j = ref2 <= ref3 ? ++i1 : --i1) {\n            stack[s + j] = stack[s + j + 2];\n          }\n          n -= 2;\n        } else {\n          stack[s + i] = p1;\n          for (j = j1 = ref4 = i + 1, ref5 = n - 1; (ref4 <= ref5 ? j1 < ref5 : j1 > ref5); j = ref4 <= ref5 ? ++j1 : --j1) {\n            stack[s + j] = stack[s + j + 1];\n          }\n          n--;\n        }\n        i--;\n        i++;\n        continue;\n      }\n      if (isNumericAtom(p3) || isNumericAtom(p4)) {\n        i++;\n        continue;\n      }\n      if (evaluatingAsFloats) {\n        p1 = one_as_double;\n        p2 = one_as_double;\n      } else {\n        p1 = one;\n        p2 = one;\n      }\n      t = 0;\n      if (car(p3) === symbol(MULTIPLY)) {\n        p3 = cdr(p3);\n        t = 1;\n        if (isNumericAtom(car(p3))) {\n          p1 = car(p3);\n          p3 = cdr(p3);\n          if (cdr(p3) === symbol(NIL)) {\n            p3 = car(p3);\n            t = 0;\n          }\n        }\n      }\n      if (car(p4) === symbol(MULTIPLY)) {\n        p4 = cdr(p4);\n        if (isNumericAtom(car(p4))) {\n          p2 = car(p4);\n          p4 = cdr(p4);\n          if (cdr(p4) === symbol(NIL)) {\n            p4 = car(p4);\n          }\n        }\n      }\n      if (!equal(p3, p4)) {\n        i++;\n        continue;\n      }\n      push(p1);\n      push(p2);\n      add_numbers();\n      p1 = pop();\n      if (isZeroAtomOrTensor(p1)) {\n        for (j = l1 = ref6 = i, ref7 = n - 2; (ref6 <= ref7 ? l1 < ref7 : l1 > ref7); j = ref6 <= ref7 ? ++l1 : --l1) {\n          stack[s + j] = stack[s + j + 2];\n        }\n        n -= 2;\n        i--;\n        i++;\n        continue;\n      }\n      push(p1);\n      if (t) {\n        push(symbol(MULTIPLY));\n        push(p3);\n        cons();\n      } else {\n        push(p3);\n      }\n      multiply();\n      stack[s + i] = pop();\n      for (j = m1 = ref8 = i + 1, ref9 = n - 1; (ref8 <= ref9 ? m1 < ref9 : m1 > ref9); j = ref8 <= ref9 ? ++m1 : --m1) {\n        stack[s + j] = stack[s + j + 1];\n      }\n      n--;\n      i--;\n      // this i++ is to match the while\n      i++;\n    }\n    return n;\n  };\n\n  push_terms = function(p) {\n    var results;\n    if (car(p) === symbol(ADD)) {\n      p = cdr(p);\n      results = [];\n      while (iscons(p)) {\n        push(car(p));\n        results.push(p = cdr(p));\n      }\n      return results;\n    } else if (!isZeroAtom(p)) {\n      return push(p);\n    }\n  };\n\n  // add two expressions\n  add = function() {\n    var h;\n    save();\n    p2 = pop();\n    p1 = pop();\n    h = tos;\n    push_terms(p1);\n    push_terms(p2);\n    add_terms(tos - h);\n    return restore();\n  };\n\n  add_all = function(k) {\n    var h, i, o, ref, s;\n    i = 0;\n    save();\n    s = tos - k;\n    h = tos;\n    for (i = o = 0, ref = k; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      push_terms(stack[s + i]);\n    }\n    add_terms(tos - h);\n    p1 = pop();\n    moveTos(tos - k);\n    push(p1);\n    return restore();\n  };\n\n  subtract = function() {\n    negate();\n    return add();\n  };\n\n  Eval_adj = function() {\n    push(cadr(p1));\n    Eval();\n    return adj();\n  };\n\n  adj = function() {\n    var doNothing, i, i1, j, n, o, ref, ref1;\n    i = 0;\n    j = 0;\n    n = 0;\n    save();\n    p1 = pop();\n    if (istensor(p1) && p1.tensor.ndim === 2 && p1.tensor.dim[0] === p1.tensor.dim[1]) {\n      doNothing = 1;\n    } else {\n      stop(\"adj: square matrix expected\");\n    }\n    n = p1.tensor.dim[0];\n    p2 = alloc_tensor(n * n);\n    p2.tensor.ndim = 2;\n    p2.tensor.dim[0] = n;\n    p2.tensor.dim[1] = n;\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      for (j = i1 = 0, ref1 = n; (0 <= ref1 ? i1 < ref1 : i1 > ref1); j = 0 <= ref1 ? ++i1 : --i1) {\n        cofactor(p1, n, i, j);\n        p2.tensor.elem[n * j + i] = pop(); // transpose\n      }\n    }\n    push(p2);\n    return restore();\n  };\n\n  Eval_approxratio = function() {\n    var theArgument;\n    theArgument = cadr(p1);\n    push(theArgument);\n    return approxratioRecursive();\n  };\n\n  approxratioRecursive = function() {\n    var i, i1, o, ref, ref1;\n    i = 0;\n    save();\n    p1 = pop();\n    if (istensor(p1)) {\n      p4 = alloc_tensor(p1.tensor.nelem);\n      p4.tensor.ndim = p1.tensor.ndim;\n      for (i = o = 0, ref = p1.tensor.ndim; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n        p4.tensor.dim[i] = p1.tensor.dim[i];\n      }\n      for (i = i1 = 0, ref1 = p1.tensor.nelem; (0 <= ref1 ? i1 < ref1 : i1 > ref1); i = 0 <= ref1 ? ++i1 : --i1) {\n        push(p1.tensor.elem[i]);\n        approxratioRecursive();\n        p4.tensor.elem[i] = pop();\n        check_tensor_dimensions(p4);\n      }\n      push(p4);\n    } else if (p1.k === DOUBLE) {\n      push(p1);\n      approxOneRatioOnly();\n    } else if (iscons(p1)) {\n      push(car(p1));\n      approxratioRecursive();\n      push(cdr(p1));\n      approxratioRecursive();\n      cons();\n    } else {\n      push(p1);\n    }\n    return restore();\n  };\n\n  approxOneRatioOnly = function() {\n    var numberOfDigitsAfterTheDot, precision, splitBeforeAndAfterDot, supposedlyTheFloat, theFloat, theRatio;\n    zzfloat();\n    supposedlyTheFloat = pop();\n    if (supposedlyTheFloat.k === DOUBLE) {\n      theFloat = supposedlyTheFloat.d;\n      splitBeforeAndAfterDot = theFloat.toString().split(\".\");\n      if (splitBeforeAndAfterDot.length === 2) {\n        numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;\n        precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);\n        theRatio = floatToRatioRoutine(theFloat, precision);\n        push_rational(theRatio[0], theRatio[1]);\n      } else {\n        push_integer(theFloat);\n      }\n      return;\n    }\n    // we didn't manage, just leave unexpressed\n    push_symbol(APPROXRATIO);\n    push(theArgument);\n    return list(2);\n  };\n\n  // original routine by John Kennedy, see\n  // https://web.archive.org/web/20111027100847/http://homepage.smc.edu/kennedy_john/DEC2FRAC.PDF\n  // courtesy of Michael Borcherds\n  // who ported this to JavaScript under MIT licence\n  // also see\n  // https://github.com/geogebra/geogebra/blob/master/common/src/main/java/org/geogebra/common/kernel/algos/AlgoFractionText.java\n  // potential other ways to do this:\n  //   https://rosettacode.org/wiki/Convert_decimal_number_to_rational\n  //   http://www.homeschoolmath.net/teaching/rational_numbers.php\n  //   http://stackoverflow.com/questions/95727/how-to-convert-floats-to-human-readable-fractions\n  floatToRatioRoutine = function(decimal, AccuracyFactor) {\n    var DecimalSign, FractionDenominator, FractionNumerator, PreviousDenominator, ScratchValue, Z, ret;\n    FractionNumerator = void 0;\n    FractionDenominator = void 0;\n    DecimalSign = void 0;\n    Z = void 0;\n    PreviousDenominator = void 0;\n    ScratchValue = void 0;\n    ret = [0, 0];\n    if (isNaN(decimal)) {\n      return ret;\n    }\n    // return 0/0 \n    if (decimal === 2e308) {\n      ret[0] = 1;\n      ret[1] = 0;\n      // 1/0\n      return ret;\n    }\n    if (decimal === -2e308) {\n      ret[0] = -1;\n      ret[1] = 0;\n      // -1/0\n      return ret;\n    }\n    if (decimal < 0.0) {\n      DecimalSign = -1.0;\n    } else {\n      DecimalSign = 1.0;\n    }\n    decimal = Math.abs(decimal);\n    if (Math.abs(decimal - Math.floor(decimal)) < AccuracyFactor) {\n      // handles exact integers including 0 \n      FractionNumerator = decimal * DecimalSign;\n      FractionDenominator = 1.0;\n      ret[0] = FractionNumerator;\n      ret[1] = FractionDenominator;\n      return ret;\n    }\n    if (decimal < 1.0e-19) {\n      // X = 0 already taken care of \n      FractionNumerator = DecimalSign;\n      FractionDenominator = 9999999999999999999.0;\n      ret[0] = FractionNumerator;\n      ret[1] = FractionDenominator;\n      return ret;\n    }\n    if (decimal > 1.0e19) {\n      FractionNumerator = 9999999999999999999.0 * DecimalSign;\n      FractionDenominator = 1.0;\n      ret[0] = FractionNumerator;\n      ret[1] = FractionDenominator;\n      return ret;\n    }\n    Z = decimal;\n    PreviousDenominator = 0.0;\n    FractionDenominator = 1.0;\n    while (true) {\n      Z = 1.0 / (Z - Math.floor(Z));\n      ScratchValue = FractionDenominator;\n      FractionDenominator = FractionDenominator * Math.floor(Z) + PreviousDenominator;\n      PreviousDenominator = ScratchValue;\n      FractionNumerator = Math.floor(decimal * FractionDenominator + 0.5);\n      // Rounding Function\n      if (!(Math.abs(decimal - (FractionNumerator / FractionDenominator)) > AccuracyFactor && Z !== Math.floor(Z))) {\n        break;\n      }\n    }\n    FractionNumerator = DecimalSign * FractionNumerator;\n    ret[0] = FractionNumerator;\n    ret[1] = FractionDenominator;\n    return ret;\n  };\n\n  approx_just_an_integer = 0;\n\n  approx_sine_of_rational = 1;\n\n  approx_sine_of_pi_times_rational = 2;\n\n  approx_rationalOfPi = 3;\n\n  approx_radicalOfRatio = 4;\n\n  approx_nothingUseful = 5;\n\n  approx_ratioOfRadical = 6;\n\n  approx_rationalOfE = 7;\n\n  approx_logarithmsOfRationals = 8;\n\n  approx_rationalsOfLogarithms = 9;\n\n  approxRationalsOfRadicals = function(theFloat) {\n    var bestResultSoFar, complexity, error, hypothesis, i, i1, j, len, likelyMultiplier, minimumComplexity, numberOfDigitsAfterTheDot, o, precision, ratio, ref, result, splitBeforeAndAfterDot;\n    splitBeforeAndAfterDot = theFloat.toString().split(\".\");\n    if (splitBeforeAndAfterDot.length === 2) {\n      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;\n      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);\n    } else {\n      return [\"\" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];\n    }\n    console.log(\"precision: \" + precision);\n    // simple radicals.\n    bestResultSoFar = null;\n    minimumComplexity = Number.MAX_VALUE;\n    ref = [2, 3, 5, 6, 7, 8, 10];\n    for (o = 0, len = ref.length; o < len; o++) {\n      i = ref[o];\n      for (j = i1 = 1; i1 <= 10; j = ++i1) {\n        //console.log  \"i,j: \" + i + \",\" + j\n        hypothesis = Math.sqrt(i) / j;\n        //console.log  \"hypothesis: \" + hypothesis\n        if (Math.abs(hypothesis) > 1e-10) {\n          ratio = theFloat / hypothesis;\n          likelyMultiplier = Math.round(ratio);\n          //console.log  \"ratio: \" + ratio\n          error = Math.abs(1 - ratio / likelyMultiplier);\n        } else {\n          ratio = 1;\n          likelyMultiplier = 1;\n          error = Math.abs(theFloat - hypothesis);\n        }\n        //console.log  \"error: \" + error\n        if (error < 2 * precision) {\n          complexity = simpleComplexityMeasure(likelyMultiplier, i, j);\n          if (complexity < minimumComplexity) {\n            //console.log \"MINIMUM MULTIPLIER SO FAR\"\n            minimumComplexity = complexity;\n            result = likelyMultiplier + \" * sqrt( \" + i + \" ) / \" + j;\n            //console.log result + \" error: \" + error\n            bestResultSoFar = [result, approx_ratioOfRadical, likelyMultiplier, i, j];\n          }\n        }\n      }\n    }\n    return bestResultSoFar;\n  };\n\n  approxRadicalsOfRationals = function(theFloat) {\n    var bestResultSoFar, complexity, error, hypothesis, i, i1, j, len, len1, likelyMultiplier, minimumComplexity, numberOfDigitsAfterTheDot, o, precision, ratio, ref, ref1, result, splitBeforeAndAfterDot;\n    splitBeforeAndAfterDot = theFloat.toString().split(\".\");\n    if (splitBeforeAndAfterDot.length === 2) {\n      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;\n      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);\n    } else {\n      return [\"\" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];\n    }\n    console.log(\"precision: \" + precision);\n    // simple radicals.\n    bestResultSoFar = null;\n    minimumComplexity = Number.MAX_VALUE;\n    ref = [1, 2, 3, 5, 6, 7, 8, 10];\n    // this one catches things like Math.sqrt(3/4), but\n    // things like Math.sqrt(1/2) are caught by the paragraph\n    // above (and in a better form)\n    for (o = 0, len = ref.length; o < len; o++) {\n      i = ref[o];\n      ref1 = [1, 2, 3, 5, 6, 7, 8, 10];\n      for (i1 = 0, len1 = ref1.length; i1 < len1; i1++) {\n        j = ref1[i1];\n        //console.log  \"i,j: \" + i + \",\" + j\n        hypothesis = Math.sqrt(i / j);\n        //console.log  \"hypothesis: \" + hypothesis\n        if (Math.abs(hypothesis) > 1e-10) {\n          ratio = theFloat / hypothesis;\n          likelyMultiplier = Math.round(ratio);\n          //console.log  \"ratio: \" + ratio\n          error = Math.abs(1 - ratio / likelyMultiplier);\n        } else {\n          ratio = 1;\n          likelyMultiplier = 1;\n          error = Math.abs(theFloat - hypothesis);\n        }\n        //console.log  \"error: \" + error\n        if (error < 2 * precision) {\n          complexity = simpleComplexityMeasure(likelyMultiplier, i, j);\n          if (complexity < minimumComplexity) {\n            //console.log \"MINIMUM MULTIPLIER SO FAR\"\n            minimumComplexity = complexity;\n            result = likelyMultiplier + \" * (sqrt( \" + i + \" / \" + j + \" )\";\n            //console.log result + \" error: \" + error\n            bestResultSoFar = [result, approx_radicalOfRatio, likelyMultiplier, i, j];\n          }\n        }\n      }\n    }\n    return bestResultSoFar;\n  };\n\n  approxRadicals = function(theFloat) {\n    var approxRadicalsOfRationalsResult, approxRationalsOfRadicalsResult, numberOfDigitsAfterTheDot, precision, splitBeforeAndAfterDot;\n    splitBeforeAndAfterDot = theFloat.toString().split(\".\");\n    if (splitBeforeAndAfterDot.length === 2) {\n      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;\n      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);\n    } else {\n      return [\"\" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];\n    }\n    console.log(\"precision: \" + precision);\n    // simple radicals.\n\n    // we always prefer a rational of a radical of an integer\n    // to a radical of a rational. Radicals of rationals generate\n    // radicals at the denominator which we'd rather avoid\n    approxRationalsOfRadicalsResult = approxRationalsOfRadicals(theFloat);\n    if (approxRationalsOfRadicalsResult != null) {\n      return approxRationalsOfRadicalsResult;\n    }\n    approxRadicalsOfRationalsResult = approxRadicalsOfRationals(theFloat);\n    if (approxRadicalsOfRationalsResult != null) {\n      return approxRadicalsOfRationalsResult;\n    }\n    return null;\n  };\n\n  approxLogs = function(theFloat) {\n    var approxLogsOfRationalsResult, approxRationalsOfLogsResult, numberOfDigitsAfterTheDot, precision, splitBeforeAndAfterDot;\n    splitBeforeAndAfterDot = theFloat.toString().split(\".\");\n    if (splitBeforeAndAfterDot.length === 2) {\n      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;\n      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);\n    } else {\n      return [\"\" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];\n    }\n    console.log(\"precision: \" + precision);\n    // we always prefer a rational of a log to a log of\n    // a rational\n    approxRationalsOfLogsResult = approxRationalsOfLogs(theFloat);\n    if (approxRationalsOfLogsResult != null) {\n      return approxRationalsOfLogsResult;\n    }\n    approxLogsOfRationalsResult = approxLogsOfRationals(theFloat);\n    if (approxLogsOfRationalsResult != null) {\n      return approxLogsOfRationalsResult;\n    }\n    return null;\n  };\n\n  approxRationalsOfLogs = function(theFloat) {\n    var bestResultSoFar, complexity, error, hypothesis, i, i1, j, likelyMultiplier, minimumComplexity, numberOfDigitsAfterTheDot, o, precision, ratio, result, splitBeforeAndAfterDot;\n    splitBeforeAndAfterDot = theFloat.toString().split(\".\");\n    if (splitBeforeAndAfterDot.length === 2) {\n      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;\n      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);\n    } else {\n      return [\"\" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];\n    }\n    console.log(\"precision: \" + precision);\n    bestResultSoFar = null;\n    minimumComplexity = Number.MAX_VALUE;\n// simple rationals of logs\n    for (i = o = 2; o <= 5; i = ++o) {\n      for (j = i1 = 1; i1 <= 5; j = ++i1) {\n        //console.log  \"i,j: \" + i + \",\" + j\n        hypothesis = Math.log(i) / j;\n        //console.log  \"hypothesis: \" + hypothesis\n        if (Math.abs(hypothesis) > 1e-10) {\n          ratio = theFloat / hypothesis;\n          likelyMultiplier = Math.round(ratio);\n          //console.log  \"ratio: \" + ratio\n          error = Math.abs(1 - ratio / likelyMultiplier);\n        } else {\n          ratio = 1;\n          likelyMultiplier = 1;\n          error = Math.abs(theFloat - hypothesis);\n        }\n        //console.log  \"error: \" + error\n\n        // it does happen that due to roundings \n        // a \"higher multiple\" is picked, which is obviously\n        // unintended.\n        // E.g. 1 * log(1 / 3 ) doesn't match log( 3 ) BUT\n        // it matches -5 * log( 3 ) / 5\n        // so we avoid any case where the multiplier is a multiple\n        // of the divisor.\n        if (likelyMultiplier !== 1 && Math.abs(Math.floor(likelyMultiplier / j)) === Math.abs(likelyMultiplier / j)) {\n          continue;\n        }\n        if (error < 2.2 * precision) {\n          complexity = simpleComplexityMeasure(likelyMultiplier, i, j);\n          if (complexity < minimumComplexity) {\n            //console.log \"MINIMUM MULTIPLIER SO FAR\"\n            minimumComplexity = complexity;\n            result = likelyMultiplier + \" * log( \" + i + \" ) / \" + j;\n            //console.log result + \" error: \" + error\n            bestResultSoFar = [result, approx_rationalsOfLogarithms, likelyMultiplier, i, j];\n          }\n        }\n      }\n    }\n    return bestResultSoFar;\n  };\n\n  approxLogsOfRationals = function(theFloat) {\n    var bestResultSoFar, complexity, error, hypothesis, i, i1, j, likelyMultiplier, minimumComplexity, numberOfDigitsAfterTheDot, o, precision, ratio, result, splitBeforeAndAfterDot;\n    splitBeforeAndAfterDot = theFloat.toString().split(\".\");\n    if (splitBeforeAndAfterDot.length === 2) {\n      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;\n      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);\n    } else {\n      return [\"\" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];\n    }\n    console.log(\"precision: \" + precision);\n    bestResultSoFar = null;\n    minimumComplexity = Number.MAX_VALUE;\n// simple logs of rationals\n    for (i = o = 1; o <= 5; i = ++o) {\n      for (j = i1 = 1; i1 <= 5; j = ++i1) {\n        //console.log  \"i,j: \" + i + \",\" + j\n        hypothesis = Math.log(i / j);\n        //console.log  \"hypothesis: \" + hypothesis\n        if (Math.abs(hypothesis) > 1e-10) {\n          ratio = theFloat / hypothesis;\n          likelyMultiplier = Math.round(ratio);\n          //console.log  \"ratio: \" + ratio\n          error = Math.abs(1 - ratio / likelyMultiplier);\n        } else {\n          ratio = 1;\n          likelyMultiplier = 1;\n          error = Math.abs(theFloat - hypothesis);\n        }\n        //console.log  \"error: \" + error\n        if (error < 1.96 * precision) {\n          complexity = simpleComplexityMeasure(likelyMultiplier, i, j);\n          if (complexity < minimumComplexity) {\n            //console.log \"MINIMUM MULTIPLIER SO FAR\"\n            minimumComplexity = complexity;\n            result = likelyMultiplier + \" * log( \" + i + \" / \" + j + \" )\";\n            //console.log result + \" error: \" + error\n            bestResultSoFar = [result, approx_logarithmsOfRationals, likelyMultiplier, i, j];\n          }\n        }\n      }\n    }\n    return bestResultSoFar;\n  };\n\n  approxRationalsOfPowersOfE = function(theFloat) {\n    var bestResultSoFar, complexity, error, hypothesis, i, i1, j, likelyMultiplier, minimumComplexity, numberOfDigitsAfterTheDot, o, precision, ratio, result, splitBeforeAndAfterDot;\n    splitBeforeAndAfterDot = theFloat.toString().split(\".\");\n    if (splitBeforeAndAfterDot.length === 2) {\n      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;\n      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);\n    } else {\n      return [\"\" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];\n    }\n    console.log(\"precision: \" + precision);\n    bestResultSoFar = null;\n    minimumComplexity = Number.MAX_VALUE;\n// simple rationals of a few powers of e\n    for (i = o = 1; o <= 2; i = ++o) {\n      for (j = i1 = 1; i1 <= 12; j = ++i1) {\n        //console.log  \"i,j: \" + i + \",\" + j\n        hypothesis = Math.pow(Math.E, i) / j;\n        //console.log  \"hypothesis: \" + hypothesis\n        if (Math.abs(hypothesis) > 1e-10) {\n          ratio = theFloat / hypothesis;\n          likelyMultiplier = Math.round(ratio);\n          //console.log  \"ratio: \" + ratio\n          error = Math.abs(1 - ratio / likelyMultiplier);\n        } else {\n          ratio = 1;\n          likelyMultiplier = 1;\n          error = Math.abs(theFloat - hypothesis);\n        }\n        //console.log  \"error: \" + error\n        if (error < 2 * precision) {\n          complexity = simpleComplexityMeasure(likelyMultiplier, i, j);\n          if (complexity < minimumComplexity) {\n            //console.log \"MINIMUM MULTIPLIER SO FAR\"\n            minimumComplexity = complexity;\n            result = likelyMultiplier + \" * (e ^ \" + i + \" ) / \" + j;\n            //console.log result + \" error: \" + error\n            bestResultSoFar = [result, approx_rationalOfE, likelyMultiplier, i, j];\n          }\n        }\n      }\n    }\n    return bestResultSoFar;\n  };\n\n  approxRationalsOfPowersOfPI = function(theFloat) {\n    var bestResultSoFar, complexity, error, hypothesis, i, i1, j, likelyMultiplier, minimumComplexity, numberOfDigitsAfterTheDot, o, precision, ratio, result, splitBeforeAndAfterDot;\n    splitBeforeAndAfterDot = theFloat.toString().split(\".\");\n    if (splitBeforeAndAfterDot.length === 2) {\n      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;\n      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);\n    } else {\n      return [\"\" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];\n    }\n    console.log(\"precision: \" + precision);\n    bestResultSoFar = null;\n    // here we do somethng a little special: since\n    // the powers of pi can get quite big, there might\n    // be multiple hypothesis where more of the\n    // magnitude is shifted to the multiplier, and some\n    // where more of the magnitude is shifted towards the\n    // exponent of pi. So we prefer the hypotheses with the\n    // lower multiplier since it's likely to insert more\n    // information.\n    minimumComplexity = Number.MAX_VALUE;\n// simple rationals of a few powers of PI\n    for (i = o = 1; o <= 5; i = ++o) {\n      for (j = i1 = 1; i1 <= 12; j = ++i1) {\n        //console.log  \"i,j: \" + i + \",\" + j\n        hypothesis = Math.pow(Math.PI, i) / j;\n        //console.log  \"hypothesis: \" + hypothesis\n        if (Math.abs(hypothesis) > 1e-10) {\n          ratio = theFloat / hypothesis;\n          likelyMultiplier = Math.round(ratio);\n          //console.log  \"ratio: \" + ratio\n          error = Math.abs(1 - ratio / likelyMultiplier);\n        } else {\n          ratio = 1;\n          likelyMultiplier = 1;\n          error = Math.abs(theFloat - hypothesis);\n        }\n        //console.log  \"error: \" + error\n        if (error < 2 * precision) {\n          complexity = simpleComplexityMeasure(likelyMultiplier, i, j);\n          if (complexity < minimumComplexity) {\n            //console.log \"MINIMUM MULTIPLIER SO FAR\"\n            minimumComplexity = complexity;\n            result = likelyMultiplier + \" * (pi ^ \" + i + \" ) / \" + j + \" )\";\n            //console.log result + \" error: \" + error\n            bestResultSoFar = [result, approx_rationalOfPi, likelyMultiplier, i, j];\n          }\n        }\n      }\n    }\n    //console.log \"approxRationalsOfPowersOfPI returning: \" + bestResultSoFar\n    return bestResultSoFar;\n  };\n\n  approxTrigonometric = function(theFloat) {\n    var approxSineOfRationalMultiplesOfPIResult, approxSineOfRationalsResult, numberOfDigitsAfterTheDot, precision, splitBeforeAndAfterDot;\n    splitBeforeAndAfterDot = theFloat.toString().split(\".\");\n    if (splitBeforeAndAfterDot.length === 2) {\n      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;\n      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);\n    } else {\n      return [\"\" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];\n    }\n    console.log(\"precision: \" + precision);\n    // we always prefer a sin of a rational without the PI\n    approxSineOfRationalsResult = approxSineOfRationals(theFloat);\n    if (approxSineOfRationalsResult != null) {\n      return approxSineOfRationalsResult;\n    }\n    approxSineOfRationalMultiplesOfPIResult = approxSineOfRationalMultiplesOfPI(theFloat);\n    if (approxSineOfRationalMultiplesOfPIResult != null) {\n      return approxSineOfRationalMultiplesOfPIResult;\n    }\n    return null;\n  };\n\n  approxSineOfRationals = function(theFloat) {\n    var bestResultSoFar, complexity, error, fraction, hypothesis, i, i1, j, likelyMultiplier, minimumComplexity, numberOfDigitsAfterTheDot, o, precision, ratio, result, splitBeforeAndAfterDot;\n    splitBeforeAndAfterDot = theFloat.toString().split(\".\");\n    if (splitBeforeAndAfterDot.length === 2) {\n      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;\n      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);\n    } else {\n      return [\"\" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];\n    }\n    console.log(\"precision: \" + precision);\n    bestResultSoFar = null;\n    minimumComplexity = Number.MAX_VALUE;\n// we only check very simple rationals because they begin to get tricky\n// quickly, also they collide often with the \"rational of pi\" hypothesis.\n// For example sin(11) is veeery close to 1 (-0.99999020655)\n// (see: http://mathworld.wolfram.com/AlmostInteger.html )\n// we stop at rationals that mention up to 10\n    for (i = o = 1; o <= 4; i = ++o) {\n      for (j = i1 = 1; i1 <= 4; j = ++i1) {\n        //console.log  \"i,j: \" + i + \",\" + j\n        fraction = i / j;\n        hypothesis = Math.sin(fraction);\n        //console.log  \"hypothesis: \" + hypothesis\n        if (Math.abs(hypothesis) > 1e-10) {\n          ratio = theFloat / hypothesis;\n          likelyMultiplier = Math.round(ratio);\n          //console.log  \"ratio: \" + ratio\n          error = Math.abs(1 - ratio / likelyMultiplier);\n        } else {\n          ratio = 1;\n          likelyMultiplier = 1;\n          error = Math.abs(theFloat - hypothesis);\n        }\n        //console.log  \"error: \" + error\n        if (error < 2 * precision) {\n          complexity = simpleComplexityMeasure(likelyMultiplier, i, j);\n          if (complexity < minimumComplexity) {\n            //console.log \"MINIMUM MULTIPLIER SO FAR\"\n            minimumComplexity = complexity;\n            result = likelyMultiplier + \" * sin( \" + i + \"/\" + j + \" )\";\n            //console.log result + \" error: \" + error\n            bestResultSoFar = [result, approx_sine_of_rational, likelyMultiplier, i, j];\n          }\n        }\n      }\n    }\n    return bestResultSoFar;\n  };\n\n  approxSineOfRationalMultiplesOfPI = function(theFloat) {\n    var bestResultSoFar, complexity, error, fraction, hypothesis, i, i1, j, likelyMultiplier, minimumComplexity, numberOfDigitsAfterTheDot, o, precision, ratio, result, splitBeforeAndAfterDot;\n    splitBeforeAndAfterDot = theFloat.toString().split(\".\");\n    if (splitBeforeAndAfterDot.length === 2) {\n      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;\n      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);\n    } else {\n      return [\"\" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];\n    }\n    console.log(\"precision: \" + precision);\n    bestResultSoFar = null;\n    minimumComplexity = Number.MAX_VALUE;\n// check rational multiples of pi\n    for (i = o = 1; o <= 13; i = ++o) {\n      for (j = i1 = 1; i1 <= 13; j = ++i1) {\n        //console.log  \"i,j: \" + i + \",\" + j\n        fraction = i / j;\n        hypothesis = Math.sin(Math.PI * fraction);\n        //console.log  \"hypothesis: \" + hypothesis\n        if (Math.abs(hypothesis) > 1e-10) {\n          ratio = theFloat / hypothesis;\n          likelyMultiplier = Math.round(ratio);\n          //console.log  \"ratio: \" + ratio\n          error = Math.abs(1 - ratio / likelyMultiplier);\n        } else {\n          ratio = 1;\n          likelyMultiplier = 1;\n          error = Math.abs(theFloat - hypothesis);\n        }\n        //console.log  \"error: \" + error\n        // magic number 23 comes from the case sin(pi/10)\n        if (error < 23 * precision) {\n          complexity = simpleComplexityMeasure(likelyMultiplier, i, j);\n          if (complexity < minimumComplexity) {\n            //console.log \"MINIMUM MULTIPLIER SO FAR\"\n            minimumComplexity = complexity;\n            result = likelyMultiplier + \" * sin( \" + i + \"/\" + j + \" * pi )\";\n            //console.log result + \" error: \" + error\n            bestResultSoFar = [result, approx_sine_of_pi_times_rational, likelyMultiplier, i, j];\n          }\n        }\n      }\n    }\n    return bestResultSoFar;\n  };\n\n  approxAll = function(theFloat) {\n    var LOG_EXPLANATIONS, approxLogsResult, approxRadicalsResult, approxRationalsOfPowersOfEResult, approxRationalsOfPowersOfPIResult, approxTrigonometricResult, bestApproxSoFar, constantsSum, constantsSumMin, numberOfDigitsAfterTheDot, precision, splitBeforeAndAfterDot;\n    splitBeforeAndAfterDot = theFloat.toString().split(\".\");\n    if (splitBeforeAndAfterDot.length === 2) {\n      numberOfDigitsAfterTheDot = splitBeforeAndAfterDot[1].length;\n      precision = 1 / Math.pow(10, numberOfDigitsAfterTheDot);\n    } else {\n      return [\"\" + Math.floor(theFloat), approx_just_an_integer, Math.floor(theFloat), 1, 2];\n    }\n    console.log(\"precision: \" + precision);\n    constantsSumMin = Number.MAX_VALUE;\n    constantsSum = 0;\n    bestApproxSoFar = null;\n    LOG_EXPLANATIONS = true;\n    approxRadicalsResult = approxRadicals(theFloat);\n    if (approxRadicalsResult != null) {\n      constantsSum = simpleComplexityMeasure(approxRadicalsResult);\n      if (constantsSum < constantsSumMin) {\n        if (LOG_EXPLANATIONS) {\n          console.log(\"better explanation by approxRadicals: \" + approxRadicalsResult + \" complexity: \" + constantsSum);\n        }\n        constantsSumMin = constantsSum;\n        bestApproxSoFar = approxRadicalsResult;\n      } else {\n        if (LOG_EXPLANATIONS) {\n          console.log(\"subpar explanation by approxRadicals: \" + approxRadicalsResult + \" complexity: \" + constantsSum);\n        }\n      }\n    }\n    approxLogsResult = approxLogs(theFloat);\n    if (approxLogsResult != null) {\n      constantsSum = simpleComplexityMeasure(approxLogsResult);\n      if (constantsSum < constantsSumMin) {\n        if (LOG_EXPLANATIONS) {\n          console.log(\"better explanation by approxLogs: \" + approxLogsResult + \" complexity: \" + constantsSum);\n        }\n        constantsSumMin = constantsSum;\n        bestApproxSoFar = approxLogsResult;\n      } else {\n        if (LOG_EXPLANATIONS) {\n          console.log(\"subpar explanation by approxLogs: \" + approxLogsResult + \" complexity: \" + constantsSum);\n        }\n      }\n    }\n    approxRationalsOfPowersOfEResult = approxRationalsOfPowersOfE(theFloat);\n    if (approxRationalsOfPowersOfEResult != null) {\n      constantsSum = simpleComplexityMeasure(approxRationalsOfPowersOfEResult);\n      if (constantsSum < constantsSumMin) {\n        if (LOG_EXPLANATIONS) {\n          console.log(\"better explanation by approxRationalsOfPowersOfE: \" + approxRationalsOfPowersOfEResult + \" complexity: \" + constantsSum);\n        }\n        constantsSumMin = constantsSum;\n        bestApproxSoFar = approxRationalsOfPowersOfEResult;\n      } else {\n        if (LOG_EXPLANATIONS) {\n          console.log(\"subpar explanation by approxRationalsOfPowersOfE: \" + approxRationalsOfPowersOfEResult + \" complexity: \" + constantsSum);\n        }\n      }\n    }\n    approxRationalsOfPowersOfPIResult = approxRationalsOfPowersOfPI(theFloat);\n    if (approxRationalsOfPowersOfPIResult != null) {\n      constantsSum = simpleComplexityMeasure(approxRationalsOfPowersOfPIResult);\n      if (constantsSum < constantsSumMin) {\n        if (LOG_EXPLANATIONS) {\n          console.log(\"better explanation by approxRationalsOfPowersOfPI: \" + approxRationalsOfPowersOfPIResult + \" complexity: \" + constantsSum);\n        }\n        constantsSumMin = constantsSum;\n        bestApproxSoFar = approxRationalsOfPowersOfPIResult;\n      } else {\n        if (LOG_EXPLANATIONS) {\n          console.log(\"subpar explanation by approxRationalsOfPowersOfPI: \" + approxRationalsOfPowersOfPIResult + \" complexity: \" + constantsSum);\n        }\n      }\n    }\n    approxTrigonometricResult = approxTrigonometric(theFloat);\n    if (approxTrigonometricResult != null) {\n      constantsSum = simpleComplexityMeasure(approxTrigonometricResult);\n      if (constantsSum < constantsSumMin) {\n        if (LOG_EXPLANATIONS) {\n          console.log(\"better explanation by approxTrigonometric: \" + approxTrigonometricResult + \" complexity: \" + constantsSum);\n        }\n        constantsSumMin = constantsSum;\n        bestApproxSoFar = approxTrigonometricResult;\n      } else {\n        if (LOG_EXPLANATIONS) {\n          console.log(\"subpar explanation by approxTrigonometric: \" + approxTrigonometricResult + \" complexity: \" + constantsSum);\n        }\n      }\n    }\n    return bestApproxSoFar;\n  };\n\n  simpleComplexityMeasure = function(aResult, b, c) {\n    var theSum;\n    theSum = null;\n    if (aResult instanceof Array) {\n      // we want PI and E to somewhat increase the\n      // complexity of the expression, so basically they count\n      // more than any integer lower than 3, i.e. we consider\n      // 1,2,3 to be more fundamental than PI or E.\n      switch (aResult[1]) {\n        case approx_sine_of_pi_times_rational:\n          theSum = 4;\n          break;\n        // exponents of PI and E need to be penalised as well\n        // otherwise they come to explain any big number\n        // so we count them just as much as the multiplier\n        case approx_rationalOfPi:\n          theSum = Math.pow(4, Math.abs(aResult[3])) * Math.abs(aResult[2]);\n          break;\n        case approx_rationalOfE:\n          theSum = Math.pow(3, Math.abs(aResult[3])) * Math.abs(aResult[2]);\n          break;\n        default:\n          theSum = 0;\n      }\n      theSum += Math.abs(aResult[2]) * (Math.abs(aResult[3]) + Math.abs(aResult[4]));\n    } else {\n      theSum += Math.abs(aResult) * (Math.abs(b) + Math.abs(c));\n    }\n    \n    // heavily discount unit constants\n    if (aResult[2] === 1) {\n      theSum -= 1;\n    } else {\n      theSum += 1;\n    }\n    if (aResult[3] === 1) {\n      theSum -= 1;\n    } else {\n      theSum += 1;\n    }\n    if (aResult[4] === 1) {\n      theSum -= 1;\n    } else {\n      theSum += 1;\n    }\n    if (theSum < 0) {\n      theSum = 0;\n    }\n    return theSum;\n  };\n\n  testApprox = function() {\n    var error, fraction, i, i1, i2, i3, j, j1, j2, j3, k3, l1, l2, l3, len, len1, len2, len3, len4, len5, len6, len7, m1, m2, m3, n1, n2, o, o1, o2, originalValue, q1, q2, r1, r2, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, returned, returnedFraction, returnedValue, s1, s2, t1, t2, u1, u2, v1, v2, value, x1, x2, z1, z2;\n    ref = [2, 3, 5, 6, 7, 8, 10];\n    for (o = 0, len = ref.length; o < len; o++) {\n      i = ref[o];\n      ref1 = [2, 3, 5, 6, 7, 8, 10];\n      for (i1 = 0, len1 = ref1.length; i1 < len1; i1++) {\n        j = ref1[i1];\n        if (i === j) {\n          continue; // this is just 1\n        }\n        console.log(\"testapproxRadicals testing: \" + \"1 * sqrt( \" + i + \" ) / \" + j);\n        fraction = i / j;\n        value = Math.sqrt(i) / j;\n        returned = approxRadicals(value);\n        returnedValue = returned[2] * Math.sqrt(returned[3]) / returned[4];\n        if (Math.abs(value - returnedValue) > 1e-15) {\n          console.log(\"fail testapproxRadicals: \" + \"1 * sqrt( \" + i + \" ) / \" + j + \" . obtained: \" + returned);\n        }\n      }\n    }\n    ref2 = [2, 3, 5, 6, 7, 8, 10];\n    for (j1 = 0, len2 = ref2.length; j1 < len2; j1++) {\n      i = ref2[j1];\n      ref3 = [2, 3, 5, 6, 7, 8, 10];\n      for (l1 = 0, len3 = ref3.length; l1 < len3; l1++) {\n        j = ref3[l1];\n        if (i === j) {\n          continue; // this is just 1\n        }\n        console.log(\"testapproxRadicals testing with 4 digits: \" + \"1 * sqrt( \" + i + \" ) / \" + j);\n        fraction = i / j;\n        originalValue = Math.sqrt(i) / j;\n        value = originalValue.toFixed(4);\n        returned = approxRadicals(value);\n        returnedValue = returned[2] * Math.sqrt(returned[3]) / returned[4];\n        if (Math.abs(originalValue - returnedValue) > 1e-15) {\n          console.log(\"fail testapproxRadicals with 4 digits: \" + \"1 * sqrt( \" + i + \" ) / \" + j + \" . obtained: \" + returned);\n        }\n      }\n    }\n    ref4 = [2, 3, 5, 6, 7, 8, 10];\n    for (m1 = 0, len4 = ref4.length; m1 < len4; m1++) {\n      i = ref4[m1];\n      ref5 = [2, 3, 5, 6, 7, 8, 10];\n      for (n1 = 0, len5 = ref5.length; n1 < len5; n1++) {\n        j = ref5[n1];\n        if (i === j) {\n          continue; // this is just 1\n        }\n        console.log(\"testapproxRadicals testing: \" + \"1 * sqrt( \" + i + \" / \" + j + \" )\");\n        fraction = i / j;\n        value = Math.sqrt(i / j);\n        returned = approxRadicals(value);\n        if (returned != null) {\n          returnedValue = returned[2] * Math.sqrt(returned[3] / returned[4]);\n          if (returned[1] === approx_radicalOfRatio && Math.abs(value - returnedValue) > 1e-15) {\n            console.log(\"fail testapproxRadicals: \" + \"1 * sqrt( \" + i + \" / \" + j + \" ) . obtained: \" + returned);\n          }\n        }\n      }\n    }\n    ref6 = [1, 2, 3, 5, 6, 7, 8, 10];\n    for (o1 = 0, len6 = ref6.length; o1 < len6; o1++) {\n      i = ref6[o1];\n      ref7 = [1, 2, 3, 5, 6, 7, 8, 10];\n      for (q1 = 0, len7 = ref7.length; q1 < len7; q1++) {\n        j = ref7[q1];\n        if (i === 1 && j === 1) {\n          continue;\n        }\n        console.log(\"testapproxRadicals testing with 4 digits:: \" + \"1 * sqrt( \" + i + \" / \" + j + \" )\");\n        fraction = i / j;\n        originalValue = Math.sqrt(i / j);\n        value = originalValue.toFixed(4);\n        returned = approxRadicals(value);\n        returnedValue = returned[2] * Math.sqrt(returned[3] / returned[4]);\n        if (returned[1] === approx_radicalOfRatio && Math.abs(originalValue - returnedValue) > 1e-15) {\n          console.log(\"fail testapproxRadicals with 4 digits:: \" + \"1 * sqrt( \" + i + \" / \" + j + \" ) . obtained: \" + returned);\n        }\n      }\n    }\n    for (i = r1 = 1; r1 <= 5; i = ++r1) {\n      for (j = s1 = 1; s1 <= 5; j = ++s1) {\n        console.log(\"testApproxAll testing: \" + \"1 * log(\" + i + \" ) / \" + j);\n        fraction = i / j;\n        value = Math.log(i) / j;\n        returned = approxAll(value);\n        returnedValue = returned[2] * Math.log(returned[3]) / returned[4];\n        if (Math.abs(value - returnedValue) > 1e-15) {\n          console.log(\"fail testApproxAll: \" + \"1 * log(\" + i + \" ) / \" + j + \" . obtained: \" + returned);\n        }\n      }\n    }\n    for (i = t1 = 1; t1 <= 5; i = ++t1) {\n      for (j = u1 = 1; u1 <= 5; j = ++u1) {\n        console.log(\"testApproxAll testing with 4 digits: \" + \"1 * log(\" + i + \" ) / \" + j);\n        fraction = i / j;\n        originalValue = Math.log(i) / j;\n        value = originalValue.toFixed(4);\n        returned = approxAll(value);\n        returnedValue = returned[2] * Math.log(returned[3]) / returned[4];\n        if (Math.abs(originalValue - returnedValue) > 1e-15) {\n          console.log(\"fail testApproxAll with 4 digits: \" + \"1 * log(\" + i + \" ) / \" + j + \" . obtained: \" + returned);\n        }\n      }\n    }\n    for (i = v1 = 1; v1 <= 5; i = ++v1) {\n      for (j = x1 = 1; x1 <= 5; j = ++x1) {\n        console.log(\"testApproxAll testing: \" + \"1 * log(\" + i + \" / \" + j + \" )\");\n        fraction = i / j;\n        value = Math.log(i / j);\n        returned = approxAll(value);\n        returnedValue = returned[2] * Math.log(returned[3] / returned[4]);\n        if (Math.abs(value - returnedValue) > 1e-15) {\n          console.log(\"fail testApproxAll: \" + \"1 * log(\" + i + \" / \" + j + \" )\" + \" . obtained: \" + returned);\n        }\n      }\n    }\n    for (i = z1 = 1; z1 <= 5; i = ++z1) {\n      for (j = i2 = 1; i2 <= 5; j = ++i2) {\n        console.log(\"testApproxAll testing with 4 digits: \" + \"1 * log(\" + i + \" / \" + j + \" )\");\n        fraction = i / j;\n        originalValue = Math.log(i / j);\n        value = originalValue.toFixed(4);\n        returned = approxAll(value);\n        returnedValue = returned[2] * Math.log(returned[3] / returned[4]);\n        if (Math.abs(originalValue - returnedValue) > 1e-15) {\n          console.log(\"fail testApproxAll with 4 digits: \" + \"1 * log(\" + i + \" / \" + j + \" )\" + \" . obtained: \" + returned);\n        }\n      }\n    }\n    for (i = j2 = 1; j2 <= 2; i = ++j2) {\n      for (j = l2 = 1; l2 <= 12; j = ++l2) {\n        console.log(\"testApproxAll testing: \" + \"1 * (e ^ \" + i + \" ) / \" + j);\n        fraction = i / j;\n        value = Math.pow(Math.E, i) / j;\n        returned = approxAll(value);\n        returnedValue = returned[2] * Math.pow(Math.E, returned[3]) / returned[4];\n        if (Math.abs(value - returnedValue) > 1e-15) {\n          console.log(\"fail testApproxAll: \" + \"1 * (e ^ \" + i + \" ) / \" + j + \" . obtained: \" + returned);\n        }\n      }\n    }\n    for (i = m2 = 1; m2 <= 2; i = ++m2) {\n      for (j = n2 = 1; n2 <= 12; j = ++n2) {\n        console.log(\"approxRationalsOfPowersOfE testing with 4 digits: \" + \"1 * (e ^ \" + i + \" ) / \" + j);\n        fraction = i / j;\n        originalValue = Math.pow(Math.E, i) / j;\n        value = originalValue.toFixed(4);\n        returned = approxRationalsOfPowersOfE(value);\n        returnedValue = returned[2] * Math.pow(Math.E, returned[3]) / returned[4];\n        if (Math.abs(originalValue - returnedValue) > 1e-15) {\n          console.log(\"fail approxRationalsOfPowersOfE with 4 digits: \" + \"1 * (e ^ \" + i + \" ) / \" + j + \" . obtained: \" + returned);\n        }\n      }\n    }\n    for (i = o2 = 1; o2 <= 2; i = ++o2) {\n      for (j = q2 = 1; q2 <= 12; j = ++q2) {\n        console.log(\"testApproxAll testing: \" + \"1 * pi ^ \" + i + \" / \" + j);\n        fraction = i / j;\n        value = Math.pow(Math.PI, i) / j;\n        returned = approxAll(value);\n        returnedValue = returned[2] * Math.pow(Math.PI, returned[3]) / returned[4];\n        if (Math.abs(value - returnedValue) > 1e-15) {\n          console.log(\"fail testApproxAll: \" + \"1 * pi ^ \" + i + \" / \" + j + \" ) . obtained: \" + returned);\n        }\n      }\n    }\n    for (i = r2 = 1; r2 <= 2; i = ++r2) {\n      for (j = s2 = 1; s2 <= 12; j = ++s2) {\n        console.log(\"approxRationalsOfPowersOfPI testing with 4 digits: \" + \"1 * pi ^ \" + i + \" / \" + j);\n        fraction = i / j;\n        originalValue = Math.pow(Math.PI, i) / j;\n        value = originalValue.toFixed(4);\n        returned = approxRationalsOfPowersOfPI(value);\n        returnedValue = returned[2] * Math.pow(Math.PI, returned[3]) / returned[4];\n        if (Math.abs(originalValue - returnedValue) > 1e-15) {\n          console.log(\"fail approxRationalsOfPowersOfPI with 4 digits: \" + \"1 * pi ^ \" + i + \" / \" + j + \" ) . obtained: \" + returned);\n        }\n      }\n    }\n    for (i = t2 = 1; t2 <= 4; i = ++t2) {\n      for (j = u2 = 1; u2 <= 4; j = ++u2) {\n        console.log(\"testApproxAll testing: \" + \"1 * sin( \" + i + \"/\" + j + \" )\");\n        fraction = i / j;\n        value = Math.sin(fraction);\n        returned = approxAll(value);\n        returnedFraction = returned[3] / returned[4];\n        returnedValue = returned[2] * Math.sin(returnedFraction);\n        if (Math.abs(value - returnedValue) > 1e-15) {\n          console.log(\"fail testApproxAll: \" + \"1 * sin( \" + i + \"/\" + j + \" ) . obtained: \" + returned);\n        }\n      }\n    }\n// 5 digits create no problem\n    for (i = v2 = 1; v2 <= 4; i = ++v2) {\n      for (j = x2 = 1; x2 <= 4; j = ++x2) {\n        console.log(\"testApproxAll testing with 5 digits: \" + \"1 * sin( \" + i + \"/\" + j + \" )\");\n        fraction = i / j;\n        originalValue = Math.sin(fraction);\n        value = originalValue.toFixed(5);\n        returned = approxAll(value);\n        if (returned == null) {\n          console.log(\"fail testApproxAll with 5 digits: \" + \"1 * sin( \" + i + \"/\" + j + \" ) . obtained:  undefined \");\n        }\n        returnedFraction = returned[3] / returned[4];\n        returnedValue = returned[2] * Math.sin(returnedFraction);\n        error = Math.abs(originalValue - returnedValue);\n        if (error > 1e-14) {\n          console.log(\"fail testApproxAll with 5 digits: \" + \"1 * sin( \" + i + \"/\" + j + \" ) . obtained: \" + returned + \" error: \" + error);\n        }\n      }\n    }\n// 4 digits create two collisions\n    for (i = z2 = 1; z2 <= 4; i = ++z2) {\n      for (j = i3 = 1; i3 <= 4; j = ++i3) {\n        console.log(\"testApproxAll testing with 4 digits: \" + \"1 * sin( \" + i + \"/\" + j + \" )\");\n        fraction = i / j;\n        originalValue = Math.sin(fraction);\n        value = originalValue.toFixed(4);\n        returned = approxAll(value);\n        if (returned == null) {\n          console.log(\"fail testApproxAll with 4 digits: \" + \"1 * sin( \" + i + \"/\" + j + \" ) . obtained:  undefined \");\n        }\n        returnedFraction = returned[3] / returned[4];\n        returnedValue = returned[2] * Math.sin(returnedFraction);\n        error = Math.abs(originalValue - returnedValue);\n        if (error > 1e-14) {\n          console.log(\"fail testApproxAll with 4 digits: \" + \"1 * sin( \" + i + \"/\" + j + \" ) . obtained: \" + returned + \" error: \" + error);\n        }\n      }\n    }\n    value = 0;\n    if (approxAll(value)[0] !== \"0\") {\n      console.log(\"fail testApproxAll: 0\");\n    }\n    value = 0.0;\n    if (approxAll(value)[0] !== \"0\") {\n      console.log(\"fail testApproxAll: 0.0\");\n    }\n    value = 0.00;\n    if (approxAll(value)[0] !== \"0\") {\n      console.log(\"fail testApproxAll: 0.00\");\n    }\n    value = 0.000;\n    if (approxAll(value)[0] !== \"0\") {\n      console.log(\"fail testApproxAll: 0.000\");\n    }\n    value = 0.0000;\n    if (approxAll(value)[0] !== \"0\") {\n      console.log(\"fail testApproxAll: 0.0000\");\n    }\n    value = 1;\n    if (approxAll(value)[0] !== \"1\") {\n      console.log(\"fail testApproxAll: 1\");\n    }\n    value = 1.0;\n    if (approxAll(value)[0] !== \"1\") {\n      console.log(\"fail testApproxAll: 1.0\");\n    }\n    value = 1.00;\n    if (approxAll(value)[0] !== \"1\") {\n      console.log(\"fail testApproxAll: 1.00\");\n    }\n    value = 1.000;\n    if (approxAll(value)[0] !== \"1\") {\n      console.log(\"fail testApproxAll: 1.000\");\n    }\n    value = 1.0000;\n    if (approxAll(value)[0] !== \"1\") {\n      console.log(\"fail testApproxAll: 1.0000\");\n    }\n    value = 1.00000;\n    if (approxAll(value)[0] !== \"1\") {\n      console.log(\"fail testApproxAll: 1.00000\");\n    }\n    value = Math.sqrt(2);\n    if (approxAll(value)[0] !== \"1 * sqrt( 2 ) / 1\") {\n      console.log(\"fail testApproxAll: Math.sqrt(2)\");\n    }\n    value = 1.41;\n    if (approxAll(value)[0] !== \"1 * sqrt( 2 ) / 1\") {\n      console.log(\"fail testApproxAll: 1.41\");\n    }\n    // if we narrow down to a particular family then we can get\n    // an OK guess even with few digits, expecially for really \"famous\" numbers\n    value = 1.4;\n    if (approxRadicals(value)[0] !== \"1 * sqrt( 2 ) / 1\") {\n      console.log(\"fail approxRadicals: 1.4\");\n    }\n    value = 0.6;\n    if (approxLogs(value)[0] !== \"1 * log( 2 ) / 1\") {\n      console.log(\"fail approxLogs: 0.6\");\n    }\n    value = 0.69;\n    if (approxLogs(value)[0] !== \"1 * log( 2 ) / 1\") {\n      console.log(\"fail approxLogs: 0.69\");\n    }\n    value = 0.7;\n    if (approxLogs(value)[0] !== \"1 * log( 2 ) / 1\") {\n      console.log(\"fail approxLogs: 0.7\");\n    }\n    value = 1.09;\n    if (approxLogs(value)[0] !== \"1 * log( 3 ) / 1\") {\n      console.log(\"fail approxLogs: 1.09\");\n    }\n    value = 1.09;\n    if (approxAll(value)[0] !== \"1 * log( 3 ) / 1\") {\n      console.log(\"fail approxAll: 1.09\");\n    }\n    value = 1.098;\n    if (approxAll(value)[0] !== \"1 * log( 3 ) / 1\") {\n      console.log(\"fail approxAll: 1.098\");\n    }\n    value = 1.1;\n    if (approxAll(value)[0] !== \"1 * log( 3 ) / 1\") {\n      console.log(\"fail approxAll: 1.1\");\n    }\n    value = 1.11;\n    if (approxAll(value)[0] !== \"1 * log( 3 ) / 1\") {\n      console.log(\"fail approxAll: 1.11\");\n    }\n    value = Math.sqrt(3);\n    if (approxAll(value)[0] !== \"1 * sqrt( 3 ) / 1\") {\n      console.log(\"fail testApproxAll: Math.sqrt(3)\");\n    }\n    value = 1.0000;\n    if (approxAll(value)[0] !== \"1\") {\n      console.log(\"fail testApproxAll: 1.0000\");\n    }\n    value = 3.141592;\n    if (approxAll(value)[0] !== \"1 * (pi ^ 1 ) / 1 )\") {\n      console.log(\"fail testApproxAll: 3.141592\");\n    }\n    value = 31.41592;\n    if (approxAll(value)[0] !== \"10 * (pi ^ 1 ) / 1 )\") {\n      console.log(\"fail testApproxAll: 31.41592\");\n    }\n    value = 314.1592;\n    if (approxAll(value)[0] !== \"100 * (pi ^ 1 ) / 1 )\") {\n      console.log(\"fail testApproxAll: 314.1592\");\n    }\n    value = 31415926.53589793;\n    if (approxAll(value)[0] !== \"10000000 * (pi ^ 1 ) / 1 )\") {\n      console.log(\"fail testApproxAll: 31415926.53589793\");\n    }\n    value = Math.sqrt(2);\n    if (approxTrigonometric(value)[0] !== \"2 * sin( 1/4 * pi )\") {\n      console.log(\"fail approxTrigonometric: Math.sqrt(2)\");\n    }\n    value = Math.sqrt(3);\n    if (approxTrigonometric(value)[0] !== \"2 * sin( 1/3 * pi )\") {\n      console.log(\"fail approxTrigonometric: Math.sqrt(3)\");\n    }\n    value = (Math.sqrt(6) - Math.sqrt(2)) / 4;\n    if (approxAll(value)[0] !== \"1 * sin( 1/12 * pi )\") {\n      console.log(\"fail testApproxAll: (Math.sqrt(6) - Math.sqrt(2))/4\");\n    }\n    value = Math.sqrt(2 - Math.sqrt(2)) / 2;\n    if (approxAll(value)[0] !== \"1 * sin( 1/8 * pi )\") {\n      console.log(\"fail testApproxAll: Math.sqrt(2 - Math.sqrt(2))/2\");\n    }\n    value = (Math.sqrt(6) + Math.sqrt(2)) / 4;\n    if (approxAll(value)[0] !== \"1 * sin( 5/12 * pi )\") {\n      console.log(\"fail testApproxAll: (Math.sqrt(6) + Math.sqrt(2))/4\");\n    }\n    value = Math.sqrt(2 + Math.sqrt(3)) / 2;\n    if (approxAll(value)[0] !== \"1 * sin( 5/12 * pi )\") {\n      console.log(\"fail testApproxAll: Math.sqrt(2 + Math.sqrt(3))/2\");\n    }\n    value = (Math.sqrt(5) - 1) / 4;\n    if (approxAll(value)[0] !== \"1 * sin( 1/10 * pi )\") {\n      console.log(\"fail testApproxAll: (Math.sqrt(5) - 1)/4\");\n    }\n    value = Math.sqrt(10 - 2 * Math.sqrt(5)) / 4;\n    if (approxAll(value)[0] !== \"1 * sin( 1/5 * pi )\") {\n      console.log(\"fail testApproxAll: Math.sqrt(10 - 2*Math.sqrt(5))/4\");\n    }\n    // this has a radical form but it's too long to write\n    value = Math.sin(Math.PI / 7);\n    if (approxAll(value)[0] !== \"1 * sin( 1/7 * pi )\") {\n      console.log(\"fail testApproxAll: Math.sin(Math.PI/7)\");\n    }\n    // this has a radical form but it's too long to write\n    value = Math.sin(Math.PI / 9);\n    if (approxAll(value)[0] !== \"1 * sin( 1/9 * pi )\") {\n      console.log(\"fail testApproxAll: Math.sin(Math.PI/9)\");\n    }\n    value = 1836.15267;\n    if (approxRationalsOfPowersOfPI(value)[0] !== \"6 * (pi ^ 5 ) / 1 )\") {\n      console.log(\"fail approxRationalsOfPowersOfPI: 1836.15267\");\n    }\n    for (i = j3 = 1; j3 <= 13; i = ++j3) {\n      for (j = k3 = 1; k3 <= 13; j = ++k3) {\n        console.log(\"approxTrigonometric testing: \" + \"1 * sin( \" + i + \"/\" + j + \" * pi )\");\n        fraction = i / j;\n        value = Math.sin(Math.PI * fraction);\n        // we specifically search for sines of rational multiples of PI\n        // because too many of them would be picked up as simple\n        // rationals.\n        returned = approxTrigonometric(value);\n        returnedFraction = returned[3] / returned[4];\n        returnedValue = returned[2] * Math.sin(Math.PI * returnedFraction);\n        if (Math.abs(value - returnedValue) > 1e-15) {\n          console.log(\"fail approxTrigonometric: \" + \"1 * sin( \" + i + \"/\" + j + \" * pi ) . obtained: \" + returned);\n        }\n      }\n    }\n    for (i = l3 = 1; l3 <= 13; i = ++l3) {\n      for (j = m3 = 1; m3 <= 13; j = ++m3) {\n        // with four digits, there are two collisions with the\n        // \"simple fraction\" argument hypotesis, which we prefer since\n        // it's a simpler expression, so let's skip those\n        // two tests\n        if (i === 5 && j === 11 || i === 6 && j === 11) {\n          continue;\n        }\n        console.log(\"approxTrigonometric testing with 4 digits: \" + \"1 * sin( \" + i + \"/\" + j + \" * pi )\");\n        fraction = i / j;\n        originalValue = Math.sin(Math.PI * fraction);\n        value = originalValue.toFixed(4);\n        // we specifically search for sines of rational multiples of PI\n        // because too many of them would be picked up as simple\n        // rationals.\n        returned = approxTrigonometric(value);\n        returnedFraction = returned[3] / returned[4];\n        returnedValue = returned[2] * Math.sin(Math.PI * returnedFraction);\n        error = Math.abs(originalValue - returnedValue);\n        if (error > 1e-14) {\n          console.log(\"fail approxTrigonometric with 4 digits: \" + \"1 * sin( \" + i + \"/\" + j + \" * pi ) . obtained: \" + returned + \" error: \" + error);\n        }\n      }\n    }\n    return console.log(\"testApprox done\");\n  };\n\n  $.approxRadicals = approxRadicals;\n\n  $.approxRationalsOfLogs = approxRationalsOfLogs;\n\n  $.approxAll = approxAll;\n\n  $.testApprox = testApprox;\n\n  Eval_arccos = function() {\n    push(cadr(p1));\n    Eval();\n    return arccos();\n  };\n\n  arccos = function() {\n    var d, errno, n;\n    n = 0;\n    d = 0.0;\n    save();\n    p1 = pop();\n    if (car(p1) === symbol(COS)) {\n      push(cadr(p1));\n      restore();\n      return;\n    }\n    if (isdouble(p1)) {\n      errno = 0;\n      d = Math.acos(p1.d);\n      if (errno) {\n        stop(\"arccos function argument is not in the interval [-1,1]\");\n      }\n      push_double(d);\n      restore();\n      return;\n    }\n    // if p1 == 1/sqrt(2) then return 1/4*pi (45 degrees)\n    // second if catches the other way of saying it, sqrt(2)/2\n    if ((isoneoversqrttwo(p1)) || (car(p1) === symbol(MULTIPLY) && equalq(car(cdr(p1)), 1, 2) && car(car(cdr(cdr(p1)))) === symbol(POWER) && equaln(car(cdr(car(cdr(cdr(p1))))), 2) && equalq(car(cdr(cdr(car(cdr(cdr(p1)))))), 1, 2))) {\n      if (evaluatingAsFloats) {\n        push_double(Math.PI / 4.0);\n      } else {\n        push_rational(1, 4);\n        push_symbol(PI);\n        multiply();\n      }\n      restore();\n      return;\n    }\n    // if p1 == -1/sqrt(2) then return 3/4*pi (135 degrees)\n    // second if catches the other way of saying it, -sqrt(2)/2\n    if ((isminusoneoversqrttwo(p1)) || (car(p1) === symbol(MULTIPLY) && equalq(car(cdr(p1)), -1, 2) && car(car(cdr(cdr(p1)))) === symbol(POWER) && equaln(car(cdr(car(cdr(cdr(p1))))), 2) && equalq(car(cdr(cdr(car(cdr(cdr(p1)))))), 1, 2))) {\n      if (evaluatingAsFloats) {\n        push_double(Math.PI * 3.0 / 4.0);\n      } else {\n        push_rational(3, 4);\n        push_symbol(PI);\n        multiply();\n      }\n      restore();\n      return;\n    }\n    // if p1 == sqrt(3)/2 then return 1/6*pi (30 degrees)\n    if (issqrtthreeovertwo(p1)) {\n      if (evaluatingAsFloats) {\n        push_double(Math.PI / 6.0);\n      } else {\n        push_rational(1, 6);\n        push_symbol(PI);\n        multiply();\n      }\n      restore();\n      return;\n    }\n    // if p1 == -sqrt(3)/2 then return 5/6*pi (150 degrees)\n    if (isminussqrtthreeovertwo(p1)) {\n      if (evaluatingAsFloats) {\n        push_double(5.0 * Math.PI / 6.0);\n      } else {\n        push_rational(5, 6);\n        push_symbol(PI);\n        multiply();\n      }\n      restore();\n      return;\n    }\n    if (!isrational(p1)) {\n      push_symbol(ARCCOS);\n      push(p1);\n      list(2);\n      restore();\n      return;\n    }\n    push(p1);\n    push_integer(2);\n    multiply();\n    n = pop_integer();\n    switch (n) {\n      case -2:\n        if (evaluatingAsFloats) {\n          push_double(Math.PI);\n        } else {\n          push_symbol(PI);\n        }\n        break;\n      case -1:\n        if (evaluatingAsFloats) {\n          push_double(Math.PI * 2.0 / 3.0);\n        } else {\n          push_rational(2, 3);\n          push_symbol(PI);\n          multiply();\n        }\n        break;\n      case 0:\n        if (evaluatingAsFloats) {\n          push_double(Math.PI / 2.0);\n        } else {\n          push_rational(1, 2);\n          push_symbol(PI);\n          multiply();\n        }\n        break;\n      case 1:\n        if (evaluatingAsFloats) {\n          push_double(Math.PI / 3.0);\n        } else {\n          push_rational(1, 3);\n          push_symbol(PI);\n          multiply();\n        }\n        break;\n      case 2:\n        if (evaluatingAsFloats) {\n          push_double(0.0);\n        } else {\n          push(zero);\n        }\n        break;\n      default:\n        push_symbol(ARCCOS);\n        push(p1);\n        list(2);\n    }\n    return restore();\n  };\n\n  Eval_arccosh = function() {\n    push(cadr(p1));\n    Eval();\n    return arccosh();\n  };\n\n  arccosh = function() {\n    var d;\n    d = 0.0;\n    save();\n    p1 = pop();\n    if (car(p1) === symbol(COSH)) {\n      push(cadr(p1));\n      restore();\n      return;\n    }\n    if (isdouble(p1)) {\n      d = p1.d;\n      if (d < 1.0) {\n        stop(\"arccosh function argument is less than 1.0\");\n      }\n      d = Math.log(d + Math.sqrt(d * d - 1.0));\n      push_double(d);\n      restore();\n      return;\n    }\n    if (isplusone(p1)) {\n      push(zero);\n      restore();\n      return;\n    }\n    push_symbol(ARCCOSH);\n    push(p1);\n    list(2);\n    return restore();\n  };\n\n  Eval_arcsin = function() {\n    push(cadr(p1));\n    Eval();\n    return arcsin();\n  };\n\n  arcsin = function() {\n    var d, errno, n;\n    n = 0;\n    d = 0;\n    save();\n    p1 = pop();\n    if (car(p1) === symbol(SIN)) {\n      push(cadr(p1));\n      restore();\n      return;\n    }\n    if (isdouble(p1)) {\n      errno = 0;\n      d = Math.asin(p1.d);\n      if (errno) {\n        stop(\"arcsin function argument is not in the interval [-1,1]\");\n      }\n      push_double(d);\n      restore();\n      return;\n    }\n    // if p1 == 1/sqrt(2) then return 1/4*pi (45 degrees)\n    // second if catches the other way of saying it, sqrt(2)/2\n    if ((isoneoversqrttwo(p1)) || (car(p1) === symbol(MULTIPLY) && equalq(car(cdr(p1)), 1, 2) && car(car(cdr(cdr(p1)))) === symbol(POWER) && equaln(car(cdr(car(cdr(cdr(p1))))), 2) && equalq(car(cdr(cdr(car(cdr(cdr(p1)))))), 1, 2))) {\n      push_rational(1, 4);\n      push_symbol(PI);\n      multiply();\n      restore();\n      return;\n    }\n    // if p1 == -1/sqrt(2) then return -1/4*pi (-45 degrees)\n    // second if catches the other way of saying it, -sqrt(2)/2\n    if ((isminusoneoversqrttwo(p1)) || (car(p1) === symbol(MULTIPLY) && equalq(car(cdr(p1)), -1, 2) && car(car(cdr(cdr(p1)))) === symbol(POWER) && equaln(car(cdr(car(cdr(cdr(p1))))), 2) && equalq(car(cdr(cdr(car(cdr(cdr(p1)))))), 1, 2))) {\n      if (evaluatingAsFloats) {\n        push_double(-Math.PI / 4.0);\n      } else {\n        push_rational(-1, 4);\n        push_symbol(PI);\n        multiply();\n      }\n      restore();\n      return;\n    }\n    // if p1 == sqrt(3)/2 then return 1/3*pi (60 degrees)\n    if (issqrtthreeovertwo(p1)) {\n      if (evaluatingAsFloats) {\n        push_double(Math.PI / 3.0);\n      } else {\n        push_rational(1, 3);\n        push_symbol(PI);\n        multiply();\n      }\n      restore();\n      return;\n    }\n    // if p1 == -sqrt(3)/2 then return -1/3*pi (-60 degrees)\n    if (isminussqrtthreeovertwo(p1)) {\n      if (evaluatingAsFloats) {\n        push_double(-Math.PI / 3.0);\n      } else {\n        push_rational(-1, 3);\n        push_symbol(PI);\n        multiply();\n      }\n      restore();\n      return;\n    }\n    if (!isrational(p1)) {\n      push_symbol(ARCSIN);\n      push(p1);\n      list(2);\n      restore();\n      return;\n    }\n    push(p1);\n    push_integer(2);\n    multiply();\n    n = pop_integer();\n    switch (n) {\n      case -2:\n        if (evaluatingAsFloats) {\n          push_double(-Math.PI / 2.0);\n        } else {\n          push_rational(-1, 2);\n          push_symbol(PI);\n          multiply();\n        }\n        break;\n      case -1:\n        if (evaluatingAsFloats) {\n          push_double(-Math.PI / 6.0);\n        } else {\n          push_rational(-1, 6);\n          push_symbol(PI);\n          multiply();\n        }\n        break;\n      case 0:\n        if (evaluatingAsFloats) {\n          push_double(0.0);\n        } else {\n          push(zero);\n        }\n        break;\n      case 1:\n        if (evaluatingAsFloats) {\n          push_double(Math.PI / 6.0);\n        } else {\n          push_rational(1, 6);\n          push_symbol(PI);\n          multiply();\n        }\n        break;\n      case 2:\n        if (evaluatingAsFloats) {\n          push_double(Math.PI / 2.0);\n        } else {\n          push_rational(1, 2);\n          push_symbol(PI);\n          multiply();\n        }\n        break;\n      default:\n        push_symbol(ARCSIN);\n        push(p1);\n        list(2);\n    }\n    return restore();\n  };\n\n  Eval_arcsinh = function() {\n    push(cadr(p1));\n    Eval();\n    return arcsinh();\n  };\n\n  arcsinh = function() {\n    var d;\n    d = 0.0;\n    save();\n    p1 = pop();\n    if (car(p1) === symbol(SINH)) {\n      push(cadr(p1));\n      restore();\n      return;\n    }\n    if (isdouble(p1)) {\n      d = p1.d;\n      d = Math.log(d + Math.sqrt(d * d + 1.0));\n      push_double(d);\n      restore();\n      return;\n    }\n    if (isZeroAtomOrTensor(p1)) {\n      push(zero);\n      restore();\n      return;\n    }\n    push_symbol(ARCSINH);\n    push(p1);\n    list(2);\n    return restore();\n  };\n\n  Eval_arctan = function() {\n    push(cadr(p1));\n    Eval();\n    return arctan();\n  };\n\n  arctan = function() {\n    var d, errno;\n    d = 0;\n    save();\n    p1 = pop();\n    if (car(p1) === symbol(TAN)) {\n      push(cadr(p1));\n      restore();\n      return;\n    }\n    if (isdouble(p1)) {\n      errno = 0;\n      d = Math.atan(p1.d);\n      if (errno) {\n        stop(\"arctan function error\");\n      }\n      push_double(d);\n      restore();\n      return;\n    }\n    if (isZeroAtomOrTensor(p1)) {\n      push(zero);\n      restore();\n      return;\n    }\n    if (isnegative(p1)) {\n      push(p1);\n      negate();\n      arctan();\n      negate();\n      restore();\n      return;\n    }\n    // arctan(sin(a) / cos(a)) ?\n    if (Find(p1, symbol(SIN)) && Find(p1, symbol(COS))) {\n      push(p1);\n      numerator();\n      p2 = pop();\n      push(p1);\n      denominator();\n      p3 = pop();\n      if (car(p2) === symbol(SIN) && car(p3) === symbol(COS) && equal(cadr(p2), cadr(p3))) {\n        push(cadr(p2));\n        restore();\n        return;\n      }\n    }\n    // arctan(1/sqrt(3)) -> pi/6\n    // second if catches the other way of saying it, sqrt(3)/3\n    if ((car(p1) === symbol(POWER) && equaln(cadr(p1), 3) && equalq(caddr(p1), -1, 2)) || (car(p1) === symbol(MULTIPLY) && equalq(car(cdr(p1)), 1, 3) && car(car(cdr(cdr(p1)))) === symbol(POWER) && equaln(car(cdr(car(cdr(cdr(p1))))), 3) && equalq(car(cdr(cdr(car(cdr(cdr(p1)))))), 1, 2))) {\n      push_rational(1, 6);\n      if (evaluatingAsFloats) {\n        push_double(Math.PI);\n      } else {\n        push(symbol(PI));\n      }\n      multiply();\n      restore();\n      return;\n    }\n    // arctan(1) -> pi/4\n    if (equaln(p1, 1)) {\n      push_rational(1, 4);\n      if (evaluatingAsFloats) {\n        push_double(Math.PI);\n      } else {\n        push(symbol(PI));\n      }\n      multiply();\n      restore();\n      return;\n    }\n    // arctan(sqrt(3)) -> pi/3\n    if (car(p1) === symbol(POWER) && equaln(cadr(p1), 3) && equalq(caddr(p1), 1, 2)) {\n      push_rational(1, 3);\n      if (evaluatingAsFloats) {\n        push_double(Math.PI);\n      } else {\n        push(symbol(PI));\n      }\n      multiply();\n      restore();\n      return;\n    }\n    push_symbol(ARCTAN);\n    push(p1);\n    list(2);\n    return restore();\n  };\n\n  Eval_arctanh = function() {\n    push(cadr(p1));\n    Eval();\n    return arctanh();\n  };\n\n  arctanh = function() {\n    var d;\n    d = 0.0;\n    save();\n    p1 = pop();\n    if (car(p1) === symbol(TANH)) {\n      push(cadr(p1));\n      restore();\n      return;\n    }\n    if (isdouble(p1)) {\n      d = p1.d;\n      if (d < -1.0 || d > 1.0) {\n        stop(\"arctanh function argument is not in the interval [-1,1]\");\n      }\n      d = Math.log((1.0 + d) / (1.0 - d)) / 2.0;\n      push_double(d);\n      restore();\n      return;\n    }\n    if (isZeroAtomOrTensor(p1)) {\n      push(zero);\n      restore();\n      return;\n    }\n    push_symbol(ARCTANH);\n    push(p1);\n    list(2);\n    return restore();\n  };\n\n  DEBUG_ARG = false;\n\n  Eval_arg = function() {\n    push(cadr(p1));\n    Eval();\n    return arg();\n  };\n\n  arg = function() {\n    save();\n    p1 = pop();\n    push(p1);\n    numerator();\n    yyarg();\n    push(p1);\n    denominator();\n    yyarg();\n    subtract();\n    return restore();\n  };\n\n  //define RE p2\n  //define IM p3\n  yyarg = function() {\n    save();\n    p1 = pop();\n    // case of plain number\n    if (ispositivenumber(p1) || p1 === symbol(PI)) {\n      if (isdouble(p1) || evaluatingAsFloats) {\n        push_double(0);\n      } else {\n        push_integer(0);\n      }\n    } else if (isnegativenumber(p1)) {\n      if (isdouble(p1) || evaluatingAsFloats) {\n        push_double(Math.PI);\n      } else {\n        push(symbol(PI));\n      }\n      negate();\n    // you'd think that something like\n    // arg(a) is always 0 when a is real but no,\n    // arg(a) is pi when a is negative so we have\n    // to leave unexpressed\n    } else if (issymbol(p1)) {\n      push_symbol(ARG);\n      push(p1);\n      list(2);\n    } else if (car(p1) === symbol(POWER) && equaln(cadr(p1), -1)) {\n      // -1 to a power\n      if (evaluatingAsFloats) {\n        push_double(Math.PI);\n      } else {\n        push(symbol(PI));\n      }\n      push(caddr(p1));\n      multiply();\n    } else if (car(p1) === symbol(POWER) && cadr(p1) === symbol(E)) {\n      // exponential\n      push(caddr(p1));\n      imag();\n    // arg(a^(1/2)) is always equal to 1/2 * arg(a)\n    // this can obviously be made more generic TODO\n    } else if (car(p1) === symbol(POWER) && isoneovertwo(caddr(p1))) {\n      if (DEBUG_ARG) {\n        console.log(\"arg of a sqrt: \" + p1);\n      }\n      if (DEBUG_ARG) {\n        debugger;\n      }\n      push(cadr(p1));\n      arg();\n      if (DEBUG_ARG) {\n        console.log(\" = 1/2 * \" + stack[tos - 1]);\n      }\n      push(caddr(p1));\n      multiply();\n    } else if (car(p1) === symbol(MULTIPLY)) {\n      // product of factors\n      push_integer(0);\n      p1 = cdr(p1);\n      while (iscons(p1)) {\n        push(car(p1));\n        arg();\n        add();\n        p1 = cdr(p1);\n      }\n    } else if (car(p1) === symbol(ADD)) {\n      // sum of terms\n      push(p1);\n      rect();\n      p1 = pop();\n      push(p1);\n      real();\n      p2 = pop();\n      push(p1);\n      imag();\n      p3 = pop();\n      if (isZeroAtomOrTensor(p2)) {\n        if (evaluatingAsFloats) {\n          push_double(Math.PI);\n        } else {\n          push(symbol(PI));\n        }\n        if (isnegative(p3)) {\n          negate();\n        }\n      } else {\n        push(p3);\n        push(p2);\n        divide();\n        arctan();\n        if (isnegative(p2)) {\n          if (evaluatingAsFloats) {\n            push_double(Math.PI);\n          } else {\n            push_symbol(PI);\n          }\n          if (isnegative(p3)) {\n            subtract(); // quadrant 1 -> 3\n          } else {\n            add(); // quadrant 4 -> 2\n          }\n        }\n      }\n    } else {\n      if (!isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES)))) {\n        // if we assume all passed values are real\n        push_integer(0);\n      } else {\n        // if we don't assume all passed values are real, all\n        // we con do is to leave unexpressed\n        push_symbol(ARG);\n        push(p1);\n        list(2);\n      }\n    }\n    return restore();\n  };\n\n  // pretty print\n  bake = function() {\n    var h, s, t, x, y, z;\n    h = 0;\n    s = 0;\n    t = 0;\n    x = 0;\n    y = 0;\n    z = 0;\n    expanding++;\n    save();\n    p1 = pop();\n    s = ispolyexpandedform(p1, symbol(SYMBOL_S));\n    t = ispolyexpandedform(p1, symbol(SYMBOL_T));\n    x = ispolyexpandedform(p1, symbol(SYMBOL_X));\n    y = ispolyexpandedform(p1, symbol(SYMBOL_Y));\n    z = ispolyexpandedform(p1, symbol(SYMBOL_Z));\n    if (s === 1 && t === 0 && x === 0 && y === 0 && z === 0) {\n      p2 = symbol(SYMBOL_S);\n      bake_poly();\n    } else if (s === 0 && t === 1 && x === 0 && y === 0 && z === 0) {\n      p2 = symbol(SYMBOL_T);\n      bake_poly();\n    } else if (s === 0 && t === 0 && x === 1 && y === 0 && z === 0) {\n      p2 = symbol(SYMBOL_X);\n      bake_poly();\n    } else if (s === 0 && t === 0 && x === 0 && y === 1 && z === 0) {\n      p2 = symbol(SYMBOL_Y);\n      bake_poly();\n    } else if (s === 0 && t === 0 && x === 0 && y === 0 && z === 1) {\n      p2 = symbol(SYMBOL_Z);\n      bake_poly();\n    // don't bake the contents of some constructs such as \"for\"\n    // because we don't want to evaluate the body of\n    // such constructs \"statically\", i.e. without fully running\n    // the loops.\n    } else if ((iscons(p1)) && car(p1) !== symbol(FOR)) {\n      h = tos;\n      push(car(p1));\n      p1 = cdr(p1);\n      while (iscons(p1)) {\n        push(car(p1));\n        bake();\n        p1 = cdr(p1);\n      }\n      list(tos - h);\n    } else {\n      push(p1);\n    }\n    restore();\n    return expanding--;\n  };\n\n  polyform = function() {\n    var h;\n    h = 0;\n    save();\n    p2 = pop();\n    p1 = pop();\n    if (ispolyexpandedform(p1, p2)) {\n      bake_poly();\n    } else if (iscons(p1)) {\n      h = tos;\n      push(car(p1));\n      p1 = cdr(p1);\n      while (iscons(p1)) {\n        push(car(p1));\n        push(p2);\n        polyform();\n        p1 = cdr(p1);\n      }\n      list(tos - h);\n    } else {\n      push(p1);\n    }\n    return restore();\n  };\n\n  bake_poly = function() {\n    var a, h, i, k, n, o, ref;\n    h = 0;\n    i = 0;\n    k = 0;\n    n = 0;\n    //U **a\n    a = tos;\n    k = coeff(p2, p1);\n    h = tos;\n    for (i = o = ref = k - 1; o >= 0; i = o += -1) {\n      p1 = stack[a + i];\n      bake_poly_term(i);\n    }\n    n = tos - h;\n    if (n > 1) {\n      list(n);\n      push(symbol(ADD));\n      swap();\n      cons();\n    }\n    p1 = pop();\n    moveTos(tos - k);\n    return push(p1);\n  };\n\n  // p1 points to coefficient of p2 ^ k\n\n  // k is an int\n  bake_poly_term = function(k) {\n    var h, n;\n    h = 0;\n    n = 0;\n    if (isZeroAtomOrTensor(p1)) {\n      return;\n    }\n    // constant term?\n    if (k === 0) {\n      if (car(p1) === symbol(ADD)) {\n        p1 = cdr(p1);\n        while (iscons(p1)) {\n          push(car(p1));\n          p1 = cdr(p1);\n        }\n      } else {\n        push(p1);\n      }\n      return;\n    }\n    h = tos;\n    // coefficient\n    if (car(p1) === symbol(MULTIPLY)) {\n      p1 = cdr(p1);\n      while (iscons(p1)) {\n        push(car(p1));\n        p1 = cdr(p1);\n      }\n    } else if (!equaln(p1, 1)) {\n      push(p1);\n    }\n    // x ^ k\n    if (k === 1) {\n      push(p2);\n    } else {\n      push(symbol(POWER));\n      push(p2);\n      push_integer(k);\n      list(3);\n    }\n    n = tos - h;\n    if (n > 1) {\n      list(n);\n      push(symbol(MULTIPLY));\n      swap();\n      return cons();\n    }\n  };\n\n  Eval_besselj = function() {\n    push(cadr(p1));\n    Eval();\n    push(caddr(p1));\n    Eval();\n    return besselj();\n  };\n\n  besselj = function() {\n    save();\n    yybesselj();\n    return restore();\n  };\n\n  //define X p1\n  //define N p2\n  //define SGN p3\n  yybesselj = function() {\n    var d, n;\n    d = 0.0;\n    n = 0;\n    p2 = pop();\n    p1 = pop();\n    push(p2);\n    n = pop_integer();\n    // numerical result\n    if (isdouble(p1) && !isNaN(n)) {\n      d = jn(n, p1.d);\n      push_double(d);\n      return;\n    }\n    // bessej(0,0) = 1\n    if (isZeroAtomOrTensor(p1) && isZeroAtomOrTensor(p2)) {\n      push_integer(1);\n      return;\n    }\n    // besselj(0,n) = 0\n    if (isZeroAtomOrTensor(p1) && !isNaN(n)) {\n      push_integer(0);\n      return;\n    }\n    // half arguments\n    if (p2.k === NUM && MEQUAL(p2.q.b, 2)) {\n      // n = 1/2\n      if (MEQUAL(p2.q.a, 1)) {\n        if (evaluatingAsFloats) {\n          push_double(2.0 / Math.PI);\n        } else {\n          push_integer(2);\n          push_symbol(PI);\n          divide();\n        }\n        push(p1);\n        divide();\n        push_rational(1, 2);\n        power();\n        push(p1);\n        sine();\n        multiply();\n        return;\n      }\n      // n = -1/2\n      if (MEQUAL(p2.q.a, -1)) {\n        if (evaluatingAsFloats) {\n          push_double(2.0 / Math.PI);\n        } else {\n          push_integer(2);\n          push_symbol(PI);\n          divide();\n        }\n        push(p1);\n        divide();\n        push_rational(1, 2);\n        power();\n        push(p1);\n        cosine();\n        multiply();\n        return;\n      }\n      // besselj(x,n) = (2/x) (n-sgn(n)) besselj(x,n-sgn(n)) - besselj(x,n-2*sgn(n))\n      push_integer(MSIGN(p2.q.a));\n      p3 = pop();\n      push_integer(2);\n      push(p1);\n      divide();\n      push(p2);\n      push(p3);\n      subtract();\n      multiply();\n      push(p1);\n      push(p2);\n      push(p3);\n      subtract();\n      besselj();\n      multiply();\n      push(p1);\n      push(p2);\n      push_integer(2);\n      push(p3);\n      multiply();\n      subtract();\n      besselj();\n      subtract();\n      return;\n    }\n    //if 0 # test cases needed\n    if (isnegativeterm(p1)) {\n      push(p1);\n      negate();\n      push(p2);\n      power();\n      push(p1);\n      push(p2);\n      negate();\n      power();\n      multiply();\n      push_symbol(BESSELJ);\n      push(p1);\n      negate();\n      push(p2);\n      list(3);\n      multiply();\n      return;\n    }\n    if (isnegativeterm(p2)) {\n      push_integer(-1);\n      push(p2);\n      power();\n      push_symbol(BESSELJ);\n      push(p1);\n      push(p2);\n      negate();\n      list(3);\n      multiply();\n      return;\n    }\n    //endif\n    push(symbol(BESSELJ));\n    push(p1);\n    push(p2);\n    return list(3);\n  };\n\n  Eval_bessely = function() {\n    push(cadr(p1));\n    Eval();\n    push(caddr(p1));\n    Eval();\n    return bessely();\n  };\n\n  bessely = function() {\n    save();\n    yybessely();\n    return restore();\n  };\n\n  //define X p1\n  //define N p2\n  yybessely = function() {\n    var d, n;\n    d = 0.0;\n    n = 0;\n    p2 = pop();\n    p1 = pop();\n    push(p2);\n    n = pop_integer();\n    if (isdouble(p1) && !isNaN(n)) {\n      d = yn(n, p1.d);\n      push_double(d);\n      return;\n    }\n    if (isnegativeterm(p2)) {\n      push_integer(-1);\n      push(p2);\n      power();\n      push_symbol(BESSELY);\n      push(p1);\n      push(p2);\n      negate();\n      list(3);\n      multiply();\n      return;\n    }\n    push_symbol(BESSELY);\n    push(p1);\n    push(p2);\n    list(3);\n  };\n\n  //double convert_rational_to_double(U *)\n  //double convert_bignum_to_double(unsigned int *)\n  //int ge(unsigned int *, unsigned int *, int)\n  mint = function(a) {\n    return bigInt(a);\n  };\n\n  isSmall = function(a) {\n    return a.geq(Number.MIN_SAFE_INTEGER) && a.leq(Number.MAX_SAFE_INTEGER);\n  };\n\n  // b is +1 or -1, a is a bigint\n  setSignTo = function(a, b) {\n    if (a.isPositive()) {\n      if (b < 0) {\n        return a.multiply(bigInt(-1));\n      }\n    } else {\n      // a is negative\n      if (b > 0) {\n        return a.multiply(bigInt(-1));\n      }\n    }\n    return a;\n  };\n\n  makeSignSameAs = function(a, b) {\n    if (a.isPositive()) {\n      if (b.isNegative()) {\n        return a.multiply(bigInt(-1));\n      }\n    } else {\n      // a is negative\n      if (b.isPositive()) {\n        return a.multiply(bigInt(-1));\n      }\n    }\n    return a;\n  };\n\n  makePositive = function(a) {\n    if (a.isNegative()) {\n      return a.multiply(bigInt(-1));\n    }\n    return a;\n  };\n\n  // n is an int\n  /*\n  mtotal = 0\n  MP_MIN_SIZE = 2\n  MP_MAX_FREE  = 1000\n\n  mnew = (n) ->\n    if (n < MP_MIN_SIZE)\n      n = MP_MIN_SIZE\n    if (n == MP_MIN_SIZE && mfreecount)\n      p = free_stack[--mfreecount]\n    else\n      p = [] #(unsigned int *) malloc((n + 3) * sizeof (int))\n      #if (p == 0)\n   *  stop(\"malloc failure\")\n    p[0] = n\n    mtotal += n\n    return p[3]\n   */\n  // p is the index of array of ints\n  // !!! array wasn't passed here\n  /*\n  free_stack = []\n\n  mfree = (array, p) ->\n    p -= 3\n    mtotal -= array[p]\n    if (array[p] == MP_MIN_SIZE && mfreecount < MP_MAX_FREE)\n      free_stack[mfreecount++] = p\n    else\n      free(p)\n  */\n  // convert int to bignum\n\n  // n is an int\n  /*\n  mint = (n) ->\n    p = mnew(1)\n    if (n < 0)\n   * !!! this is FU\n   * MSIGN(p) = -1\n      fu = true\n    else\n   * !!! this is FU\n      #MSIGN(p) = 1\n      fu = true\n   * !!! this is FU\n    #MLENGTH(p) = 1\n    p[0] = Math.abs(n)\n    return p\n   */\n  // copy bignum\n\n  // a is an array of ints\n  /*\n  mcopy = (a) ->\n    #unsigned int *b\n\n    b = mnew(MLENGTH(a))\n\n   * !!! fu\n    #MSIGN(b) = MSIGN(a)\n    #MLENGTH(b) = MLENGTH(a)\n\n    for i in [0...MLENGTH(a)]\n      b[i] = a[i]\n\n    return b\n   */\n  /*\n   * \n   * ge not invoked from anywhere - is you need ge\n   * just use the bigNum's ge implementation\n   * leaving it here just in case I decide to backport to C\n   *\n   * a >= b ?\n   * and and b arrays of ints, len is an int\n  ge = (a, b, len) ->\n    i = 0\n    for i in [0...len]\n      if (a[i] == b[i])\n        continue\n      else\n        break\n    if (a[i] >= b[i])\n      return 1\n    else\n      return 0\n   */\n  add_numbers = function() {\n    var a, b, theResult;\n    a = 1.0;\n    b = 1.0;\n    //if DEBUG then console.log(\"add_numbers adding numbers: \" + print_list(stack[tos - 1]) + \" and \" + print_list(stack[tos - 2]))\n    if (isrational(stack[tos - 1]) && isrational(stack[tos - 2])) {\n      qadd();\n      return;\n    }\n    save();\n    p2 = pop();\n    p1 = pop();\n    if (isdouble(p1)) {\n      a = p1.d;\n    } else {\n      a = convert_rational_to_double(p1);\n    }\n    if (isdouble(p2)) {\n      b = p2.d;\n    } else {\n      b = convert_rational_to_double(p2);\n    }\n    theResult = a + b;\n    push_double(theResult);\n    return restore();\n  };\n\n  subtract_numbers = function() {\n    var a, b;\n    a = 0.0;\n    b = 0.0;\n    if (isrational(stack[tos - 1]) && isrational(stack[tos - 2])) {\n      qsub();\n      return;\n    }\n    save();\n    p2 = pop();\n    p1 = pop();\n    if (isdouble(p1)) {\n      a = p1.d;\n    } else {\n      a = convert_rational_to_double(p1);\n    }\n    if (isdouble(p2)) {\n      b = p2.d;\n    } else {\n      b = convert_rational_to_double(p2);\n    }\n    push_double(a - b);\n    return restore();\n  };\n\n  multiply_numbers = function() {\n    var a, b;\n    a = 0.0;\n    b = 0.0;\n    if (isrational(stack[tos - 1]) && isrational(stack[tos - 2])) {\n      qmul();\n      return;\n    }\n    save();\n    p2 = pop();\n    p1 = pop();\n    if (isdouble(p1)) {\n      a = p1.d;\n    } else {\n      a = convert_rational_to_double(p1);\n    }\n    if (isdouble(p2)) {\n      b = p2.d;\n    } else {\n      b = convert_rational_to_double(p2);\n    }\n    push_double(a * b);\n    return restore();\n  };\n\n  divide_numbers = function() {\n    var a, b;\n    a = 0.0;\n    b = 0.0;\n    if (isrational(stack[tos - 1]) && isrational(stack[tos - 2])) {\n      qdiv();\n      return;\n    }\n    save();\n    p2 = pop();\n    p1 = pop();\n    if (isZeroAtomOrTensor(p2)) {\n      stop(\"divide by zero\");\n    }\n    if (isdouble(p1)) {\n      a = p1.d;\n    } else {\n      a = convert_rational_to_double(p1);\n    }\n    if (isdouble(p2)) {\n      b = p2.d;\n    } else {\n      b = convert_rational_to_double(p2);\n    }\n    push_double(a / b);\n    return restore();\n  };\n\n  invert_number = function() {\n    var a, b;\n    //unsigned int *a, *b\n    save();\n    p1 = pop();\n    if (isZeroAtomOrTensor(p1)) {\n      stop(\"divide by zero\");\n    }\n    if (isdouble(p1)) {\n      push_double(1 / p1.d);\n      restore();\n      return;\n    }\n    a = bigInt(p1.q.a);\n    b = bigInt(p1.q.b);\n    b = makeSignSameAs(b, a);\n    a = setSignTo(a, 1);\n    p1 = new U();\n    p1.k = NUM;\n    p1.q.a = b;\n    p1.q.b = a;\n    push(p1);\n    return restore();\n  };\n\n  // a and b are Us\n  compare_rationals = function(a, b) {\n    var ab, ba, t;\n    t = 0;\n    //unsigned int *ab, *ba\n    ab = mmul(a.q.a, b.q.b);\n    ba = mmul(a.q.b, b.q.a);\n    t = mcmp(ab, ba);\n    return t;\n  };\n\n  // a and b are Us\n  compare_numbers = function(a, b) {\n    var x, y;\n    x = 0.0;\n    y = 0.0;\n    if (isrational(a) && isrational(b)) {\n      return compare_rationals(a, b);\n    }\n    if (isdouble(a)) {\n      x = a.d;\n    } else {\n      x = convert_rational_to_double(a);\n    }\n    if (isdouble(b)) {\n      y = b.d;\n    } else {\n      y = convert_rational_to_double(b);\n    }\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n  negate_number = function() {\n    save();\n    p1 = pop();\n    if (isZeroAtomOrTensor(p1)) {\n      push(p1);\n      restore();\n      return;\n    }\n    switch (p1.k) {\n      case NUM:\n        p2 = new U();\n        p2.k = NUM;\n        p2.q.a = bigInt(p1.q.a.multiply(bigInt.minusOne));\n        p2.q.b = bigInt(p1.q.b);\n        push(p2);\n        break;\n      case DOUBLE:\n        push_double(-p1.d);\n        break;\n      default:\n        stop(\"bug caught in mp_negate_number\");\n    }\n    return restore();\n  };\n\n  bignum_truncate = function() {\n    var a;\n    //unsigned int *a\n    save();\n    p1 = pop();\n    a = mdiv(p1.q.a, p1.q.b);\n    p1 = new U();\n    p1.k = NUM;\n    p1.q.a = a;\n    p1.q.b = bigInt(1);\n    push(p1);\n    return restore();\n  };\n\n  mp_numerator = function() {\n    save();\n    p1 = pop();\n    if (p1.k !== NUM) {\n      push(one);\n      restore();\n      return;\n    }\n    p2 = new U();\n    p2.k = NUM;\n    p2.q.a = bigInt(p1.q.a);\n    p2.q.b = bigInt(1);\n    push(p2);\n    return restore();\n  };\n\n  mp_denominator = function() {\n    save();\n    p1 = pop();\n    if (p1.k !== NUM) {\n      push(one);\n      restore();\n      return;\n    }\n    p2 = new U();\n    p2.k = NUM;\n    p2.q.a = bigInt(p1.q.b);\n    p2.q.b = bigInt(1);\n    push(p2);\n    return restore();\n  };\n\n  // expo is an integer\n  bignum_power_number = function(expo) {\n    var a, b, t;\n    //unsigned int *a, *b, *t\n    save();\n    p1 = pop();\n    a = mpow(p1.q.a, Math.abs(expo));\n    b = mpow(p1.q.b, Math.abs(expo));\n    if (expo < 0) {\n      // swap a and b\n      t = a;\n      a = b;\n      b = t;\n      a = makeSignSameAs(a, b);\n      b = setSignTo(b, 1);\n    }\n    p1 = new U();\n    p1.k = NUM;\n    p1.q.a = a;\n    p1.q.b = b;\n    push(p1);\n    return restore();\n  };\n\n  // p an array of ints\n  convert_bignum_to_double = function(p) {\n    return p.toJSNumber();\n  };\n\n  // p is a U\n  convert_rational_to_double = function(p) {\n    var quotientAndRemainder, result;\n    if (p.q == null) {\n      debugger;\n    }\n    quotientAndRemainder = p.q.a.divmod(p.q.b);\n    result = quotientAndRemainder.quotient + quotientAndRemainder.remainder / p.q.b.toJSNumber();\n    return result;\n  };\n\n  // n an integer\n  new_integer = function(n) {\n    var theNewInteger;\n    theNewInteger = new U();\n    theNewInteger.k = NUM;\n    theNewInteger.q.a = bigInt(n);\n    theNewInteger.q.b = bigInt(1);\n    return theNewInteger;\n  };\n\n  // n an integer\n  push_integer = function(n) {\n    if (DEBUG) {\n      console.log(\"pushing integer \" + n);\n    }\n    return push(new_integer(n));\n  };\n\n  // d a double\n  push_double = function(d) {\n    save();\n    p1 = new U();\n    p1.k = DOUBLE;\n    p1.d = d;\n    push(p1);\n    return restore();\n  };\n\n  // a,b parts of a rational\n  push_rational = function(a, b) {\n    /*\n    save()\n    p1 = new U()\n    p1.k = NUM\n    p1.q.a = bigInt(a)\n    p1.q.b = bigInt(b)\n    ## FIXME -- normalize ##\n    push(p1)\n    restore()\n     */\n    var p;\n    p = new U();\n    p.k = NUM;\n    p.q.a = bigInt(a);\n    p.q.b = bigInt(b);\n    return push(p);\n  };\n\n  pop_integer = function() {\n    var n;\n    n = 0/0;\n    save();\n    p1 = pop();\n    switch (p1.k) {\n      case NUM:\n        if (isinteger(p1) && isSmall(p1.q.a)) {\n          n = p1.q.a.toJSNumber();\n        }\n        break;\n      case DOUBLE:\n        if (DEBUG) {\n          console.log(\"popping integer but double is found\");\n        }\n        if (Math.floor(p1.d) === p1.d) {\n          if (DEBUG) {\n            console.log(\"...altough it's an integer\");\n          }\n          n = p1.d;\n        }\n    }\n    restore();\n    return n;\n  };\n\n  // p is a U, flag is an int\n  print_double = function(p, flag) {\n    var accumulator, buf;\n    accumulator = \"\";\n    buf = doubleToReasonableString(p.d);\n    if (flag === 1 && buf === '-') {\n      accumulator += print_str(buf + 1);\n    } else {\n      accumulator += print_str(buf);\n    }\n    return accumulator;\n  };\n\n  // s is a string\n  bignum_scan_integer = function(s) {\n    var a, scounter, sign_;\n    //unsigned int *a\n    //char sign\n    save();\n    scounter = 0;\n    sign_ = s[scounter];\n    if (sign_ === '+' || sign_ === '-') {\n      scounter++;\n    }\n    // !!!! some mess in here, added an argument\n    a = bigInt(s.substring(scounter));\n    p1 = new U();\n    p1.k = NUM;\n    p1.q.a = a;\n    p1.q.b = bigInt(1);\n    push(p1);\n    if (sign_ === '-') {\n      negate();\n    }\n    return restore();\n  };\n\n  // s a string\n  bignum_scan_float = function(s) {\n    return push_double(parseFloat(s));\n  };\n\n  // gives the capability of printing the unsigned\n  // value. This is handy because printing of the sign\n  // might be taken care of \"upstream\"\n  // e.g. when printing a base elevated to a negative exponent\n  // prints the inverse of the base powered to the unsigned\n  // exponent.\n  // p is a U\n  print_number = function(p, signed) {\n    var aAsString, accumulator, buf, denominatorString;\n    accumulator = \"\";\n    denominatorString = \"\";\n    buf = \"\";\n    switch (p.k) {\n      case NUM:\n        aAsString = p.q.a.toString();\n        if (!signed) {\n          if (aAsString[0] === \"-\") {\n            aAsString = aAsString.substring(1);\n          }\n        }\n        if (printMode === PRINTMODE_LATEX && isfraction(p)) {\n          aAsString = \"\\\\frac{\" + aAsString + \"}{\";\n        }\n        accumulator += aAsString;\n        if (isfraction(p)) {\n          if (printMode !== PRINTMODE_LATEX) {\n            accumulator += \"/\";\n          }\n          denominatorString = p.q.b.toString();\n          if (printMode === PRINTMODE_LATEX) {\n            denominatorString += \"}\";\n          }\n          accumulator += denominatorString;\n        }\n        break;\n      case DOUBLE:\n        aAsString = doubleToReasonableString(p.d);\n        if (!signed) {\n          if (aAsString[0] === \"-\") {\n            aAsString = aAsString.substring(1);\n          }\n        }\n        accumulator += aAsString;\n    }\n    return accumulator;\n  };\n\n  gcd_numbers = function() {\n    save();\n    p2 = pop();\n    p1 = pop();\n    //  if (!isinteger(p1) || !isinteger(p2))\n    //    stop(\"integer args expected for gcd\")\n    p3 = new U();\n    p3.k = NUM;\n    p3.q.a = mgcd(p1.q.a, p2.q.a);\n    p3.q.b = mgcd(p1.q.b, p2.q.b);\n    p3.q.a = setSignTo(p3.q.a, 1);\n    push(p3);\n    return restore();\n  };\n\n  pop_double = function() {\n    var d;\n    d = 0.0;\n    save();\n    p1 = pop();\n    switch (p1.k) {\n      case NUM:\n        d = convert_rational_to_double(p1);\n        break;\n      case DOUBLE:\n        d = p1.d;\n        break;\n      default:\n        d = 0.0;\n    }\n    restore();\n    return d;\n  };\n\n  bignum_float = function() {\n    var d;\n    d = 0.0;\n    d = convert_rational_to_double(pop());\n    return push_double(d);\n  };\n\n  //static unsigned int *__factorial(int)\n\n  // n is an int\n  bignum_factorial = function(n) {\n    save();\n    p1 = new U();\n    p1.k = NUM;\n    p1.q.a = __factorial(n);\n    p1.q.b = bigInt(1);\n    push(p1);\n    return restore();\n  };\n\n  // n is an int\n  __factorial = function(n) {\n    var a, b, i, o, ref, t;\n    i = 0;\n    //unsigned int *a, *b, *t\n    if (n === 0 || n === 1) {\n      a = bigInt(1);\n      return a;\n    }\n    a = bigInt(2);\n    b = bigInt(0);\n    if (3 <= n) {\n      for (i = o = 3, ref = n; (3 <= ref ? o <= ref : o >= ref); i = 3 <= ref ? ++o : --o) {\n        b = bigInt(i);\n        t = mmul(a, b);\n        a = t;\n      }\n    }\n    return a;\n  };\n\n  mask = [0x00000001, 0x00000002, 0x00000004, 0x00000008, 0x00000010, 0x00000020, 0x00000040, 0x00000080, 0x00000100, 0x00000200, 0x00000400, 0x00000800, 0x00001000, 0x00002000, 0x00004000, 0x00008000, 0x00010000, 0x00020000, 0x00040000, 0x00080000, 0x00100000, 0x00200000, 0x00400000, 0x00800000, 0x01000000, 0x02000000, 0x04000000, 0x08000000, 0x10000000, 0x20000000, 0x40000000, 0x80000000];\n\n  // unsigned int *x, unsigned int k\n  mp_set_bit = function(x, k) {\n    console.log(\"not implemented yet\");\n    debugger;\n    return x[k / 32] |= mask[k % 32];\n  };\n\n  // unsigned int *x, unsigned int k\n  mp_clr_bit = function(x, k) {\n    console.log(\"not implemented yet\");\n    debugger;\n    return x[k / 32] &= ~mask[k % 32];\n  };\n\n  // unsigned int *a\n  mshiftright = function(a) {\n    return a = a.shiftRight();\n  };\n\n  //  Binomial coefficient\n\n  //  Input:    tos-2    n\n\n  //      tos-1    k\n\n  //  Output:    Binomial coefficient on stack\n\n  //  binomial(n, k) = n! / k! / (n - k)!\n\n  //  The binomial coefficient vanishes for k < 0 or k > n. (A=B, p. 19)\n  Eval_binomial = function() {\n    push(cadr(p1));\n    Eval();\n    push(caddr(p1));\n    Eval();\n    return binomial();\n  };\n\n  binomial = function() {\n    save();\n    ybinomial();\n    return restore();\n  };\n\n  //define N p1\n  //define K p2\n  ybinomial = function() {\n    p2 = pop();\n    p1 = pop();\n    if (BINOM_check_args() === 0) {\n      push(zero);\n      return;\n    }\n    push(p1);\n    factorial();\n    push(p2);\n    factorial();\n    divide();\n    push(p1);\n    push(p2);\n    subtract();\n    factorial();\n    return divide();\n  };\n\n  BINOM_check_args = function() {\n    if (isNumericAtom(p1) && lessp(p1, zero)) {\n      return 0;\n    } else if (isNumericAtom(p2) && lessp(p2, zero)) {\n      return 0;\n    } else if (isNumericAtom(p1) && isNumericAtom(p2) && lessp(p1, p2)) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  Eval_ceiling = function() {\n    push(cadr(p1));\n    Eval();\n    return ceiling();\n  };\n\n  ceiling = function() {\n    save();\n    yyceiling();\n    return restore();\n  };\n\n  yyceiling = function() {\n    var d, doNothing;\n    d = 0.0;\n    p1 = pop();\n    if (!isNumericAtom(p1)) {\n      push_symbol(CEILING);\n      push(p1);\n      list(2);\n      return;\n    }\n    if (isdouble(p1)) {\n      d = Math.ceil(p1.d);\n      push_double(d);\n      return;\n    }\n    if (isinteger(p1)) {\n      push(p1);\n      return;\n    }\n    p3 = new U();\n    p3.k = NUM;\n    p3.q.a = mdiv(p1.q.a, p1.q.b);\n    p3.q.b = mint(1);\n    push(p3);\n    if (isnegativenumber(p1)) {\n      return doNothing = 1;\n    } else {\n      push_integer(1);\n      return add();\n    }\n  };\n\n  Eval_choose = function() {\n    push(cadr(p1));\n    Eval();\n    push(caddr(p1));\n    Eval();\n    return choose();\n  };\n\n  // Result vanishes for k < 0 or k > n. (A=B, p. 19)\n\n  //define N p1\n  //define K p2\n  choose = function() {\n    save();\n    p2 = pop();\n    p1 = pop();\n    if (choose_check_args() === 0) {\n      push_integer(0);\n      restore();\n      return;\n    }\n    push(p1);\n    factorial();\n    push(p2);\n    factorial();\n    divide();\n    push(p1);\n    push(p2);\n    subtract();\n    factorial();\n    divide();\n    return restore();\n  };\n\n  choose_check_args = function() {\n    if (isNumericAtom(p1) && lessp(p1, zero)) {\n      return 0;\n    } else if (isNumericAtom(p2) && lessp(p2, zero)) {\n      return 0;\n    } else if (isNumericAtom(p1) && isNumericAtom(p2) && lessp(p1, p2)) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  Eval_circexp = function() {\n    push(cadr(p1));\n    Eval();\n    circexp();\n    // normalize\n    return Eval();\n  };\n\n  circexp = function() {\n    var h, i, o, ref;\n    i = 0;\n    h = 0;\n    save();\n    p1 = pop();\n    if (car(p1) === symbol(COS)) {\n      push(cadr(p1));\n      expcos();\n      restore();\n      return;\n    }\n    if (car(p1) === symbol(SIN)) {\n      push(cadr(p1));\n      expsin();\n      restore();\n      return;\n    }\n    if (car(p1) === symbol(TAN)) {\n      p1 = cadr(p1);\n      push(imaginaryunit);\n      push(p1);\n      multiply();\n      exponential();\n      p2 = pop();\n      push(imaginaryunit);\n      push(p1);\n      multiply();\n      negate();\n      exponential();\n      p3 = pop();\n      push(p3);\n      push(p2);\n      subtract();\n      push(imaginaryunit);\n      multiply();\n      push(p2);\n      push(p3);\n      add();\n      divide();\n      restore();\n      return;\n    }\n    if (car(p1) === symbol(COSH)) {\n      p1 = cadr(p1);\n      push(p1);\n      exponential();\n      push(p1);\n      negate();\n      exponential();\n      add();\n      push_rational(1, 2);\n      multiply();\n      restore();\n      return;\n    }\n    if (car(p1) === symbol(SINH)) {\n      p1 = cadr(p1);\n      push(p1);\n      exponential();\n      push(p1);\n      negate();\n      exponential();\n      subtract();\n      push_rational(1, 2);\n      multiply();\n      restore();\n      return;\n    }\n    if (car(p1) === symbol(TANH)) {\n      p1 = cadr(p1);\n      push(p1);\n      push_integer(2);\n      multiply();\n      exponential();\n      p1 = pop();\n      push(p1);\n      push_integer(1);\n      subtract();\n      push(p1);\n      push_integer(1);\n      add();\n      divide();\n      restore();\n      return;\n    }\n    if (iscons(p1)) {\n      h = tos;\n      while (iscons(p1)) {\n        push(car(p1));\n        circexp();\n        p1 = cdr(p1);\n      }\n      list(tos - h);\n      restore();\n      return;\n    }\n    if (p1.k === TENSOR) {\n      push(p1);\n      copy_tensor();\n      p1 = pop();\n      for (i = o = 0, ref = p1.tensor.nelem; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n        push(p1.tensor.elem[i]);\n        circexp();\n        p1.tensor.elem[i] = pop();\n      }\n      push(p1);\n      restore();\n      return;\n    }\n    push(p1);\n    return restore();\n  };\n\n  Eval_clearall = function() {\n    do_clearall();\n    return push(symbol(NIL));\n  };\n\n  do_clearall = function() {\n    if (test_flag === 0) {\n      clear_term();\n    }\n    do_clearPatterns();\n    clear_symbols();\n    defn();\n    return codeGen = false;\n  };\n\n  // clearall from application GUI code\n  clearall = function() {\n    return run(\"clearall\");\n  };\n\n  // this transformation is done in run.coffee, see there\n  // for more info.\n  clearRenamedVariablesToAvoidBindingToExternalScope = function() {\n    var i, o, ref, results;\n    results = [];\n    for (i = o = 0, ref = symtab.length; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      if (symtab[i].printname.indexOf(\"AVOID_BINDING_TO_EXTERNAL_SCOPE_VALUE\") !== -1) {\n        // just clear it\n        symtab[i].k = SYM;\n        symtab[i].printname = \"\";\n        binding[i] = symtab[i];\n        results.push(isSymbolReclaimable[i] = true);\n      } else {\n        results.push(void 0);\n      }\n    }\n    return results;\n  };\n\n  Eval_clear = function() {\n    var indexFound, variableToBeCleared;\n    p2 = cdr(p1);\n    while (iscons(p2)) {\n      variableToBeCleared = car(p2);\n      //console.log variableToBeCleared + \"\"\n      if (variableToBeCleared.k !== SYM) {\n        stop(\"symbol error\");\n      }\n      //console.log \"getting binding of \" + p.toString()\n      //if p.toString() == \"aaa\"\n      //  debugger\n      indexFound = symtab.indexOf(variableToBeCleared);\n      symtab[indexFound].k = SYM;\n      symtab[indexFound].printname = \"\";\n      binding[indexFound] = symtab[indexFound];\n      isSymbolReclaimable[indexFound] = true;\n      p2 = cdr(p2);\n    }\n    return push(symbol(NIL));\n  };\n\n  /*\n   Convert complex z to clock form\n\n    Input:    push  z\n\n    Output:    Result on stack\n\n    clock(z) = abs(z) * (-1) ^ (arg(z) / pi)\n\n    For example, clock(exp(i pi/3)) gives the result (-1)^(1/3)\n  */\n  // P.S. I couldn't find independent definition/aknowledgment\n  // of the naming \"clock form\" anywhere on the web, seems like a\n  // naming specific to eigenmath.\n  // Clock form is another way to express a complex number, and\n  // it has three advantages\n  //   1) it's uniform with how for example\n  //      i is expressed i.e. (-1)^(1/2)\n  //   2) it's very compact\n  //   3) it's a straighforward notation for roots of 1 and -1\n  DEBUG_CLOCKFORM = false;\n\n  Eval_clock = function() {\n    push(cadr(p1));\n    Eval();\n    return clockform();\n  };\n\n  clockform = function() {\n    save();\n    //if 1\n    p1 = pop();\n    push(p1);\n    abs();\n    if (DEBUG_CLOCKFORM) {\n      console.log(\"clockform: abs of \" + p1 + \" : \" + stack[tos - 1]);\n    }\n    // pushing the expression (-1)^... but note\n    // that we can't use \"power\", as \"power\" evaluates\n    // clock forms into rectangular form (see \"-1 ^ rational\"\n    // section in power)\n    push_symbol(POWER);\n    push_integer(-1);\n    push(p1);\n    arg();\n    if (DEBUG_CLOCKFORM) {\n      console.log(\"clockform: arg of \" + p1 + \" : \" + stack[tos - 1]);\n    }\n    if (evaluatingAsFloats) {\n      push_double(Math.PI);\n    } else {\n      push(symbol(PI));\n    }\n    divide();\n    if (DEBUG_CLOCKFORM) {\n      console.log(\"clockform: divide : \" + stack[tos - 1]);\n    }\n    list(3);\n    if (DEBUG_CLOCKFORM) {\n      console.log(\"clockform: power : \" + stack[tos - 1]);\n    }\n    multiply();\n    if (DEBUG_CLOCKFORM) {\n      console.log(\"clockform: multiply : \" + stack[tos - 1]);\n    }\n    //else\n    /*\n    p1 = pop()\n    push(p1)\n    abs()\n    push(symbol(E))\n    push(p1)\n    arg()\n    push(imaginaryunit)\n    multiply()\n    power()\n    multiply()\n    */\n    //endif\n    return restore();\n  };\n\n  /* coeff =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  p,x,n\n\n  General description\n  -------------------\n  Returns the coefficient of x^n in polynomial p. The x argument can be omitted for polynomials in x.\n\n  */\n  //define P p1\n  //define X p2\n  //define N p3\n  Eval_coeff = function() {\n    push(cadr(p1));\n    Eval();\n    push(caddr(p1));\n    Eval();\n    push(cadddr(p1));\n    Eval();\n    p3 = pop();\n    p2 = pop();\n    p1 = pop();\n    if (p3 === symbol(NIL)) { // p3 is N  # only 2 args?\n      p3 = p2;\n      p2 = symbol(SYMBOL_X); // p2 is X\n    }\n    push(p1);\n    push(p2);\n    push(p3);\n    power();\n    divide();\n    push(p2);\n    return filter();\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Put polynomial coefficients on the stack\n\n  //  Input:  as per params\n\n  //  Output:    Returns number of coefficients on stack\n\n  //      tos-n    Coefficient of x^0\n\n  //      tos-1    Coefficient of x^(n-1)\n\n  //-----------------------------------------------------------------------------\n  coeff = function(variable, polynomial) {\n    var coeffsCount, constant, polynomialWithoutConstant, prev_expanding;\n    if (DEBUG) {\n      console.log(\"coeff: \" + variable + \" \" + polynomial);\n    }\n    // works like this:\n    //   1) find the constant (by just evaluating the pol setting the variable to zero)\n    //   2) set aside the found constant: it's one of the coefficients to return\n    //   3) take the polynomial and remove the constant\n    //   4) divide that by variable, lowering the degree by one\n    //   5) go back to 1) until degree is zero\n    coeffsCount = 0;\n    while (true) {\n      push(polynomial);\n      push(variable);\n      push(zero);\n      subst();\n      Eval();\n      constant = pop();\n      \n      // this will be a coefficient that will be returned\n      push(constant);\n      coeffsCount++;\n      push(polynomial);\n      push(constant);\n      subtract();\n      polynomialWithoutConstant = pop();\n      if (equal(polynomialWithoutConstant, zero)) {\n        if (DEBUG) {\n          console.log(\"coeff: result: \" + coeffsCount);\n        }\n        return coeffsCount;\n      }\n      push(polynomialWithoutConstant);\n      push(variable);\n      prev_expanding = expanding;\n      expanding = 1;\n      divide();\n      expanding = prev_expanding;\n      //console.log(\"just divided: \" + stack[tos-1].toString())\n      // this is now the new polynomial with degree decreased by 1\n      polynomial = pop();\n    }\n  };\n\n  Eval_cofactor = function() {\n    var doNothing, i, j, n;\n    i = 0;\n    j = 0;\n    n = 0;\n    push(cadr(p1));\n    Eval();\n    p2 = pop();\n    if (istensor(p2) && p2.tensor.ndim === 2 && p2.tensor.dim[0] === p2.tensor.dim[1]) {\n      doNothing = 1;\n    } else {\n      stop(\"cofactor: 1st arg: square matrix expected\");\n    }\n    n = p2.tensor.dim[0];\n    push(caddr(p1));\n    Eval();\n    i = pop_integer();\n    if (i < 1 || i > n) {\n      stop(\"cofactor: 2nd arg: row index expected\");\n    }\n    push(cadddr(p1));\n    Eval();\n    j = pop_integer();\n    if (j < 1 || j > n) {\n      stop(\"cofactor: 3rd arg: column index expected\");\n    }\n    return cofactor(p2, n, i - 1, j - 1);\n  };\n\n  cofactor = function(p, n, row, col) {\n    var i, i1, j, o, ref, ref1;\n    i = 0;\n    j = 0;\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      for (j = i1 = 0, ref1 = n; (0 <= ref1 ? i1 < ref1 : i1 > ref1); j = 0 <= ref1 ? ++i1 : --i1) {\n        if (i !== row && j !== col) {\n          push(p.tensor.elem[n * i + j]);\n        }\n      }\n    }\n    determinant(n - 1);\n    if ((row + col) % 2) {\n      return negate();\n    }\n  };\n\n  // Condense an expression by factoring common terms.\n  Eval_condense = function() {\n    push(cadr(p1));\n    Eval();\n    return Condense();\n  };\n\n  Condense = function() {\n    var prev_expanding;\n    prev_expanding = expanding;\n    expanding = 0;\n    save();\n    yycondense();\n    restore();\n    return expanding = prev_expanding;\n  };\n\n  yycondense = function() {\n    //expanding = 0\n    p1 = pop();\n    if (car(p1) !== symbol(ADD)) {\n      push(p1);\n      return;\n    }\n    // get gcd of all terms\n    p3 = cdr(p1);\n    push(car(p3));\n    p3 = cdr(p3);\n    while (iscons(p3)) {\n      push(car(p3));\n      if (DEBUG) {\n        console.log(\"calculating gcd between: \" + stack[tos - 1] + \" and \" + stack[tos - 2]);\n      }\n      gcd();\n      if (DEBUG) {\n        console.log(\"partial gcd: \" + stack[tos - 1]);\n      }\n      p3 = cdr(p3);\n    }\n    if (DEBUG) {\n      console.log(\"condense: this is the gcd of all the terms: \" + stack[tos - 1]);\n    }\n    // divide each term by gcd\n    inverse();\n    p2 = pop();\n    push(zero);\n    p3 = cdr(p1);\n    while (iscons(p3)) {\n      push(p2);\n      push(car(p3));\n      //multiply()\n      multiply_noexpand();\n      add();\n      p3 = cdr(p3);\n    }\n    // We multiplied above w/o expanding so some factors cancelled.\n\n    // Now we expand which normalizes the result and, in some cases,\n    // simplifies it too (see test case H).\n    yyexpand();\n    // multiply result by gcd\n    push(p2);\n    return divide();\n  };\n\n  Eval_conj = function() {\n    push(cadr(p1));\n    Eval();\n    p1 = pop();\n    push(p1);\n    if (!Find(p1, imaginaryunit)) { // example: (-1)^(1/3)\n      polar();\n      conjugate();\n      return clockform();\n    } else {\n      return conjugate();\n    }\n  };\n\n  // careful is you pass this one an expression with\n  // i (instead of (-1)^(1/2)) then this doesn't work!\n  conjugate = function() {\n    push(imaginaryunit);\n    push(imaginaryunit);\n    negate();\n    subst();\n    return Eval();\n  };\n\n  // Cons two things on the stack.\n  consCount = 0;\n\n  cons = function() {\n    var p;\n    consCount++;\n    if (DEBUG) {\n      console.log(\"cons tos: \" + tos + \" # \" + consCount);\n    }\n    //if consCount == 444\n    //  debugger\n    // auto var ok, no opportunity for garbage collection after p = alloc()\n    p = new U();\n    p.k = CONS;\n    p.cons.cdr = pop();\n    if (p === p.cons.cdr) {\n      debugger;\n      console.log(\"something wrong p == its cdr\");\n    }\n    p.cons.car = pop();\n    /*\n    console.log \"cons new cdr.k = \" + p.cons.cdr.k + \"\\nor more in detail:\"\n    console.log print_list p.cons.cdr\n    console.log \"cons new car.k = \" + p.cons.car.k + \"\\nor more in detail:\"\n    console.log print_list p.cons.car\n    */\n    return push(p);\n  };\n\n  Eval_contract = function() {\n    push(cadr(p1));\n    Eval();\n    if (cddr(p1) === symbol(NIL)) {\n      push_integer(1);\n      push_integer(2);\n    } else {\n      push(caddr(p1));\n      Eval();\n      push(cadddr(p1));\n      Eval();\n    }\n    return contract();\n  };\n\n  contract = function() {\n    save();\n    yycontract();\n    return restore();\n  };\n\n  yycontract = function() {\n    var a, ai, an, b, h, i, i1, j, j1, k, l, l1, m, m1, n, n1, ndim, nelem, o, o1, ref, ref1, ref2, ref3, ref4, ref5, ref6;\n    h = 0;\n    i = 0;\n    j = 0;\n    k = 0;\n    l = 0;\n    m = 0;\n    n = 0;\n    ndim = 0;\n    nelem = 0;\n    ai = [];\n    an = [];\n    p3 = pop();\n    p2 = pop();\n    p1 = pop();\n    if (!istensor(p1)) {\n      if (!isZeroAtomOrTensor(p1)) {\n        stop(\"contract: tensor expected, 1st arg is not a tensor\");\n      }\n      push(zero);\n      return;\n    }\n    push(p2);\n    l = pop_integer();\n    push(p3);\n    m = pop_integer();\n    ndim = p1.tensor.ndim;\n    if (l < 1 || l > ndim || m < 1 || m > ndim || l === m || p1.tensor.dim[l - 1] !== p1.tensor.dim[m - 1]) {\n      stop(\"contract: index out of range\");\n    }\n    l--;\n    m--;\n    n = p1.tensor.dim[l];\n    // nelem is the number of elements in \"b\"\n    nelem = 1;\n    for (i = o = 0, ref = ndim; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      if (i !== l && i !== m) {\n        nelem *= p1.tensor.dim[i];\n      }\n    }\n    //console.log \"nelem:\" + nelem\n    p2 = alloc_tensor(nelem);\n    //console.log \"p2:\" + p2\n    p2.tensor.ndim = ndim - 2;\n    j = 0;\n    for (i = i1 = 0, ref1 = ndim; (0 <= ref1 ? i1 < ref1 : i1 > ref1); i = 0 <= ref1 ? ++i1 : --i1) {\n      if (i !== l && i !== m) {\n        p2.tensor.dim[j++] = p1.tensor.dim[i];\n      }\n    }\n    a = p1.tensor.elem;\n    b = p2.tensor.elem;\n//console.log \"a: \" + a\n//console.log \"b: \" + b\n    for (i = j1 = 0, ref2 = ndim; (0 <= ref2 ? j1 < ref2 : j1 > ref2); i = 0 <= ref2 ? ++j1 : --j1) {\n      ai[i] = 0;\n      an[i] = p1.tensor.dim[i];\n    }\n    for (i = l1 = 0, ref3 = nelem; (0 <= ref3 ? l1 < ref3 : l1 > ref3); i = 0 <= ref3 ? ++l1 : --l1) {\n      push(zero);\n      for (j = m1 = 0, ref4 = n; (0 <= ref4 ? m1 < ref4 : m1 > ref4); j = 0 <= ref4 ? ++m1 : --m1) {\n        ai[l] = j;\n        ai[m] = j;\n        h = 0;\n        for (k = n1 = 0, ref5 = ndim; (0 <= ref5 ? n1 < ref5 : n1 > ref5); k = 0 <= ref5 ? ++n1 : --n1) {\n          h = (h * an[k]) + ai[k];\n        }\n        push(a[h]);\n        //console.log \"a[h]: \" + a[h]\n        add();\n      }\n      //console.log \"tos: \" + stack[tos-1]\n      b[i] = pop();\n//console.log \"b[i]: \" + b[i]\n      for (j = o1 = ref6 = ndim - 1; (ref6 <= 0 ? o1 <= 0 : o1 >= 0); j = ref6 <= 0 ? ++o1 : --o1) {\n        if (j === l || j === m) {\n          continue;\n        }\n        if (++ai[j] < an[j]) {\n          break;\n        }\n        ai[j] = 0;\n      }\n    }\n    if (nelem === 1) {\n      return push(b[0]);\n    } else {\n      return push(p2);\n    }\n  };\n\n  //console.log \"returning: \" + stack[tos-1]\n  /* cos =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  x\n\n  General description\n  -------------------\n  Returns the cosine of x.\n\n  */\n  Eval_cos = function() {\n    push(cadr(p1));\n    Eval();\n    return cosine();\n  };\n\n  cosine = function() {\n    save();\n    p1 = pop();\n    if (car(p1) === symbol(ADD)) {\n      cosine_of_angle_sum();\n    } else {\n      cosine_of_angle();\n    }\n    return restore();\n  };\n\n  // Use angle sum formula for special angles.\n\n  //define A p3\n  //define B p4\n  cosine_of_angle_sum = function() {\n    p2 = cdr(p1);\n    while (iscons(p2)) {\n      p4 = car(p2);\n      if (isnpi(p4)) { // p4 is B\n        push(p1);\n        push(p4);\n        subtract();\n        p3 = pop();\n        push(p3);\n        cosine();\n        push(p4);\n        cosine();\n        multiply();\n        push(p3);\n        sine();\n        push(p4);\n        sine();\n        multiply();\n        subtract();\n        return;\n      }\n      p2 = cdr(p2);\n    }\n    return cosine_of_angle();\n  };\n\n  cosine_of_angle = function() {\n    var d, n;\n    if (car(p1) === symbol(ARCCOS)) {\n      push(cadr(p1));\n      return;\n    }\n    if (isdouble(p1)) {\n      d = Math.cos(p1.d);\n      if (Math.abs(d) < 1e-10) {\n        d = 0.0;\n      }\n      push_double(d);\n      return;\n    }\n    // cosine function is symmetric, cos(-x) = cos(x)\n    if (isnegative(p1)) {\n      push(p1);\n      negate();\n      p1 = pop();\n    }\n    // cos(arctan(x)) = 1 / sqrt(1 + x^2)\n\n    // see p. 173 of the CRC Handbook of Mathematical Sciences\n    if (car(p1) === symbol(ARCTAN)) {\n      push_integer(1);\n      push(cadr(p1));\n      push_integer(2);\n      power();\n      add();\n      push_rational(-1, 2);\n      power();\n      return;\n    }\n    // multiply by 180/pi to go from radians to degrees.\n    // we go from radians to degrees because it's much\n    // easier to calculate symbolic results of most (not all) \"classic\"\n    // angles (e.g. 30,45,60...) if we calculate the degrees\n    // and the we do a switch on that.\n    // Alternatively, we could look at the fraction of pi\n    // (e.g. 60 degrees is 1/3 pi) but that's more\n    // convoluted as we'd need to look at both numerator and\n    // denominator.\n    push(p1);\n    push_integer(180);\n    multiply();\n    if (evaluatingAsFloats) {\n      push_double(Math.PI);\n    } else {\n      push_symbol(PI);\n    }\n    divide();\n    n = pop_integer();\n    // most \"good\" (i.e. compact) trigonometric results\n    // happen for a round number of degrees. There are some exceptions\n    // though, e.g. 22.5 degrees, which we don't capture here.\n    if (n < 0 || isNaN(n)) {\n      push(symbol(COS));\n      push(p1);\n      list(2);\n      return;\n    }\n    switch (n % 360) {\n      case 90:\n      case 270:\n        return push_integer(0);\n      case 60:\n      case 300:\n        return push_rational(1, 2);\n      case 120:\n      case 240:\n        return push_rational(-1, 2);\n      case 45:\n      case 315:\n        push_rational(1, 2);\n        push_integer(2);\n        push_rational(1, 2);\n        power();\n        return multiply();\n      case 135:\n      case 225:\n        push_rational(-1, 2);\n        push_integer(2);\n        push_rational(1, 2);\n        power();\n        return multiply();\n      case 30:\n      case 330:\n        push_rational(1, 2);\n        push_integer(3);\n        push_rational(1, 2);\n        power();\n        return multiply();\n      case 150:\n      case 210:\n        push_rational(-1, 2);\n        push_integer(3);\n        push_rational(1, 2);\n        power();\n        return multiply();\n      case 0:\n        return push_integer(1);\n      case 180:\n        return push_integer(-1);\n      default:\n        push(symbol(COS));\n        push(p1);\n        return list(2);\n    }\n  };\n\n  Eval_cosh = function() {\n    push(cadr(p1));\n    Eval();\n    return ycosh();\n  };\n\n  ycosh = function() {\n    save();\n    yycosh();\n    return restore();\n  };\n\n  yycosh = function() {\n    var d;\n    d = 0.0;\n    p1 = pop();\n    if (car(p1) === symbol(ARCCOSH)) {\n      push(cadr(p1));\n      return;\n    }\n    if (isdouble(p1)) {\n      d = Math.cosh(p1.d);\n      if (Math.abs(d) < 1e-10) {\n        d = 0.0;\n      }\n      push_double(d);\n      return;\n    }\n    if (isZeroAtomOrTensor(p1)) {\n      push(one);\n      return;\n    }\n    push_symbol(COSH);\n    push(p1);\n    return list(2);\n  };\n\n  // this function extract parts subtrees from a tree.\n  // It is used in two\n  // places that have to do with pattern matching.\n  // One is for integrals, where an expression or its\n  // subparts are matched against cases in an\n  // integrals table.\n  // Another one is for applyging tranformation patterns\n  // defined via PATTERN, again patterns are applied to\n  // either the whole expression or any of its parts.\n\n  // unclear to me at the moment\n  // why this is exposed as something that can\n  // be evalled. Never called.\n  Eval_decomp = function() {\n    var h;\n    save();\n    console.log(\"Eval_decomp is being called!!!!!!!!!!!!!!!!!!!!\");\n    h = tos;\n    push(symbol(NIL));\n    push(cadr(p1));\n    Eval();\n    push(caddr(p1));\n    Eval();\n    p1 = pop();\n    if (p1 === symbol(NIL)) {\n      guess();\n    } else {\n      push(p1);\n    }\n    decomp(false);\n    list(tos - h);\n    return restore();\n  };\n\n  pushTryNotToDuplicate = function(toBePushed) {\n    if (tos > 0) {\n      if (DEBUG) {\n        console.log(\"comparing \" + toBePushed + \" to: \" + stack[tos - 1]);\n      }\n      if (equal(toBePushed, stack[tos - 1])) {\n        if (DEBUG) {\n          console.log(\"skipping \" + toBePushed + \" because it's already on stack \");\n        }\n        return;\n      }\n    }\n    return push(toBePushed);\n  };\n\n  // returns constant expressions on the stack\n  decomp = function(generalTransform) {\n    save();\n    p2 = pop();\n    p1 = pop();\n    if (DEBUG) {\n      console.log(\"DECOMPOSING \" + p1);\n    }\n    // is the entire expression constant?\n    if (generalTransform) {\n      if (!iscons(p1)) {\n        if (DEBUG) {\n          console.log(\" ground thing: \" + p1);\n        }\n        pushTryNotToDuplicate(p1);\n        restore();\n        return;\n      }\n    } else {\n      if (Find(p1, p2) === 0) {\n        if (DEBUG) {\n          console.log(\" entire expression is constant\");\n        }\n        pushTryNotToDuplicate(p1);\n        //push(p1);  # may need later for pushing both +a, -a\n        //negate()\n        restore();\n        return;\n      }\n    }\n    // sum?\n    if (isadd(p1)) {\n      decomp_sum(generalTransform);\n      restore();\n      return;\n    }\n    // product?\n    if (ismultiply(p1)) {\n      decomp_product(generalTransform);\n      restore();\n      return;\n    }\n    // naive decomp if not sum or product\n    if (DEBUG) {\n      console.log(\" naive decomp\");\n    }\n    p3 = cdr(p1);\n    if (DEBUG) {\n      console.log(\"startig p3: \" + p3);\n    }\n    while (iscons(p3)) {\n      // for a general transformations,\n      // we want to match any part of the tree so\n      // we need to push the subtree as well\n      // as recurse to its parts\n      if (generalTransform) {\n        push(car(p3));\n      }\n      if (DEBUG) {\n        console.log(\"recursive decomposition\");\n      }\n      push(car(p3));\n      if (DEBUG) {\n        console.log(\"car(p3): \" + car(p3));\n      }\n      push(p2);\n      if (DEBUG) {\n        console.log(\"p2: \" + p2);\n      }\n      decomp(generalTransform);\n      p3 = cdr(p3);\n    }\n    return restore();\n  };\n\n  decomp_sum = function(generalTransform) {\n    var h;\n    if (DEBUG) {\n      console.log(\" decomposing the sum \");\n    }\n    h = 0;\n    // decomp terms involving x\n    p3 = cdr(p1);\n    while (iscons(p3)) {\n      if (Find(car(p3), p2) || generalTransform) {\n        push(car(p3));\n        push(p2);\n        decomp(generalTransform);\n      }\n      p3 = cdr(p3);\n    }\n    // add together all constant terms\n    h = tos;\n    p3 = cdr(p1);\n    while (iscons(p3)) {\n      if (Find(car(p3), p2) === 0) {\n        pushTryNotToDuplicate(car(p3));\n      }\n      p3 = cdr(p3);\n    }\n    if (tos - h) {\n      add_all(tos - h);\n      p3 = pop();\n      pushTryNotToDuplicate(p3);\n      push(p3);\n      return negate(); // need both +a, -a for some integrals\n    }\n  };\n\n  decomp_product = function(generalTransform) {\n    var h;\n    if (DEBUG) {\n      console.log(\" decomposing the product \");\n    }\n    h = 0;\n    // decomp factors involving x\n    p3 = cdr(p1);\n    while (iscons(p3)) {\n      if (Find(car(p3), p2) || generalTransform) {\n        push(car(p3));\n        push(p2);\n        decomp(generalTransform);\n      }\n      p3 = cdr(p3);\n    }\n    // multiply together all constant factors\n    h = tos;\n    p3 = cdr(p1);\n    while (iscons(p3)) {\n      if (Find(car(p3), p2) === 0) {\n        pushTryNotToDuplicate(car(p3));\n      }\n      p3 = cdr(p3);\n    }\n    if (tos - h) {\n      return multiply_all(tos - h);\n    }\n  };\n\n  //p3 = pop();  # may need later for pushing both +a, -a\n  //push(p3)\n  //push(p3)\n  //negate()\n  // Store a function definition\n\n  // Example:\n\n  //      f(x,y)=x^y\n\n  // For this definition, p1 points to the following structure.\n\n  //     p1\n  //      |\n  //   ___v__    ______                        ______ \n  //  |CONS  |->|CONS  |--------------------->|CONS  |\n  //  |______|  |______|                      |______|\n  //      |         |                             |\n  //   ___v__    ___v__    ______    ______    ___v__    ______    ______\n  //  |SETQ  |  |CONS  |->|CONS  |->|CONS  |  |CONS  |->|CONS  |->|CONS  |\n  //  |______|  |______|  |______|  |______|  |______|  |______|  |______|\n  //                |         |         |         |         |         |\n  //             ___v__    ___v__    ___v__    ___v__    ___v__    ___v__\n  //            |SYM f |  |SYM x |  |SYM y |  |POWER |  |SYM x |  |SYM y |\n  //            |______|  |______|  |______|  |______|  |______|  |______|\n\n  // the result (in f) is a FUNCTION node\n  // that contains both the body and the argument list.\n\n  // We have\n\n  //  caadr(p1) points to the function name i.e. f\n  //  cdadr(p1) points to the arguments i.e. the list (x y)\n  //  caddr(p1) points to the function body i.e. (power x y)\n\n  //define F p3 # F points to the function name\n  //define A p4 # A points to the argument list\n  //define B p5 # B points to the function body\n  define_user_function = function() {\n    p3 = caadr(p1);\n    p4 = cdadr(p1);\n    p5 = caddr(p1);\n    if (!issymbol(p3)) { // p3 is F\n      stop(\"function name?\");\n    }\n    // evaluate function body (maybe)\n    if (car(p5) === symbol(EVAL)) { // p5 is B\n      push(cadr(p5));\n      Eval();\n      p5 = pop(); // p5 is B\n    }\n    \n    // note how, unless explicitly forced by an eval,\n    // (handled by the if just above)\n    // we don't eval/simplify\n    // the body.\n    // Why? because it's the easiest way\n    // to solve scope problems i.e.\n    //   x = 0\n    //   f(x) = x + 1\n    //   f(4) # would reply 1\n    // which would need to otherwise\n    // be solved by some scope device\n    // somehow\n    push_symbol(FUNCTION);\n    push(p5);\n    push(p4);\n    list(3);\n    p5 = pop();\n    set_binding(p3, p5);\n    return push_symbol(NIL);\n  };\n\n  Eval_function_reference = function() {\n    return push(p1);\n  };\n\n  /* defint =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  f,x,a,b[,y,c,d...]\n\n  General description\n  -------------------\n  Returns the definite integral of f with respect to x evaluated from \"a\" to b.\n  The argument list can be extended for multiple integrals (or \"iterated\n  integrals\"), for example a double integral (which can represent for\n  example a volume under a surface), or a triple integral, etc. For\n  example, defint(f,x,a,b,y,c,d).\n\n  */\n  //define F p2\n  //define X p3\n  //define A p4\n  //define B p5\n  Eval_defint = function() {\n    push(cadr(p1));\n    Eval();\n    p2 = pop(); // p2 is F\n    p1 = cddr(p1);\n    // defint can handle multiple\n    // integrals, so we loop over the\n    // multiple integrals here\n    while (iscons(p1)) {\n      push(car(p1));\n      p1 = cdr(p1);\n      Eval();\n      p3 = pop(); // p3 is X\n      push(car(p1));\n      p1 = cdr(p1);\n      Eval();\n      p4 = pop(); // p4 is A\n      push(car(p1));\n      p1 = cdr(p1);\n      Eval();\n      p5 = pop(); // p5 is B\n      \n      // obtain the primitive of F against the\n      // specified variable X\n      // note that the primitive changes over\n      // the calculation of the multiple\n      // integrals.\n      push(p2);\n      push(p3);\n      integral();\n      p2 = pop(); // contains the antiderivative of F\n      \n      // evaluate the integral in A\n      push(p2);\n      push(p3);\n      push(p5);\n      subst();\n      Eval();\n      // evaluate the integral in B\n      push(p2);\n      push(p3);\n      push(p4);\n      subst();\n      Eval();\n      // integral between B and A is the\n      // subtraction. Note that this could\n      // be a number but also a function.\n      // and we might have to integrate this\n      // number/function again doing the while\n      // loop again if this is a multiple\n      // integral.\n      subtract();\n      p2 = pop();\n    }\n    return push(p2);\n  };\n\n  Eval_degree = function() {\n    push(cadr(p1));\n    Eval();\n    push(caddr(p1));\n    Eval();\n    p1 = pop();\n    if (p1 === symbol(NIL)) {\n      guess();\n    } else {\n      push(p1);\n    }\n    return degree();\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Find the degree of a polynomial\n\n  //  Input:    tos-2    p(x)\n\n  //      tos-1    x\n\n  //  Output:    Result on stack\n\n  //  Note: Finds the largest numerical power of x. Does not check for\n  //  weirdness in p(x).\n\n  //-----------------------------------------------------------------------------\n\n  //define POLY p1\n  //define X p2\n  //define DEGREE p3\n  degree = function() {\n    save();\n    p2 = pop();\n    p1 = pop();\n    p3 = zero;\n    yydegree(p1);\n    push(p3);\n    return restore();\n  };\n\n  yydegree = function(p) {\n    var results;\n    if (equal(p, p2)) {\n      if (isZeroAtomOrTensor(p3)) {\n        return p3 = one;\n      }\n    } else if (car(p) === symbol(POWER)) {\n      if (equal(cadr(p), p2) && isNumericAtom(caddr(p)) && lessp(p3, caddr(p))) {\n        return p3 = caddr(p);\n      }\n    } else if (iscons(p)) {\n      p = cdr(p);\n      results = [];\n      while (iscons(p)) {\n        yydegree(car(p));\n        results.push(p = cdr(p));\n      }\n      return results;\n    }\n  };\n\n  Eval_denominator = function() {\n    push(cadr(p1));\n    Eval();\n    return denominator();\n  };\n\n  denominator = function() {\n    var h, theArgument;\n    h = 0;\n    theArgument = pop();\n    //console.trace \"denominator of: \" + theArgument\n    if (car(theArgument) === symbol(ADD)) {\n      push(theArgument);\n      rationalize();\n      theArgument = pop();\n    }\n    if (car(theArgument) === symbol(MULTIPLY) && !isplusone(car(cdr(theArgument)))) {\n      h = tos;\n      theArgument = cdr(theArgument);\n      while (iscons(theArgument)) {\n        push(car(theArgument));\n        denominator();\n        theArgument = cdr(theArgument);\n      }\n      return multiply_all(tos - h);\n    } else if (isrational(theArgument)) {\n      push(theArgument);\n      return mp_denominator();\n    } else if (car(theArgument) === symbol(POWER) && isnegativeterm(caddr(theArgument))) {\n      push(theArgument);\n      return reciprocate();\n    } else {\n      return push(one);\n    }\n  };\n\n  // derivative\n\n  //define F p3\n  //define X p4\n  //define N p5\n  Eval_derivative = function() {\n    var doNothing, i, i1, n, o, ref, ref1;\n    // evaluate 1st arg to get function F\n    i = 0;\n    p1 = cdr(p1);\n    push(car(p1));\n    Eval();\n    // evaluate 2nd arg and then...\n\n    // example  result of 2nd arg  what to do\n\n    // d(f)    nil      guess X, N = nil\n    // d(f,2)  2      guess X, N = 2\n    // d(f,x)  x      X = x, N = nil\n    // d(f,x,2)  x      X = x, N = 2\n    // d(f,x,y)  x      X = x, N = y\n    p1 = cdr(p1);\n    push(car(p1));\n    Eval();\n    p2 = pop();\n    if (p2 === symbol(NIL)) {\n      guess();\n      push(symbol(NIL));\n    } else if (isNumericAtom(p2)) {\n      guess();\n      push(p2);\n    } else {\n      push(p2);\n      p1 = cdr(p1);\n      push(car(p1));\n      Eval();\n    }\n    p5 = pop();\n    p4 = pop();\n    p3 = pop();\n    while (1) {\n      // p5 (N) might be a symbol instead of a number\n      if (isNumericAtom(p5)) { // p5 is N\n        push(p5);\n        n = pop_integer();\n        if (isNaN(n)) {\n          stop(\"nth derivative: check n\");\n        }\n      } else {\n        n = 1;\n      }\n      push(p3);\n      if (n >= 0) {\n        for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n          push(p4);\n          derivative();\n        }\n      } else {\n        n = -n;\n        for (i = i1 = 0, ref1 = n; (0 <= ref1 ? i1 < ref1 : i1 > ref1); i = 0 <= ref1 ? ++i1 : --i1) {\n          push(p4);\n          integral();\n        }\n      }\n      p3 = pop();\n      if (p5 === symbol(NIL)) { // p5 is N\n        break;\n      }\n      // otherwise...\n\n      // N    arg1    what to do\n\n      // number  nil    break\n      // number  number    N = arg1, continue\n      // number  symbol    X = arg1, N = arg2, continue\n\n      // symbol  nil    X = N, N = nil, continue\n      // symbol  number    X = N, N = arg1, continue\n      // symbol  symbol    X = N, N = arg1, continue\n      if (isNumericAtom(p5)) { // p5 is N\n        p1 = cdr(p1);\n        push(car(p1));\n        Eval();\n        p5 = pop();\n        if (p5 === symbol(NIL)) { // p5 is N\n          break; // arglist exhausted\n        }\n        if (isNumericAtom(p5)) { // p5 is N\n          doNothing = 1; // N = arg1\n        } else {\n          p4 = p5;\n          p1 = cdr(p1);\n          push(car(p1));\n          Eval();\n          p5 = pop(); // p5 is N  # N = arg2\n        }\n      } else {\n        p4 = p5;\n        p1 = cdr(p1);\n        push(car(p1));\n        Eval();\n        p5 = pop(); // p5 is N  # N = arg1\n      }\n    }\n    return push(p3); // p3 is F # final result\n  };\n\n  derivative = function() {\n    save();\n    p2 = pop();\n    p1 = pop();\n    if (isNumericAtom(p2)) {\n      stop(\"undefined function\");\n    }\n    if (istensor(p1)) {\n      if (istensor(p2)) {\n        d_tensor_tensor();\n      } else {\n        d_tensor_scalar();\n      }\n    } else {\n      if (istensor(p2)) {\n        d_scalar_tensor();\n      } else {\n        d_scalar_scalar();\n      }\n    }\n    return restore();\n  };\n\n  d_scalar_scalar = function() {\n    if (issymbol(p2)) {\n      return d_scalar_scalar_1();\n    } else {\n      // Example: d(sin(cos(x)),cos(x))\n      // Replace cos(x) <- X, find derivative, then do X <- cos(x)\n      push(p1);\n      push(p2);\n      push(symbol(SECRETX));\n      subst();\n      push(symbol(SECRETX));\n      derivative();\n      push(symbol(SECRETX));\n      push(p2);\n      return subst(); // cos(X) -> cos(cos(x))\n    }\n  };\n\n  d_scalar_scalar_1 = function() {\n    // d(x,x)?\n    if (equal(p1, p2)) {\n      push(one);\n      return;\n    }\n    if (!iscons(p1)) {\n      push(zero);\n      return;\n    }\n    if (isadd(p1)) {\n      dsum();\n      return;\n    }\n    if (car(p1) === symbol(MULTIPLY)) {\n      dproduct();\n      return;\n    }\n    if (car(p1) === symbol(POWER)) {\n      dpower();\n      return;\n    }\n    if (car(p1) === symbol(DERIVATIVE)) {\n      dd();\n      return;\n    }\n    if (car(p1) === symbol(LOG)) {\n      dlog();\n      return;\n    }\n    if (car(p1) === symbol(SIN)) {\n      dsin();\n      return;\n    }\n    if (car(p1) === symbol(COS)) {\n      dcos();\n      return;\n    }\n    if (car(p1) === symbol(TAN)) {\n      dtan();\n      return;\n    }\n    if (car(p1) === symbol(ARCSIN)) {\n      darcsin();\n      return;\n    }\n    if (car(p1) === symbol(ARCCOS)) {\n      darccos();\n      return;\n    }\n    if (car(p1) === symbol(ARCTAN)) {\n      darctan();\n      return;\n    }\n    if (car(p1) === symbol(SINH)) {\n      dsinh();\n      return;\n    }\n    if (car(p1) === symbol(COSH)) {\n      dcosh();\n      return;\n    }\n    if (car(p1) === symbol(TANH)) {\n      dtanh();\n      return;\n    }\n    if (car(p1) === symbol(ARCSINH)) {\n      darcsinh();\n      return;\n    }\n    if (car(p1) === symbol(ARCCOSH)) {\n      darccosh();\n      return;\n    }\n    if (car(p1) === symbol(ARCTANH)) {\n      darctanh();\n      return;\n    }\n    if (car(p1) === symbol(ABS)) {\n      dabs();\n      return;\n    }\n    if (car(p1) === symbol(SGN)) {\n      dsgn();\n      return;\n    }\n    if (car(p1) === symbol(HERMITE)) {\n      dhermite();\n      return;\n    }\n    if (car(p1) === symbol(ERF)) {\n      derf();\n      return;\n    }\n    if (car(p1) === symbol(ERFC)) {\n      derfc();\n      return;\n    }\n    if (car(p1) === symbol(BESSELJ)) {\n      if (isZeroAtomOrTensor(caddr(p1))) {\n        dbesselj0();\n      } else {\n        dbesseljn();\n      }\n      return;\n    }\n    if (car(p1) === symbol(BESSELY)) {\n      if (isZeroAtomOrTensor(caddr(p1))) {\n        dbessely0();\n      } else {\n        dbesselyn();\n      }\n      return;\n    }\n    if (car(p1) === symbol(INTEGRAL) && caddr(p1) === p2) {\n      derivative_of_integral();\n      return;\n    }\n    return dfunction();\n  };\n\n  dsum = function() {\n    var h;\n    h = tos;\n    p1 = cdr(p1);\n    while (iscons(p1)) {\n      push(car(p1));\n      push(p2);\n      derivative();\n      p1 = cdr(p1);\n    }\n    return add_all(tos - h);\n  };\n\n  dproduct = function() {\n    var i, i1, j, n, o, ref, ref1;\n    i = 0;\n    j = 0;\n    n = 0;\n    n = length(p1) - 1;\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      p3 = cdr(p1);\n      for (j = i1 = 0, ref1 = n; (0 <= ref1 ? i1 < ref1 : i1 > ref1); j = 0 <= ref1 ? ++i1 : --i1) {\n        push(car(p3));\n        if (i === j) {\n          push(p2);\n          derivative();\n        }\n        p3 = cdr(p3);\n      }\n      multiply_all(n);\n    }\n    return add_all(n);\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //       v\n  //  y = u\n\n  //  log y = v log u\n\n  //  1 dy   v du           dv\n  //  - -- = - -- + (log u) --\n  //  y dx   u dx           dx\n\n  //  dy    v  v du           dv\n  //  -- = u  (- -- + (log u) --)\n  //  dx       u dx           dx\n\n  //-----------------------------------------------------------------------------\n  dpower = function() {\n    push(caddr(p1));\n    push(cadr(p1));\n    divide();\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    multiply();\n    push(cadr(p1));\n    logarithm();\n    push(caddr(p1));\n    push(p2);\n    derivative();\n    multiply();\n    add();\n    push(p1);\n    return multiply();\n  };\n\n  dlog = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push(cadr(p1));\n    return divide();\n  };\n\n  //  derivative of derivative\n\n  //  example: d(d(f(x,y),y),x)\n\n  //  p1 = d(f(x,y),y)\n\n  //  p2 = x\n\n  //  cadr(p1) = f(x,y)\n\n  //  caddr(p1) = y\n  dd = function() {\n    // d(f(x,y),x)\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    p3 = pop();\n    if (car(p3) === symbol(DERIVATIVE)) {\n      // sort dx terms\n      push_symbol(DERIVATIVE);\n      push_symbol(DERIVATIVE);\n      push(cadr(p3));\n      if (lessp(caddr(p3), caddr(p1))) {\n        push(caddr(p3));\n        list(3);\n        push(caddr(p1));\n      } else {\n        push(caddr(p1));\n        list(3);\n        push(caddr(p3));\n      }\n      return list(3);\n    } else {\n      push(p3);\n      push(caddr(p1));\n      return derivative();\n    }\n  };\n\n  // derivative of a generic function\n  dfunction = function() {\n    p3 = cdr(p1);\n    if (p3 === symbol(NIL) || Find(p3, p2)) {\n      push_symbol(DERIVATIVE);\n      push(p1);\n      push(p2);\n      return list(3);\n    } else {\n      return push(zero);\n    }\n  };\n\n  dsin = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push(cadr(p1));\n    cosine();\n    return multiply();\n  };\n\n  dcos = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push(cadr(p1));\n    sine();\n    multiply();\n    return negate();\n  };\n\n  dtan = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push(cadr(p1));\n    cosine();\n    push_integer(-2);\n    power();\n    return multiply();\n  };\n\n  darcsin = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push_integer(1);\n    push(cadr(p1));\n    push_integer(2);\n    power();\n    subtract();\n    push_rational(-1, 2);\n    power();\n    return multiply();\n  };\n\n  darccos = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push_integer(1);\n    push(cadr(p1));\n    push_integer(2);\n    power();\n    subtract();\n    push_rational(-1, 2);\n    power();\n    multiply();\n    return negate();\n  };\n\n  //        Without simplify  With simplify\n\n  //  d(arctan(y/x),x)  -y/(x^2*(y^2/x^2+1))  -y/(x^2+y^2)\n\n  //  d(arctan(y/x),y)  1/(x*(y^2/x^2+1))  x/(x^2+y^2)\n  darctan = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push_integer(1);\n    push(cadr(p1));\n    push_integer(2);\n    power();\n    add();\n    inverse();\n    multiply();\n    return simplify();\n  };\n\n  dsinh = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push(cadr(p1));\n    ycosh();\n    return multiply();\n  };\n\n  dcosh = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push(cadr(p1));\n    ysinh();\n    return multiply();\n  };\n\n  dtanh = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push(cadr(p1));\n    ycosh();\n    push_integer(-2);\n    power();\n    return multiply();\n  };\n\n  darcsinh = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push(cadr(p1));\n    push_integer(2);\n    power();\n    push_integer(1);\n    add();\n    push_rational(-1, 2);\n    power();\n    return multiply();\n  };\n\n  darccosh = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push(cadr(p1));\n    push_integer(2);\n    power();\n    push_integer(-1);\n    add();\n    push_rational(-1, 2);\n    power();\n    return multiply();\n  };\n\n  darctanh = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push_integer(1);\n    push(cadr(p1));\n    push_integer(2);\n    power();\n    subtract();\n    inverse();\n    return multiply();\n  };\n\n  dabs = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push(cadr(p1));\n    sgn();\n    return multiply();\n  };\n\n  dsgn = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push(cadr(p1));\n    dirac();\n    multiply();\n    push_integer(2);\n    return multiply();\n  };\n\n  dhermite = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push_integer(2);\n    push(caddr(p1));\n    multiply();\n    multiply();\n    push(cadr(p1));\n    push(caddr(p1));\n    push_integer(-1);\n    add();\n    hermite();\n    return multiply();\n  };\n\n  derf = function() {\n    push(cadr(p1));\n    push_integer(2);\n    power();\n    push_integer(-1);\n    multiply();\n    exponential();\n    if (evaluatingAsFloats) {\n      push_double(Math.PI);\n    } else {\n      push_symbol(PI);\n    }\n    push_rational(-1, 2);\n    power();\n    multiply();\n    push_integer(2);\n    multiply();\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    return multiply();\n  };\n\n  derfc = function() {\n    push(cadr(p1));\n    push_integer(2);\n    power();\n    push_integer(-1);\n    multiply();\n    exponential();\n    if (evaluatingAsFloats) {\n      push_double(Math.PI);\n    } else {\n      push_symbol(PI);\n    }\n    push_rational(-1, 2);\n    power();\n    multiply();\n    push_integer(-2);\n    multiply();\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    return multiply();\n  };\n\n  dbesselj0 = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push(cadr(p1));\n    push_integer(1);\n    besselj();\n    multiply();\n    push_integer(-1);\n    return multiply();\n  };\n\n  dbesseljn = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push(cadr(p1));\n    push(caddr(p1));\n    push_integer(-1);\n    add();\n    besselj();\n    push(caddr(p1));\n    push_integer(-1);\n    multiply();\n    push(cadr(p1));\n    divide();\n    push(cadr(p1));\n    push(caddr(p1));\n    besselj();\n    multiply();\n    add();\n    return multiply();\n  };\n\n  dbessely0 = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push(cadr(p1));\n    push_integer(1);\n    besselj();\n    multiply();\n    push_integer(-1);\n    return multiply();\n  };\n\n  dbesselyn = function() {\n    push(cadr(p1));\n    push(p2);\n    derivative();\n    push(cadr(p1));\n    push(caddr(p1));\n    push_integer(-1);\n    add();\n    bessely();\n    push(caddr(p1));\n    push_integer(-1);\n    multiply();\n    push(cadr(p1));\n    divide();\n    push(cadr(p1));\n    push(caddr(p1));\n    bessely();\n    multiply();\n    add();\n    return multiply();\n  };\n\n  derivative_of_integral = function() {\n    return push(cadr(p1));\n  };\n\n  DET_check_arg = function() {\n    if (!istensor(p1)) {\n      return 0;\n    } else if (p1.tensor.ndim !== 2) {\n      return 0;\n    } else if (p1.tensor.dim[0] !== p1.tensor.dim[1]) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  det = function() {\n    var a, i, i1, n, o, ref, ref1;\n    i = 0;\n    n = 0;\n    //U **a\n    save();\n    p1 = pop();\n    if (DET_check_arg() === 0) {\n      push_symbol(DET);\n      push(p1);\n      list(2);\n      restore();\n      return;\n    }\n    n = p1.tensor.nelem;\n    a = p1.tensor.elem;\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      if (!isNumericAtom(a[i])) {\n        break;\n      }\n    }\n    if (i === n) {\n      yydetg();\n    } else {\n      for (i = i1 = 0, ref1 = p1.tensor.nelem; (0 <= ref1 ? i1 < ref1 : i1 > ref1); i = 0 <= ref1 ? ++i1 : --i1) {\n        push(p1.tensor.elem[i]);\n      }\n      determinant(p1.tensor.dim[0]);\n    }\n    return restore();\n  };\n\n  // determinant of n * n matrix elements on the stack\n  determinant = function(n) {\n    var a, breakFromOutherWhile, h, i, i1, j, k, o, q, ref, ref1, s, sign_, t;\n    h = 0;\n    i = 0;\n    j = 0;\n    k = 0;\n    q = 0;\n    s = 0;\n    sign_ = 0;\n    t = 0;\n    a = [];\n    //int *a, *c, *d\n    h = tos - n * n;\n//a = (int *) malloc(3 * n * sizeof (int))\n\n    //if (a == NULL)\n//  out_of_memory()\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      a[i] = i;\n      a[i + n] = 0;\n      a[i + n + n] = 1;\n    }\n    sign_ = 1;\n    push(zero);\n    while (1) {\n      if (sign_ === 1) {\n        push_integer(1);\n      } else {\n        push_integer(-1);\n      }\n      for (i = i1 = 0, ref1 = n; (0 <= ref1 ? i1 < ref1 : i1 > ref1); i = 0 <= ref1 ? ++i1 : --i1) {\n        k = n * a[i] + i;\n        push(stack[h + k]);\n        multiply(); // FIXME -- problem here\n      }\n      add();\n      // next permutation (Knuth's algorithm P)\n      j = n - 1;\n      s = 0;\n      breakFromOutherWhile = false;\n      while (1) {\n        q = a[n + j] + a[n + n + j];\n        if (q < 0) {\n          a[n + n + j] = -a[n + n + j];\n          j--;\n          continue;\n        }\n        if (q === j + 1) {\n          if (j === 0) {\n            breakFromOutherWhile = true;\n            break;\n          }\n          s++;\n          a[n + n + j] = -a[n + n + j];\n          j--;\n          continue;\n        }\n        break;\n      }\n      if (breakFromOutherWhile) {\n        break;\n      }\n      t = a[j - a[n + j] + s];\n      a[j - a[n + j] + s] = a[j - q + s];\n      a[j - q + s] = t;\n      a[n + j] = q;\n      sign_ = -sign_;\n    }\n    stack[h] = stack[tos - 1];\n    return moveTos(h + 1);\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Input:    Matrix on stack\n\n  //  Output:    Determinant on stack\n\n  //  Note:\n\n  //  Uses Gaussian elimination which is faster for numerical matrices.\n\n  //  Gaussian Elimination works by walking down the diagonal and clearing\n  //  out the columns below it.\n\n  //-----------------------------------------------------------------------------\n  detg = function() {\n    save();\n    p1 = pop();\n    if (DET_check_arg() === 0) {\n      push_symbol(DET);\n      push(p1);\n      list(2);\n      restore();\n      return;\n    }\n    yydetg();\n    return restore();\n  };\n\n  yydetg = function() {\n    var i, n, o, ref;\n    i = 0;\n    n = 0;\n    n = p1.tensor.dim[0];\n    for (i = o = 0, ref = n * n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      push(p1.tensor.elem[i]);\n    }\n    lu_decomp(n);\n    moveTos(tos - n * n);\n    return push(p1);\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Input:    n * n matrix elements on stack\n\n  //  Output:    p1  determinant\n\n  //      p2  mangled\n\n  //      upper diagonal matrix on stack\n\n  //-----------------------------------------------------------------------------\n  M = function(h, n, i, j) {\n    return stack[h + n * i + j];\n  };\n\n  setM = function(h, n, i, j, value) {\n    return stack[h + n * i + j] = value;\n  };\n\n  lu_decomp = function(n) {\n    var d, h, i, i1, j, j1, l1, m1, o, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8;\n    d = 0;\n    h = 0;\n    i = 0;\n    j = 0;\n    h = tos - n * n;\n    p1 = one;\n    for (d = o = 0, ref = n - 1; (0 <= ref ? o < ref : o > ref); d = 0 <= ref ? ++o : --o) {\n      // diagonal element zero?\n      if (equal(M(h, n, d, d), zero)) {\n// find a new row\n        for (i = i1 = ref1 = d + 1, ref2 = n; (ref1 <= ref2 ? i1 < ref2 : i1 > ref2); i = ref1 <= ref2 ? ++i1 : --i1) {\n          if (!equal(M(h, n, i, d), zero)) {\n            break;\n          }\n        }\n        if (i === n) {\n          p1 = zero;\n          break;\n        }\n// exchange rows\n        for (j = j1 = ref3 = d, ref4 = n; (ref3 <= ref4 ? j1 < ref4 : j1 > ref4); j = ref3 <= ref4 ? ++j1 : --j1) {\n          p2 = M(h, n, d, j);\n          setM(h, n, d, j, M(h, n, i, j));\n          setM(h, n, i, j, p2);\n        }\n        // negate det\n        push(p1);\n        negate();\n        p1 = pop();\n      }\n      // update det\n      push(p1);\n      push(M(h, n, d, d));\n      multiply();\n      p1 = pop();\n// update lower diagonal matrix\n      for (i = l1 = ref5 = d + 1, ref6 = n; (ref5 <= ref6 ? l1 < ref6 : l1 > ref6); i = ref5 <= ref6 ? ++l1 : --l1) {\n        // multiplier\n        push(M(h, n, i, d));\n        push(M(h, n, d, d));\n        divide();\n        negate();\n        p2 = pop();\n        // update one row\n        setM(h, n, i, d, zero);\n        for (j = m1 = ref7 = d + 1, ref8 = n; (ref7 <= ref8 ? m1 < ref8 : m1 > ref8); j = ref7 <= ref8 ? ++m1 : --m1) {\n          push(M(h, n, d, j));\n          push(p2);\n          multiply();\n          push(M(h, n, i, j));\n          add();\n          setM(h, n, i, j, pop());\n        }\n      }\n    }\n    // last diagonal element\n    push(p1);\n    push(M(h, n, n - 1, n - 1));\n    multiply();\n    return p1 = pop();\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Author : philippe.billet@noos.fr\n\n  //  Dirac function dirac(x)\n  //  dirac(-x)=dirac(x)\n  //  dirac(b-a)=dirac(a-b)\n  //-----------------------------------------------------------------------------\n  Eval_dirac = function() {\n    push(cadr(p1));\n    Eval();\n    return dirac();\n  };\n\n  dirac = function() {\n    save();\n    ydirac();\n    return restore();\n  };\n\n  //define p1 p1\n  ydirac = function() {\n    p1 = pop();\n    if (isdouble(p1)) {\n      if (p1.d === 0) {\n        push_integer(1);\n        return;\n      } else {\n        push_integer(0);\n        return;\n      }\n    }\n    if (isrational(p1)) {\n      if (MZERO(mmul(p1.q.a, p1.q.b))) {\n        push_integer(1);\n        return;\n      } else {\n        push_integer(0);\n        return;\n      }\n    }\n    if (car(p1) === symbol(POWER)) {\n      push_symbol(DIRAC);\n      push(cadr(p1));\n      list(2);\n      return;\n    }\n    if (isnegativeterm(p1)) {\n      push_symbol(DIRAC);\n      push(p1);\n      negate();\n      list(2);\n      return;\n    }\n    if (isnegativeterm(p1) || (car(p1) === symbol(ADD) && isnegativeterm(cadr(p1)))) {\n      push(p1);\n      negate();\n      p1 = pop();\n    }\n    push_symbol(DIRAC);\n    push(p1);\n    return list(2);\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Generate all divisors of a term\n\n  //  Input:    Term on stack (factor * factor * ...)\n\n  //  Output:    Divisors on stack\n\n  //-----------------------------------------------------------------------------\n  divisors = function() {\n    var h, i, n, o, ref, subsetOfStack;\n    i = 0;\n    h = 0;\n    n = 0;\n    save();\n    h = tos - 1;\n    divisors_onstack();\n    n = tos - h;\n    //qsort(stack + h, n, sizeof (U *), __cmp)\n    subsetOfStack = stack.slice(h, h + n);\n    subsetOfStack.sort(cmp_expr);\n    stack = stack.slice(0, h).concat(subsetOfStack).concat(stack.slice(h + n));\n    p1 = alloc_tensor(n);\n    p1.tensor.ndim = 1;\n    p1.tensor.dim[0] = n;\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      p1.tensor.elem[i] = stack[h + i];\n    }\n    moveTos(h);\n    push(p1);\n    return restore();\n  };\n\n  divisors_onstack = function() {\n    var h, i, k, n, o, ref;\n    h = 0;\n    i = 0;\n    k = 0;\n    n = 0;\n    save();\n    p1 = pop();\n    h = tos;\n    // push all of the term's factors\n    if (isNumericAtom(p1)) {\n      push(p1);\n      factor_small_number();\n    } else if (car(p1) === symbol(ADD)) {\n      push(p1);\n      __factor_add();\n    //printf(\">>>\\n\")\n    //for (i = h; i < tos; i++)\n    //print(stdout, stack[i])\n    //printf(\"<<<\\n\")\n    } else if (car(p1) === symbol(MULTIPLY)) {\n      p1 = cdr(p1);\n      if (isNumericAtom(car(p1))) {\n        push(car(p1));\n        factor_small_number();\n        p1 = cdr(p1);\n      }\n      while (iscons(p1)) {\n        p2 = car(p1);\n        if (car(p2) === symbol(POWER)) {\n          push(cadr(p2));\n          push(caddr(p2));\n        } else {\n          push(p2);\n          push(one);\n        }\n        p1 = cdr(p1);\n      }\n    } else if (car(p1) === symbol(POWER)) {\n      push(cadr(p1));\n      push(caddr(p1));\n    } else {\n      push(p1);\n      push(one);\n    }\n    k = tos;\n    // contruct divisors by recursive descent\n    push(one);\n    gen(h, k);\n    // move\n    n = tos - k;\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      stack[h + i] = stack[k + i];\n    }\n    moveTos(h + n);\n    return restore();\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Generate divisors\n\n  //  Input:    Base-exponent pairs on stack\n\n  //      h  first pair\n\n  //      k  just past last pair\n\n  //  Output:    Divisors on stack\n\n  //  For example, factor list 2 2 3 1 results in 6 divisors,\n\n  //    1\n  //    3\n  //    2\n  //    6\n  //    4\n  //    12\n\n  //-----------------------------------------------------------------------------\n\n  //define ACCUM p1\n  //define BASE p2\n  //define EXPO p3\n  gen = function(h, k) {\n    var expo, i, o, ref;\n    expo = 0;\n    i = 0;\n    save();\n    p1 = pop();\n    if (h === k) {\n      push(p1);\n      restore();\n      return;\n    }\n    p2 = stack[h + 0];\n    p3 = stack[h + 1];\n    push(p3);\n    expo = pop_integer();\n    if (!isNaN(expo)) {\n      for (i = o = 0, ref = Math.abs(expo); (0 <= ref ? o <= ref : o >= ref); i = 0 <= ref ? ++o : --o) {\n        push(p1);\n        push(p2);\n        push_integer(sign(expo) * i);\n        power();\n        multiply();\n        gen(h + 2, k);\n      }\n    }\n    return restore();\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Factor ADD expression\n\n  //  Input:    Expression on stack\n\n  //  Output:    Factors on stack\n\n  //  Each factor consists of two expressions, the factor itself followed\n  //  by the exponent.\n\n  //-----------------------------------------------------------------------------\n  __factor_add = function() {\n    save();\n    p1 = pop();\n    // get gcd of all terms\n    p3 = cdr(p1);\n    push(car(p3));\n    p3 = cdr(p3);\n    while (iscons(p3)) {\n      push(car(p3));\n      gcd();\n      p3 = cdr(p3);\n    }\n    // check gcd\n    p2 = pop();\n    if (isplusone(p2)) {\n      push(p1);\n      push(one);\n      restore();\n      return;\n    }\n    // push factored gcd\n    if (isNumericAtom(p2)) {\n      push(p2);\n      factor_small_number();\n    } else if (car(p2) === symbol(MULTIPLY)) {\n      p3 = cdr(p2);\n      if (isNumericAtom(car(p3))) {\n        push(car(p3));\n        factor_small_number();\n      } else {\n        push(car(p3));\n        push(one);\n      }\n      p3 = cdr(p3);\n      while (iscons(p3)) {\n        push(car(p3));\n        push(one);\n        p3 = cdr(p3);\n      }\n    } else {\n      push(p2);\n      push(one);\n    }\n    // divide each term by gcd\n    push(p2);\n    inverse();\n    p2 = pop();\n    push(zero);\n    p3 = cdr(p1);\n    while (iscons(p3)) {\n      push(p2);\n      push(car(p3));\n      multiply();\n      add();\n      p3 = cdr(p3);\n    }\n    push(one);\n    return restore();\n  };\n\n  // power function for double precision floating point\n  dpow = function() {\n    var a, b, base, expo, result, theta;\n    a = 0.0;\n    b = 0.0;\n    base = 0.0;\n    expo = 0.0;\n    result = 0.0;\n    theta = 0.0;\n    expo = pop_double();\n    base = pop_double();\n    // divide by zero?\n    if (base === 0.0 && expo < 0.0) {\n      stop(\"divide by zero\");\n    }\n    // nonnegative base or integer power?\n    if (base >= 0.0 || (expo % 1.0) === 0.0) {\n      result = Math.pow(base, expo);\n      push_double(result);\n      return;\n    }\n    result = Math.pow(Math.abs(base), expo);\n    theta = Math.PI * expo;\n    // this ensures the real part is 0.0 instead of a tiny fraction\n    if ((expo % 0.5) === 0.0) {\n      a = 0.0;\n      b = Math.sin(theta);\n    } else {\n      a = Math.cos(theta);\n      b = Math.sin(theta);\n    }\n    push_double(a * result);\n    push_double(b * result);\n    push(imaginaryunit);\n    multiply();\n    return add();\n  };\n\n  /* eigen =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  m\n\n  General description\n  -------------------\n  Compute eigenvalues and eigenvectors. Matrix m must be both numerical and symmetric.\n  The eigenval function returns a matrix with the eigenvalues along the diagonal.\n  The eigenvec function returns a matrix with the eigenvectors arranged as row vectors.\n  The eigen function does not return anything but stores the eigenvalue matrix in D\n  and the eigenvector matrix in Q.\n\n  Input:    stack[tos - 1]    symmetric matrix\n\n  Output:    D      diagnonal matrix\n        Q      eigenvector matrix\n\n  D and Q have the property that\n\n    A == dot(transpose(Q),D,Q)\n\n  where A is the original matrix.\n\n  The eigenvalues are on the diagonal of D.\n  The eigenvectors are row vectors in Q.\n\n  The eigenvalue relation:\n\n    A X = lambda X\n\n  can be checked as follows:\n\n    lambda = D[1,1]\n    X = Q[1]\n    dot(A,X) - lambda X\n\n  Example 1. Check the relation AX = lambda X where lambda is an eigenvalue and X is the associated eigenvector.\n\n  Enter:\n\n       A = hilbert(3)\n\n       eigen(A)\n\n       lambda = D[1,1]\n\n       X = Q[1]\n\n       dot(A,X) - lambda X\n\n  Result:\n\n       -1.16435e-14\n\n       -6.46705e-15\n\n       -4.55191e-15\n\n  Example 2: Check the relation A = QTDQ.\n\n  Enter:\n\n    A - dot(transpose(Q),D,Q)\n\n  Result: \n\n    6.27365e-12    -1.58236e-11   1.81902e-11\n\n    -1.58236e-11   -1.95365e-11   2.56514e-12\n\n    1.81902e-11    2.56514e-12    1.32627e-11\n\n  */\n  //define D(i, j) yydd[EIG_N * (i) + (j)]\n  //define Q(i, j) yyqq[EIG_N * (i) + (j)]\n  EIG_N = 0;\n\n  EIG_yydd = [];\n\n  EIG_yyqq = [];\n\n  Eval_eigen = function() {\n    if (EIG_check_arg() === 0) {\n      stop(\"eigen: argument is not a square matrix\");\n    }\n    eigen(EIGEN);\n    p1 = usr_symbol(\"D\");\n    set_binding(p1, p2);\n    p1 = usr_symbol(\"Q\");\n    set_binding(p1, p3);\n    return push(symbol(NIL));\n  };\n\n  Eval_eigenval = function() {\n    if (EIG_check_arg() === 0) {\n      push_symbol(EIGENVAL);\n      push(p1);\n      list(2);\n      return;\n    }\n    eigen(EIGENVAL);\n    return push(p2);\n  };\n\n  Eval_eigenvec = function() {\n    if (EIG_check_arg() === 0) {\n      push_symbol(EIGENVEC);\n      push(p1);\n      list(2);\n      return;\n    }\n    eigen(EIGENVEC);\n    return push(p3);\n  };\n\n  EIG_check_arg = function() {\n    var i, i1, j, j1, l1, o, ref, ref1, ref2, ref3, ref4;\n    i = 0;\n    j = 0;\n    push(cadr(p1));\n    Eval();\n    yyfloat();\n    Eval();\n    p1 = pop();\n    if (!istensor(p1)) {\n      return 0;\n    }\n    if (p1.tensor.ndim !== 2 || p1.tensor.dim[0] !== p1.tensor.dim[1]) {\n      stop(\"eigen: argument is not a square matrix\");\n    }\n    EIG_N = p1.tensor.dim[0];\n    for (i = o = 0, ref = EIG_N; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      for (j = i1 = 0, ref1 = EIG_N; (0 <= ref1 ? i1 < ref1 : i1 > ref1); j = 0 <= ref1 ? ++i1 : --i1) {\n        if (!isdouble(p1.tensor.elem[EIG_N * i + j])) {\n          stop(\"eigen: matrix is not numerical\");\n        }\n      }\n    }\n    for (i = j1 = 0, ref2 = EIG_N - 1; (0 <= ref2 ? j1 < ref2 : j1 > ref2); i = 0 <= ref2 ? ++j1 : --j1) {\n      for (j = l1 = ref3 = i + 1, ref4 = EIG_N; (ref3 <= ref4 ? l1 < ref4 : l1 > ref4); j = ref3 <= ref4 ? ++l1 : --l1) {\n        if (Math.abs(p1.tensor.elem[EIG_N * i + j].d - p1.tensor.elem[EIG_N * j + i].d) > 1e-10) {\n          stop(\"eigen: matrix is not symmetrical\");\n        }\n      }\n    }\n    return 1;\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Input:    p1    matrix\n\n  //  Output:    p2    eigenvalues\n\n  //      p3    eigenvectors\n\n  //-----------------------------------------------------------------------------\n  eigen = function(op) {\n    var i, i1, j, j1, l1, m1, n1, o, o1, q1, r1, ref, ref1, ref10, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, results, s1;\n    i = 0;\n    j = 0;\n// malloc working vars\n\n    //EIG_yydd = (double *) malloc(n * n * sizeof (double))\n    for (i = o = 0, ref = EIG_N * EIG_N; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      EIG_yydd[i] = 0.0;\n    }\n//if (EIG_yydd == NULL)\n//  stop(\"malloc failure\")\n\n    //EIG_yyqq = (double *) malloc(n * n * sizeof (double))\n    for (i = i1 = 0, ref1 = EIG_N * EIG_N; (0 <= ref1 ? i1 < ref1 : i1 > ref1); i = 0 <= ref1 ? ++i1 : --i1) {\n      EIG_yyqq[i] = 0.0;\n    }\n//if (EIG_yyqq == NULL)\n//  stop(\"malloc failure\")\n\n    // initialize D\n    for (i = j1 = 0, ref2 = EIG_N; (0 <= ref2 ? j1 < ref2 : j1 > ref2); i = 0 <= ref2 ? ++j1 : --j1) {\n      EIG_yydd[EIG_N * i + i] = p1.tensor.elem[EIG_N * i + i].d;\n      for (j = l1 = ref3 = i + 1, ref4 = EIG_N; (ref3 <= ref4 ? l1 < ref4 : l1 > ref4); j = ref3 <= ref4 ? ++l1 : --l1) {\n        EIG_yydd[EIG_N * i + j] = p1.tensor.elem[EIG_N * i + j].d;\n        EIG_yydd[EIG_N * j + i] = p1.tensor.elem[EIG_N * i + j].d;\n      }\n    }\n// initialize Q\n    for (i = m1 = 0, ref5 = EIG_N; (0 <= ref5 ? m1 < ref5 : m1 > ref5); i = 0 <= ref5 ? ++m1 : --m1) {\n      EIG_yyqq[EIG_N * i + i] = 1.0;\n      for (j = n1 = ref6 = i + 1, ref7 = EIG_N; (ref6 <= ref7 ? n1 < ref7 : n1 > ref7); j = ref6 <= ref7 ? ++n1 : --n1) {\n        EIG_yyqq[EIG_N * i + j] = 0.0;\n        EIG_yyqq[EIG_N * j + i] = 0.0;\n      }\n    }\n// step up to 100 times\n    for (i = o1 = 0; o1 < 100; i = ++o1) {\n      if (step() === 0) {\n        break;\n      }\n    }\n    if (i === 100) {\n      printstr(\"\\nnote: eigen did not converge\\n\");\n    }\n    // p2 = D\n    if (op === EIGEN || op === EIGENVAL) {\n      push(p1);\n      copy_tensor();\n      p2 = pop();\n      for (i = q1 = 0, ref8 = EIG_N; (0 <= ref8 ? q1 < ref8 : q1 > ref8); i = 0 <= ref8 ? ++q1 : --q1) {\n        for (j = r1 = 0, ref9 = EIG_N; (0 <= ref9 ? r1 < ref9 : r1 > ref9); j = 0 <= ref9 ? ++r1 : --r1) {\n          push_double(EIG_yydd[EIG_N * i + j]);\n          p2.tensor.elem[EIG_N * i + j] = pop();\n        }\n      }\n    }\n    // p3 = Q\n    if (op === EIGEN || op === EIGENVEC) {\n      push(p1);\n      copy_tensor();\n      p3 = pop();\n      results = [];\n      for (i = s1 = 0, ref10 = EIG_N; (0 <= ref10 ? s1 < ref10 : s1 > ref10); i = 0 <= ref10 ? ++s1 : --s1) {\n        results.push((function() {\n          var ref11, results1, t1;\n          results1 = [];\n          for (j = t1 = 0, ref11 = EIG_N; (0 <= ref11 ? t1 < ref11 : t1 > ref11); j = 0 <= ref11 ? ++t1 : --t1) {\n            push_double(EIG_yyqq[EIG_N * i + j]);\n            results1.push(p3.tensor.elem[EIG_N * i + j] = pop());\n          }\n          return results1;\n        })());\n      }\n      return results;\n    }\n  };\n\n  // free working vars\n\n  //-----------------------------------------------------------------------------\n\n  //  Example: p = 1, q = 3\n\n  //    c  0  s  0\n\n  //    0  1  0  0\n  //  G =\n  //    -s  0  c  0\n\n  //    0  0  0  1\n\n  //  The effect of multiplying G times A is...\n\n  //  row 1 of A    = c (row 1 of A ) + s (row 3 of A )\n  //            n+1                n                 n\n\n  //  row 3 of A    = c (row 3 of A ) - s (row 1 of A )\n  //            n+1                n                 n\n\n  //  In terms of components the overall effect is...\n\n  //  row 1 = c row 1 + s row 3\n\n  //    A[1,1] = c A[1,1] + s A[3,1]\n\n  //    A[1,2] = c A[1,2] + s A[3,2]\n\n  //    A[1,3] = c A[1,3] + s A[3,3]\n\n  //    A[1,4] = c A[1,4] + s A[3,4]\n\n  //  row 3 = c row 3 - s row 1\n\n  //    A[3,1] = c A[3,1] - s A[1,1]\n\n  //    A[3,2] = c A[3,2] - s A[1,2]\n\n  //    A[3,3] = c A[3,3] - s A[1,3]\n\n  //    A[3,4] = c A[3,4] - s A[1,4]\n\n  //                                     T\n  //  The effect of multiplying A times G  is...\n\n  //  col 1 of A    = c (col 1 of A ) + s (col 3 of A )\n  //            n+1                n                 n\n\n  //  col 3 of A    = c (col 3 of A ) - s (col 1 of A )\n  //            n+1                n                 n\n\n  //  In terms of components the overall effect is...\n\n  //  col 1 = c col 1 + s col 3\n\n  //    A[1,1] = c A[1,1] + s A[1,3]\n\n  //    A[2,1] = c A[2,1] + s A[2,3]\n\n  //    A[3,1] = c A[3,1] + s A[3,3]\n\n  //    A[4,1] = c A[4,1] + s A[4,3]\n\n  //  col 3 = c col 3 - s col 1\n\n  //    A[1,3] = c A[1,3] - s A[1,1]\n\n  //    A[2,3] = c A[2,3] - s A[2,1]\n\n  //    A[3,3] = c A[3,3] - s A[3,1]\n\n  //    A[4,3] = c A[4,3] - s A[4,1]\n\n  //  What we want to do is just compute the upper triangle of A since we\n  //  know the lower triangle is identical.\n\n  //  In other words, we just want to update components A[i,j] where i < j.\n\n  //-----------------------------------------------------------------------------\n\n  //  Example: p = 2, q = 5\n\n  //        p      q\n\n  //      j=1  j=2  j=3  j=4  j=5  j=6\n\n  //    i=1  .  A[1,2]  .  .  A[1,5]  .\n\n  //  p  i=2  A[2,1]  A[2,2]  A[2,3]  A[2,4]  A[2,5]  A[2,6]\n\n  //    i=3  .  A[3,2]  .  .  A[3,5]  .\n\n  //    i=4  .  A[4,2]  .  .  A[4,5]  .\n\n  //  q  i=5  A[5,1]  A[5,2]  A[5,3]  A[5,4]  A[5,5]  A[5,6]\n\n  //    i=6  .  A[6,2]  .  .  A[6,5]  .\n\n  //-----------------------------------------------------------------------------\n\n  //  This is what B = GA does:\n\n  //  row 2 = c row 2 + s row 5\n\n  //    B[2,1] = c * A[2,1] + s * A[5,1]\n  //    B[2,2] = c * A[2,2] + s * A[5,2]\n  //    B[2,3] = c * A[2,3] + s * A[5,3]\n  //    B[2,4] = c * A[2,4] + s * A[5,4]\n  //    B[2,5] = c * A[2,5] + s * A[5,5]\n  //    B[2,6] = c * A[2,6] + s * A[5,6]\n\n  //  row 5 = c row 5 - s row 2\n\n  //    B[5,1] = c * A[5,1] + s * A[2,1]\n  //    B[5,2] = c * A[5,2] + s * A[2,2]\n  //    B[5,3] = c * A[5,3] + s * A[2,3]\n  //    B[5,4] = c * A[5,4] + s * A[2,4]\n  //    B[5,5] = c * A[5,5] + s * A[2,5]\n  //    B[5,6] = c * A[5,6] + s * A[2,6]\n\n  //                 T\n  //  This is what BG  does:\n\n  //  col 2 = c col 2 + s col 5\n\n  //    B[1,2] = c * A[1,2] + s * A[1,5]\n  //    B[2,2] = c * A[2,2] + s * A[2,5]\n  //    B[3,2] = c * A[3,2] + s * A[3,5]\n  //    B[4,2] = c * A[4,2] + s * A[4,5]\n  //    B[5,2] = c * A[5,2] + s * A[5,5]\n  //    B[6,2] = c * A[6,2] + s * A[6,5]\n\n  //  col 5 = c col 5 - s col 2\n\n  //    B[1,5] = c * A[1,5] - s * A[1,2]\n  //    B[2,5] = c * A[2,5] - s * A[2,2]\n  //    B[3,5] = c * A[3,5] - s * A[3,2]\n  //    B[4,5] = c * A[4,5] - s * A[4,2]\n  //    B[5,5] = c * A[5,5] - s * A[5,2]\n  //    B[6,5] = c * A[6,5] - s * A[6,2]\n\n  //-----------------------------------------------------------------------------\n\n  //  Step 1: Just do upper triangle (i < j), B[2,5] = 0\n\n  //    B[1,2] = c * A[1,2] + s * A[1,5]\n\n  //    B[2,3] = c * A[2,3] + s * A[5,3]\n  //    B[2,4] = c * A[2,4] + s * A[5,4]\n  //    B[2,6] = c * A[2,6] + s * A[5,6]\n\n  //    B[1,5] = c * A[1,5] - s * A[1,2]\n  //    B[3,5] = c * A[3,5] - s * A[3,2]\n  //    B[4,5] = c * A[4,5] - s * A[4,2]\n\n  //    B[5,6] = c * A[5,6] + s * A[2,6]\n\n  //-----------------------------------------------------------------------------\n\n  //  Step 2: Transpose where i > j since A[i,j] == A[j,i]\n\n  //    B[1,2] = c * A[1,2] + s * A[1,5]\n\n  //    B[2,3] = c * A[2,3] + s * A[3,5]\n  //    B[2,4] = c * A[2,4] + s * A[4,5]\n  //    B[2,6] = c * A[2,6] + s * A[5,6]\n\n  //    B[1,5] = c * A[1,5] - s * A[1,2]\n  //    B[3,5] = c * A[3,5] - s * A[2,3]\n  //    B[4,5] = c * A[4,5] - s * A[2,4]\n\n  //    B[5,6] = c * A[5,6] + s * A[2,6]\n\n  //-----------------------------------------------------------------------------\n\n  //  Step 3: Same as above except reorder\n\n  //  k < p    (k = 1)\n\n  //    A[1,2] = c * A[1,2] + s * A[1,5]\n  //    A[1,5] = c * A[1,5] - s * A[1,2]\n\n  //  p < k < q  (k = 3..4)\n\n  //    A[2,3] = c * A[2,3] + s * A[3,5]\n  //    A[3,5] = c * A[3,5] - s * A[2,3]\n\n  //    A[2,4] = c * A[2,4] + s * A[4,5]\n  //    A[4,5] = c * A[4,5] - s * A[2,4]\n\n  //  q < k    (k = 6)\n\n  //    A[2,6] = c * A[2,6] + s * A[5,6]\n  //    A[5,6] = c * A[5,6] - s * A[2,6]\n\n  //-----------------------------------------------------------------------------\n  step = function() {\n    var count, i, i1, j, o, ref, ref1, ref2;\n    i = 0;\n    j = 0;\n    count = 0;\n// for each upper triangle \"off-diagonal\" component do step2\n    for (i = o = 0, ref = EIG_N - 1; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      for (j = i1 = ref1 = i + 1, ref2 = EIG_N; (ref1 <= ref2 ? i1 < ref2 : i1 > ref2); j = ref1 <= ref2 ? ++i1 : --i1) {\n        if (EIG_yydd[EIG_N * i + j] !== 0.0) {\n          step2(i, j);\n          count++;\n        }\n      }\n    }\n    return count;\n  };\n\n  step2 = function(p, q) {\n    var c, cc, i1, j1, k, o, ref, ref1, ref2, s, ss, t, theta;\n    k = 0;\n    t = 0.0;\n    theta = 0.0;\n    c = 0.0;\n    cc = 0.0;\n    s = 0.0;\n    ss = 0.0;\n    // compute c and s\n\n    // from Numerical Recipes (except they have a_qq - a_pp)\n    theta = 0.5 * (EIG_yydd[EIG_N * p + p] - EIG_yydd[EIG_N * q + q]) / EIG_yydd[EIG_N * p + q];\n    t = 1.0 / (Math.abs(theta) + Math.sqrt(theta * theta + 1.0));\n    if (theta < 0.0) {\n      t = -t;\n    }\n    c = 1.0 / Math.sqrt(t * t + 1.0);\n    s = t * c;\n// D = GD\n\n    // which means \"add rows\"\n    for (k = o = 0, ref = EIG_N; (0 <= ref ? o < ref : o > ref); k = 0 <= ref ? ++o : --o) {\n      cc = EIG_yydd[EIG_N * p + k];\n      ss = EIG_yydd[EIG_N * q + k];\n      EIG_yydd[EIG_N * p + k] = c * cc + s * ss;\n      EIG_yydd[EIG_N * q + k] = c * ss - s * cc;\n    }\n// D = D transpose(G)\n\n    // which means \"add columns\"\n    for (k = i1 = 0, ref1 = EIG_N; (0 <= ref1 ? i1 < ref1 : i1 > ref1); k = 0 <= ref1 ? ++i1 : --i1) {\n      cc = EIG_yydd[EIG_N * k + p];\n      ss = EIG_yydd[EIG_N * k + q];\n      EIG_yydd[EIG_N * k + p] = c * cc + s * ss;\n      EIG_yydd[EIG_N * k + q] = c * ss - s * cc;\n    }\n// Q = GQ\n\n    // which means \"add rows\"\n    for (k = j1 = 0, ref2 = EIG_N; (0 <= ref2 ? j1 < ref2 : j1 > ref2); k = 0 <= ref2 ? ++j1 : --j1) {\n      cc = EIG_yyqq[EIG_N * p + k];\n      ss = EIG_yyqq[EIG_N * q + k];\n      EIG_yyqq[EIG_N * p + k] = c * cc + s * ss;\n      EIG_yyqq[EIG_N * q + k] = c * ss - s * cc;\n    }\n    EIG_yydd[EIG_N * p + q] = 0.0;\n    return EIG_yydd[EIG_N * q + p] = 0.0;\n  };\n\n  Eval_erf = function() {\n    push(cadr(p1));\n    Eval();\n    return yerf();\n  };\n\n  yerf = function() {\n    save();\n    yyerf();\n    return restore();\n  };\n\n  yyerf = function() {\n    var d;\n    d = 0.0;\n    p1 = pop();\n    if (isdouble(p1)) {\n      d = 1.0 - erfc(p1.d);\n      push_double(d);\n      return;\n    }\n    if (isZeroAtomOrTensor(p1)) {\n      push(zero);\n      return;\n    }\n    if (isnegativeterm(p1)) {\n      push_symbol(ERF);\n      push(p1);\n      negate();\n      list(2);\n      negate();\n      return;\n    }\n    push_symbol(ERF);\n    push(p1);\n    list(2);\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Author : philippe.billet@noos.fr\n\n  //  erfc(x)\n\n  //  GW  Added erfc() from Numerical Recipes in C\n\n  //-----------------------------------------------------------------------------\n  Eval_erfc = function() {\n    push(cadr(p1));\n    Eval();\n    return yerfc();\n  };\n\n  yerfc = function() {\n    save();\n    yyerfc();\n    return restore();\n  };\n\n  yyerfc = function() {\n    var d;\n    d = 0.0;\n    p1 = pop();\n    if (isdouble(p1)) {\n      d = erfc(p1.d);\n      push_double(d);\n      return;\n    }\n    if (isZeroAtomOrTensor(p1)) {\n      push(one);\n      return;\n    }\n    push_symbol(ERFC);\n    push(p1);\n    list(2);\n  };\n\n  // from Numerical Recipes in C\n  erfc = function(x) {\n    var ans, t, z;\n    if (x === 0) {\n      return 1.0;\n    }\n    t = 0.0;\n    z = 0.0;\n    ans = 0.0;\n    z = Math.abs(x);\n    t = 1.0 / (1.0 + 0.5 * z);\n    ans = t * Math.exp(-z * z - 1.26551223 + t * (1.00002368 + t * (0.37409196 + t * (0.09678418 + t * (-0.18628806 + t * (0.27886807 + t * (-1.13520398 + t * (1.48851587 + t * (-0.82215223 + t * 0.17087277)))))))));\n    if (x >= 0.0) {\n      return ans;\n    } else {\n      return 2.0 - ans;\n    }\n  };\n\n  // Evaluate an expression, for example...\n\n  //  push(p1)\n  //  Eval()\n  //  p2 = pop()\n  Eval = function() {\n    var willEvaluateAsFloats;\n    check_esc_flag();\n    save();\n    p1 = pop();\n    if (p1 == null) {\n      debugger;\n    }\n    if (!evaluatingAsFloats && isfloating(p1)) {\n      willEvaluateAsFloats = true;\n      evaluatingAsFloats++;\n    }\n    switch (p1.k) {\n      case CONS:\n        Eval_cons();\n        break;\n      case NUM:\n        if (evaluatingAsFloats) {\n          push_double(convert_rational_to_double(p1));\n        } else {\n          push(p1);\n        }\n        break;\n      case DOUBLE:\n      case STR:\n        push(p1);\n        break;\n      case TENSOR:\n        Eval_tensor();\n        break;\n      case SYM:\n        Eval_sym();\n        break;\n      default:\n        stop(\"atom?\");\n    }\n    if (willEvaluateAsFloats) {\n      evaluatingAsFloats--;\n    }\n    return restore();\n  };\n\n  Eval_sym = function() {\n    var cycleString, i, o, positionIfSymbolAlreadyBeingEvaluated, ref, ref1;\n    // note that function calls are not processed here\n    // because, since they have an argument (at least an empty one)\n    // they are actually CONs, which is a branch of the\n    // switch before the one that calls this function\n\n    // bare keyword?\n    // If it's a keyword, then we don't look\n    // at the binding array, because keywords\n    // are not redefinable. \n    if (iskeyword(p1)) {\n      push(p1);\n      push(symbol(LAST));\n      list(2);\n      Eval();\n      return;\n    } else if (p1 === symbol(PI) && evaluatingAsFloats) {\n      push_double(Math.PI);\n      return;\n    }\n    // Evaluate symbol's binding\n    p2 = get_binding(p1);\n    if (DEBUG) {\n      console.log(\"looked up: \" + p1 + \" which contains: \" + p2);\n    }\n    push(p2);\n    // differently from standard Lisp,\n    // here the evaluation is not\n    // one-step only, rather it keeps evaluating\n    // \"all the way\" until a symbol is\n    // defined as itself.\n    // Uncomment these two lines to get Lisp\n    // behaviour (and break most tests)\n    if (p1 !== p2) {\n      // detect recursive lookup of symbols, which would otherwise\n      // cause a stack overflow.\n      // Note that recursive functions will still work because\n      // as mentioned at the top, this method doesn't look\n      // up and evaluate function calls.\n      positionIfSymbolAlreadyBeingEvaluated = chainOfUserSymbolsNotFunctionsBeingEvaluated.indexOf(p1);\n      if (positionIfSymbolAlreadyBeingEvaluated !== -1) {\n        cycleString = \"\";\n        for (i = o = ref = positionIfSymbolAlreadyBeingEvaluated, ref1 = chainOfUserSymbolsNotFunctionsBeingEvaluated.length; (ref <= ref1 ? o < ref1 : o > ref1); i = ref <= ref1 ? ++o : --o) {\n          cycleString += chainOfUserSymbolsNotFunctionsBeingEvaluated[i].printname + \" -> \";\n        }\n        cycleString += p1.printname;\n        stop(\"recursive evaluation of symbols: \" + cycleString);\n        return;\n      }\n      chainOfUserSymbolsNotFunctionsBeingEvaluated.push(p1);\n      Eval();\n      return chainOfUserSymbolsNotFunctionsBeingEvaluated.pop();\n    }\n  };\n\n  Eval_cons = function() {\n    var cons_head;\n    cons_head = car(p1);\n    // normally the cons_head is a symbol,\n    // but sometimes in the case of\n    // functions we don't have a symbol,\n    // we have to evaluate something to get to the\n    // symbol. For example if a function is inside\n    // a tensor, then we need to evaluate an index\n    // access first to get to the function.\n    // In those cases, we find an EVAL here,\n    // so we proceed to EVAL\n    if (car(cons_head) === symbol(EVAL)) {\n      Eval_user_function();\n      return;\n    }\n    if (!issymbol(cons_head)) {\n      stop(\"cons?\");\n    }\n    switch (symnum(cons_head)) {\n      case ABS:\n        return Eval_abs();\n      case ADD:\n        return Eval_add();\n      case ADJ:\n        return Eval_adj();\n      case AND:\n        return Eval_and();\n      case ARCCOS:\n        return Eval_arccos();\n      case ARCCOSH:\n        return Eval_arccosh();\n      case ARCSIN:\n        return Eval_arcsin();\n      case ARCSINH:\n        return Eval_arcsinh();\n      case ARCTAN:\n        return Eval_arctan();\n      case ARCTANH:\n        return Eval_arctanh();\n      case ARG:\n        return Eval_arg();\n      case ATOMIZE:\n        return Eval_atomize();\n      case BESSELJ:\n        return Eval_besselj();\n      case BESSELY:\n        return Eval_bessely();\n      case BINDING:\n        return Eval_binding();\n      case BINOMIAL:\n        return Eval_binomial();\n      case CEILING:\n        return Eval_ceiling();\n      case CHECK:\n        return Eval_check();\n      case CHOOSE:\n        return Eval_choose();\n      case CIRCEXP:\n        return Eval_circexp();\n      case CLEAR:\n        return Eval_clear();\n      case CLEARALL:\n        return Eval_clearall();\n      case CLEARPATTERNS:\n        return Eval_clearpatterns();\n      case CLOCK:\n        return Eval_clock();\n      case COEFF:\n        return Eval_coeff();\n      case COFACTOR:\n        return Eval_cofactor();\n      case CONDENSE:\n        return Eval_condense();\n      case CONJ:\n        return Eval_conj();\n      case CONTRACT:\n        return Eval_contract();\n      case COS:\n        return Eval_cos();\n      case COSH:\n        return Eval_cosh();\n      case DECOMP:\n        return Eval_decomp();\n      case DEGREE:\n        return Eval_degree();\n      case DEFINT:\n        return Eval_defint();\n      case DENOMINATOR:\n        return Eval_denominator();\n      case DERIVATIVE:\n        return Eval_derivative();\n      case DET:\n        return Eval_det();\n      case DIM:\n        return Eval_dim();\n      case DIRAC:\n        return Eval_dirac();\n      case DIVISORS:\n        return Eval_divisors();\n      case DO:\n        return Eval_do();\n      case DOT:\n        return Eval_inner();\n      case DRAW:\n        return Eval_draw();\n      case DSOLVE:\n        return Eval_dsolve();\n      case EIGEN:\n        return Eval_eigen();\n      case EIGENVAL:\n        return Eval_eigenval();\n      case EIGENVEC:\n        return Eval_eigenvec();\n      case ERF:\n        return Eval_erf();\n      case ERFC:\n        return Eval_erfc();\n      case EVAL:\n        return Eval_Eval();\n      case EXP:\n        return Eval_exp();\n      case EXPAND:\n        return Eval_expand();\n      case EXPCOS:\n        return Eval_expcos();\n      case EXPSIN:\n        return Eval_expsin();\n      case FACTOR:\n        return Eval_factor();\n      case FACTORIAL:\n        return Eval_factorial();\n      case FACTORPOLY:\n        return Eval_factorpoly();\n      case FILTER:\n        return Eval_filter();\n      case FLOATF:\n        return Eval_float();\n      case APPROXRATIO:\n        return Eval_approxratio();\n      case FLOOR:\n        return Eval_floor();\n      case FOR:\n        return Eval_for();\n      // this is invoked only when we\n      // evaluate a function that is NOT being called\n      // e.g. when f is a function as we do\n      //  g = f\n      case FUNCTION:\n        return Eval_function_reference();\n      case GAMMA:\n        return Eval_gamma();\n      case GCD:\n        return Eval_gcd();\n      case HERMITE:\n        return Eval_hermite();\n      case HILBERT:\n        return Eval_hilbert();\n      case IMAG:\n        return Eval_imag();\n      case INDEX:\n        return Eval_index();\n      case INNER:\n        return Eval_inner();\n      case INTEGRAL:\n        return Eval_integral();\n      case INV:\n        return Eval_inv();\n      case INVG:\n        return Eval_invg();\n      case ISINTEGER:\n        return Eval_isinteger();\n      case ISPRIME:\n        return Eval_isprime();\n      case LAGUERRE:\n        return Eval_laguerre();\n      //  when LAPLACE then Eval_laplace()\n      case LCM:\n        return Eval_lcm();\n      case LEADING:\n        return Eval_leading();\n      case LEGENDRE:\n        return Eval_legendre();\n      case LOG:\n        return Eval_log();\n      case LOOKUP:\n        return Eval_lookup();\n      case MOD:\n        return Eval_mod();\n      case MULTIPLY:\n        return Eval_multiply();\n      case NOT:\n        return Eval_not();\n      case NROOTS:\n        return Eval_nroots();\n      case NUMBER:\n        return Eval_number();\n      case NUMERATOR:\n        return Eval_numerator();\n      case OPERATOR:\n        return Eval_operator();\n      case OR:\n        return Eval_or();\n      case OUTER:\n        return Eval_outer();\n      case PATTERN:\n        return Eval_pattern();\n      case PATTERNSINFO:\n        return Eval_patternsinfo();\n      case POLAR:\n        return Eval_polar();\n      case POWER:\n        return Eval_power();\n      case PRIME:\n        return Eval_prime();\n      case PRINT:\n        return Eval_print();\n      case PRINT2DASCII:\n        return Eval_print2dascii();\n      case PRINTFULL:\n        return Eval_printcomputer();\n      case PRINTLATEX:\n        return Eval_printlatex();\n      case PRINTLIST:\n        return Eval_printlist();\n      case PRINTPLAIN:\n        return Eval_printhuman();\n      case PRODUCT:\n        return Eval_product();\n      case QUOTE:\n        return Eval_quote();\n      case QUOTIENT:\n        return Eval_quotient();\n      case RANK:\n        return Eval_rank();\n      case RATIONALIZE:\n        return Eval_rationalize();\n      case REAL:\n        return Eval_real();\n      case ROUND:\n        return Eval_round();\n      case YYRECT:\n        return Eval_rect();\n      case ROOTS:\n        return Eval_roots();\n      case SETQ:\n        return Eval_setq();\n      case SGN:\n        return Eval_sgn();\n      case SILENTPATTERN:\n        return Eval_silentpattern();\n      case SIMPLIFY:\n        return Eval_simplify();\n      case SIN:\n        return Eval_sin();\n      case SINH:\n        return Eval_sinh();\n      case SHAPE:\n        return Eval_shape();\n      case SQRT:\n        return Eval_sqrt();\n      case STOP:\n        return Eval_stop();\n      case SUBST:\n        return Eval_subst();\n      case SUM:\n        return Eval_sum();\n      case SYMBOLSINFO:\n        return Eval_symbolsinfo();\n      case TAN:\n        return Eval_tan();\n      case TANH:\n        return Eval_tanh();\n      case TAYLOR:\n        return Eval_taylor();\n      case TEST:\n        return Eval_test();\n      case TESTEQ:\n        return Eval_testeq();\n      case TESTGE:\n        return Eval_testge();\n      case TESTGT:\n        return Eval_testgt();\n      case TESTLE:\n        return Eval_testle();\n      case TESTLT:\n        return Eval_testlt();\n      case TRANSPOSE:\n        return Eval_transpose();\n      case UNIT:\n        return Eval_unit();\n      case ZERO:\n        return Eval_zero();\n      default:\n        return Eval_user_function();\n    }\n  };\n\n  Eval_binding = function() {\n    return push(get_binding(cadr(p1)));\n  };\n\n  Eval_check = function() {\n    var checkResult;\n    // check the argument\n    checkResult = isZeroLikeOrNonZeroLikeOrUndetermined(cadr(p1));\n    if (checkResult == null) {\n      // returned null: unknown result\n      // leave the whole check unevalled\n      return push(p1);\n    } else {\n      // returned 1 or 0\n      return push_integer(checkResult);\n    }\n  };\n\n  Eval_det = function() {\n    push(cadr(p1));\n    Eval();\n    return det();\n  };\n\n  Eval_dim = function() {\n    var n;\n    //int n\n    push(cadr(p1));\n    Eval();\n    p2 = pop();\n    if (iscons(cddr(p1))) {\n      push(caddr(p1));\n      Eval();\n      n = pop_integer();\n    } else {\n      n = 1;\n    }\n    if (!istensor(p2)) {\n      return push_integer(1); // dim of scalar is 1\n    } else if (n < 1 || n > p2.tensor.ndim) {\n      return push(p1);\n    } else {\n      return push_integer(p2.tensor.dim[n - 1]);\n    }\n  };\n\n  Eval_divisors = function() {\n    push(cadr(p1));\n    Eval();\n    return divisors();\n  };\n\n  Eval_do = function() {\n    var results;\n    push(car(p1));\n    p1 = cdr(p1);\n    results = [];\n    while (iscons(p1)) {\n      pop();\n      push(car(p1));\n      Eval();\n      results.push(p1 = cdr(p1));\n    }\n    return results;\n  };\n\n  Eval_dsolve = function() {\n    push(cadr(p1));\n    Eval();\n    push(caddr(p1));\n    Eval();\n    push(cadddr(p1));\n    Eval();\n    return dsolve();\n  };\n\n  // for example, Eval(f,x,2)\n  Eval_Eval = function() {\n    push(cadr(p1));\n    Eval();\n    p1 = cddr(p1);\n    while (iscons(p1)) {\n      push(car(p1));\n      Eval();\n      push(cadr(p1));\n      Eval();\n      subst();\n      p1 = cddr(p1);\n    }\n    return Eval();\n  };\n\n  // exp evaluation: it replaces itself with\n  // a POWER(E,something) node and evals that one\n  Eval_exp = function() {\n    push(cadr(p1));\n    Eval();\n    return exponential();\n  };\n\n  Eval_factorial = function() {\n    push(cadr(p1));\n    Eval();\n    return factorial();\n  };\n\n  Eval_factorpoly = function() {\n    var results;\n    p1 = cdr(p1);\n    push(car(p1));\n    Eval();\n    p1 = cdr(p1);\n    push(car(p1));\n    Eval();\n    factorpoly();\n    p1 = cdr(p1);\n    results = [];\n    while (iscons(p1)) {\n      push(car(p1));\n      Eval();\n      factorpoly();\n      results.push(p1 = cdr(p1));\n    }\n    return results;\n  };\n\n  Eval_hermite = function() {\n    push(cadr(p1));\n    Eval();\n    push(caddr(p1));\n    Eval();\n    return hermite();\n  };\n\n  Eval_hilbert = function() {\n    push(cadr(p1));\n    Eval();\n    return hilbert();\n  };\n\n  Eval_index = function() {\n    var h, orig, theTensor;\n    h = tos;\n    orig = p1;\n    \n    // look into the head of the list,\n    // when evaluated it should be a tensor\n    p1 = cdr(p1);\n    push(car(p1));\n    Eval();\n    theTensor = stack[tos - 1];\n    if (isNumericAtom(theTensor)) {\n      stop(\"trying to access a scalar as a tensor\");\n    }\n    if (!istensor(theTensor)) {\n      // the tensor is not allocated yet, so\n      // leaving the expression unevalled\n      moveTos(h);\n      push(orig);\n      return;\n    }\n    // we examined the head of the list which\n    // was the tensor, now look into\n    // the indexes\n    p1 = cdr(p1);\n    while (iscons(p1)) {\n      push(car(p1));\n      Eval();\n      if (!isintegerorintegerfloat(stack[tos - 1])) {\n        // index with something other than\n        // an integer\n        moveTos(h);\n        push(orig);\n        return;\n      }\n      p1 = cdr(p1);\n    }\n    return index_function(tos - h);\n  };\n\n  Eval_inv = function() {\n    push(cadr(p1));\n    Eval();\n    return inv();\n  };\n\n  Eval_invg = function() {\n    push(cadr(p1));\n    Eval();\n    return invg();\n  };\n\n  Eval_isinteger = function() {\n    var n;\n    push(cadr(p1));\n    Eval();\n    p1 = pop();\n    if (isrational(p1)) {\n      if (isinteger(p1)) {\n        push(one);\n      } else {\n        push(zero);\n      }\n      return;\n    }\n    if (isdouble(p1)) {\n      n = Math.floor(p1.d);\n      if (n === p1.d) {\n        push(one);\n      } else {\n        push(zero);\n      }\n      return;\n    }\n    push_symbol(ISINTEGER);\n    push(p1);\n    return list(2);\n  };\n\n  Eval_number = function() {\n    push(cadr(p1));\n    Eval();\n    p1 = pop();\n    if (p1.k === NUM || p1.k === DOUBLE) {\n      return push_integer(1);\n    } else {\n      return push_integer(0);\n    }\n  };\n\n  Eval_operator = function() {\n    var h;\n    h = tos;\n    push_symbol(OPERATOR);\n    p1 = cdr(p1);\n    while (iscons(p1)) {\n      push(car(p1));\n      Eval();\n      p1 = cdr(p1);\n    }\n    return list(tos - h);\n  };\n\n  // quote definition\n  Eval_quote = function() {\n    return push(cadr(p1));\n  };\n\n  // rank definition\n  Eval_rank = function() {\n    push(cadr(p1));\n    Eval();\n    p1 = pop();\n    if (istensor(p1)) {\n      return push_integer(p1.tensor.ndim);\n    } else {\n      return push(zero);\n    }\n  };\n\n  // Evaluates the right side and assigns the\n  // result of the evaluation to the left side.\n  // It's called setq because it stands for \"set quoted\" from Lisp,\n  // see:\n  //   http://stackoverflow.com/questions/869529/difference-between-set-setq-and-setf-in-common-lisp\n  // Note that this also takes case of assigning to a tensor\n  // element, which is something that setq wouldn't do\n  // in list, see comments further down below.\n\n  // Example:\n  //   f = x\n  //   // f evaluates to x, so x is assigned to g really\n  //   // rather than actually f being assigned to g\n  //   g = f\n  //   f = y\n  //   g\n  //   > x\n  Eval_setq = function() {\n    // case of tensor\n    if (caadr(p1) === symbol(INDEX)) {\n      setq_indexed();\n      return;\n    }\n    // case of function definition\n    if (iscons(cadr(p1))) {\n      define_user_function();\n      return;\n    }\n    if (!issymbol(cadr(p1))) {\n      stop(\"symbol assignment: error in symbol\");\n    }\n    push(caddr(p1));\n    Eval();\n    p2 = pop();\n    set_binding(cadr(p1), p2);\n    // An assignment returns nothing.\n    // This is unlike most programming languages\n    // where an assignment does return the\n    // assigned value.\n    // TODO Could be changed.\n    return push(symbol(NIL));\n  };\n\n  // Here \"setq\" is a misnomer because\n  // setq wouldn't work in Lisp to set array elements\n  // since setq stands for \"set quoted\" and you wouldn't\n  // quote an array element access.\n  // You'd rather use setf, which is a macro that can\n  // assign a value to anything.\n  //   (setf (aref YourArray 2) \"blue\")\n  // see\n  //   http://stackoverflow.com/questions/18062016/common-lisp-how-to-set-an-element-in-a-2d-array\n  //-----------------------------------------------------------------------------\n\n  //  Example: a[1] = b\n\n  //  p1  *-------*-----------------------*\n  //    |  |      |\n  //    setq  *-------*-------*  b\n  //      |  |  |\n  //      index  a  1\n\n  //  cadadr(p1) -> a\n\n  //-----------------------------------------------------------------------------\n  setq_indexed = function() {\n    var h;\n    p4 = cadadr(p1);\n    if (!issymbol(p4)) {\n      // this is likely to happen when one tries to\n      // do assignments like these\n      //   1[2] = 3\n      // or\n      //   f(x)[1] = 2\n      // or\n      //   [[1,2],[3,4]][5] = 6\n\n      // In other words, one can only do\n      // a straight assignment like\n      //   existingMatrix[index] = something\n      stop(\"indexed assignment: expected a symbol name\");\n    }\n    h = tos;\n    push(caddr(p1));\n    Eval();\n    p2 = cdadr(p1);\n    while (iscons(p2)) {\n      push(car(p2));\n      Eval();\n      p2 = cdr(p2);\n    }\n    set_component(tos - h);\n    p3 = pop();\n    set_binding(p4, p3);\n    return push(symbol(NIL));\n  };\n\n  Eval_sqrt = function() {\n    push(cadr(p1));\n    Eval();\n    push_rational(1, 2);\n    return power();\n  };\n\n  Eval_stop = function() {\n    return stop(\"user stop\");\n  };\n\n  Eval_subst = function() {\n    push(cadddr(p1));\n    Eval();\n    push(caddr(p1));\n    Eval();\n    push(cadr(p1));\n    Eval();\n    subst();\n    return Eval(); // normalize\n  };\n\n  \n  // always returns a matrix with rank 2\n  // i.e. two dimensions,\n  // the passed parameter is the size\n  Eval_unit = function() {\n    var i, n, o, ref;\n    i = 0;\n    n = 0;\n    push(cadr(p1));\n    Eval();\n    n = pop_integer();\n    if (isNaN(n)) {\n      push(p1);\n      return;\n    }\n    if (n < 1) {\n      push(p1);\n      return;\n    }\n    p1 = alloc_tensor(n * n);\n    p1.tensor.ndim = 2;\n    p1.tensor.dim[0] = n;\n    p1.tensor.dim[1] = n;\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      p1.tensor.elem[n * i + i] = one;\n    }\n    check_tensor_dimensions(p1);\n    return push(p1);\n  };\n\n  Eval_noexpand = function() {\n    var prev_expanding;\n    prev_expanding = expanding;\n    expanding = 0;\n    Eval();\n    return expanding = prev_expanding;\n  };\n\n  // like Eval() except \"=\" (assignment) is treated\n  // as \"==\" (equality test)\n  // This is because\n  //  * this allows users to be lazy and just\n  //    use \"=\" instead of \"==\" as per more common\n  //    mathematical notation\n  //  * in many places we don't expect an assignment\n  //    e.g. we don't expect to test the zero-ness\n  //    of an assignment or the truth value of\n  //    an assignment\n  // Note that these are questionable assumptions\n  // as for example in most programming languages one\n  // can indeed test the value of an assignment (the\n  // value is just the evaluation of the right side)\n  Eval_predicate = function() {\n    save();\n    p1 = top();\n    if (car(p1) === symbol(SETQ)) {\n      // replace the assignment in the\n      // head with an equality test\n      pop();\n      push_symbol(TESTEQ);\n      push(cadr(p1));\n      push(caddr(p1));\n      list(3);\n    }\n    Eval();\n    return restore();\n  };\n\n  // Partial fraction expansion\n\n  // Example\n\n  //      expand(1/(x^3+x^2),x)\n\n  //        1      1       1\n  //      ---- - --- + -------\n  //        2     x     x + 1\n  //       x\n  Eval_expand = function() {\n    // 1st arg\n    push(cadr(p1));\n    Eval();\n    // 2nd arg\n    push(caddr(p1));\n    Eval();\n    p2 = pop();\n    if (p2 === symbol(NIL)) {\n      guess();\n    } else {\n      push(p2);\n    }\n    return expand();\n  };\n\n  //define A p2\n  //define B p3\n  //define C p4\n  //define F p5\n  //define P p6\n  //define Q p7\n  //define T p8\n  //define X p9\n  expand = function() {\n    var prev_expanding;\n    save();\n    p9 = pop();\n    p5 = pop();\n    if (istensor(p5)) {\n      expand_tensor();\n      restore();\n      return;\n    }\n    // if sum of terms then sum over the expansion of each term\n    if (car(p5) === symbol(ADD)) {\n      push_integer(0);\n      p1 = cdr(p5);\n      while (iscons(p1)) {\n        push(car(p1));\n        push(p9);\n        expand();\n        add();\n        p1 = cdr(p1);\n      }\n      restore();\n      return;\n    }\n    // B = numerator\n    push(p5);\n    numerator();\n    p3 = pop();\n    // A = denominator\n    push(p5);\n    denominator();\n    p2 = pop();\n    remove_negative_exponents();\n    // Q = quotient\n    push(p3);\n    push(p2);\n    push(p9);\n    // if the denominator is one then always bail out\n    // also bail out if the denominator is not one but\n    // it's not anything recognizable as a polynomial.\n    if (isone(p3) || isone(p2)) {\n      if (!ispolyexpandedform(p2, p9) || isone(p2)) {\n        pop();\n        pop();\n        pop();\n        push(p5);\n        // p5 is the original input, leave unchanged\n        restore();\n        return;\n      }\n    }\n    divpoly();\n    p7 = pop();\n    // remainder B = B - A * Q\n    push(p3);\n    push(p2);\n    push(p7);\n    multiply();\n    subtract();\n    p3 = pop();\n    // if the remainder is zero then we're done\n    if (isZeroAtomOrTensor(p3)) {\n      push(p7);\n      restore();\n      return;\n    }\n    // A = factor(A)\n\n    //console.log(\"expand - to be factored: \" + p2)\n    push(p2);\n    push(p9);\n    factorpoly();\n    p2 = pop();\n    //console.log(\"expand - factored to: \" + p2)\n    expand_get_C();\n    expand_get_B();\n    expand_get_A();\n    if (istensor(p4)) {\n      push(p4);\n      prev_expanding = expanding;\n      expanding = 1;\n      inv();\n      expanding = prev_expanding;\n      push(p3);\n      inner();\n      push(p2);\n      inner();\n    } else {\n      push(p3);\n      push(p4);\n      prev_expanding = expanding;\n      expanding = 1;\n      divide();\n      expanding = prev_expanding;\n      push(p2);\n      multiply();\n    }\n    push(p7);\n    add();\n    return restore();\n  };\n\n  expand_tensor = function() {\n    var i, o, ref;\n    i = 0;\n    push(p5);\n    copy_tensor();\n    p5 = pop();\n    for (i = o = 0, ref = p5.tensor.nelem; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      push(p5.tensor.elem[i]);\n      push(p9);\n      expand();\n      p5.tensor.elem[i] = pop();\n    }\n    return push(p5);\n  };\n\n  remove_negative_exponents = function() {\n    var h, i, j, k, n, o, ref;\n    h = 0;\n    i = 0;\n    j = 0;\n    k = 0;\n    n = 0;\n    h = tos;\n    factors(p2);\n    factors(p3);\n    n = tos - h;\n    // find the smallest exponent\n    j = 0;\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      p1 = stack[h + i];\n      if (car(p1) !== symbol(POWER)) {\n        continue;\n      }\n      if (cadr(p1) !== p9) {\n        continue;\n      }\n      push(caddr(p1));\n      k = pop_integer();\n      if (isNaN(k)) {\n        continue;\n      }\n      if (k < j) {\n        j = k;\n      }\n    }\n    moveTos(h);\n    if (j === 0) {\n      return;\n    }\n    // A = A / X^j\n    push(p2);\n    push(p9);\n    push_integer(-j);\n    power();\n    multiply();\n    p2 = pop();\n    // B = B / X^j\n    push(p3);\n    push(p9);\n    push_integer(-j);\n    power();\n    multiply();\n    return p3 = pop();\n  };\n\n  // Returns the expansion coefficient matrix C.\n\n  // Example:\n\n  //       B         1\n  //      --- = -----------\n  //       A      2 \n  //             x (x + 1)\n\n  // We have\n\n  //       B     Y1     Y2      Y3\n  //      --- = ---- + ---- + -------\n  //       A      2     x      x + 1\n  //             x\n\n  // Our task is to solve for the unknowns Y1, Y2, and Y3.\n\n  // Multiplying both sides by A yields\n\n  //           AY1     AY2      AY3\n  //      B = ----- + ----- + -------\n  //            2      x       x + 1\n  //           x\n\n  // Let\n\n  //            A               A                 A\n  //      W1 = ----       W2 = ---        W3 = -------\n  //             2              x               x + 1\n  //            x\n\n  // Then the coefficient matrix C is\n\n  //              coeff(W1,x,0)   coeff(W2,x,0)   coeff(W3,x,0)\n\n  //       C =    coeff(W1,x,1)   coeff(W2,x,1)   coeff(W3,x,1)\n\n  //              coeff(W1,x,2)   coeff(W2,x,2)   coeff(W3,x,2)\n\n  // It follows that\n\n  //       coeff(B,x,0)     Y1\n\n  //       coeff(B,x,1) = C Y2\n\n  //       coeff(B,x,2) =   Y3\n\n  // Hence\n\n  //       Y1       coeff(B,x,0)\n  //             -1\n  //       Y2 = C   coeff(B,x,1)\n\n  //       Y3       coeff(B,x,2)\n  expand_get_C = function() {\n    var a, h, i, i1, j, n, o, prev_expanding, ref, ref1;\n    h = 0;\n    i = 0;\n    j = 0;\n    n = 0;\n    //U **a\n    h = tos;\n    if (car(p2) === symbol(MULTIPLY)) {\n      p1 = cdr(p2);\n      while (iscons(p1)) {\n        p5 = car(p1);\n        expand_get_CF();\n        p1 = cdr(p1);\n      }\n    } else {\n      p5 = p2;\n      expand_get_CF();\n    }\n    n = tos - h;\n    if (n === 1) {\n      p4 = pop();\n      return;\n    }\n    p4 = alloc_tensor(n * n);\n    p4.tensor.ndim = 2;\n    p4.tensor.dim[0] = n;\n    p4.tensor.dim[1] = n;\n    a = h;\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      for (j = i1 = 0, ref1 = n; (0 <= ref1 ? i1 < ref1 : i1 > ref1); j = 0 <= ref1 ? ++i1 : --i1) {\n        push(stack[a + j]);\n        push(p9);\n        push_integer(i);\n        power();\n        prev_expanding = expanding;\n        expanding = 1;\n        divide();\n        expanding = prev_expanding;\n        push(p9);\n        filter();\n        p4.tensor.elem[n * i + j] = pop();\n      }\n    }\n    return moveTos(tos - n);\n  };\n\n  // The following table shows the push order for simple roots, repeated roots,\n  // and inrreducible factors.\n\n  //  Factor F        Push 1st        Push 2nd         Push 3rd      Push 4th\n\n  //                   A\n  //  x               ---\n  //                   x\n\n  //   2               A               A\n  //  x               ----            ---\n  //                    2              x\n  //                   x\n\n  //                     A\n  //  x + 1           -------\n  //                   x + 1\n\n  //         2            A              A\n  //  (x + 1)         ----------      -------\n  //                          2        x + 1\n  //                   (x + 1)\n\n  //   2                   A               Ax\n  //  x  + x + 1      ------------    ------------\n  //                    2               2\n  //                   x  + x + 1      x  + x + 1\n\n  //    2         2          A              Ax              A             Ax\n  //  (x  + x + 1)    --------------- ---------------  ------------  ------------\n  //                     2         2     2         2     2             2\n  //                   (x  + x + 1)    (x  + x + 1)     x  + x + 1    x  + x + 1\n\n  // For T = A/F and F = P^N we have\n\n  //      Factor F          Push 1st    Push 2nd    Push 3rd    Push 4th\n\n  //      x                 T\n\n  //       2\n  //      x                 T           TP\n\n  //      x + 1             T\n\n  //             2\n  //      (x + 1)           T           TP\n\n  //       2\n  //      x  + x + 1        T           TX\n\n  //        2         2\n  //      (x  + x + 1)      T           TX          TP          TPX\n\n  // Hence we want to push in the order\n\n  //      T * (P ^ i) * (X ^ j)\n\n  // for all i, j such that\n\n  //      i = 0, 1, ..., N - 1\n\n  //      j = 0, 1, ..., deg(P) - 1\n\n  // where index j runs first.\n  expand_get_CF = function() {\n    var d, i, j, n, o, prev_expanding, ref, results;\n    d = 0;\n    i = 0;\n    j = 0;\n    n = 0;\n    if (!Find(p5, p9)) {\n      return;\n    }\n    prev_expanding = expanding;\n    expanding = 1;\n    trivial_divide();\n    expanding = prev_expanding;\n    if (car(p5) === symbol(POWER)) {\n      push(caddr(p5));\n      n = pop_integer();\n      p6 = cadr(p5);\n    } else {\n      n = 1;\n      p6 = p5;\n    }\n    push(p6);\n    push(p9);\n    degree();\n    d = pop_integer();\n    results = [];\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      results.push((function() {\n        var i1, ref1, results1;\n        results1 = [];\n        for (j = i1 = 0, ref1 = d; (0 <= ref1 ? i1 < ref1 : i1 > ref1); j = 0 <= ref1 ? ++i1 : --i1) {\n          push(p8);\n          push(p6);\n          push_integer(i);\n          power();\n          prev_expanding = expanding;\n          expanding = 1;\n          multiply();\n          expanding = prev_expanding;\n          push(p9);\n          push_integer(j);\n          power();\n          prev_expanding = expanding;\n          expanding = 1;\n          multiply();\n          results1.push(expanding = prev_expanding);\n        }\n        return results1;\n      })());\n    }\n    return results;\n  };\n\n  // Returns T = A/F where F is a factor of A.\n  trivial_divide = function() {\n    var h;\n    h = 0;\n    if (car(p2) === symbol(MULTIPLY)) {\n      h = tos;\n      p0 = cdr(p2);\n      while (iscons(p0)) {\n        if (!equal(car(p0), p5)) {\n          push(car(p0));\n          Eval(); // force expansion of (x+1)^2, f.e.\n        }\n        p0 = cdr(p0);\n      }\n      multiply_all(tos - h);\n    } else {\n      push_integer(1);\n    }\n    return p8 = pop();\n  };\n\n  // Returns the expansion coefficient vector B.\n  expand_get_B = function() {\n    var i, n, o, prev_expanding, ref;\n    i = 0;\n    n = 0;\n    if (!istensor(p4)) {\n      return;\n    }\n    n = p4.tensor.dim[0];\n    p8 = alloc_tensor(n);\n    p8.tensor.ndim = 1;\n    p8.tensor.dim[0] = n;\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      push(p3);\n      push(p9);\n      push_integer(i);\n      power();\n      prev_expanding = expanding;\n      expanding = 1;\n      divide();\n      expanding = prev_expanding;\n      push(p9);\n      filter();\n      p8.tensor.elem[i] = pop();\n    }\n    return p3 = p8;\n  };\n\n  // Returns the expansion fractions in A.\n  expand_get_A = function() {\n    var h, i, n, o, ref;\n    h = 0;\n    i = 0;\n    n = 0;\n    if (!istensor(p4)) {\n      push(p2);\n      reciprocate();\n      p2 = pop();\n      return;\n    }\n    h = tos;\n    if (car(p2) === symbol(MULTIPLY)) {\n      p8 = cdr(p2);\n      while (iscons(p8)) {\n        p5 = car(p8);\n        expand_get_AF();\n        p8 = cdr(p8);\n      }\n    } else {\n      p5 = p2;\n      expand_get_AF();\n    }\n    n = tos - h;\n    p8 = alloc_tensor(n);\n    p8.tensor.ndim = 1;\n    p8.tensor.dim[0] = n;\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      p8.tensor.elem[i] = stack[h + i];\n    }\n    moveTos(h);\n    return p2 = p8;\n  };\n\n  expand_get_AF = function() {\n    var d, i, j, n, o, ref, results;\n    d = 0;\n    i = 0;\n    j = 0;\n    n = 1;\n    if (!Find(p5, p9)) {\n      return;\n    }\n    if (car(p5) === symbol(POWER)) {\n      push(caddr(p5));\n      n = pop_integer();\n      p5 = cadr(p5);\n    }\n    push(p5);\n    push(p9);\n    degree();\n    d = pop_integer();\n    results = [];\n    for (i = o = ref = n; (ref <= 0 ? o < 0 : o > 0); i = ref <= 0 ? ++o : --o) {\n      results.push((function() {\n        var i1, ref1, results1;\n        results1 = [];\n        for (j = i1 = 0, ref1 = d; (0 <= ref1 ? i1 < ref1 : i1 > ref1); j = 0 <= ref1 ? ++i1 : --i1) {\n          push(p5);\n          push_integer(i);\n          power();\n          reciprocate();\n          push(p9);\n          push_integer(j);\n          power();\n          results1.push(multiply());\n        }\n        return results1;\n      })());\n    }\n    return results;\n  };\n\n  // Do the exponential cosine function.\n  Eval_expcos = function() {\n    push(cadr(p1));\n    Eval();\n    return expcos();\n  };\n\n  expcos = function() {\n    save();\n    p1 = pop();\n    push(imaginaryunit);\n    push(p1);\n    multiply();\n    exponential();\n    push_rational(1, 2);\n    multiply();\n    push(imaginaryunit);\n    negate();\n    push(p1);\n    multiply();\n    exponential();\n    push_rational(1, 2);\n    multiply();\n    add();\n    return restore();\n  };\n\n  // Do the exponential sine function.\n  Eval_expsin = function() {\n    push(cadr(p1));\n    Eval();\n    return expsin();\n  };\n\n  expsin = function() {\n    save();\n    p1 = pop();\n    push(imaginaryunit);\n    push(p1);\n    multiply();\n    exponential();\n    push(imaginaryunit);\n    divide();\n    push_rational(1, 2);\n    multiply();\n    push(imaginaryunit);\n    negate();\n    push(p1);\n    multiply();\n    exponential();\n    push(imaginaryunit);\n    divide();\n    push_rational(1, 2);\n    multiply();\n    subtract();\n    return restore();\n  };\n\n  // factor a polynomial or integer\n  Eval_factor = function() {\n    var results;\n    push(cadr(p1));\n    Eval();\n    push(caddr(p1));\n    Eval();\n    p2 = pop();\n    if (p2 === symbol(NIL)) {\n      guess();\n    } else {\n      push(p2);\n    }\n    factor();\n    // more factoring?\n    p1 = cdddr(p1);\n    results = [];\n    while (iscons(p1)) {\n      push(car(p1));\n      Eval();\n      factor_again();\n      results.push(p1 = cdr(p1));\n    }\n    return results;\n  };\n\n  factor_again = function() {\n    var h, n;\n    save();\n    p2 = pop();\n    p1 = pop();\n    h = tos;\n    if (car(p1) === symbol(MULTIPLY)) {\n      p1 = cdr(p1);\n      while (iscons(p1)) {\n        push(car(p1));\n        push(p2);\n        factor_term();\n        p1 = cdr(p1);\n      }\n    } else {\n      push(p1);\n      push(p2);\n      factor_term();\n    }\n    n = tos - h;\n    if (n > 1) {\n      multiply_all_noexpand(n);\n    }\n    return restore();\n  };\n\n  factor_term = function() {\n    save();\n    factorpoly();\n    p1 = pop();\n    if (car(p1) === symbol(MULTIPLY)) {\n      p1 = cdr(p1);\n      while (iscons(p1)) {\n        push(car(p1));\n        p1 = cdr(p1);\n      }\n    } else {\n      push(p1);\n    }\n    return restore();\n  };\n\n  factor = function() {\n    save();\n    p2 = pop();\n    p1 = pop();\n    if (isinteger(p1)) {\n      push(p1);\n      factor_number(); // see pollard.cpp\n    } else {\n      push(p1);\n      push(p2);\n      factorpoly();\n    }\n    return restore();\n  };\n\n  // for factoring small integers (2^32 or less)\n  factor_small_number = function() {\n    var d, expo, i, n, o, ref;\n    i = 0;\n    save();\n    n = pop_integer();\n    if (isNaN(n)) {\n      stop(\"number too big to factor\");\n    }\n    if (n < 0) {\n      n = -n;\n    }\n    for (i = o = 0, ref = MAXPRIMETAB; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      d = primetab[i];\n      if (d > n / d) {\n        break;\n      }\n      expo = 0;\n      while (n % d === 0) {\n        n /= d;\n        expo++;\n      }\n      if (expo) {\n        push_integer(d);\n        push_integer(expo);\n      }\n    }\n    if (n > 1) {\n      push_integer(n);\n      push_integer(1);\n    }\n    return restore();\n  };\n\n  factorial = function() {\n    var n;\n    n = 0;\n    save();\n    p1 = pop();\n    push(p1);\n    n = pop_integer();\n    if (n < 0 || isNaN(n)) {\n      push_symbol(FACTORIAL);\n      push(p1);\n      list(2);\n      restore();\n      return;\n    }\n    bignum_factorial(n);\n    return restore();\n  };\n\n  // simplification rules for factorials (m < n)\n\n  //  (e + 1) * factorial(e)  ->  factorial(e + 1)\n\n  //  factorial(e) / e  ->  factorial(e - 1)\n\n  //  e / factorial(e)  ->  1 / factorial(e - 1)\n\n  //  factorial(e + n)\n  //  ----------------  ->  (e + m + 1)(e + m + 2)...(e + n)\n  //  factorial(e + m)\n\n  //  factorial(e + m)                               1\n  //  ----------------  ->  --------------------------------\n  //  factorial(e + n)    (e + m + 1)(e + m + 2)...(e + n)\n\n  // this function is not actually used, but\n  // all these simplifications\n  // do happen automatically via simplify\n  simplifyfactorials = function() {\n    var x;\n    x = 0;\n    save();\n    x = expanding;\n    expanding = 0;\n    p1 = pop();\n    if (car(p1) === symbol(ADD)) {\n      push(zero);\n      p1 = cdr(p1);\n      while (iscons(p1)) {\n        push(car(p1));\n        simplifyfactorials();\n        add();\n        p1 = cdr(p1);\n      }\n      expanding = x;\n      restore();\n      return;\n    }\n    if (car(p1) === symbol(MULTIPLY)) {\n      sfac_product();\n      expanding = x;\n      restore();\n      return;\n    }\n    push(p1);\n    expanding = x;\n    return restore();\n  };\n\n  sfac_product = function() {\n    var i, i1, j, j1, n, o, ref, ref1, ref2, ref3, s;\n    i = 0;\n    j = 0;\n    n = 0;\n    s = tos;\n    p1 = cdr(p1);\n    n = 0;\n    while (iscons(p1)) {\n      push(car(p1));\n      p1 = cdr(p1);\n      n++;\n    }\n    for (i = o = 0, ref = n - 1; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      if (stack[s + i] === symbol(NIL)) {\n        continue;\n      }\n      for (j = i1 = ref1 = i + 1, ref2 = n; (ref1 <= ref2 ? i1 < ref2 : i1 > ref2); j = ref1 <= ref2 ? ++i1 : --i1) {\n        if (stack[s + j] === symbol(NIL)) {\n          continue;\n        }\n        sfac_product_f(s, i, j);\n      }\n    }\n    push(one);\n    for (i = j1 = 0, ref3 = n; (0 <= ref3 ? j1 < ref3 : j1 > ref3); i = 0 <= ref3 ? ++j1 : --j1) {\n      if (stack[s + i] === symbol(NIL)) {\n        continue;\n      }\n      push(stack[s + i]);\n      multiply();\n    }\n    p1 = pop();\n    moveTos(tos - n);\n    return push(p1);\n  };\n\n  sfac_product_f = function(s, a, b) {\n    var i, n, o, ref;\n    i = 0;\n    n = 0;\n    p1 = stack[s + a];\n    p2 = stack[s + b];\n    if (ispower(p1)) {\n      p3 = caddr(p1);\n      p1 = cadr(p1);\n    } else {\n      p3 = one;\n    }\n    if (ispower(p2)) {\n      p4 = caddr(p2);\n      p2 = cadr(p2);\n    } else {\n      p4 = one;\n    }\n    if (isfactorial(p1) && isfactorial(p2)) {\n      // Determine if the powers cancel.\n      push(p3);\n      push(p4);\n      add();\n      yyexpand();\n      n = pop_integer();\n      if (n !== 0) {\n        return;\n      }\n      // Find the difference between the two factorial args.\n\n      // For example, the difference between (a + 2)! and a! is 2.\n      push(cadr(p1));\n      push(cadr(p2));\n      subtract();\n      yyexpand();\n      n = pop_integer();\n      if (n === 0 || isNaN(n)) {\n        return;\n      }\n      if (n < 0) {\n        n = -n;\n        p5 = p1;\n        p1 = p2;\n        p2 = p5;\n        p5 = p3;\n        p3 = p4;\n        p4 = p5;\n      }\n      push(one);\n      for (i = o = 1, ref = n; (1 <= ref ? o <= ref : o >= ref); i = 1 <= ref ? ++o : --o) {\n        push(cadr(p2));\n        push_integer(i);\n        add();\n        push(p3);\n        power();\n        multiply();\n      }\n      stack[s + a] = pop();\n      return stack[s + b] = symbol(NIL);\n    }\n  };\n\n  // Factor a polynomial\n  factorpoly = function() {\n    var polynomial, variable;\n    if (DEBUG) {\n      console.log(\"factorpoly: \" + stack[tos - 1].toString() + \" \" + stack[tos - 2].toString());\n    }\n    save();\n    variable = pop();\n    polynomial = pop();\n    if (!Find(polynomial, variable) || !ispolyexpandedform(polynomial, variable) || !issymbol(variable)) {\n      push(polynomial);\n    } else {\n      yyfactorpoly(variable, polynomial);\n    }\n    return restore();\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Input:    tos-2    true polynomial\n\n  //      tos-1    free variable\n\n  //  Output:    factored polynomial on stack\n\n  //-----------------------------------------------------------------------------\n  yyfactorpoly = function(variable, polynomial) {\n    var A, AxPlusB, B, checkingTheDivision, dividend, factpoly_expo, firstParam, foundComplexRoot, foundRealRoot, h, i, i1, j1, l1, o, partOfPolynomialFactoredSoFar, polycoeff, prev_expanding, previousFactorisation, ref, ref1, ref2, ref3, remainingPoly, secondDegreePloly, secondParam, whichRootsAreWeFinding;\n    if (DEBUG) {\n      firstParam = variable;\n      secondParam = polynomial;\n      console.log(\"yyfactorpoly: \" + firstParam + \" \" + secondParam);\n    }\n    save();\n    h = tos;\n    if (isfloating(polynomial)) {\n      stop(\"floating point numbers in polynomial\");\n    }\n    polycoeff = tos;\n    factpoly_expo = coeff(variable, polynomial) - 1;\n    if (DEBUG) {\n      console.log(\"yyfactorpoly: \" + firstParam + \" \" + secondParam + \" factpoly_expo before rationalize_coefficients: \" + factpoly_expo);\n    }\n    partOfPolynomialFactoredSoFar = rationalize_coefficients(h);\n    if (DEBUG) {\n      console.log(\"yyfactorpoly: \" + firstParam + \" \" + secondParam + \" factpoly_expo  after rationalize_coefficients: \" + factpoly_expo);\n    }\n    // for univariate polynomials we could do factpoly_expo > 1\n    whichRootsAreWeFinding = \"real\";\n    remainingPoly = null;\n    while (factpoly_expo > 0) {\n      if (DEBUG) {\n        console.log(\"yyfactorpoly: \" + firstParam + \" \" + secondParam + \" factpoly_expo inside while loop: \" + factpoly_expo);\n      }\n      if (isZeroAtomOrTensor(stack[polycoeff + 0])) {\n        if (DEBUG) {\n          console.log(\"yyfactorpoly: \" + firstParam + \" \" + secondParam + \" isZeroAtomOrTensor\");\n        }\n        A = one;\n        B = zero;\n      } else {\n        //console.log(\"trying to find a \" + whichRootsAreWeFinding + \" root\")\n        if (whichRootsAreWeFinding === \"real\") {\n          [foundRealRoot, A, B] = get_factor_from_real_root(variable, factpoly_expo, polycoeff);\n        } else if (whichRootsAreWeFinding === \"complex\") {\n          [foundComplexRoot, A] = get_factor_from_complex_root(remainingPoly, factpoly_expo, polycoeff);\n        }\n      }\n      if (whichRootsAreWeFinding === \"real\") {\n        if (foundRealRoot === 0) {\n          whichRootsAreWeFinding = \"complex\";\n          continue;\n        } else {\n          // build the 1-degree polynomial out of the\n          // real solution that was just found.\n          push(A); // A\n          push(variable); // x\n          multiply();\n          push(B); // B\n          add();\n          AxPlusB = pop();\n          if (DEBUG) {\n            console.log(\"yyfactorpoly: \" + firstParam + \" \" + secondParam + \" success\\nFACTOR=\" + AxPlusB);\n          }\n          // factor out negative sign (not req'd because A > 1)\n          //if 0\n          /*\n          if (isnegativeterm(A))\n            push(AxPlusB)\n            negate()\n            AxPlusB = pop()\n            push(partOfPolynomialFactoredSoFar)\n            negate_noexpand()\n            partOfPolynomialFactoredSoFar = pop()\n          */\n          //endif\n\n          // partOfPolynomialFactoredSoFar is the part of the polynomial that was factored so far,\n          // add the newly found factor to it. Note that we are not actually\n          // multiplying the polynomials fully, we are just leaving them\n          // expressed as (P1)*(P2), we are not expanding the product.\n          push(partOfPolynomialFactoredSoFar);\n          push(AxPlusB);\n          multiply_noexpand();\n          partOfPolynomialFactoredSoFar = pop();\n          // ok now on stack we have the coefficients of the\n          // remaining part of the polynomial still to factor.\n          // Divide it by the newly-found factor so that\n          // the stack then contains the coefficients of the\n          // polynomial part still left to factor.\n          yydivpoly(factpoly_expo, polycoeff, A, B);\n          while (factpoly_expo && isZeroAtomOrTensor(stack[polycoeff + factpoly_expo])) {\n            factpoly_expo--;\n          }\n          push(zero);\n          for (i = o = 0, ref = factpoly_expo; (0 <= ref ? o <= ref : o >= ref); i = 0 <= ref ? ++o : --o) {\n            push(stack[polycoeff + i]);\n            push(variable); // the free variable\n            push_integer(i);\n            power();\n            multiply();\n            add();\n          }\n          remainingPoly = pop();\n        }\n      //console.log(\"real branch remainingPoly: \" + remainingPoly)\n      } else if (whichRootsAreWeFinding === \"complex\") {\n        if (foundComplexRoot === 0) {\n          break;\n        } else {\n          // build the 2-degree polynomial out of the\n          // real solution that was just found.\n          push(A); // A\n          push(variable); // x\n          subtract();\n          //console.log(\"first factor: \" + stack[tos-1].toString())\n          push(A); // A\n          conjugate();\n          push(variable); // x\n          subtract();\n          //console.log(\"second factor: \" + stack[tos-1].toString())\n          multiply();\n          //if (factpoly_expo > 0 && isnegativeterm(stack[polycoeff+factpoly_expo]))\n          //  negate()\n          //  negate_noexpand()\n          secondDegreePloly = pop();\n          if (DEBUG) {\n            console.log(\"yyfactorpoly: \" + firstParam + \" \" + secondParam + \" success\\nFACTOR=\" + secondDegreePloly);\n          }\n          // factor out negative sign (not req'd because A > 1)\n          //if 0\n          /*\n          if (isnegativeterm(A))\n            push(secondDegreePloly)\n            negate()\n            secondDegreePloly = pop()\n            push(partOfPolynomialFactoredSoFar)\n            negate_noexpand()\n            partOfPolynomialFactoredSoFar = pop()\n          */\n          //endif\n\n          // partOfPolynomialFactoredSoFar is the part of the polynomial that was factored so far,\n          // add the newly found factor to it. Note that we are not actually\n          // multiplying the polynomials fully, we are just leaving them\n          // expressed as (P1)*(P2), we are not expanding the product.\n          push(partOfPolynomialFactoredSoFar);\n          previousFactorisation = pop();\n          //console.log(\"previousFactorisation: \" + previousFactorisation)\n          push(partOfPolynomialFactoredSoFar);\n          push(secondDegreePloly);\n          multiply_noexpand();\n          partOfPolynomialFactoredSoFar = pop();\n          if (remainingPoly == null) {\n            push(zero);\n            for (i = i1 = 0, ref1 = factpoly_expo; (0 <= ref1 ? i1 <= ref1 : i1 >= ref1); i = 0 <= ref1 ? ++i1 : --i1) {\n              push(stack[polycoeff + i]);\n              push(variable); // the free variable\n              push_integer(i);\n              power();\n              multiply();\n              add();\n            }\n            remainingPoly = pop();\n          }\n          //console.log(\"original polynomial (dividend): \" + remainingPoly)\n          dividend = remainingPoly;\n          //push(dividend)\n          //degree()\n          //startingDegree = pop()\n          push(dividend);\n          //console.log(\"dividing \" + stack[tos-1].toString() + \" by \" + secondDegreePloly)\n          push(secondDegreePloly); // divisor\n          push(variable); // X\n          divpoly();\n          remainingPoly = pop();\n          push(remainingPoly);\n          push(secondDegreePloly); // divisor\n          multiply();\n          checkingTheDivision = pop();\n          if (!equal(checkingTheDivision, dividend)) {\n            //push(dividend)\n            //gcd_sum()\n            //console.log(\"gcd top of stack: \" + stack[tos-1].toString())\n            if (DEBUG) {\n              console.log(\"we found a polynomial based on complex root and its conj but it doesn't divide the poly, quitting\");\n            }\n            if (DEBUG) {\n              console.log(\"so just returning previousFactorisation times dividend: \" + previousFactorisation + \" * \" + dividend);\n            }\n            push(previousFactorisation);\n            push(dividend);\n            prev_expanding = expanding;\n            expanding = 0;\n            yycondense();\n            expanding = prev_expanding;\n            multiply_noexpand();\n            partOfPolynomialFactoredSoFar = pop();\n            stack[h] = partOfPolynomialFactoredSoFar;\n            moveTos(h + 1);\n            restore();\n            return;\n          }\n//console.log(\"result: (still to be factored) \" + remainingPoly)\n\n          //push(remainingPoly)\n//degree()\n//remainingDegree = pop()\n/*\nif compare_numbers(startingDegree, remainingDegree)\n * ok even if we found a complex root that\n * together with the conjugate generates a poly in Z,\n * that doesn't mean that the division would end up in Z.\n * Example: 1+x^2+x^4+x^6 has +i and -i as one of its roots\n * so a factor is 1+x^2 ( = (x+i)*(x-i))\n * BUT \n */\n          for (i = j1 = 0, ref2 = factpoly_expo; (0 <= ref2 ? j1 <= ref2 : j1 >= ref2); i = 0 <= ref2 ? ++j1 : --j1) {\n            pop();\n          }\n          coeff(variable, remainingPoly);\n          factpoly_expo -= 2;\n        }\n      }\n    }\n    //console.log(\"factpoly_expo: \" + factpoly_expo)\n    if (DEBUG) {\n      console.log(\"yyfactorpoly: \" + firstParam + \" \" + secondParam + \" building the remaining unfactored part of the polynomial\");\n    }\n    push(zero);\n    for (i = l1 = 0, ref3 = factpoly_expo; (0 <= ref3 ? l1 <= ref3 : l1 >= ref3); i = 0 <= ref3 ? ++l1 : --l1) {\n      push(stack[polycoeff + i]);\n      push(variable); // the free variable\n      push_integer(i);\n      power();\n      multiply();\n      add();\n    }\n    polynomial = pop();\n    if (DEBUG) {\n      console.log(\"yyfactorpoly: \" + firstParam + \" \" + secondParam + \" remaining unfactored part of the polynomial: \" + polynomial.toString());\n    }\n    push(polynomial);\n    prev_expanding = expanding;\n    expanding = 0;\n    yycondense();\n    expanding = prev_expanding;\n    polynomial = pop();\n    if (DEBUG) {\n      console.log(\"yyfactorpoly: \" + firstParam + \" \" + secondParam + \" new poly with extracted common factor: \" + polynomial.toString());\n    }\n    //debugger\n\n    // factor out negative sign\n    if (factpoly_expo > 0 && isnegativeterm(stack[polycoeff + factpoly_expo])) {\n      push(polynomial);\n      //prev_expanding = expanding\n      //expanding = 1\n      negate();\n      //expanding = prev_expanding\n      polynomial = pop();\n      push(partOfPolynomialFactoredSoFar);\n      negate_noexpand();\n      partOfPolynomialFactoredSoFar = pop();\n    }\n    push(partOfPolynomialFactoredSoFar);\n    push(polynomial);\n    multiply_noexpand();\n    partOfPolynomialFactoredSoFar = pop();\n    if (DEBUG) {\n      console.log(\"yyfactorpoly: \" + firstParam + \" \" + secondParam + \" result: \" + partOfPolynomialFactoredSoFar);\n    }\n    stack[h] = partOfPolynomialFactoredSoFar;\n    moveTos(h + 1);\n    return restore();\n  };\n\n  rationalize_coefficients = function(h) {\n    var i, i1, o, ratio, ratioInverse, ref, ref1, ref2, ref3;\n    // LCM of all polynomial coefficients\n    ratio = one;\n    for (i = o = ref = h, ref1 = tos; (ref <= ref1 ? o < ref1 : o > ref1); i = ref <= ref1 ? ++o : --o) {\n      push(stack[i]);\n      denominator();\n      push(ratio);\n      lcm();\n      ratio = pop();\n    }\n// multiply each coefficient by RESULT\n    for (i = i1 = ref2 = h, ref3 = tos; (ref2 <= ref3 ? i1 < ref3 : i1 > ref3); i = ref2 <= ref3 ? ++i1 : --i1) {\n      push(ratio);\n      push(stack[i]);\n      multiply();\n      stack[i] = pop();\n    }\n    // reciprocate RESULT\n    push(ratio);\n    reciprocate();\n    ratioInverse = pop();\n    if (DEBUG) {\n      console.log(\"rationalize_coefficients result: \" + ratioInverse.toString());\n    }\n    return ratioInverse;\n  };\n\n  get_factor_from_real_root = function(variable, factpoly_expo, polycoeff) {\n    var a0, an, evalPolyResult, h, i, i1, j, j1, l1, m1, na0, nan, o, polynomial, ref, ref1, ref2, ref3, ref4, rootsTries_i, rootsTries_j, testDenominator, testNumerator, testValue;\n    if (DEBUG) {\n      console.log(\"get_factor_from_real_root\");\n    }\n    i = 0;\n    j = 0;\n    h = 0;\n    a0 = 0;\n    an = 0;\n    na0 = 0;\n    nan = 0;\n    if (DEBUG) {\n      push(zero);\n      for (i = o = 0, ref = factpoly_expo; (0 <= ref ? o <= ref : o >= ref); i = 0 <= ref ? ++o : --o) {\n        push(stack[polycoeff + i]);\n        push(variable);\n        push_integer(i);\n        power();\n        multiply();\n        add();\n      }\n      polynomial = pop();\n      console.log(\"POLY=\" + polynomial);\n    }\n    h = tos;\n    an = tos;\n    push(stack[polycoeff + factpoly_expo]);\n    divisors_onstack();\n    nan = tos - an;\n    a0 = tos;\n    push(stack[polycoeff + 0]);\n    divisors_onstack();\n    na0 = tos - a0;\n    if (DEBUG) {\n      console.log(\"divisors of base term\");\n      for (i = i1 = 0, ref1 = na0; (0 <= ref1 ? i1 < ref1 : i1 > ref1); i = 0 <= ref1 ? ++i1 : --i1) {\n        console.log(\", \" + stack[a0 + i]);\n      }\n      console.log(\"divisors of leading term\");\n      for (i = j1 = 0, ref2 = nan; (0 <= ref2 ? j1 < ref2 : j1 > ref2); i = 0 <= ref2 ? ++j1 : --j1) {\n        console.log(\", \" + stack[an + i]);\n      }\n    }\n// try roots\n    for (rootsTries_i = l1 = 0, ref3 = nan; (0 <= ref3 ? l1 < ref3 : l1 > ref3); rootsTries_i = 0 <= ref3 ? ++l1 : --l1) {\n      for (rootsTries_j = m1 = 0, ref4 = na0; (0 <= ref4 ? m1 < ref4 : m1 > ref4); rootsTries_j = 0 <= ref4 ? ++m1 : --m1) {\n        //if DEBUG then console.log \"nan: \" + nan + \" na0: \" + na0 + \" i: \" + rootsTries_i + \" j: \" + rootsTries_j\n        testNumerator = stack[an + rootsTries_i];\n        testDenominator = stack[a0 + rootsTries_j];\n        push(testDenominator);\n        push(testNumerator);\n        divide();\n        negate();\n        testValue = pop();\n        evalPolyResult = Evalpoly(factpoly_expo, polycoeff, testValue);\n        if (DEBUG) {\n          console.log(\"try A=\" + testNumerator);\n          console.log(\", B=\" + testDenominator);\n          console.log(\", root \" + variable);\n          console.log(\"=-B/A=\" + testValue);\n          console.log(\", POLY(\" + testValue);\n          console.log(\")=\" + evalPolyResult);\n        }\n        if (isZeroAtomOrTensor(evalPolyResult)) {\n          moveTos(h);\n          if (DEBUG) {\n            console.log(\"get_factor_from_real_root returning 1\");\n          }\n          return [1, testNumerator, testDenominator];\n        }\n        push(testDenominator);\n        negate();\n        testDenominator = pop();\n        push(testValue);\n        negate();\n        testValue = pop();\n        evalPolyResult = Evalpoly(factpoly_expo, polycoeff, testValue);\n        if (DEBUG) {\n          console.log(\"try A=\" + testNumerator);\n          console.log(\", B=\" + testDenominator);\n          console.log(\", root \" + variable);\n          console.log(\"=-B/A=\" + testValue);\n          console.log(\", POLY(\" + testValue);\n          console.log(\")=\" + evalPolyResult);\n        }\n        if (isZeroAtomOrTensor(evalPolyResult)) {\n          moveTos(h);\n          if (DEBUG) {\n            console.log(\"get_factor_from_real_root returning 1\");\n          }\n          return [1, testNumerator, testDenominator];\n        }\n      }\n    }\n    moveTos(h);\n    if (DEBUG) {\n      console.log(\"get_factor_from_real_root returning\");\n    }\n    return [0, null, null];\n  };\n\n  get_factor_from_complex_root = function(remainingPoly, factpoly_expo, polycoeff) {\n    var a0, an, evalPolyResult, h, i, i1, j, na0, nan, o, rootsTries_i, rootsTries_j, testValue;\n    i = 0;\n    j = 0;\n    h = 0;\n    a0 = 0;\n    an = 0;\n    na0 = 0;\n    nan = 0;\n    if (factpoly_expo <= 2) {\n      if (DEBUG) {\n        console.log(\"no more factoring via complex roots to be found in polynomial of degree <= 2\");\n      }\n      return [0, null];\n    }\n    if (DEBUG) {\n      console.log(\"complex root finding for POLY=\" + remainingPoly);\n    }\n    h = tos;\n    an = tos;\n    // trying -1^(2/3) which generates a polynomial in Z\n    // generates x^2 + 2x + 1\n    push_integer(-1);\n    push_rational(2, 3);\n    power();\n    rect();\n    testValue = pop();\n    if (DEBUG) {\n      console.log(\"complex root finding: trying with \" + testValue);\n    }\n    push(testValue);\n    evalPolyResult = Evalpoly(factpoly_expo, polycoeff, testValue);\n    if (DEBUG) {\n      console.log(\"complex root finding result: \" + evalPolyResult);\n    }\n    if (isZeroAtomOrTensor(evalPolyResult)) {\n      moveTos(h);\n      if (DEBUG) {\n        console.log(\"get_factor_from_complex_root returning 1\");\n      }\n      return [1, testValue];\n    }\n    // trying 1^(2/3) which generates a polynomial in Z\n    // http://www.wolframalpha.com/input/?i=(1)%5E(2%2F3)\n    // generates x^2 - 2x + 1\n    push_integer(1);\n    push_rational(2, 3);\n    power();\n    rect();\n    testValue = pop();\n    if (DEBUG) {\n      console.log(\"complex root finding: trying with \" + testValue);\n    }\n    push(testValue);\n    evalPolyResult = Evalpoly(factpoly_expo, polycoeff, testValue);\n    if (DEBUG) {\n      console.log(\"complex root finding result: \" + evalPolyResult);\n    }\n    if (isZeroAtomOrTensor(evalPolyResult)) {\n      moveTos(h);\n      if (DEBUG) {\n        console.log(\"get_factor_from_complex_root returning 1\");\n      }\n      return [1, testValue];\n    }\n// trying some simple complex numbers. All of these\n// generate polynomials in Z\n    for (rootsTries_i = o = -10; o <= 10; rootsTries_i = ++o) {\n      for (rootsTries_j = i1 = 1; i1 <= 5; rootsTries_j = ++i1) {\n        push_integer(rootsTries_i);\n        push_integer(rootsTries_j);\n        push(imaginaryunit);\n        multiply();\n        add();\n        rect();\n        testValue = pop();\n        if (DEBUG) {\n          console.log(\"complex root finding: trying simple complex combination \" + testValue);\n        }\n        push(testValue);\n        evalPolyResult = Evalpoly(factpoly_expo, polycoeff, testValue);\n        //console.log(\"complex root finding result: \" + evalPolyResult)\n        if (isZeroAtomOrTensor(evalPolyResult)) {\n          moveTos(h);\n          if (DEBUG) {\n            console.log(\"found complex root: \" + evalPolyResult);\n          }\n          return [1, testValue];\n        }\n      }\n    }\n    moveTos(h);\n    if (DEBUG) {\n      console.log(\"get_factor_from_complex_root returning 0\");\n    }\n    return [0, null];\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Divide a polynomial by Ax+B\n\n  //  Input:  on stack:  polycoeff  Dividend coefficients\n\n  //      factpoly_expo   as parameter\n\n  //      A    as parameter\n\n  //      B    as parameter\n\n  //  Output:   on stack: polycoeff  Contains quotient coefficients\n\n  //-----------------------------------------------------------------------------\n  yydivpoly = function(factpoly_expo, polycoeff, A, B) {\n    var Q, i, o, ref;\n    Q = zero;\n    for (i = o = ref = factpoly_expo; (ref <= 0 ? o < 0 : o > 0); i = ref <= 0 ? ++o : --o) {\n      push(stack[polycoeff + i]);\n      stack[polycoeff + i] = Q;\n      push(A);\n      divide();\n      Q = pop();\n      push(stack[polycoeff + i - 1]);\n      push(Q);\n      push(B);\n      multiply();\n      subtract();\n      stack[polycoeff + i - 1] = pop();\n    }\n    stack[polycoeff + 0] = Q;\n    if (DEBUG) {\n      return console.log(\"yydivpoly Q: \" + Q.toString());\n    }\n  };\n\n  Evalpoly = function(factpoly_expo, polycoeff, evaluateAt) {\n    var i, o, ref;\n    push(zero);\n    for (i = o = ref = factpoly_expo; (ref <= 0 ? o <= 0 : o >= 0); i = ref <= 0 ? ++o : --o) {\n      push(evaluateAt);\n      multiply();\n      push(stack[polycoeff + i]);\n      //if DEBUG\n      //  console.log(\"Evalpoly top of stack:\")\n      //  console.log stack[tos-i].toString()\n      add();\n    }\n    return pop();\n  };\n\n  // Push expression factors onto the stack. For example...\n\n  // Input\n\n  //       2\n  //     3x  + 2x + 1\n\n  // Output on stack\n\n  //     [  3  ]\n  //     [ x^2 ]\n  //     [  2  ]\n  //     [  x  ]\n  //     [  1  ]\n\n  // but not necessarily in that order. Returns the number of factors.\n\n  // Local U *p is OK here because no functional path to garbage collector.\n  factors = function(p) {\n    var h;\n    h = tos;\n    if (car(p) === symbol(ADD)) {\n      p = cdr(p);\n      while (iscons(p)) {\n        push_term_factors(car(p));\n        p = cdr(p);\n      }\n    } else {\n      push_term_factors(p);\n    }\n    return tos - h;\n  };\n\n  // Local U *p is OK here because no functional path to garbage collector.\n  push_term_factors = function(p) {\n    var results;\n    if (car(p) === symbol(MULTIPLY)) {\n      p = cdr(p);\n      results = [];\n      while (iscons(p)) {\n        push(car(p));\n        results.push(p = cdr(p));\n      }\n      return results;\n    } else {\n      return push(p);\n    }\n  };\n\n  Eval_filter = function() {\n    var results;\n    p1 = cdr(p1);\n    push(car(p1));\n    Eval();\n    p1 = cdr(p1);\n    results = [];\n    while (iscons(p1)) {\n      push(car(p1));\n      Eval();\n      filter();\n      results.push(p1 = cdr(p1));\n    }\n    return results;\n  };\n\n  filter = function() {\n    save();\n    p2 = pop();\n    p1 = pop();\n    filter_main();\n    return restore();\n  };\n\n  filter_main = function() {\n    if (car(p1) === symbol(ADD)) {\n      return filter_sum();\n    } else if (istensor(p1)) {\n      return filter_tensor();\n    } else if (Find(p1, p2)) {\n      return push_integer(0);\n    } else {\n      return push(p1);\n    }\n  };\n\n  filter_sum = function() {\n    var results;\n    push_integer(0);\n    p1 = cdr(p1);\n    results = [];\n    while (iscons(p1)) {\n      push(car(p1));\n      push(p2);\n      filter();\n      add();\n      results.push(p1 = cdr(p1));\n    }\n    return results;\n  };\n\n  filter_tensor = function() {\n    var i, i1, n, o, ref, ref1;\n    i = 0;\n    n = 0;\n    n = p1.tensor.nelem;\n    p3 = alloc_tensor(n);\n    p3.tensor.ndim = p1.tensor.ndim;\n    for (i = o = 0, ref = p1.tensor.ndim; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      p3.tensor.dim[i] = p1.tensor.dim[i];\n    }\n    for (i = i1 = 0, ref1 = n; (0 <= ref1 ? i1 < ref1 : i1 > ref1); i = 0 <= ref1 ? ++i1 : --i1) {\n      push(p1.tensor.elem[i]);\n      push(p2);\n      filter();\n      p3.tensor.elem[i] = pop();\n    }\n    return push(p3);\n  };\n\n  Eval_float = function() {\n    evaluatingAsFloats++;\n    push(cadr(p1));\n    Eval();\n    yyfloat();\n    Eval();\n    return evaluatingAsFloats--;\n  };\n\n  checkFloatHasWorkedOutCompletely = function(nodeToCheck) {\n    var numberOfEs, numberOfMults, numberOfPIs, numberOfPowers, numberOfSums;\n    numberOfPowers = countOccurrencesOfSymbol(symbol(POWER), nodeToCheck);\n    numberOfPIs = countOccurrencesOfSymbol(symbol(PI), nodeToCheck);\n    numberOfEs = countOccurrencesOfSymbol(symbol(E), nodeToCheck);\n    numberOfMults = countOccurrencesOfSymbol(symbol(MULTIPLY), nodeToCheck);\n    numberOfSums = countOccurrencesOfSymbol(symbol(ADD), nodeToCheck);\n    if (DEBUG) {\n      console.log(\"     ... numberOfPowers: \" + numberOfPowers);\n      console.log(\"     ... numberOfPIs: \" + numberOfPIs);\n      console.log(\"     ... numberOfEs: \" + numberOfEs);\n      console.log(\"     ... numberOfMults: \" + numberOfMults);\n      console.log(\"     ... numberOfSums: \" + numberOfSums);\n    }\n    if (numberOfPowers > 1 || numberOfPIs > 0 || numberOfEs > 0 || numberOfMults > 1 || numberOfSums > 1) {\n      return stop(\"float: some unevalued parts in \" + nodeToCheck);\n    }\n  };\n\n  zzfloat = function() {\n    save();\n    evaluatingAsFloats++;\n    //p1 = pop()\n    //push(cadr(p1))\n    //push(p1)\n    Eval();\n    yyfloat();\n    Eval();\n    evaluatingAsFloats--;\n    return restore();\n  };\n\n  // zzfloat doesn't necessarily result in a double\n  // , for example if there are variables. But\n  // in many of the tests there should be indeed\n  // a float, this line comes handy to highlight\n  // when that doesn't happen for those tests.\n  //checkFloatHasWorkedOutCompletely(stack[tos-1])\n  yyfloat = function() {\n    var h, i, o, ref;\n    i = 0;\n    h = 0;\n    evaluatingAsFloats++;\n    save();\n    p1 = pop();\n    if (iscons(p1)) {\n      h = tos;\n      while (iscons(p1)) {\n        push(car(p1));\n        yyfloat();\n        p1 = cdr(p1);\n      }\n      list(tos - h);\n    } else if (p1.k === TENSOR) {\n      push(p1);\n      copy_tensor();\n      p1 = pop();\n      for (i = o = 0, ref = p1.tensor.nelem; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n        push(p1.tensor.elem[i]);\n        yyfloat();\n        p1.tensor.elem[i] = pop();\n      }\n      push(p1);\n    } else if (p1.k === NUM) {\n      push(p1);\n      bignum_float();\n    } else if (p1 === symbol(PI)) {\n      push_double(Math.PI);\n    } else if (p1 === symbol(E)) {\n      push_double(Math.E);\n    } else {\n      push(p1);\n    }\n    restore();\n    return evaluatingAsFloats--;\n  };\n\n  Eval_floor = function() {\n    push(cadr(p1));\n    Eval();\n    return yfloor();\n  };\n\n  yfloor = function() {\n    save();\n    yyfloor();\n    return restore();\n  };\n\n  yyfloor = function() {\n    var d;\n    d = 0.0;\n    p1 = pop();\n    if (!isNumericAtom(p1)) {\n      push_symbol(FLOOR);\n      push(p1);\n      list(2);\n      return;\n    }\n    if (isdouble(p1)) {\n      d = Math.floor(p1.d);\n      push_double(d);\n      return;\n    }\n    if (isinteger(p1)) {\n      push(p1);\n      return;\n    }\n    p3 = new U();\n    p3.k = NUM;\n    p3.q.a = mdiv(p1.q.a, p1.q.b);\n    p3.q.b = mint(1);\n    push(p3);\n    if (isnegativenumber(p1)) {\n      push_integer(-1);\n      return add();\n    }\n  };\n\n  // 'for' function\n  /*\n  x=0\n  y=2\n  for(do(x=sqrt(2+x),y=2*y/x),k,1,9)\n  float(y)\n\n  X: k\n  B: 1...9\n\n  1st parameter is the body\n  2nd parameter is the variable to loop with\n  3rd and 4th are the limits\n\n  */\n  //define A p3\n  //define B p4\n  //define I p5\n  //define X p6\n  Eval_for = function() {\n    var i, j, k, loopingVariable, o, ref, ref1;\n    i = 0;\n    j = 0;\n    k = 0;\n    loopingVariable = caddr(p1);\n    if (!issymbol(loopingVariable)) {\n      stop(\"for: 2nd arg should be the variable to loop over\");\n    }\n    push(cadddr(p1));\n    Eval();\n    j = pop_integer();\n    if (isNaN(j)) {\n      push(p1);\n      return;\n    }\n    push(caddddr(p1));\n    Eval();\n    k = pop_integer();\n    if (isNaN(k)) {\n      push(p1);\n      return;\n    }\n    // remember contents of the index\n    // variable so we can put it back after the loop\n    p4 = get_binding(loopingVariable);\n    for (i = o = ref = j, ref1 = k; (ref <= ref1 ? o <= ref1 : o >= ref1); i = ref <= ref1 ? ++o : --o) {\n      push_integer(i);\n      p5 = pop();\n      set_binding(loopingVariable, p5);\n      push(cadr(p1));\n      Eval();\n      pop();\n    }\n    // put back the index variable to original content\n    set_binding(loopingVariable, p4);\n    // return value\n    return push_symbol(NIL);\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Author : philippe.billet@noos.fr\n\n  //  Gamma function gamma(x)\n\n  //-----------------------------------------------------------------------------\n  Eval_gamma = function() {\n    push(cadr(p1));\n    Eval();\n    return gamma();\n  };\n\n  gamma = function() {\n    save();\n    gammaf();\n    return restore();\n  };\n\n  gammaf = function() {\n    //  double d\n    p1 = pop();\n    if (isrational(p1) && MEQUAL(p1.q.a, 1) && MEQUAL(p1.q.b, 2)) {\n      if (evaluatingAsFloats) {\n        push_double(Math.PI);\n      } else {\n        push_symbol(PI);\n      }\n      push_rational(1, 2);\n      power();\n      return;\n    }\n    if (isrational(p1) && MEQUAL(p1.q.a, 3) && MEQUAL(p1.q.b, 2)) {\n      if (evaluatingAsFloats) {\n        push_double(Math.PI);\n      } else {\n        push_symbol(PI);\n      }\n      push_rational(1, 2);\n      power();\n      push_rational(1, 2);\n      multiply();\n      return;\n    }\n    \n    //  if (p1->k == DOUBLE) {\n    //    d = exp(lgamma(p1.d))\n    //    push_double(d)\n    //    return\n    //  }\n    if (isnegativeterm(p1)) {\n      if (evaluatingAsFloats) {\n        push_double(Math.PI);\n      } else {\n        push_symbol(PI);\n      }\n      push_integer(-1);\n      multiply();\n      if (evaluatingAsFloats) {\n        push_double(Math.PI);\n      } else {\n        push_symbol(PI);\n      }\n      push(p1);\n      multiply();\n      sine();\n      push(p1);\n      multiply();\n      push(p1);\n      negate();\n      gamma();\n      multiply();\n      divide();\n      return;\n    }\n    if (car(p1) === symbol(ADD)) {\n      gamma_of_sum();\n      return;\n    }\n    push_symbol(GAMMA);\n    push(p1);\n    list(2);\n  };\n\n  gamma_of_sum = function() {\n    p3 = cdr(p1);\n    if (isrational(car(p3)) && MEQUAL(car(p3).q.a, 1) && MEQUAL(car(p3).q.b, 1)) {\n      push(cadr(p3));\n      push(cadr(p3));\n      gamma();\n      return multiply();\n    } else {\n      if (isrational(car(p3)) && MEQUAL(car(p3).q.a, -1) && MEQUAL(car(p3).q.b, 1)) {\n        push(cadr(p3));\n        gamma();\n        push(cadr(p3));\n        push_integer(-1);\n        add();\n        return divide();\n      } else {\n        push_symbol(GAMMA);\n        push(p1);\n        list(2);\n      }\n    }\n  };\n\n  // Greatest common denominator\n  // can also be run on polynomials, however\n  // it works only on the integers and it works\n  // by factoring the polynomials (not Euclidean algorithm)\n  Eval_gcd = function() {\n    var results;\n    p1 = cdr(p1);\n    push(car(p1));\n    Eval();\n    p1 = cdr(p1);\n    results = [];\n    while (iscons(p1)) {\n      push(car(p1));\n      Eval();\n      gcd();\n      results.push(p1 = cdr(p1));\n    }\n    return results;\n  };\n\n  gcd = function() {\n    var prev_expanding;\n    prev_expanding = expanding;\n    save();\n    gcd_main();\n    restore();\n    return expanding = prev_expanding;\n  };\n\n  gcd_main = function() {\n    var polyVar;\n    expanding = 1;\n    p2 = pop();\n    p1 = pop();\n    if (DEBUG) {\n      console.log(\"gcd_main: p1: \" + p1 + \" p2: \" + p2);\n    }\n    if (equal(p1, p2)) {\n      push(p1);\n      return;\n    }\n    if (isrational(p1) && isrational(p2)) {\n      push(p1);\n      push(p2);\n      gcd_numbers();\n      return;\n    }\n    if ((polyVar = areunivarpolysfactoredorexpandedform(p1, p2))) {\n      gcd_polys(polyVar);\n      return;\n    }\n    if (car(p1) === symbol(ADD) && car(p2) === symbol(ADD)) {\n      gcd_sum_sum();\n      return;\n    }\n    if (car(p1) === symbol(ADD)) {\n      gcd_sum(p1);\n      p1 = pop();\n    }\n    if (car(p2) === symbol(ADD)) {\n      gcd_sum(p2);\n      p2 = pop();\n    }\n    if (car(p1) === symbol(MULTIPLY)) {\n      gcd_sum_product();\n      return;\n    }\n    if (car(p2) === symbol(MULTIPLY)) {\n      gcd_product_sum();\n      return;\n    }\n    if (car(p1) === symbol(MULTIPLY) && car(p2) === symbol(MULTIPLY)) {\n      gcd_product_product();\n      return;\n    }\n    return gcd_powers_with_same_base();\n  };\n\n  areunivarpolysfactoredorexpandedform = function(p1, p2) {\n    var polyVar;\n    if (DEBUG) {\n      console.log(\"areunivarpolysfactoredorexpandedform: p1: \" + p1 + \" p2: \" + p2);\n    }\n    if (polyVar = isunivarpolyfactoredorexpandedform(p1)) {\n      if (isunivarpolyfactoredorexpandedform(p2, polyVar)) {\n        return polyVar;\n      }\n    }\n    return false;\n  };\n\n  gcd_polys = function(polyVar) {\n    if (DEBUG) {\n      console.log(\"gcd_polys: p1: \" + p1 + \" polyVar: \" + polyVar);\n    }\n    // gcd of factors\n    push(p1);\n    push(polyVar);\n    factorpoly();\n    p1 = pop();\n    push(p2);\n    push(polyVar);\n    factorpoly();\n    p2 = pop();\n    if (DEBUG) {\n      console.log(\"GCD: factored polys:\");\n    }\n    if (DEBUG) {\n      console.log(\"  p1:\" + p1.toString());\n    }\n    if (DEBUG) {\n      console.log(\"  p2:\" + p2.toString());\n    }\n    // In case one of two polynomials can be factored,\n    // (and only in that case), then\n    // we'll need to run gcd_factors on the two polynomials.\n    // (In case neither of them can be factored there is no gcd).\n    // However, gcd_factors expects two _products_ , and\n    // in case _one_ of the polynomials can't be factored it will look\n    // like a sum instead of a product.\n    // So, we'll have to make that sum to look like a factor:\n    // let's just turn it into a product with 1.\n\n    // in case one of the two polys has been factored...\n    if (car(p1) === symbol(MULTIPLY) || car(p2) === symbol(MULTIPLY)) {\n      // then make sure that if one of them is a single\n      // factor, we take the sum and wrap it into a\n      // multiplication by 1\n      if (car(p1) !== symbol(MULTIPLY)) {\n        push_symbol(MULTIPLY);\n        push(p1);\n        push(one);\n        list(3);\n        p1 = pop();\n      }\n      if (car(p2) !== symbol(MULTIPLY)) {\n        push_symbol(MULTIPLY);\n        push(p2);\n        push(one);\n        list(3);\n        p2 = pop();\n      }\n    }\n    if (car(p1) === symbol(MULTIPLY) && car(p2) === symbol(MULTIPLY)) {\n      gcd_product_product();\n      return;\n    }\n    gcd_powers_with_same_base();\n    return true;\n  };\n\n  gcd_product_product = function() {\n    var results;\n    push(one);\n    p3 = cdr(p1);\n    results = [];\n    while (iscons(p3)) {\n      p4 = cdr(p2);\n      while (iscons(p4)) {\n        push(car(p3));\n        push(car(p4));\n        gcd();\n        multiply();\n        p4 = cdr(p4);\n      }\n      results.push(p3 = cdr(p3));\n    }\n    return results;\n  };\n\n  gcd_powers_with_same_base = function() {\n    if (car(p1) === symbol(POWER)) {\n      p3 = caddr(p1); // exponent\n      p1 = cadr(p1); // base\n    } else {\n      p3 = one;\n    }\n    if (car(p2) === symbol(POWER)) {\n      p4 = caddr(p2); // exponent\n      p2 = cadr(p2); // base\n    } else {\n      p4 = one;\n    }\n    if (!equal(p1, p2)) {\n      push(one);\n      return;\n    }\n    // are both exponents numerical?\n    if (isNumericAtom(p3) && isNumericAtom(p4)) {\n      push(p1);\n      if (lessp(p3, p4)) {\n        push(p3);\n      } else {\n        push(p4);\n      }\n      power();\n      return;\n    }\n    // are the exponents multiples of eah other?\n    push(p3);\n    push(p4);\n    divide();\n    p5 = pop();\n    if (isNumericAtom(p5)) {\n      push(p1);\n      // choose the smallest exponent\n      if (car(p3) === symbol(MULTIPLY) && isNumericAtom(cadr(p3))) {\n        p5 = cadr(p3);\n      } else {\n        p5 = one;\n      }\n      if (car(p4) === symbol(MULTIPLY) && isNumericAtom(cadr(p4))) {\n        p6 = cadr(p4);\n      } else {\n        p6 = one;\n      }\n      if (lessp(p5, p6)) {\n        push(p3);\n      } else {\n        push(p4);\n      }\n      power();\n      return;\n    }\n    push(p3);\n    push(p4);\n    subtract();\n    p5 = pop();\n    if (!isNumericAtom(p5)) {\n      push(one);\n      return;\n    }\n    // can't be equal because of test near beginning\n    push(p1);\n    if (isnegativenumber(p5)) {\n      push(p3);\n    } else {\n      push(p4);\n    }\n    return power();\n  };\n\n  // in this case gcd is used as a composite function, i.e. gcd(gcd(gcd...\n  gcd_sum_sum = function() {\n    if (length(p1) !== length(p2)) {\n      push(one);\n      return;\n    }\n    p3 = cdr(p1);\n    push(car(p3));\n    p3 = cdr(p3);\n    while (iscons(p3)) {\n      push(car(p3));\n      gcd();\n      p3 = cdr(p3);\n    }\n    p3 = pop();\n    p4 = cdr(p2);\n    push(car(p4));\n    p4 = cdr(p4);\n    while (iscons(p4)) {\n      push(car(p4));\n      gcd();\n      p4 = cdr(p4);\n    }\n    p4 = pop();\n    push(p1);\n    push(p3);\n    divide();\n    p5 = pop();\n    push(p2);\n    push(p4);\n    divide();\n    p6 = pop();\n    if (equal(p5, p6)) {\n      push(p5);\n      push(p3);\n      push(p4);\n      gcd();\n      return multiply();\n    } else {\n      return push(one);\n    }\n  };\n\n  gcd_sum = function(p) {\n    var results;\n    p = cdr(p);\n    push(car(p));\n    p = cdr(p);\n    results = [];\n    while (iscons(p)) {\n      push(car(p));\n      gcd();\n      results.push(p = cdr(p));\n    }\n    return results;\n  };\n\n  gcd_sum_product = function() {\n    var results;\n    push(one);\n    p3 = cdr(p1);\n    results = [];\n    while (iscons(p3)) {\n      push(car(p3));\n      push(p2);\n      gcd();\n      multiply();\n      results.push(p3 = cdr(p3));\n    }\n    return results;\n  };\n\n  gcd_product_sum = function() {\n    var results;\n    push(one);\n    p4 = cdr(p2);\n    results = [];\n    while (iscons(p4)) {\n      push(p1);\n      push(car(p4));\n      gcd();\n      multiply();\n      results.push(p4 = cdr(p4));\n    }\n    return results;\n  };\n\n  // Guess which symbol to use for derivative, integral, etc.\n  guess = function() {\n    var p;\n    p = pop();\n    push(p);\n    if (Find(p, symbol(SYMBOL_X))) {\n      return push_symbol(SYMBOL_X);\n    } else if (Find(p, symbol(SYMBOL_Y))) {\n      return push_symbol(SYMBOL_Y);\n    } else if (Find(p, symbol(SYMBOL_Z))) {\n      return push_symbol(SYMBOL_Z);\n    } else if (Find(p, symbol(SYMBOL_T))) {\n      return push_symbol(SYMBOL_T);\n    } else if (Find(p, symbol(SYMBOL_S))) {\n      return push_symbol(SYMBOL_S);\n    } else {\n      return push_symbol(SYMBOL_X);\n    }\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Hermite polynomial\n\n  //  Input:    tos-2    x  (can be a symbol or expr)\n\n  //      tos-1    n\n\n  //  Output:    Result on stack\n\n  //-----------------------------------------------------------------------------\n  hermite = function() {\n    save();\n    yyhermite();\n    return restore();\n  };\n\n  // uses the recurrence relation H(x,n+1)=2*x*H(x,n)-2*n*H(x,n-1)\n\n  //define X p1\n  //define N p2\n  //define Y p3\n  //define Y1 p4\n  //define Y0 p5\n  yyhermite = function() {\n    var n;\n    n = 0;\n    p2 = pop();\n    p1 = pop();\n    push(p2);\n    n = pop_integer();\n    if (n < 0 || isNaN(n)) {\n      push_symbol(HERMITE);\n      push(p1);\n      push(p2);\n      list(3);\n      return;\n    }\n    if (issymbol(p1)) {\n      return yyhermite2(n);\n    } else {\n      p3 = p1;\n      p1 = symbol(SECRETX);\n      yyhermite2(n);\n      p1 = p3;\n      push(symbol(SECRETX));\n      push(p1);\n      subst();\n      return Eval();\n    }\n  };\n\n  yyhermite2 = function(n) {\n    var i, o, ref, results;\n    i = 0;\n    push_integer(1);\n    push_integer(0);\n    p4 = pop();\n    results = [];\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      p5 = p4;\n      p4 = pop();\n      push(p1);\n      push(p4);\n      multiply();\n      push_integer(i);\n      push(p5);\n      multiply();\n      subtract();\n      push_integer(2);\n      results.push(multiply());\n    }\n    return results;\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Create a Hilbert matrix\n\n  //  Input:    Dimension on stack\n\n  //  Output:    Hilbert matrix on stack\n\n  //  Example:\n\n  //  > hilbert(5)\n  //  ((1,1/2,1/3,1/4),(1/2,1/3,1/4,1/5),(1/3,1/4,1/5,1/6),(1/4,1/5,1/6,1/7))\n\n  //-----------------------------------------------------------------------------\n\n  //define A p1\n  //define N p2\n\n  //define AELEM(i, j) A->u.tensor->elem[i * n + j]\n  hilbert = function() {\n    var i, i1, j, n, o, ref, ref1;\n    i = 0;\n    j = 0;\n    n = 0;\n    save();\n    p2 = pop();\n    push(p2);\n    n = pop_integer();\n    if (n < 2) {\n      push_symbol(HILBERT);\n      push(p2);\n      list(2);\n      restore();\n      return;\n    }\n    push_zero_matrix(n, n);\n    p1 = pop();\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      for (j = i1 = 0, ref1 = n; (0 <= ref1 ? i1 < ref1 : i1 > ref1); j = 0 <= ref1 ? ++i1 : --i1) {\n        push_integer(i + j + 1);\n        inverse();\n        p1.tensor.elem[i * n + j] = pop();\n      }\n    }\n    push(p1);\n    return restore();\n  };\n\n  DEBUG_IMAG = false;\n\n  Eval_imag = function() {\n    push(cadr(p1));\n    Eval();\n    return imag();\n  };\n\n  imag = function() {\n    save();\n    rect();\n    p1 = pop();\n    if (DEBUG_IMAG) {\n      console.log(\"IMAGE of \" + p1);\n    }\n    push(p1);\n    push(p1);\n    conjugate();\n    if (DEBUG_IMAG) {\n      console.log(\" image: conjugate result: \" + stack[tos - 1]);\n    }\n    subtract();\n    push_integer(2);\n    divide();\n    if (DEBUG_IMAG) {\n      console.log(\" image: 1st divide result: \" + stack[tos - 1]);\n    }\n    push(imaginaryunit);\n    divide();\n    if (DEBUG_IMAG) {\n      console.log(\" image: 2nd divide result: \" + stack[tos - 1]);\n    }\n    return restore();\n  };\n\n  // n is the total number of things on the stack. The first thing on the stack\n  // is the object to be indexed, followed by the indices themselves.\n\n  // called by Eval_index\n  index_function = function(n) {\n    var i, i1, j1, k, l1, m, m1, ndim, nelem, o, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, s, t;\n    i = 0;\n    k = 0;\n    m = 0;\n    ndim = 0;\n    nelem = 0;\n    t = 0;\n    save();\n    s = tos - n;\n    p1 = stack[s];\n    ndim = p1.tensor.ndim;\n    m = n - 1;\n    if (m > ndim) {\n      stop(\"too many indices for tensor\");\n    }\n    k = 0;\n    for (i = o = 0, ref = m; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      push(stack[s + i + 1]);\n      t = pop_integer();\n      if (t < 1 || t > p1.tensor.dim[i]) {\n        stop(\"index out of range\");\n      }\n      k = k * p1.tensor.dim[i] + t - 1;\n    }\n    if (ndim === m) {\n      moveTos(tos - n);\n      push(p1.tensor.elem[k]);\n      restore();\n      return;\n    }\n    for (i = i1 = ref1 = m, ref2 = ndim; (ref1 <= ref2 ? i1 < ref2 : i1 > ref2); i = ref1 <= ref2 ? ++i1 : --i1) {\n      k = k * p1.tensor.dim[i] + 0;\n    }\n    nelem = 1;\n    for (i = j1 = ref3 = m, ref4 = ndim; (ref3 <= ref4 ? j1 < ref4 : j1 > ref4); i = ref3 <= ref4 ? ++j1 : --j1) {\n      nelem *= p1.tensor.dim[i];\n    }\n    p2 = alloc_tensor(nelem);\n    p2.tensor.ndim = ndim - m;\n    for (i = l1 = ref5 = m, ref6 = ndim; (ref5 <= ref6 ? l1 < ref6 : l1 > ref6); i = ref5 <= ref6 ? ++l1 : --l1) {\n      p2.tensor.dim[i - m] = p1.tensor.dim[i];\n    }\n    for (i = m1 = 0, ref7 = nelem; (0 <= ref7 ? m1 < ref7 : m1 > ref7); i = 0 <= ref7 ? ++m1 : --m1) {\n      p2.tensor.elem[i] = p1.tensor.elem[k + i];\n    }\n    check_tensor_dimensions(p1);\n    check_tensor_dimensions(p2);\n    moveTos(tos - n);\n    push(p2);\n    return restore();\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Input:    n    Number of args on stack\n\n  //      tos-n    Right-hand value\n\n  //      tos-n+1    Left-hand value\n\n  //      tos-n+2    First index\n\n  //      .\n  //      .\n  //      .\n\n  //      tos-1    Last index\n\n  //  Output:    Result on stack\n\n  //-----------------------------------------------------------------------------\n\n  //define LVALUE p1\n  //define RVALUE p2\n  //define TMP p3\n  set_component = function(n) {\n    var i, i1, j1, k, l1, m, m1, n1, ndim, o, ref, ref1, ref2, ref3, ref4, ref5, ref6, s, t;\n    i = 0;\n    k = 0;\n    m = 0;\n    ndim = 0;\n    t = 0;\n    save();\n    if (n < 3) {\n      stop(\"error in indexed assign\");\n    }\n    s = tos - n;\n    p2 = stack[s];\n    p1 = stack[s + 1];\n    if (!istensor(p1)) { // p1 is LVALUE\n      stop(\"error in indexed assign: assigning to something that is not a tensor\");\n    }\n    ndim = p1.tensor.ndim;\n    m = n - 2;\n    if (m > ndim) {\n      stop(\"error in indexed assign\");\n    }\n    k = 0;\n    for (i = o = 0, ref = m; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      push(stack[s + i + 2]);\n      t = pop_integer();\n      if (t < 1 || t > p1.tensor.dim[i]) {\n        stop(\"error in indexed assign\\n\");\n      }\n      k = k * p1.tensor.dim[i] + t - 1;\n    }\n    for (i = i1 = ref1 = m, ref2 = ndim; (ref1 <= ref2 ? i1 < ref2 : i1 > ref2); i = ref1 <= ref2 ? ++i1 : --i1) {\n      k = k * p1.tensor.dim[i] + 0;\n    }\n    // copy\n    p3 = alloc_tensor(p1.tensor.nelem);\n    p3.tensor.ndim = p1.tensor.ndim;\n    for (i = j1 = 0, ref3 = p1.tensor.ndim; (0 <= ref3 ? j1 < ref3 : j1 > ref3); i = 0 <= ref3 ? ++j1 : --j1) {\n      p3.tensor.dim[i] = p1.tensor.dim[i];\n    }\n    for (i = l1 = 0, ref4 = p1.tensor.nelem; (0 <= ref4 ? l1 < ref4 : l1 > ref4); i = 0 <= ref4 ? ++l1 : --l1) {\n      p3.tensor.elem[i] = p1.tensor.elem[i];\n    }\n    check_tensor_dimensions(p1);\n    check_tensor_dimensions(p3);\n    p1 = p3;\n    if (ndim === m) {\n      if (istensor(p2)) { // p2 is RVALUE\n        stop(\"error in indexed assign\");\n      }\n      p1.tensor.elem[k] = p2;\n      check_tensor_dimensions(p1);\n      moveTos(tos - n);\n      push(p1);\n      restore();\n      return;\n    }\n    if (!istensor(p2)) { // p2 is RVALUE\n      stop(\"error in indexed assign\");\n    }\n    if (ndim - m !== p2.tensor.ndim) { // p2 is RVALUE\n      stop(\"error in indexed assign\");\n    }\n// p2 is RVALUE\n    for (i = m1 = 0, ref5 = p2.tensor.ndim; (0 <= ref5 ? m1 < ref5 : m1 > ref5); i = 0 <= ref5 ? ++m1 : --m1) {\n      if (p1.tensor.dim[m + i] !== p2.tensor.dim[i]) {\n        stop(\"error in indexed assign\");\n      }\n    }\n// p2 is RVALUE\n// copy rvalue\n    for (i = n1 = 0, ref6 = p2.tensor.nelem; (0 <= ref6 ? n1 < ref6 : n1 > ref6); i = 0 <= ref6 ? ++n1 : --n1) {\n      p1.tensor.elem[k + i] = p2.tensor.elem[i];\n    }\n    check_tensor_dimensions(p1);\n    check_tensor_dimensions(p2);\n    moveTos(tos - n);\n    push(p1);\n    return restore();\n  };\n\n  Eval_inner = function() {\n    var difference, i, i1, j1, l1, moretheArguments, o, operands, ref, ref1, ref2, ref3, refinedOperands, results, secondArgument, shift, theArguments;\n    \n    // if there are more than two arguments then\n    // reduce it to a more standard version\n    // of two arguments, which means we need to\n    // transform the arguments into a tree of\n    // inner products e.g.\n    // inner(a,b,c) becomes inner(a,inner(b,c))\n    // this is so we can get to a standard binary-tree\n    // version that is simpler to manipulate.\n    theArguments = [];\n    theArguments.push(car(cdr(p1)));\n    secondArgument = car(cdr(cdr(p1)));\n    if (secondArgument === symbol(NIL)) {\n      stop(\"pattern needs at least a template and a transformed version\");\n    }\n    moretheArguments = cdr(cdr(p1));\n    while (moretheArguments !== symbol(NIL)) {\n      theArguments.push(car(moretheArguments));\n      moretheArguments = cdr(moretheArguments);\n    }\n    // make it so e.g. inner(a,b,c) becomes inner(a,inner(b,c))\n    if (theArguments.length > 2) {\n      push_symbol(INNER);\n      push(theArguments[theArguments.length - 2]);\n      push(theArguments[theArguments.length - 1]);\n      list(3);\n      for (i = o = 2, ref = theArguments.length; (2 <= ref ? o < ref : o > ref); i = 2 <= ref ? ++o : --o) {\n        push_symbol(INNER);\n        swap();\n        push(theArguments[theArguments.length - i - 1]);\n        swap();\n        list(3);\n      }\n      p1 = pop();\n      Eval_inner();\n      return;\n    }\n    // TODO we have to take a look at the whole\n    // sequence of operands and make simplifications\n    // on that...\n    operands = [];\n    get_innerprod_factors(p1, operands);\n    //console.log \"printing operands --------\"\n    //for i in [0...operands.length]\n    //  console.log \"operand \" + i + \" : \" + operands[i]\n    refinedOperands = [];\n// removing all identity matrices\n    for (i = i1 = 0, ref1 = operands.length; (0 <= ref1 ? i1 < ref1 : i1 > ref1); i = 0 <= ref1 ? ++i1 : --i1) {\n      if (operands[i] === symbol(SYMBOL_IDENTITY_MATRIX)) {\n        continue;\n      } else {\n        refinedOperands.push(operands[i]);\n      }\n    }\n    operands = refinedOperands;\n    refinedOperands = [];\n    if (operands.length > 1) {\n      // removing all consecutive pairs of inverses\n      // so we can answer that inv(a)·a results in the\n      // identity matrix. We want to catch symbolic inverses\n      // not numeric inverses, those will just take care\n      // of themselves when multiplied\n      shift = 0;\n      for (i = j1 = 0, ref2 = operands.length; (0 <= ref2 ? j1 < ref2 : j1 > ref2); i = 0 <= ref2 ? ++j1 : --j1) {\n        //console.log \"comparing if \" + operands[i+shift] + \" and \" + operands[i+shift+1] + \" are inverses of each other\"\n        if ((i + shift + 1) <= (operands.length - 1)) {\n          if (!(isNumericAtomOrTensor(operands[i + shift]) || isNumericAtomOrTensor(operands[i + shift + 1]))) {\n            push(operands[i + shift]);\n            Eval();\n            inv();\n            push(operands[i + shift + 1]);\n            Eval();\n            subtract();\n            difference = pop();\n            //console.log \"result: \" + difference\n            if (isZeroAtomOrTensor(difference)) {\n              shift += 1;\n            } else {\n              refinedOperands.push(operands[i + shift]);\n            }\n          } else {\n            refinedOperands.push(operands[i + shift]);\n          }\n        } else {\n          break;\n        }\n        //console.log \"i: \" + i + \" shift: \" + shift + \" operands.length: \" + operands.length\n        if (i + shift === operands.length - 2) {\n          //console.log \"adding last operand 2 \"\n          refinedOperands.push(operands[operands.length - 1]);\n        }\n        if (i + shift >= operands.length - 1) {\n          break;\n        }\n      }\n      operands = refinedOperands;\n    }\n    //console.log \"refined operands --------\"\n    //for i in [0...refinedOperands.length]\n    //  console.log \"refined operand \" + i + \" : \" + refinedOperands[i]\n\n    //console.log \"stack[tos-1]: \" + stack[tos-1]\n\n    // now rebuild the arguments, just using the\n    // refined operands\n    push(symbol(INNER));\n    //console.log \"rebuilding the argument ----\"\n    if (operands.length > 0) {\n      for (i = l1 = 0, ref3 = operands.length; (0 <= ref3 ? l1 < ref3 : l1 > ref3); i = 0 <= ref3 ? ++l1 : --l1) {\n        //console.log \"pushing \" + operands[i]\n        push(operands[i]);\n      }\n    } else {\n      pop();\n      push(symbol(SYMBOL_IDENTITY_MATRIX));\n      return;\n    }\n    //console.log \"list(operands.length): \" + (operands.length+1)\n    list(operands.length + 1);\n    p1 = pop();\n    p1 = cdr(p1);\n    push(car(p1));\n    Eval();\n    p1 = cdr(p1);\n    results = [];\n    while (iscons(p1)) {\n      push(car(p1));\n      Eval();\n      inner();\n      results.push(p1 = cdr(p1));\n    }\n    return results;\n  };\n\n  // inner definition\n  inner = function() {\n    var arg1, arg2, arg3, subtractionResult;\n    save();\n    p2 = pop();\n    p1 = pop();\n    // more in general, when a and b are scalars,\n    // inner(a*M1, b*M2) is equal to\n    // a*b*inner(M1,M2), but of course we can only\n    // \"bring out\" in a and b the scalars, because\n    // it's the only commutative part.\n    // that's going to be trickier to do in general\n    // but let's start with just the signs.\n    if (isnegativeterm(p2) && isnegativeterm(p1)) {\n      push(p2);\n      negate();\n      p2 = pop();\n      push(p1);\n      negate();\n      p1 = pop();\n    }\n    // since inner is associative,\n    // put it in a canonical form i.e.\n    // inner(inner(a,b),c) ->\n    // inner(a,inner(b,c))\n    // so that we can recognise when they\n    // are equal.\n    if (isinnerordot(p1)) {\n      arg1 = car(cdr(p1)); //a\n      arg2 = car(cdr(cdr(p1))); //b\n      arg3 = p2;\n      p1 = arg1;\n      push(arg2);\n      push(arg3);\n      inner();\n      p2 = pop();\n    }\n    // Check if one of the operands is the identity matrix\n    // we could maybe use Eval_testeq here but\n    // this seems to suffice?\n    if (p1 === symbol(SYMBOL_IDENTITY_MATRIX)) {\n      push(p2);\n      restore();\n      return;\n    } else if (p2 === symbol(SYMBOL_IDENTITY_MATRIX)) {\n      push(p1);\n      restore();\n      return;\n    }\n    if (istensor(p1) && istensor(p2)) {\n      inner_f();\n    } else {\n      if (!(isNumericAtomOrTensor(p1) || isNumericAtomOrTensor(p2))) {\n        push(p1);\n        push(p2);\n        inv();\n        subtract();\n        subtractionResult = pop();\n        if (isZeroAtomOrTensor(subtractionResult)) {\n          push_symbol(SYMBOL_IDENTITY_MATRIX);\n          restore();\n          return;\n        }\n      }\n      // if either operand is a sum then distribute\n      // (if we are in expanding mode)\n      if (expanding && isadd(p1)) {\n        p1 = cdr(p1);\n        push(zero);\n        while (iscons(p1)) {\n          push(car(p1));\n          push(p2);\n          inner();\n          add();\n          p1 = cdr(p1);\n        }\n        restore();\n        return;\n      }\n      if (expanding && isadd(p2)) {\n        p2 = cdr(p2);\n        push(zero);\n        while (iscons(p2)) {\n          push(p1);\n          push(car(p2));\n          inner();\n          add();\n          p2 = cdr(p2);\n        }\n        restore();\n        return;\n      }\n      push(p1);\n      push(p2);\n      // there are 8 remaining cases here, since each of the\n      // two arguments can only be a scalar/tensor/unknown\n      // and the tensor - tensor case was caught\n      // upper in the code\n      if (istensor(p1) && isNumericAtom(p2)) {\n        // one case covered by this branch:\n        //   tensor - scalar\n        tensor_times_scalar();\n      } else if (isNumericAtom(p1) && istensor(p2)) {\n        // one case covered by this branch:\n        //   scalar - tensor\n        scalar_times_tensor();\n      } else {\n        if (isNumericAtom(p1) || isNumericAtom(p2)) {\n          // three cases covered by this branch:\n          //   unknown - scalar\n          //   scalar - unknown\n          //   scalar  - scalar\n          // in these cases a normal multiplication\n          // will be OK\n          multiply();\n        } else {\n          // three cases covered by this branch:\n          //   unknown - unknown\n          //   unknown - tensor\n          //   tensor  - unknown\n          // in this case we can't use normal\n          // multiplication.\n          pop();\n          pop();\n          push_symbol(INNER);\n          push(p1);\n          push(p2);\n          list(3);\n          restore();\n          return;\n        }\n      }\n    }\n    return restore();\n  };\n\n  // inner product of tensors p1 and p2\n  inner_f = function() {\n    var a, ak, b, bk, c, i, i1, j, j1, k, l1, m1, n, n1, ndim, o, o1, ref, ref1, ref2, ref3, ref4, ref5, ref6;\n    i = 0;\n    n = p1.tensor.dim[p1.tensor.ndim - 1];\n    if (n !== p2.tensor.dim[0]) {\n      debugger;\n      stop(\"inner: tensor dimension check\");\n    }\n    ndim = p1.tensor.ndim + p2.tensor.ndim - 2;\n    if (ndim > MAXDIM) {\n      stop(\"inner: rank of result exceeds maximum\");\n    }\n    a = p1.tensor.elem;\n    b = p2.tensor.elem;\n    //---------------------------------------------------------------------\n\n    //  ak is the number of rows in tensor A\n\n    //  bk is the number of columns in tensor B\n\n    //  Example:\n\n    //  A[3][3][4] B[4][4][3]\n\n    //    3  3        ak = 3 * 3 = 9\n\n    //                  4  3    bk = 4 * 3 = 12\n\n    //---------------------------------------------------------------------\n    ak = 1;\n    for (i = o = 0, ref = p1.tensor.ndim - 1; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      ak *= p1.tensor.dim[i];\n    }\n    bk = 1;\n    for (i = i1 = 1, ref1 = p2.tensor.ndim; (1 <= ref1 ? i1 < ref1 : i1 > ref1); i = 1 <= ref1 ? ++i1 : --i1) {\n      bk *= p2.tensor.dim[i];\n    }\n    p3 = alloc_tensor(ak * bk);\n    c = p3.tensor.elem;\n// new method copied from ginac http://www.ginac.de/\n    for (i = j1 = 0, ref2 = ak; (0 <= ref2 ? j1 < ref2 : j1 > ref2); i = 0 <= ref2 ? ++j1 : --j1) {\n      for (j = l1 = 0, ref3 = n; (0 <= ref3 ? l1 < ref3 : l1 > ref3); j = 0 <= ref3 ? ++l1 : --l1) {\n        if (isZeroAtomOrTensor(a[i * n + j])) {\n          continue;\n        }\n        for (k = m1 = 0, ref4 = bk; (0 <= ref4 ? m1 < ref4 : m1 > ref4); k = 0 <= ref4 ? ++m1 : --m1) {\n          push(a[i * n + j]);\n          push(b[j * bk + k]);\n          multiply();\n          push(c[i * bk + k]);\n          add();\n          c[i * bk + k] = pop();\n        }\n      }\n    }\n    //---------------------------------------------------------------------\n\n    //  Note on understanding \"k * bk + j\"\n\n    //  k * bk because each element of a column is bk locations apart\n\n    //  + j because the beginnings of all columns are in the first bk \n    //  locations\n\n    //  Example: n = 2, bk = 6\n\n    //  b111  <- 1st element of 1st column\n    //  b112  <- 1st element of 2nd column\n    //  b113  <- 1st element of 3rd column\n    //  b121  <- 1st element of 4th column\n    //  b122  <- 1st element of 5th column\n    //  b123  <- 1st element of 6th column\n\n    //  b211  <- 2nd element of 1st column\n    //  b212  <- 2nd element of 2nd column\n    //  b213  <- 2nd element of 3rd column\n    //  b221  <- 2nd element of 4th column\n    //  b222  <- 2nd element of 5th column\n    //  b223  <- 2nd element of 6th column\n\n    //---------------------------------------------------------------------\n    if (ndim === 0) {\n      return push(p3.tensor.elem[0]);\n    } else {\n      p3.tensor.ndim = ndim;\n      j = 0;\n      for (i = n1 = 0, ref5 = p1.tensor.ndim - 1; (0 <= ref5 ? n1 < ref5 : n1 > ref5); i = 0 <= ref5 ? ++n1 : --n1) {\n        p3.tensor.dim[i] = p1.tensor.dim[i];\n      }\n      j = p1.tensor.ndim - 1;\n      for (i = o1 = 0, ref6 = p2.tensor.ndim - 1; (0 <= ref6 ? o1 < ref6 : o1 > ref6); i = 0 <= ref6 ? ++o1 : --o1) {\n        p3.tensor.dim[j + i] = p2.tensor.dim[i + 1];\n      }\n      return push(p3);\n    }\n  };\n\n  // Algebrite.run('c·(b+a)ᵀ·inv((a+b)ᵀ)·d').toString();\n  // Algebrite.run('c*(b+a)ᵀ·inv((a+b)ᵀ)·d').toString();\n  // Algebrite.run('(c·(b+a)ᵀ)·(inv((a+b)ᵀ)·d)').toString();\n  get_innerprod_factors = function(tree, factors_accumulator) {\n    if (!iscons(tree)) {\n      add_factor_to_accumulator(tree, factors_accumulator);\n      return;\n    }\n    if (cdr(tree) === symbol(NIL)) {\n      tree = get_innerprod_factors(car(tree), factors_accumulator);\n      return;\n    }\n    if (isinnerordot(tree)) {\n      // console.log \"there is inner at top, recursing on the operands\"\n      get_innerprod_factors(car(cdr(tree)), factors_accumulator);\n      get_innerprod_factors(cdr(cdr(tree)), factors_accumulator);\n      return;\n    }\n    return add_factor_to_accumulator(tree, factors_accumulator);\n  };\n\n  add_factor_to_accumulator = function(tree, factors_accumulator) {\n    if (tree !== symbol(NIL)) {\n      // console.log \">> adding to factors_accumulator: \" + tree\n      return factors_accumulator.push(tree);\n    }\n  };\n\n  itab = [\n    // 1\n    \"f(a,a*x)\",\n    // 9 (need a caveat for 7 so we can put 9 after 7)\n    \"f(1/x,log(x))\",\n    // 7\n    \"f(x^a,x^(a+1)/(a+1))\",\n    // five specialisations of case 7 for speed.\n    // Covers often-occurring exponents: each of\n    // these case ends up in a dedicated entry, so we\n    // only have to do one sure-shot match.\n    \"f(x^(-2),-x^(-1))\",\n    \"f(x^(-1/2),2*x^(1/2))\",\n    \"f(x^(1/2),2/3*x^(3/2))\",\n    \"f(x,x^2/2)\",\n    \"f(x^2,x^3/3)\",\n    // 12\n    \"f(exp(a*x),1/a*exp(a*x))\",\n    \"f(exp(a*x+b),1/a*exp(a*x+b))\",\n    \"f(x*exp(a*x^2),exp(a*x^2)/(2*a))\",\n    \"f(x*exp(a*x^2+b),exp(a*x^2+b)/(2*a))\",\n    // 14\n    \"f(log(a*x),x*log(a*x)-x)\",\n    // 15\n    \"f(a^x,a^x/log(a),or(not(number(a)),a>0))\",\n    // 16\n    \"f(1/(a+x^2),1/sqrt(a)*arctan(x/sqrt(a)),or(not(number(a)),a>0))\",\n    // 17\n    \"f(1/(a-x^2),1/sqrt(a)*arctanh(x/sqrt(a)))\",\n    // 19\n    \"f(1/sqrt(a-x^2),arcsin(x/(sqrt(a))))\",\n    // 20\n    \"f(1/sqrt(a+x^2),log(x+sqrt(a+x^2)))\",\n    // 27\n    \"f(1/(a+b*x),1/b*log(a+b*x))\",\n    // 28\n    \"f(1/(a+b*x)^2,-1/(b*(a+b*x)))\",\n    // 29\n    \"f(1/(a+b*x)^3,-1/(2*b)*1/(a+b*x)^2)\",\n    // 30\n    \"f(x/(a+b*x),x/b-a*log(a+b*x)/b/b)\",\n    // 31\n    \"f(x/(a+b*x)^2,1/b^2*(log(a+b*x)+a/(a+b*x)))\",\n    // 33\n    \"f(x^2/(a+b*x),1/b^2*(1/2*(a+b*x)^2-2*a*(a+b*x)+a^2*log(a+b*x)))\",\n    // 34\n    \"f(x^2/(a+b*x)^2,1/b^3*(a+b*x-2*a*log(a+b*x)-a^2/(a+b*x)))\",\n    // 35\n    \"f(x^2/(a+b*x)^3,1/b^3*(log(a+b*x)+2*a/(a+b*x)-1/2*a^2/(a+b*x)^2))\",\n    // 37\n    \"f(1/x*1/(a+b*x),-1/a*log((a+b*x)/x))\",\n    // 38\n    \"f(1/x*1/(a+b*x)^2,1/a*1/(a+b*x)-1/a^2*log((a+b*x)/x))\",\n    // 39\n    \"f(1/x*1/(a+b*x)^3,1/a^3*(1/2*((2*a+b*x)/(a+b*x))^2+log(x/(a+b*x))))\",\n    // 40\n    \"f(1/x^2*1/(a+b*x),-1/(a*x)+b/a^2*log((a+b*x)/x))\",\n    // 41\n    \"f(1/x^3*1/(a+b*x),(2*b*x-a)/(2*a^2*x^2)+b^2/a^3*log(x/(a+b*x)))\",\n    // 42\n    \"f(1/x^2*1/(a+b*x)^2,-(a+2*b*x)/(a^2*x*(a+b*x))+2*b/a^3*log((a+b*x)/x))\",\n    // 60\n    \"f(1/(a+b*x^2),1/sqrt(a*b)*arctan(x*sqrt(a*b)/a),or(not(number(a*b)),a*b>0))\",\n    // 61\n    \"f(1/(a+b*x^2),1/(2*sqrt(-a*b))*log((a+x*sqrt(-a*b))/(a-x*sqrt(-a*b))),or(not(number(a*b)),a*b<0))\",\n    // 62 is the same as 60\n    // 63\n    \"f(x/(a+b*x^2),1/2*1/b*log(a+b*x^2))\",\n    //64\n    \"f(x^2/(a+b*x^2),x/b-a/b*integral(1/(a+b*x^2),x))\",\n    //65\n    \"f(1/(a+b*x^2)^2,x/(2*a*(a+b*x^2))+1/2*1/a*integral(1/(a+b*x^2),x))\",\n    //66 is covered by 61\n    //70\n    \"f(1/x*1/(a+b*x^2),1/2*1/a*log(x^2/(a+b*x^2)))\",\n    //71\n    \"f(1/x^2*1/(a+b*x^2),-1/(a*x)-b/a*integral(1/(a+b*x^2),x))\",\n    //74\n    \"f(1/(a+b*x^3),1/3*1/a*(a/b)^(1/3)*(1/2*log(((a/b)^(1/3)+x)^3/(a+b*x^3))+sqrt(3)*arctan((2*x-(a/b)^(1/3))*(a/b)^(-1/3)/sqrt(3))))\",\n    //76\n    \"f(x^2/(a+b*x^3),1/3*1/b*log(a+b*x^3))\",\n    // float(defint(1/(2+3*X^4),X,0,pi)) gave wrong result.\n    // Also, the tests related to the indefinite integral\n    // fail since we rationalise expressions \"better\", so I'm thinking\n    // to take this out completely as it seemed to give the\n    // wrong results in the first place.\n    //77\n    //\"f(1/(a+b*x^4),1/2*1/a*(a/b/4)^(1/4)*(1/2*log((x^2+2*(a/b/4)^(1/4)*x+2*(a/b/4)^(1/2))/(x^2-2*(a/b/4)^(1/4)*x+2*(a/b/4)^(1/2)))+arctan(2*(a/b/4)^(1/4)*x/(2*(a/b/4)^(1/2)-x^2))),or(not(number(a*b)),a*b>0))\",\n    //78\n    //\"f(1/(a+b*x^4),1/2*(-a/b)^(1/4)/a*(1/2*log((x+(-a/b)^(1/4))/(x-(-a/b)^(1/4)))+arctan(x*(-a/b)^(-1/4))),or(not(number(a*b)),a*b<0))\",\n    //79\n    \"f(x/(a+b*x^4),1/2*sqrt(b/a)/b*arctan(x^2*sqrt(b/a)),or(not(number(a*b)),a*b>0))\",\n    //80\n    \"f(x/(a+b*x^4),1/4*sqrt(-b/a)/b*log((x^2-sqrt(-a/b))/(x^2+sqrt(-a/b))),or(not(number(a*b)),a*b<0))\",\n    // float(defint(X^2/(2+3*X^4),X,0,pi)) gave wrong result.\n    // Also, the tests related to the indefinite integral\n    // fail since we rationalise expressions \"better\", so I'm thinking\n    // to take this out completely as it seemed to give the\n    // wrong results in the first place.\n    //81\n    //\"f(x^2/(a+b*x^4),1/4*1/b*(a/b/4)^(-1/4)*(1/2*log((x^2-2*(a/b/4)^(1/4)*x+2*sqrt(a/b/4))/(x^2+2*(a/b/4)^(1/4)*x+2*sqrt(a/b/4)))+arctan(2*(a/b/4)^(1/4)*x/(2*sqrt(a/b/4)-x^2))),or(not(number(a*b)),a*b>0))\",\n    //82\n    //\"f(x^2/(a+b*x^4),1/4*1/b*(-a/b)^(-1/4)*(log((x-(-a/b)^(1/4))/(x+(-a/b)^(1/4)))+2*arctan(x*(-a/b)^(-1/4))),or(not(number(a*b)),a*b<0))\",\n    //83\n    \"f(x^3/(a+b*x^4),1/4*1/b*log(a+b*x^4))\",\n    //124\n    \"f(sqrt(a+b*x),2/3*1/b*sqrt((a+b*x)^3))\",\n    //125\n    \"f(x*sqrt(a+b*x),-2*(2*a-3*b*x)*sqrt((a+b*x)^3)/15/b^2)\",\n    //126\n    \"f(x^2*sqrt(a+b*x),2*(8*a^2-12*a*b*x+15*b^2*x^2)*sqrt((a+b*x)^3)/105/b^3)\",\n    //128\n    \"f(sqrt(a+b*x)/x,2*sqrt(a+b*x)+a*integral(1/x*1/sqrt(a+b*x),x))\",\n    //129\n    \"f(sqrt(a+b*x)/x^2,-sqrt(a+b*x)/x+b/2*integral(1/x*1/sqrt(a+b*x),x))\",\n    //131\n    \"f(1/sqrt(a+b*x),2*sqrt(a+b*x)/b)\",\n    //132\n    \"f(x/sqrt(a+b*x),-2/3*(2*a-b*x)*sqrt(a+b*x)/b^2)\",\n    //133\n    \"f(x^2/sqrt(a+b*x),2/15*(8*a^2-4*a*b*x+3*b^2*x^2)*sqrt(a+b*x)/b^3)\",\n    //135\n    \"f(1/x*1/sqrt(a+b*x),1/sqrt(a)*log((sqrt(a+b*x)-sqrt(a))/(sqrt(a+b*x)+sqrt(a))),or(not(number(a)),a>0))\",\n    //136\n    \"f(1/x*1/sqrt(a+b*x),2/sqrt(-a)*arctan(sqrt(-(a+b*x)/a)),or(not(number(a)),a<0))\",\n    //137\n    \"f(1/x^2*1/sqrt(a+b*x),-sqrt(a+b*x)/a/x-1/2*b/a*integral(1/x*1/sqrt(a+b*x),x))\",\n    //156\n    \"f(sqrt(x^2+a),1/2*(x*sqrt(x^2+a)+a*log(x+sqrt(x^2+a))))\",\n    //157\n    \"f(1/sqrt(x^2+a),log(x+sqrt(x^2+a)))\",\n    //158\n    \"f(1/x*1/sqrt(x^2+a),arcsec(x/sqrt(-a))/sqrt(-a),or(not(number(a)),a<0))\",\n    //159\n    \"f(1/x*1/sqrt(x^2+a),-1/sqrt(a)*log((sqrt(a)+sqrt(x^2+a))/x),or(not(number(a)),a>0))\",\n    //160\n    \"f(sqrt(x^2+a)/x,sqrt(x^2+a)-sqrt(a)*log((sqrt(a)+sqrt(x^2+a))/x),or(not(number(a)),a>0))\",\n    //161\n    \"f(sqrt(x^2+a)/x,sqrt(x^2+a)-sqrt(-a)*arcsec(x/sqrt(-a)),or(not(number(a)),a<0))\",\n    //162\n    \"f(x/sqrt(x^2+a),sqrt(x^2+a))\",\n    //163\n    \"f(x*sqrt(x^2+a),1/3*sqrt((x^2+a)^3))\",\n    //164 need an unexpanded version?\n    \"f(sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/4*(x*sqrt((x^2+a^(1/3))^3)+3/2*a^(1/3)*x*sqrt(x^2+a^(1/3))+3/2*a^(2/3)*log(x+sqrt(x^2+a^(1/3)))))\",\n    // match doesn't work for the following\n    \"f(sqrt(-a+x^6-3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/4*(x*sqrt((x^2-a^(1/3))^3)-3/2*a^(1/3)*x*sqrt(x^2-a^(1/3))+3/2*a^(2/3)*log(x+sqrt(x^2-a^(1/3)))))\",\n    //165\n    \"f(1/sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),x/a^(1/3)/sqrt(x^2+a^(1/3)))\",\n    //166\n    \"f(x/sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),-1/sqrt(x^2+a^(1/3)))\",\n    //167\n    \"f(x*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/5*sqrt((x^2+a^(1/3))^5))\",\n    //168\n    \"f(x^2*sqrt(x^2+a),1/4*x*sqrt((x^2+a)^3)-1/8*a*x*sqrt(x^2+a)-1/8*a^2*log(x+sqrt(x^2+a)))\",\n    //169\n    \"f(x^3*sqrt(x^2+a),(1/5*x^2-2/15*a)*sqrt((x^2+a)^3),and(number(a),a>0))\",\n    //170\n    \"f(x^3*sqrt(x^2+a),sqrt((x^2+a)^5)/5-a*sqrt((x^2+a)^3)/3,and(number(a),a<0))\",\n    //171\n    \"f(x^2/sqrt(x^2+a),1/2*x*sqrt(x^2+a)-1/2*a*log(x+sqrt(x^2+a)))\",\n    //172\n    \"f(x^3/sqrt(x^2+a),1/3*sqrt((x^2+a)^3)-a*sqrt(x^2+a))\",\n    //173\n    \"f(1/x^2*1/sqrt(x^2+a),-sqrt(x^2+a)/a/x)\",\n    //174\n    \"f(1/x^3*1/sqrt(x^2+a),-1/2*sqrt(x^2+a)/a/x^2+1/2*log((sqrt(a)+sqrt(x^2+a))/x)/a^(3/2),or(not(number(a)),a>0))\",\n    //175\n    \"f(1/x^3*1/sqrt(x^2-a),1/2*sqrt(x^2-a)/a/x^2+1/2*1/(a^(3/2))*arcsec(x/(a^(1/2))),or(not(number(a)),a>0))\",\n    //176+\n    \"f(x^2*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/6*x*sqrt((x^2+a^(1/3))^5)-1/24*a^(1/3)*x*sqrt((x^2+a^(1/3))^3)-1/16*a^(2/3)*x*sqrt(x^2+a^(1/3))-1/16*a*log(x+sqrt(x^2+a^(1/3))),or(not(number(a)),a>0))\",\n    //176-\n    \"f(x^2*sqrt(-a-3*a^(1/3)*x^4+3*a^(2/3)*x^2+x^6),1/6*x*sqrt((x^2-a^(1/3))^5)+1/24*a^(1/3)*x*sqrt((x^2-a^(1/3))^3)-1/16*a^(2/3)*x*sqrt(x^2-a^(1/3))+1/16*a*log(x+sqrt(x^2-a^(1/3))),or(not(number(a)),a>0))\",\n    //177+\n    \"f(x^3*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/7*sqrt((x^2+a^(1/3))^7)-1/5*a^(1/3)*sqrt((x^2+a^(1/3))^5),or(not(number(a)),a>0))\",\n    //177-\n    \"f(x^3*sqrt(-a-3*a^(1/3)*x^4+3*a^(2/3)*x^2+x^6),1/7*sqrt((x^2-a^(1/3))^7)+1/5*a^(1/3)*sqrt((x^2-a^(1/3))^5),or(not(number(a)),a>0))\",\n    //196\n    \"f(1/(x-a)/sqrt(x^2-a^2),-sqrt(x^2-a^2)/a/(x-a))\",\n    //197\n    \"f(1/(x+a)/sqrt(x^2-a^2),sqrt(x^2-a^2)/a/(x+a))\",\n    //200+\n    \"f(sqrt(a-x^2),1/2*(x*sqrt(a-x^2)+a*arcsin(x/sqrt(abs(a)))))\",\n    //201    (seems to be handled somewhere else)\n    //202\n    \"f(1/x*1/sqrt(a-x^2),-1/sqrt(a)*log((sqrt(a)+sqrt(a-x^2))/x),or(not(number(a)),a>0))\",\n    //203\n    \"f(sqrt(a-x^2)/x,sqrt(a-x^2)-sqrt(a)*log((sqrt(a)+sqrt(a-x^2))/x),or(not(number(a)),a>0))\",\n    //204\n    \"f(x/sqrt(a-x^2),-sqrt(a-x^2))\",\n    //205\n    \"f(x*sqrt(a-x^2),-1/3*sqrt((a-x^2)^3))\",\n    //210\n    \"f(x^2*sqrt(a-x^2),-x/4*sqrt((a-x^2)^3)+1/8*a*(x*sqrt(a-x^2)+a*arcsin(x/sqrt(a))),or(not(number(a)),a>0))\",\n    //211\n    \"f(x^3*sqrt(a-x^2),(-1/5*x^2-2/15*a)*sqrt((a-x^2)^3),or(not(number(a)),a>0))\",\n    //214\n    \"f(x^2/sqrt(a-x^2),-x/2*sqrt(a-x^2)+a/2*arcsin(x/sqrt(a)),or(not(number(a)),a>0))\",\n    //215\n    \"f(1/x^2*1/sqrt(a-x^2),-sqrt(a-x^2)/a/x,or(not(number(a)),a>0))\",\n    //216\n    \"f(sqrt(a-x^2)/x^2,-sqrt(a-x^2)/x-arcsin(x/sqrt(a)),or(not(number(a)),a>0))\",\n    //217\n    \"f(sqrt(a-x^2)/x^3,-1/2*sqrt(a-x^2)/x^2+1/2*log((sqrt(a)+sqrt(a-x^2))/x)/sqrt(a),or(not(number(a)),a>0))\",\n    //218\n    \"f(sqrt(a-x^2)/x^4,-1/3*sqrt((a-x^2)^3)/a/x^3,or(not(number(a)),a>0))\",\n    // 273\n    \"f(sqrt(a*x^2+b),x*sqrt(a*x^2+b)/2+b*log(x*sqrt(a)+sqrt(a*x^2+b))/2/sqrt(a),and(number(a),a>0))\",\n    // 274\n    \"f(sqrt(a*x^2+b),x*sqrt(a*x^2+b)/2+b*arcsin(x*sqrt(-a/b))/2/sqrt(-a),and(number(a),a<0))\",\n    // 290\n    \"f(sin(a*x),-cos(a*x)/a)\",\n    // 291\n    \"f(cos(a*x),sin(a*x)/a)\",\n    // 292\n    \"f(tan(a*x),-log(cos(a*x))/a)\",\n    // 293\n    \"f(1/tan(a*x),log(sin(a*x))/a)\",\n    // 294\n    \"f(1/cos(a*x),log(tan(pi/4+a*x/2))/a)\",\n    // 295\n    \"f(1/sin(a*x),log(tan(a*x/2))/a)\",\n    // 296\n    \"f(sin(a*x)^2,x/2-sin(2*a*x)/(4*a))\",\n    // 297\n    \"f(sin(a*x)^3,-cos(a*x)*(sin(a*x)^2+2)/(3*a))\",\n    // 298\n    \"f(sin(a*x)^4,3/8*x-sin(2*a*x)/(4*a)+sin(4*a*x)/(32*a))\",\n    // 302\n    \"f(cos(a*x)^2,x/2+sin(2*a*x)/(4*a))\",\n    // 303\n    \"f(cos(a*x)^3,sin(a*x)*(cos(a*x)^2+2)/(3*a))\",\n    // 304\n    \"f(cos(a*x)^4,3/8*x+sin(2*a*x)/(4*a)+sin(4*a*x)/(32*a))\",\n    // 308\n    \"f(1/sin(a*x)^2,-1/(a*tan(a*x)))\",\n    // 312\n    \"f(1/cos(a*x)^2,tan(a*x)/a)\",\n    // 318\n    \"f(sin(a*x)*cos(a*x),sin(a*x)^2/(2*a))\",\n    // 320\n    \"f(sin(a*x)^2*cos(a*x)^2,-sin(4*a*x)/(32*a)+x/8)\",\n    // 326\n    \"f(sin(a*x)/cos(a*x)^2,1/(a*cos(a*x)))\",\n    // 327\n    \"f(sin(a*x)^2/cos(a*x),(log(tan(pi/4+a*x/2))-sin(a*x))/a)\",\n    // 328\n    \"f(cos(a*x)/sin(a*x)^2,-1/(a*sin(a*x)))\",\n    // 329\n    \"f(1/(sin(a*x)*cos(a*x)),log(tan(a*x))/a)\",\n    // 330\n    \"f(1/(sin(a*x)*cos(a*x)^2),(1/cos(a*x)+log(tan(a*x/2)))/a)\",\n    // 331\n    \"f(1/(sin(a*x)^2*cos(a*x)),(log(tan(pi/4+a*x/2))-1/sin(a*x))/a)\",\n    // 333\n    \"f(1/(sin(a*x)^2*cos(a*x)^2),-2/(a*tan(2*a*x)))\",\n    // 335\n    \"f(sin(a+b*x),-cos(a+b*x)/b)\",\n    // 336\n    \"f(cos(a+b*x),sin(a+b*x)/b)\",\n    // 337+ (with the addition of b)\n    \"f(1/(b+b*sin(a*x)),-tan(pi/4-a*x/2)/a/b)\",\n    // 337- (with the addition of b)\n    \"f(1/(b-b*sin(a*x)),tan(pi/4+a*x/2)/a/b)\",\n    // 338 (with the addition of b)\n    \"f(1/(b+b*cos(a*x)),tan(a*x/2)/a/b)\",\n    // 339 (with the addition of b)\n    \"f(1/(b-b*cos(a*x)),-1/tan(a*x/2)/a/b)\",\n    // 340\n    \"f(1/(a+b*sin(x)),1/sqrt(b^2-a^2)*log((a*tan(x/2)+b-sqrt(b^2-a^2))/(a*tan(x/2)+b+sqrt(b^2-a^2))),b^2-a^2)\", // check that b^2-a^2 is not zero\n    // 341\n    \"f(1/(a+b*cos(x)),1/sqrt(b^2-a^2)*log((sqrt(b^2-a^2)*tan(x/2)+a+b)/(sqrt(b^2-a^2)*tan(x/2)-a-b)),b^2-a^2)\", // check that b^2-a^2 is not zero\n    // 389\n    \"f(x*sin(a*x),sin(a*x)/a^2-x*cos(a*x)/a)\",\n    // 390\n    \"f(x^2*sin(a*x),2*x*sin(a*x)/a^2-(a^2*x^2-2)*cos(a*x)/a^3)\",\n    // 393\n    \"f(x*cos(a*x),cos(a*x)/a^2+x*sin(a*x)/a)\",\n    // 394\n    \"f(x^2*cos(a*x),2*x*cos(a*x)/a^2+(a^2*x^2-2)*sin(a*x)/a^3)\",\n    // 441\n    \"f(arcsin(a*x),x*arcsin(a*x)+sqrt(1-a^2*x^2)/a)\",\n    // 442\n    \"f(arccos(a*x),x*arccos(a*x)-sqrt(1-a^2*x^2)/a)\",\n    // 443\n    \"f(arctan(a*x),x*arctan(a*x)-1/2*log(1+a^2*x^2)/a)\",\n    // 485 (with addition of a)\n    // however commenting out since it's a duplicate of 14\n    // \"f(log(a*x),x*log(a*x)-x)\",\n    // 486 (with addition of a)\n    \"f(x*log(a*x),x^2*log(a*x)/2-x^2/4)\",\n    // 487 (with addition of a)\n    \"f(x^2*log(a*x),x^3*log(a*x)/3-1/9*x^3)\",\n    // 489\n    \"f(log(x)^2,x*log(x)^2-2*x*log(x)+2*x)\",\n    // 493 (with addition of a)\n    \"f(1/x*1/(a+log(x)),log(a+log(x)))\",\n    // 499\n    \"f(log(a*x+b),(a*x+b)*log(a*x+b)/a-x)\",\n    // 500\n    \"f(log(a*x+b)/x^2,a/b*log(x)-(a*x+b)*log(a*x+b)/b/x)\",\n    // 554\n    \"f(sinh(x),cosh(x))\",\n    // 555\n    \"f(cosh(x),sinh(x))\",\n    // 556\n    \"f(tanh(x),log(cosh(x)))\",\n    // 560\n    \"f(x*sinh(x),x*cosh(x)-sinh(x))\",\n    // 562\n    \"f(x*cosh(x),x*sinh(x)-cosh(x))\",\n    // 566\n    \"f(sinh(x)^2,sinh(2*x)/4-x/2)\",\n    // 569\n    \"f(tanh(x)^2,x-tanh(x))\",\n    // 572\n    \"f(cosh(x)^2,sinh(2*x)/4+x/2)\",\n    // ?\n    \"f(x^3*exp(a*x^2),exp(a*x^2)*(x^2/a-1/(a^2))/2)\",\n    // ?\n    \"f(x^3*exp(a*x^2+b),exp(a*x^2)*exp(b)*(x^2/a-1/(a^2))/2)\",\n    // ?\n    \"f(exp(a*x^2),-i*sqrt(pi)*erf(i*sqrt(a)*x)/sqrt(a)/2)\",\n    // ?\n    \"f(erf(a*x),x*erf(a*x)+exp(-a^2*x^2)/a/sqrt(pi))\",\n    // these are needed for the surface integral in the manual\n    \"f(x^2*(1-x^2)^(3/2),(x*sqrt(1-x^2)*(-8*x^4+14*x^2-3)+3*arcsin(x))/48)\",\n    \"f(x^2*(1-x^2)^(5/2),(x*sqrt(1-x^2)*(48*x^6-136*x^4+118*x^2-15)+15*arcsin(x))/384)\",\n    \"f(x^4*(1-x^2)^(3/2),(-x*sqrt(1-x^2)*(16*x^6-24*x^4+2*x^2+3)+3*arcsin(x))/128)\",\n    \"f(x*exp(a*x),exp(a*x)*(a*x-1)/(a^2))\",\n    \"f(x*exp(a*x+b),exp(a*x+b)*(a*x-1)/(a^2))\",\n    \"f(x^2*exp(a*x),exp(a*x)*(a^2*x^2-2*a*x+2)/(a^3))\",\n    \"f(x^2*exp(a*x+b),exp(a*x+b)*(a^2*x^2-2*a*x+2)/(a^3))\",\n    \"f(x^3*exp(a*x),exp(a*x)*x^3/a-3/a*integral(x^2*exp(a*x),x))\",\n    \"f(x^3*exp(a*x+b),exp(a*x+b)*x^3/a-3/a*integral(x^2*exp(a*x+b),x))\",\n    0\n  ];\n\n  //define F p3\n  //define X p4\n  //define N p5\n  Eval_integral = function() {\n    var doNothing, i, i1, n, o, ref, ref1;\n    i = 0;\n    n = 0;\n    // evaluate 1st arg to get function F\n    p1 = cdr(p1);\n    push(car(p1));\n    Eval();\n    // evaluate 2nd arg and then...\n\n    // example    result of 2nd arg  what to do\n\n    // integral(f)    nil      guess X, N = nil\n    // integral(f,2)  2      guess X, N = 2\n    // integral(f,x)  x      X = x, N = nil\n    // integral(f,x,2)  x      X = x, N = 2\n    // integral(f,x,y)  x      X = x, N = y\n    p1 = cdr(p1);\n    push(car(p1));\n    Eval();\n    p2 = pop();\n    if (p2 === symbol(NIL)) {\n      guess();\n      push(symbol(NIL));\n    } else if (isNumericAtom(p2)) {\n      guess();\n      push(p2);\n    } else {\n      push(p2);\n      p1 = cdr(p1);\n      push(car(p1));\n      Eval();\n    }\n    p5 = pop();\n    p4 = pop();\n    p3 = pop();\n    while (1) {\n      // N might be a symbol instead of a number\n      if (isNumericAtom(p5)) {\n        push(p5);\n        n = pop_integer();\n        if (isNaN(n)) {\n          stop(\"nth integral: check n\");\n        }\n      } else {\n        n = 1;\n      }\n      push(p3);\n      if (n >= 0) {\n        for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n          push(p4);\n          integral();\n        }\n      } else {\n        n = -n;\n        for (i = i1 = 0, ref1 = n; (0 <= ref1 ? i1 < ref1 : i1 > ref1); i = 0 <= ref1 ? ++i1 : --i1) {\n          push(p4);\n          derivative();\n        }\n      }\n      p3 = pop();\n      // if N is nil then arglist is exhausted\n      if (p5 === symbol(NIL)) {\n        break;\n      }\n      // otherwise...\n\n      // N    arg1    what to do\n\n      // number  nil    break\n      // number  number    N = arg1, continue\n      // number  symbol    X = arg1, N = arg2, continue\n\n      // symbol  nil    X = N, N = nil, continue\n      // symbol  number    X = N, N = arg1, continue\n      // symbol  symbol    X = N, N = arg1, continue\n      if (isNumericAtom(p5)) {\n        p1 = cdr(p1);\n        push(car(p1));\n        Eval();\n        p5 = pop();\n        if (p5 === symbol(NIL)) {\n          break; // arglist exhausted\n        }\n        if (isNumericAtom(p5)) {\n          doNothing = 1; // N = arg1\n        } else {\n          p4 = p5;\n          p1 = cdr(p1);\n          push(car(p1));\n          Eval();\n          p5 = pop(); // N = arg2\n        }\n      } else {\n        p4 = p5;\n        p1 = cdr(p1);\n        push(car(p1));\n        Eval();\n        p5 = pop(); // N = arg1\n      }\n    }\n    return push(p3); // final result\n  };\n\n  integral = function() {\n    save();\n    p2 = pop();\n    p1 = pop();\n    if (car(p1) === symbol(ADD)) {\n      integral_of_sum();\n    } else if (car(p1) === symbol(MULTIPLY)) {\n      integral_of_product();\n    } else {\n      integral_of_form();\n    }\n    p1 = pop();\n    if (Find(p1, symbol(INTEGRAL))) {\n      stop(\"integral: sorry, could not find a solution\");\n    }\n    push(p1);\n    simplify();\n    Eval();\n    return restore();\n  };\n\n  integral_of_sum = function() {\n    var results;\n    p1 = cdr(p1);\n    push(car(p1));\n    push(p2);\n    integral();\n    p1 = cdr(p1);\n    results = [];\n    while (iscons(p1)) {\n      push(car(p1));\n      push(p2);\n      integral();\n      add();\n      results.push(p1 = cdr(p1));\n    }\n    return results;\n  };\n\n  integral_of_product = function() {\n    push(p1);\n    push(p2);\n    partition();\n    p1 = pop();\n    integral_of_form();\n    return multiply(); // multiply constant part\n  };\n\n  integral_of_form = function() {\n    var hc, tab;\n    hc = italu_hashcode(p1, p2).toFixed(6);\n    tab = hashed_itab[hc];\n    if (!tab) {\n      // debugger\n      // italu_hashcode(p1, p2)\n      push_symbol(INTEGRAL);\n      push(p1);\n      push(p2);\n      list(3);\n      return;\n    }\n    push(p1); // free variable\n    push(p2); // input expression\n    transform(tab, false);\n    p3 = pop();\n    if (p3 === symbol(NIL)) {\n      push_symbol(INTEGRAL);\n      push(p1);\n      push(p2);\n      return list(3);\n    } else {\n      return push(p3);\n    }\n  };\n\n  // Implementation of hash codes based on ITALU (An Integral Table Look-Up)\n  // https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/19680004891.pdf\n  // see Appendix A, page 153\n\n  // The first two values are from the ITALU paper.\n  // The others are just arbitrary constants.\n  hashcode_values = {\n    'x': 0.95532,\n    'constexp': 1.43762,\n    'constant': 1.14416593629414332,\n    'constbase': 1.20364122304218824,\n    'sin': 1.73305482518303221,\n    'arcsin': 1.6483368529465804,\n    'cos': 1.058672123686340116,\n    'arccos': 1.8405225918106694,\n    'tan': 1.12249437762925064,\n    'arctan': 1.1297397925394962,\n    'sinh': 1.8176164926060078,\n    'cosh': 1.9404934661708022,\n    'tanh': 1.6421307715103121,\n    'log': 1.47744370135492387,\n    'erf': 1.0825269225702916\n  };\n\n  italu_hashcode = function(u, x) {\n    var half;\n    if (issymbol(u)) {\n      if (equal(u, x)) {\n        return hashcode_values.x;\n      } else {\n        return hashcode_values.constant;\n      }\n    } else if (iscons(u)) {\n      switch (symnum(car(u))) {\n        case ADD:\n          return hash_addition(cdr(u), x);\n        case MULTIPLY:\n          return hash_multiplication(cdr(u), x);\n        case POWER:\n          return hash_power(cadr(u), caddr(u), x);\n        case EXP:\n          return hash_power(symbol(E), cadr(u), x);\n        case SQRT:\n          push_double(0.5);\n          half = pop();\n          return hash_power(cadr(u), half, x);\n        default:\n          return hash_function(u, x);\n      }\n    }\n    return hashcode_values.constant;\n  };\n\n  hash_function = function(u, x) {\n    var arg_hash, base, name;\n    if (!Find(cadr(u), x)) {\n      return hashcode_values.constant;\n    }\n    name = car(u);\n    arg_hash = italu_hashcode(cadr(u), x);\n    base = hashcode_values[name.printname];\n    if (!base) {\n      throw new Error('Unsupported function ' + name.printname);\n    }\n    return Math.pow(base, arg_hash);\n  };\n\n  hash_addition = function(terms, x) {\n    var k, sum, term, term_hash, term_set, v;\n    term_set = {};\n    while (iscons(terms)) {\n      term = car(terms);\n      terms = cdr(terms);\n      term_hash = 0;\n      if (Find(term, x)) {\n        term_hash = italu_hashcode(term, x);\n      } else {\n        // The original algorithm would skip this,\n        // but recording that it was present helps\n        // prevent collisions.\n        term_hash = hashcode_values.constant;\n      }\n      term_set[term_hash.toFixed(6)] = true;\n    }\n    sum = 0;\n    for (k in term_set) {\n      if (!hasProp.call(term_set, k)) continue;\n      v = term_set[k];\n      sum = sum + parseFloat(k, 10);\n    }\n    return sum;\n  };\n\n  hash_multiplication = function(terms, x) {\n    var product, term;\n    product = 1;\n    while (iscons(terms)) {\n      term = car(terms);\n      terms = cdr(terms);\n      if (Find(term, x)) {\n        product = product * italu_hashcode(term, x);\n      }\n    }\n    return product;\n  };\n\n  hash_power = function(base, power, x) {\n    var base_hash, exp_hash;\n    base_hash = hashcode_values.constant;\n    exp_hash = hashcode_values.constexp;\n    if (Find(base, x)) {\n      base_hash = italu_hashcode(base, x);\n    }\n    if (Find(power, x)) {\n      exp_hash = italu_hashcode(power, x);\n    } else {\n      // constant to constant = constant\n      if (base_hash === hashcode_values.constant) {\n        return hashcode_values.constant;\n      }\n      if (isminusone(power)) {\n        exp_hash = -1;\n      } else if (isoneovertwo(power)) {\n        exp_hash = 0.5;\n      } else if (isminusoneovertwo(power)) {\n        exp_hash = -0.5;\n      } else if (equalq(power, 2, 1)) {\n        exp_hash = 2;\n      } else if (equalq(power, -2, 1)) {\n        exp_hash = -2;\n      }\n    }\n    return Math.pow(base_hash, exp_hash);\n  };\n\n  make_hashed_itab = function() {\n    var f, h, key, len, o, s, tab, u;\n    tab = {};\n    for (o = 0, len = itab.length; o < len; o++) {\n      s = itab[o];\n      if (!s) {\n        break;\n      }\n      scan_meta(s);\n      f = pop();\n      u = cadr(f);\n      h = italu_hashcode(u, symbol(METAX));\n      key = h.toFixed(6);\n      if (!tab[key]) {\n        tab[key] = [];\n      }\n      tab[key].push(s);\n    }\n    console.log('hashed_itab = ' + JSON.stringify(tab, null, 2));\n    return tab;\n  };\n\n  $.make_hashed_itab = make_hashed_itab;\n\n  // pre-calculated hashed integral table.\n  // in case the integral table is changed, use this\n  //   Algebrite.make_hashed_itab()\n  // and copy the resulting JSON in here.\n  hashed_itab = {\n    \"1.144166\": [\"f(a,a*x)\"],\n    \"1.046770\": [\"f(1/x,log(x))\"],\n    \"0.936400\": [\"f(x^a,x^(a+1)/(a+1))\"],\n    \"1.095727\": [\"f(x^(-2),-x^(-1))\"],\n    \"1.023118\": [\"f(x^(-1/2),2*x^(1/2))\"],\n    \"0.977405\": [\"f(x^(1/2),2/3*x^(3/2))\"],\n    \"0.955320\": [\"f(x,x^2/2)\"],\n    \"0.912636\": [\"f(x^2,x^3/3)\"],\n    \"1.137302\": [\"f(exp(a*x),1/a*exp(a*x))\", \"f(a^x,a^x/log(a),or(not(number(a)),a>0))\"],\n    \"1.326774\": [\"f(exp(a*x+b),1/a*exp(a*x+b))\"],\n    \"1.080259\": [\"f(x*exp(a*x^2),exp(a*x^2)/(2*a))\"],\n    \"1.260228\": [\"f(x*exp(a*x^2+b),exp(a*x^2+b)/(2*a))\"],\n    \"1.451902\": [\"f(log(a*x),x*log(a*x)-x)\"],\n    \"0.486192\": [\"f(1/(a+x^2),1/sqrt(a)*arctan(x/sqrt(a)),or(not(number(a)),a>0))\", \"f(1/(a-x^2),1/sqrt(a)*arctanh(x/sqrt(a)))\", \"f(1/(a+b*x^2),1/sqrt(a*b)*arctan(x*sqrt(a*b)/a),or(not(number(a*b)),a*b>0))\", \"f(1/(a+b*x^2),1/(2*sqrt(-a*b))*log((a+x*sqrt(-a*b))/(a-x*sqrt(-a*b))),or(not(number(a*b)),a*b<0))\"],\n    \"0.697274\": [\"f(1/sqrt(a-x^2),arcsin(x/(sqrt(a))))\", \"f(1/sqrt(a+x^2),log(x+sqrt(a+x^2)))\", \"f(1/sqrt(x^2+a),log(x+sqrt(x^2+a)))\"],\n    \"0.476307\": [\"f(1/(a+b*x),1/b*log(a+b*x))\"],\n    \"0.226868\": [\"f(1/(a+b*x)^2,-1/(b*(a+b*x)))\"],\n    \"2.904531\": [\"f(1/(a+b*x)^3,-1/(2*b)*1/(a+b*x)^2)\"],\n    \"0.455026\": [\"f(x/(a+b*x),x/b-a*log(a+b*x)/b/b)\"],\n    \"0.216732\": [\"f(x/(a+b*x)^2,1/b^2*(log(a+b*x)+a/(a+b*x)))\"],\n    \"0.434695\": [\"f(x^2/(a+b*x),1/b^2*(1/2*(a+b*x)^2-2*a*(a+b*x)+a^2*log(a+b*x)))\"],\n    \"0.207048\": [\"f(x^2/(a+b*x)^2,1/b^3*(a+b*x-2*a*log(a+b*x)-a^2/(a+b*x)))\"],\n    \"2.650781\": [\"f(x^2/(a+b*x)^3,1/b^3*(log(a+b*x)+2*a/(a+b*x)-1/2*a^2/(a+b*x)^2))\"],\n    \"0.498584\": [\"f(1/x*1/(a+b*x),-1/a*log((a+b*x)/x))\"],\n    \"0.237479\": [\"f(1/x*1/(a+b*x)^2,1/a*1/(a+b*x)-1/a^2*log((a+b*x)/x))\"],\n    \"3.040375\": [\"f(1/x*1/(a+b*x)^3,1/a^3*(1/2*((2*a+b*x)/(a+b*x))^2+log(x/(a+b*x))))\"],\n    \"0.521902\": [\"f(1/x^2*1/(a+b*x),-1/(a*x)+b/a^2*log((a+b*x)/x))\"],\n    \"0.446014\": [\"f(1/x^3*1/(a+b*x),(2*b*x-a)/(2*a^2*x^2)+b^2/a^3*log(x/(a+b*x)))\"],\n    \"0.248586\": [\"f(1/x^2*1/(a+b*x)^2,-(a+2*b*x)/(a^2*x*(a+b*x))+2*b/a^3*log((a+b*x)/x))\"],\n    \"0.464469\": [\"f(x/(a+b*x^2),1/2*1/b*log(a+b*x^2))\"],\n    \"0.443716\": [\"f(x^2/(a+b*x^2),x/b-a/b*integral(1/(a+b*x^2),x))\"],\n    \"0.236382\": [\"f(1/(a+b*x^2)^2,x/(2*a*(a+b*x^2))+1/2*1/a*integral(1/(a+b*x^2),x))\"],\n    \"0.508931\": [\"f(1/x*1/(a+b*x^2),1/2*1/a*log(x^2/(a+b*x^2)))\"],\n    \"0.532733\": [\"f(1/x^2*1/(a+b*x^2),-1/(a*x)-b/a*integral(1/(a+b*x^2),x))\"],\n    \"0.480638\": [\"f(1/(a+b*x^3),1/3*1/a*(a/b)^(1/3)*(1/2*log(((a/b)^(1/3)+x)^3/(a+b*x^3))+sqrt(3)*arctan((2*x-(a/b)^(1/3))*(a/b)^(-1/3)/sqrt(3))))\"],\n    \"0.438648\": [\"f(x^2/(a+b*x^3),1/3*1/b*log(a+b*x^3))\"],\n    \"0.459164\": [\"f(x/(a+b*x^4),1/2*sqrt(b/a)/b*arctan(x^2*sqrt(b/a)),or(not(number(a*b)),a*b>0))\", \"f(x/(a+b*x^4),1/4*sqrt(-b/a)/b*log((x^2-sqrt(-a/b))/(x^2+sqrt(-a/b))),or(not(number(a*b)),a*b<0))\"],\n    \"0.450070\": [\"f(x^3/(a+b*x^4),1/4*1/b*log(a+b*x^4))\"],\n    \"1.448960\": [\"f(sqrt(a+b*x),2/3*1/b*sqrt((a+b*x)^3))\"],\n    \"1.384221\": [\"f(x*sqrt(a+b*x),-2*(2*a-3*b*x)*sqrt((a+b*x)^3)/15/b^2)\"],\n    \"1.322374\": [\"f(x^2*sqrt(a+b*x),2*(8*a^2-12*a*b*x+15*b^2*x^2)*sqrt((a+b*x)^3)/105/b^3)\"],\n    \"1.516728\": [\"f(sqrt(a+b*x)/x,2*sqrt(a+b*x)+a*integral(1/x*1/sqrt(a+b*x),x))\"],\n    \"1.587665\": [\"f(sqrt(a+b*x)/x^2,-sqrt(a+b*x)/x+b/2*integral(1/x*1/sqrt(a+b*x),x))\"],\n    \"0.690150\": [\"f(1/sqrt(a+b*x),2*sqrt(a+b*x)/b)\"],\n    \"0.659314\": [\"f(x/sqrt(a+b*x),-2/3*(2*a-b*x)*sqrt(a+b*x)/b^2)\"],\n    \"0.629856\": [\"f(x^2/sqrt(a+b*x),2/15*(8*a^2-4*a*b*x+3*b^2*x^2)*sqrt(a+b*x)/b^3)\"],\n    \"0.722428\": [\"f(1/x*1/sqrt(a+b*x),1/sqrt(a)*log((sqrt(a+b*x)-sqrt(a))/(sqrt(a+b*x)+sqrt(a))),or(not(number(a)),a>0))\", \"f(1/x*1/sqrt(a+b*x),2/sqrt(-a)*arctan(sqrt(-(a+b*x)/a)),or(not(number(a)),a<0))\"],\n    \"0.756216\": [\"f(1/x^2*1/sqrt(a+b*x),-sqrt(a+b*x)/a/x-1/2*b/a*integral(1/x*1/sqrt(a+b*x),x))\"],\n    \"1.434156\": [\"f(sqrt(x^2+a),1/2*(x*sqrt(x^2+a)+a*log(x+sqrt(x^2+a))))\", \"f(sqrt(a-x^2),1/2*(x*sqrt(a-x^2)+a*arcsin(x/sqrt(abs(a)))))\", \"f(sqrt(a*x^2+b),x*sqrt(a*x^2+b)/2+b*log(x*sqrt(a)+sqrt(a*x^2+b))/2/sqrt(a),and(number(a),a>0))\", \"f(sqrt(a*x^2+b),x*sqrt(a*x^2+b)/2+b*arcsin(x*sqrt(-a/b))/2/sqrt(-a),and(number(a),a<0))\"],\n    \"0.729886\": [\"f(1/x*1/sqrt(x^2+a),arcsec(x/sqrt(-a))/sqrt(-a),or(not(number(a)),a<0))\", \"f(1/x*1/sqrt(x^2+a),-1/sqrt(a)*log((sqrt(a)+sqrt(x^2+a))/x),or(not(number(a)),a>0))\", \"f(1/x*1/sqrt(a-x^2),-1/sqrt(a)*log((sqrt(a)+sqrt(a-x^2))/x),or(not(number(a)),a>0))\"],\n    \"1.501230\": [\"f(sqrt(x^2+a)/x,sqrt(x^2+a)-sqrt(a)*log((sqrt(a)+sqrt(x^2+a))/x),or(not(number(a)),a>0))\", \"f(sqrt(x^2+a)/x,sqrt(x^2+a)-sqrt(-a)*arcsec(x/sqrt(-a)),or(not(number(a)),a<0))\", \"f(sqrt(a-x^2)/x,sqrt(a-x^2)-sqrt(a)*log((sqrt(a)+sqrt(a-x^2))/x),or(not(number(a)),a>0))\"],\n    \"0.666120\": [\"f(x/sqrt(x^2+a),sqrt(x^2+a))\", \"f(x/sqrt(a-x^2),-sqrt(a-x^2))\"],\n    \"1.370077\": [\"f(x*sqrt(x^2+a),1/3*sqrt((x^2+a)^3))\", \"f(x*sqrt(a-x^2),-1/3*sqrt((a-x^2)^3))\"],\n    \"1.730087\": [\"f(sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/4*(x*sqrt((x^2+a^(1/3))^3)+3/2*a^(1/3)*x*sqrt(x^2+a^(1/3))+3/2*a^(2/3)*log(x+sqrt(x^2+a^(1/3)))))\", \"f(sqrt(-a+x^6-3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/4*(x*sqrt((x^2-a^(1/3))^3)-3/2*a^(1/3)*x*sqrt(x^2-a^(1/3))+3/2*a^(2/3)*log(x+sqrt(x^2-a^(1/3)))))\"],\n    \"0.578006\": [\"f(1/sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),x/a^(1/3)/sqrt(x^2+a^(1/3)))\"],\n    \"0.552180\": [\"f(x/sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),-1/sqrt(x^2+a^(1/3)))\"],\n    \"1.652787\": [\"f(x*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/5*sqrt((x^2+a^(1/3))^5))\"],\n    \"1.308862\": [\"f(x^2*sqrt(x^2+a),1/4*x*sqrt((x^2+a)^3)-1/8*a*x*sqrt(x^2+a)-1/8*a^2*log(x+sqrt(x^2+a)))\", \"f(x^2*sqrt(a-x^2),-x/4*sqrt((a-x^2)^3)+1/8*a*(x*sqrt(a-x^2)+a*arcsin(x/sqrt(a))),or(not(number(a)),a>0))\"],\n    \"1.342944\": [\"f(x^3*sqrt(x^2+a),(1/5*x^2-2/15*a)*sqrt((x^2+a)^3),and(number(a),a>0))\", \"f(x^3*sqrt(x^2+a),sqrt((x^2+a)^5)/5-a*sqrt((x^2+a)^3)/3,and(number(a),a<0))\", \"f(x^3*sqrt(a-x^2),(-1/5*x^2-2/15*a)*sqrt((a-x^2)^3),or(not(number(a)),a>0))\", \"f(sqrt(a-x^2)/x^3,-1/2*sqrt(a-x^2)/x^2+1/2*log((sqrt(a)+sqrt(a-x^2))/x)/sqrt(a),or(not(number(a)),a>0))\", \"f(sqrt(a-x^2)/x^4,-1/3*sqrt((a-x^2)^3)/a/x^3,or(not(number(a)),a>0))\"],\n    \"0.636358\": [\"f(x^2/sqrt(x^2+a),1/2*x*sqrt(x^2+a)-1/2*a*log(x+sqrt(x^2+a)))\", \"f(x^2/sqrt(a-x^2),-x/2*sqrt(a-x^2)+a/2*arcsin(x/sqrt(a)),or(not(number(a)),a>0))\"],\n    \"0.652928\": [\"f(x^3/sqrt(x^2+a),1/3*sqrt((x^2+a)^3)-a*sqrt(x^2+a))\", \"f(1/x^3*1/sqrt(x^2+a),-1/2*sqrt(x^2+a)/a/x^2+1/2*log((sqrt(a)+sqrt(x^2+a))/x)/a^(3/2),or(not(number(a)),a>0))\", \"f(1/x^3*1/sqrt(x^2-a),1/2*sqrt(x^2-a)/a/x^2+1/2*1/(a^(3/2))*arcsec(x/(a^(1/2))),or(not(number(a)),a>0))\"],\n    \"0.764022\": [\"f(1/x^2*1/sqrt(x^2+a),-sqrt(x^2+a)/a/x)\", \"f(1/x^2*1/sqrt(a-x^2),-sqrt(a-x^2)/a/x,or(not(number(a)),a>0))\"],\n    \"1.578940\": [\"f(x^2*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/6*x*sqrt((x^2+a^(1/3))^5)-1/24*a^(1/3)*x*sqrt((x^2+a^(1/3))^3)-1/16*a^(2/3)*x*sqrt(x^2+a^(1/3))-1/16*a*log(x+sqrt(x^2+a^(1/3))),or(not(number(a)),a>0))\", \"f(x^2*sqrt(-a-3*a^(1/3)*x^4+3*a^(2/3)*x^2+x^6),1/6*x*sqrt((x^2-a^(1/3))^5)+1/24*a^(1/3)*x*sqrt((x^2-a^(1/3))^3)-1/16*a^(2/3)*x*sqrt(x^2-a^(1/3))+1/16*a*log(x+sqrt(x^2-a^(1/3))),or(not(number(a)),a>0))\"],\n    \"1.620055\": [\"f(x^3*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/7*sqrt((x^2+a^(1/3))^7)-1/5*a^(1/3)*sqrt((x^2+a^(1/3))^5),or(not(number(a)),a>0))\", \"f(x^3*sqrt(-a-3*a^(1/3)*x^4+3*a^(2/3)*x^2+x^6),1/7*sqrt((x^2-a^(1/3))^7)+1/5*a^(1/3)*sqrt((x^2-a^(1/3))^5),or(not(number(a)),a>0))\"],\n    \"0.332117\": [\"f(1/(x-a)/sqrt(x^2-a^2),-sqrt(x^2-a^2)/a/(x-a))\", \"f(1/(x+a)/sqrt(x^2-a^2),sqrt(x^2-a^2)/a/(x+a))\"],\n    \"1.571443\": [\"f(sqrt(a-x^2)/x^2,-sqrt(a-x^2)/x-arcsin(x/sqrt(a)),or(not(number(a)),a>0))\"],\n    \"1.690994\": [\"f(sin(a*x),-cos(a*x)/a)\"],\n    \"1.055979\": [\"f(cos(a*x),sin(a*x)/a)\"],\n    \"1.116714\": [\"f(tan(a*x),-log(cos(a*x))/a)\"],\n    \"0.895484\": [\"f(1/tan(a*x),log(sin(a*x))/a)\"],\n    \"0.946989\": [\"f(1/cos(a*x),log(tan(pi/4+a*x/2))/a)\"],\n    \"0.591368\": [\"f(1/sin(a*x),log(tan(a*x/2))/a)\"],\n    \"2.859462\": [\"f(sin(a*x)^2,x/2-sin(2*a*x)/(4*a))\"],\n    \"2.128050\": [\"f(sin(a*x)^3,-cos(a*x)*(sin(a*x)^2+2)/(3*a))\", \"f(sin(a*x)^4,3/8*x-sin(2*a*x)/(4*a)+sin(4*a*x)/(32*a))\"],\n    \"1.115091\": [\"f(cos(a*x)^2,x/2+sin(2*a*x)/(4*a))\"],\n    \"1.081452\": [\"f(cos(a*x)^3,sin(a*x)*(cos(a*x)^2+2)/(3*a))\", \"f(cos(a*x)^4,3/8*x+sin(2*a*x)/(4*a)+sin(4*a*x)/(32*a))\"],\n    \"0.349716\": [\"f(1/sin(a*x)^2,-1/(a*tan(a*x)))\"],\n    \"0.896788\": [\"f(1/cos(a*x)^2,tan(a*x)/a)\"],\n    \"1.785654\": [\"f(sin(a*x)*cos(a*x),sin(a*x)^2/(2*a))\"],\n    \"3.188560\": [\"f(sin(a*x)^2*cos(a*x)^2,-sin(4*a*x)/(32*a)+x/8)\"],\n    \"1.516463\": [\"f(sin(a*x)/cos(a*x)^2,1/(a*cos(a*x)))\"],\n    \"2.707879\": [\"f(sin(a*x)^2/cos(a*x),(log(tan(pi/4+a*x/2))-sin(a*x))/a)\"],\n    \"0.369293\": [\"f(cos(a*x)/sin(a*x)^2,-1/(a*sin(a*x)))\"],\n    \"0.560019\": [\"f(1/(sin(a*x)*cos(a*x)),log(tan(a*x))/a)\"],\n    \"0.530332\": [\"f(1/(sin(a*x)*cos(a*x)^2),(1/cos(a*x)+log(tan(a*x/2)))/a)\"],\n    \"0.331177\": [\"f(1/(sin(a*x)^2*cos(a*x)),(log(tan(pi/4+a*x/2))-1/sin(a*x))/a)\"],\n    \"0.313621\": [\"f(1/(sin(a*x)^2*cos(a*x)^2),-2/(a*tan(2*a*x)))\"],\n    \"3.172365\": [\"f(sin(a+b*x),-cos(a+b*x)/b)\"],\n    \"1.127162\": [\"f(cos(a+b*x),sin(a+b*x)/b)\"],\n    \"0.352714\": [\"f(1/(b+b*sin(a*x)),-tan(pi/4-a*x/2)/a/b)\", \"f(1/(b-b*sin(a*x)),tan(pi/4+a*x/2)/a/b)\", \"f(1/(a+b*sin(x)),1/sqrt(b^2-a^2)*log((a*tan(x/2)+b-sqrt(b^2-a^2))/(a*tan(x/2)+b+sqrt(b^2-a^2))),b^2-a^2)\"],\n    \"0.454515\": [\"f(1/(b+b*cos(a*x)),tan(a*x/2)/a/b)\", \"f(1/(b-b*cos(a*x)),-1/tan(a*x/2)/a/b)\", \"f(1/(a+b*cos(x)),1/sqrt(b^2-a^2)*log((sqrt(b^2-a^2)*tan(x/2)+a+b)/(sqrt(b^2-a^2)*tan(x/2)-a-b)),b^2-a^2)\"],\n    \"1.615441\": [\"f(x*sin(a*x),sin(a*x)/a^2-x*cos(a*x)/a)\"],\n    \"1.543263\": [\"f(x^2*sin(a*x),2*x*sin(a*x)/a^2-(a^2*x^2-2)*cos(a*x)/a^3)\"],\n    \"1.008798\": [\"f(x*cos(a*x),cos(a*x)/a^2+x*sin(a*x)/a)\"],\n    \"0.963724\": [\"f(x^2*cos(a*x),2*x*cos(a*x)/a^2+(a^2*x^2-2)*sin(a*x)/a^3)\"],\n    \"1.611938\": [\"f(arcsin(a*x),x*arcsin(a*x)+sqrt(1-a^2*x^2)/a)\"],\n    \"1.791033\": [\"f(arccos(a*x),x*arccos(a*x)-sqrt(1-a^2*x^2)/a)\"],\n    \"1.123599\": [\"f(arctan(a*x),x*arctan(a*x)-1/2*log(1+a^2*x^2)/a)\"],\n    \"1.387031\": [\"f(x*log(a*x),x^2*log(a*x)/2-x^2/4)\"],\n    \"1.325058\": [\"f(x^2*log(a*x),x^3*log(a*x)/3-1/9*x^3)\"],\n    \"2.108018\": [\"f(log(x)^2,x*log(x)^2-2*x*log(x)+2*x)\"],\n    \"0.403214\": [\"f(1/x*1/(a+log(x)),log(a+log(x)))\"],\n    \"2.269268\": [\"f(log(a*x+b),(a*x+b)*log(a*x+b)/a-x)\"],\n    \"2.486498\": [\"f(log(a*x+b)/x^2,a/b*log(x)-(a*x+b)*log(a*x+b)/b/x)\"],\n    \"1.769733\": [\"f(sinh(x),cosh(x))\"],\n    \"1.883858\": [\"f(cosh(x),sinh(x))\"],\n    \"1.606140\": [\"f(tanh(x),log(cosh(x)))\"],\n    \"1.690661\": [\"f(x*sinh(x),x*cosh(x)-sinh(x))\"],\n    \"1.799688\": [\"f(x*cosh(x),x*sinh(x)-cosh(x))\"],\n    \"3.131954\": [\"f(sinh(x)^2,sinh(2*x)/4-x/2)\"],\n    \"2.579685\": [\"f(tanh(x)^2,x-tanh(x))\"],\n    \"3.548923\": [\"f(cosh(x)^2,sinh(2*x)/4+x/2)\"],\n    \"1.058866\": [\"f(x^3*exp(a*x^2),exp(a*x^2)*(x^2/a-1/(a^2))/2)\"],\n    \"1.235270\": [\"f(x^3*exp(a*x^2+b),exp(a*x^2)*exp(b)*(x^2/a-1/(a^2))/2)\"],\n    \"1.130783\": [\"f(exp(a*x^2),-i*sqrt(pi)*erf(i*sqrt(a)*x)/sqrt(a)/2)\"],\n    \"1.078698\": [\"f(erf(a*x),x*erf(a*x)+exp(-a^2*x^2)/a/sqrt(pi))\"],\n    \"2.573650\": [\"f(x^2*(1-x^2)^(3/2),(x*sqrt(1-x^2)*(-8*x^4+14*x^2-3)+3*arcsin(x))/48)\", \"f(x^2*(1-x^2)^(5/2),(x*sqrt(1-x^2)*(48*x^6-136*x^4+118*x^2-15)+15*arcsin(x))/384)\"],\n    \"2.640666\": [\"f(x^4*(1-x^2)^(3/2),(-x*sqrt(1-x^2)*(16*x^6-24*x^4+2*x^2+3)+3*arcsin(x))/128)\"],\n    \"1.086487\": [\"f(x*exp(a*x),exp(a*x)*(a*x-1)/(a^2))\"],\n    \"1.267493\": [\"f(x*exp(a*x+b),exp(a*x+b)*(a*x-1)/(a^2))\"],\n    \"1.037943\": [\"f(x^2*exp(a*x),exp(a*x)*(a^2*x^2-2*a*x+2)/(a^3))\"],\n    \"1.210862\": [\"f(x^2*exp(a*x+b),exp(a*x+b)*(a^2*x^2-2*a*x+2)/(a^3))\"],\n    \"1.064970\": [\"f(x^3*exp(a*x),exp(a*x)*x^3/a-3/a*integral(x^2*exp(a*x),x))\"],\n    \"1.242392\": [\"f(x^3*exp(a*x+b),exp(a*x+b)*x^3/a-3/a*integral(x^2*exp(a*x+b),x))\"]\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Input:    Matrix on stack (must have two dimensions but\n  //        it can be non-numerical)\n\n  //  Output:    Inverse on stack\n\n  //  Example:\n\n  //  > inv(((1,2),(3,4))\n  //  ((-2,1),(3/2,-1/2))\n\n  //  > inv(((a,b),(c,d))\n  //  ((d / (a d - b c),-b / (a d - b c)),(-c / (a d - b c),a / (a d - b c)))\n\n  //  Note:\n\n  //  THIS IS DIFFERENT FROM INVERSE OF AN EXPRESSION (inv)\n  //   Uses Gaussian elimination for numerical matrices.\n\n  //-----------------------------------------------------------------------------\n  INV_check_arg = function() {\n    if (!istensor(p1)) {\n      return 0;\n    } else if (p1.tensor.ndim !== 2) {\n      return 0;\n    } else if (p1.tensor.dim[0] !== p1.tensor.dim[1]) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  inv = function() {\n    var accumulator, eachEntry, i, n, o, ref;\n    i = 0;\n    n = 0;\n    //U **a\n    save();\n    p1 = pop();\n    // an inv just goes away when\n    // applied to another inv\n    if (isinv(p1)) {\n      push(car(cdr(p1)));\n      restore();\n      return;\n    }\n    // inverse goes away in case\n    // of identity matrix\n    if (isidentitymatrix(p1)) {\n      push(p1);\n      restore();\n      return;\n    }\n    // distribute the inverse of a dot\n    // if in expanding mode\n    // note that the distribution happens\n    // in reverse.\n    // The dot operator is not\n    // commutative, so, it matters.\n    if (expanding && isinnerordot(p1)) {\n      p1 = cdr(p1);\n      accumulator = [];\n      while (iscons(p1)) {\n        accumulator.push(car(p1));\n        p1 = cdr(p1);\n      }\n      for (eachEntry = o = ref = accumulator.length - 1; (ref <= 0 ? o <= 0 : o >= 0); eachEntry = ref <= 0 ? ++o : --o) {\n        push(accumulator[eachEntry]);\n        inv();\n        if (eachEntry !== accumulator.length - 1) {\n          inner();\n        }\n      }\n      restore();\n      return;\n    }\n    if (INV_check_arg() === 0) {\n      push_symbol(INV);\n      push(p1);\n      list(2);\n      restore();\n      return;\n    }\n    if (isNumericAtomOrTensor(p1)) {\n      yyinvg();\n    } else {\n      push(p1);\n      adj();\n      push(p1);\n      det();\n      p2 = pop();\n      if (isZeroAtomOrTensor(p2)) {\n        stop(\"inverse of singular matrix\");\n      }\n      push(p2);\n      divide();\n    }\n    return restore();\n  };\n\n  invg = function() {\n    save();\n    p1 = pop();\n    if (INV_check_arg() === 0) {\n      push_symbol(INVG);\n      push(p1);\n      list(2);\n      restore();\n      return;\n    }\n    yyinvg();\n    return restore();\n  };\n\n  // inverse using gaussian elimination\n  yyinvg = function() {\n    var h, i, i1, j, j1, l1, n, o, ref, ref1, ref2, ref3;\n    h = 0;\n    i = 0;\n    j = 0;\n    n = 0;\n    n = p1.tensor.dim[0];\n    h = tos;\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      for (j = i1 = 0, ref1 = n; (0 <= ref1 ? i1 < ref1 : i1 > ref1); j = 0 <= ref1 ? ++i1 : --i1) {\n        if (i === j) {\n          push(one);\n        } else {\n          push(zero);\n        }\n      }\n    }\n    for (i = j1 = 0, ref2 = n * n; (0 <= ref2 ? j1 < ref2 : j1 > ref2); i = 0 <= ref2 ? ++j1 : --j1) {\n      push(p1.tensor.elem[i]);\n    }\n    INV_decomp(n);\n    p1 = alloc_tensor(n * n);\n    p1.tensor.ndim = 2;\n    p1.tensor.dim[0] = n;\n    p1.tensor.dim[1] = n;\n    for (i = l1 = 0, ref3 = n * n; (0 <= ref3 ? l1 < ref3 : l1 > ref3); i = 0 <= ref3 ? ++l1 : --l1) {\n      p1.tensor.elem[i] = stack[h + i];\n    }\n    moveTos(tos - 2 * n * n);\n    return push(p1);\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Input:    n * n unit matrix on stack\n\n  //      n * n operand on stack\n\n  //  Output:    n * n inverse matrix on stack\n\n  //      n * n garbage on stack\n\n  //      p2 mangled\n\n  //-----------------------------------------------------------------------------\n\n  //define A(i, j) stack[a + n * (i) + (j)]\n  //define U(i, j) stack[u + n * (i) + (j)]\n  INV_decomp = function(n) {\n    var a, d, i, i1, j, j1, l1, o, ref, ref1, ref2, ref3, ref4, results, u;\n    a = 0;\n    d = 0;\n    i = 0;\n    j = 0;\n    u = 0;\n    a = tos - n * n;\n    u = a - n * n;\n    results = [];\n    for (d = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); d = 0 <= ref ? ++o : --o) {\n      // diagonal element zero?\n      if (equal(stack[a + n * d + d], zero)) {\n// find a new row\n        for (i = i1 = ref1 = d + 1, ref2 = n; (ref1 <= ref2 ? i1 < ref2 : i1 > ref2); i = ref1 <= ref2 ? ++i1 : --i1) {\n          if (!equal(stack[a + n * i + d], zero)) {\n            break;\n          }\n        }\n        if (i === n) {\n          stop(\"inverse of singular matrix\");\n        }\n// exchange rows\n        for (j = j1 = 0, ref3 = n; (0 <= ref3 ? j1 < ref3 : j1 > ref3); j = 0 <= ref3 ? ++j1 : --j1) {\n          p2 = stack[a + n * d + j];\n          stack[a + n * d + j] = stack[a + n * i + j];\n          stack[a + n * i + j] = p2;\n          p2 = stack[u + n * d + j];\n          stack[u + n * d + j] = stack[u + n * i + j];\n          stack[u + n * i + j] = p2;\n        }\n      }\n      // multiply the pivot row by 1 / pivot\n      p2 = stack[a + n * d + d];\n      for (j = l1 = 0, ref4 = n; (0 <= ref4 ? l1 < ref4 : l1 > ref4); j = 0 <= ref4 ? ++l1 : --l1) {\n        if (j > d) {\n          push(stack[a + n * d + j]);\n          push(p2);\n          divide();\n          stack[a + n * d + j] = pop();\n        }\n        push(stack[u + n * d + j]);\n        push(p2);\n        divide();\n        stack[u + n * d + j] = pop();\n      }\n      results.push((function() {\n        var m1, ref5, results1;\n// clear out the column above and below the pivot\n        results1 = [];\n        for (i = m1 = 0, ref5 = n; (0 <= ref5 ? m1 < ref5 : m1 > ref5); i = 0 <= ref5 ? ++m1 : --m1) {\n          if (i === d) {\n            continue;\n          }\n          // multiplier\n          p2 = stack[a + n * i + d];\n          results1.push((function() {\n            var n1, ref6, results2;\n// add pivot row to i-th row\n            results2 = [];\n            for (j = n1 = 0, ref6 = n; (0 <= ref6 ? n1 < ref6 : n1 > ref6); j = 0 <= ref6 ? ++n1 : --n1) {\n              if (j > d) {\n                push(stack[a + n * i + j]);\n                push(stack[a + n * d + j]);\n                push(p2);\n                multiply();\n                subtract();\n                stack[a + n * i + j] = pop();\n              }\n              push(stack[u + n * i + j]);\n              push(stack[u + n * d + j]);\n              push(p2);\n              multiply();\n              subtract();\n              results2.push(stack[u + n * i + j] = pop());\n            }\n            return results2;\n          })());\n        }\n        return results1;\n      })());\n    }\n    return results;\n  };\n\n  DEBUG_IS = false;\n\n  // jsBoolToToInt = (p) ->\n  //   if p then 1 else 0\n\n  // p is a U\n  // this routine is a simple check on whether we have\n  // a basic zero in our hands. It doesn't perform any\n  // calculations or simplifications.\n  isZeroAtom = function(p) {\n    switch (p.k) {\n      case NUM:\n        return MZERO(p.q.a);\n      case DOUBLE:\n        return p.d === 0.0;\n      default:\n        return false;\n    }\n  };\n\n  // p is a U\n  // this routine is a simple check on whether we have\n  // a basic zero in our hands. It doesn't perform any\n  // calculations or simplifications.\n  isZeroTensor = function(p) {\n    var i, o, ref;\n    if (p.k !== TENSOR) {\n      return 0;\n    }\n    for (i = o = 0, ref = p.tensor.nelem; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      if (!isZeroAtomOrTensor(p.tensor.elem[i])) {\n        return 0;\n      }\n    }\n    return 1;\n  };\n\n  // p is a U\n  // this routine is a simple check on whether we have\n  // a basic zero in our hands. It doesn't perform any\n  // calculations or simplifications.\n  isZeroAtomOrTensor = function(p) {\n    return isZeroAtom(p) || isZeroTensor(p);\n  };\n\n  // This is a key routine to try to determine whether\n  // the argument looks like zero/false, or non-zero/true,\n  // or undetermined.\n  // This is useful in two instances:\n  //  * to determine if a predicate is true/false\n  //  * to determine if particular quantity is zero\n  // Note that if one wants to check if we have a simple\n  // zero atom or tensor in our hands, then the isZeroAtomOrTensor\n  // routine is sufficient.\n  isZeroLikeOrNonZeroLikeOrUndetermined = function(valueOrPredicate) {\n    var evalledArgument;\n    // push the argument\n    push(valueOrPredicate);\n    // just like Eval but turns assignments into\n    // equality checks\n    Eval_predicate();\n    evalledArgument = pop();\n    // OK first check if we already have\n    // a simple zero (or simple zero tensor)\n    if (isZeroAtomOrTensor(evalledArgument)) {\n      return 0;\n    }\n    // also check if we have a simple numeric value, or a tensor\n    // full of simple numeric values (i.e. straight doubles or fractions).\n    // In such cases, since we\n    // just excluded they are zero, then we take it as\n    // a \"true\"\n    if (isNumericAtomOrTensor(evalledArgument)) {\n      return 1;\n    }\n    // if we are here we are in the case of value that\n    // is not a zero and not a simple numeric value.\n    // e.g. stuff like\n    // 'sqrt(2)', or 'sin(45)' or '1+i', or 'a'\n    // so in such cases let's try to do a float()\n    // so we might get down to a simple numeric value\n    // in some of those cases\n    push(evalledArgument);\n    zzfloat();\n    evalledArgument = pop();\n    // anything that could be calculated down to a simple\n    // numeric value is now indeed either a \n    // double OR a double with an imaginary component\n    // e.g. 2.0 or 2.4 + i*5.6\n    // (Everything else are things that don't have a numeric\n    // value e.g. 'a+b')\n\n    // So, let's take care of the case where we have\n    // a simple numeric value with NO imaginary component,\n    // things like sqrt(2) or sin(PI)\n    // by doing the simple numeric\n    // values checks again\n    if (isZeroAtomOrTensor(evalledArgument)) {\n      return 0;\n    }\n    if (isNumericAtomOrTensor(evalledArgument)) {\n      return 1;\n    }\n    // here we still have cases of simple numeric values\n    // WITH an imaginary component e.g. '1+i',\n    // or things that don't have a numeric value e.g. 'a'\n\n    // so now let's take care of the imaginary numbers:\n    // since we JUST have to spot \"zeros\" we can just\n    // calculate the absolute value and re-do all the checks\n    // we just did\n    if (Find(evalledArgument, imaginaryunit)) {\n      push(evalledArgument);\n      absValFloat();\n      Eval_predicate();\n      evalledArgument = pop();\n      // re-do the simple-number checks...\n      if (isZeroAtomOrTensor(evalledArgument)) {\n        return 0;\n      }\n      if (isNumericAtomOrTensor(evalledArgument)) {\n        return 1;\n      }\n    }\n    // here we have stuff that is not reconducible to any\n    // numeric value (or tensor with numeric values) e.g.\n    // 'a+b', so it just means that we just don't know the\n    // truth value, so we have\n    // to leave the whole thing unevalled\n    return null;\n  };\n\n  // p is a U\n  isnegativenumber = function(p) {\n    switch (p.k) {\n      case NUM:\n        if (MSIGN(p.q.a) === -1) {\n          return 1;\n        }\n        break;\n      case DOUBLE:\n        if (p.d < 0.0) {\n          return 1;\n        }\n    }\n    return 0;\n  };\n\n  // p is a U\n  ispositivenumber = function(p) {\n    switch (p.k) {\n      case NUM:\n        if (MSIGN(p.q.a) === 1) {\n          return 1;\n        }\n        break;\n      case DOUBLE:\n        if (p.d > 0.0) {\n          return 1;\n        }\n    }\n    return 0;\n  };\n\n  // p is a U\n  isplustwo = function(p) {\n    switch (p.k) {\n      case NUM:\n        if (MEQUAL(p.q.a, 2) && MEQUAL(p.q.b, 1)) {\n          return 1;\n        }\n        break;\n      case DOUBLE:\n        if (p.d === 2.0) {\n          return 1;\n        }\n    }\n    return 0;\n  };\n\n  // p is a U\n  isplusone = function(p) {\n    switch (p.k) {\n      case NUM:\n        if (MEQUAL(p.q.a, 1) && MEQUAL(p.q.b, 1)) {\n          return 1;\n        }\n        break;\n      case DOUBLE:\n        if (p.d === 1.0) {\n          return 1;\n        }\n    }\n    return 0;\n  };\n\n  isminusone = function(p) {\n    switch (p.k) {\n      case NUM:\n        if (MEQUAL(p.q.a, -1) && MEQUAL(p.q.b, 1)) {\n          return 1;\n        }\n        break;\n      case DOUBLE:\n        if (p.d === -1.0) {\n          return 1;\n        }\n    }\n    return 0;\n  };\n\n  isone = function(p) {\n    return isplusone(p) || isminusone(p);\n  };\n\n  isinteger = function(p) {\n    if (p.k === NUM && MEQUAL(p.q.b, 1)) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  isintegerorintegerfloat = function(p) {\n    if (p.k === DOUBLE) {\n      if (p.d === Math.round(p.d)) {\n        return 1;\n      }\n      return 0;\n    }\n    return isinteger(p);\n  };\n\n  isnonnegativeinteger = function(p) {\n    if (isrational(p) && MEQUAL(p.q.b, 1) && MSIGN(p.q.a) === 1) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  isposint = function(p) {\n    if (isinteger(p) && MSIGN(p.q.a) === 1) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  // --------------------------------------\n  isunivarpolyfactoredorexpandedform = function(p, x) {\n    if (DEBUG) {\n      console.log(\"isunivarpolyfactoredorexpandedform: p: \" + p + \" x: \" + x);\n    }\n    if (x == null) {\n      push(p);\n      guess();\n      x = pop();\n      pop();\n    }\n    if (ispolyfactoredorexpandedform(p, x) && (Find(p, symbol(SYMBOL_X)) + Find(p, symbol(SYMBOL_Y)) + Find(p, symbol(SYMBOL_Z)) === 1)) {\n      return x;\n    } else {\n      return 0;\n    }\n  };\n\n  // --------------------------------------\n  // sometimes we want to check if we have a poly in our\n  // hands, however it's in factored form and we don't\n  // want to expand it.\n  ispolyfactoredorexpandedform = function(p, x) {\n    return ispolyfactoredorexpandedform_factor(p, x);\n  };\n\n  ispolyfactoredorexpandedform_factor = function(p, x) {\n    if (car(p) === symbol(MULTIPLY)) {\n      p = cdr(p);\n      while (iscons(p)) {\n        if (DEBUG) {\n          console.log(\"ispolyfactoredorexpandedform_factor testing \" + car(p));\n        }\n        if (!ispolyfactoredorexpandedform_power(car(p), x)) {\n          if (DEBUG) {\n            console.log(\"... tested negative:\" + car(p));\n          }\n          return 0;\n        }\n        p = cdr(p);\n      }\n      return 1;\n    } else {\n      return ispolyfactoredorexpandedform_power(p, x);\n    }\n  };\n\n  ispolyfactoredorexpandedform_power = function(p, x) {\n    if (car(p) === symbol(POWER)) {\n      if (DEBUG) {\n        console.log(\"ispolyfactoredorexpandedform_power (isposint(caddr(p)) \" + (isposint(caddr(p)), DEBUG ? console.log(\"ispolyfactoredorexpandedform_power ispolyexpandedform_expr(cadr(p), x)) \" + ispolyexpandedform_expr(cadr(p), x)) : void 0));\n      }\n      return isposint(caddr(p)) && ispolyexpandedform_expr(cadr(p), x);\n    } else {\n      if (DEBUG) {\n        console.log(\"ispolyfactoredorexpandedform_power not a power, testing if this is exp form: \" + p);\n      }\n      return ispolyexpandedform_expr(p, x);\n    }\n  };\n\n  // --------------------------------------\n  ispolyexpandedform = function(p, x) {\n    if (Find(p, x)) {\n      return ispolyexpandedform_expr(p, x);\n    } else {\n      return 0;\n    }\n  };\n\n  ispolyexpandedform_expr = function(p, x) {\n    if (car(p) === symbol(ADD)) {\n      p = cdr(p);\n      while (iscons(p)) {\n        if (!ispolyexpandedform_term(car(p), x)) {\n          return 0;\n        }\n        p = cdr(p);\n      }\n      return 1;\n    } else {\n      return ispolyexpandedform_term(p, x);\n    }\n  };\n\n  ispolyexpandedform_term = function(p, x) {\n    if (car(p) === symbol(MULTIPLY)) {\n      p = cdr(p);\n      while (iscons(p)) {\n        if (!ispolyexpandedform_factor(car(p), x)) {\n          return 0;\n        }\n        p = cdr(p);\n      }\n      return 1;\n    } else {\n      return ispolyexpandedform_factor(p, x);\n    }\n  };\n\n  ispolyexpandedform_factor = function(p, x) {\n    if (equal(p, x)) {\n      return 1;\n    }\n    if (car(p) === symbol(POWER) && equal(cadr(p), x)) {\n      if (isposint(caddr(p))) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n    if (Find(p, x)) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  // --------------------------------------\n  isnegativeterm = function(p) {\n    if (isnegativenumber(p)) {\n      return 1;\n    } else if (car(p) === symbol(MULTIPLY) && isnegativenumber(cadr(p))) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  hasNegativeRationalExponent = function(p) {\n    if (car(p) === symbol(POWER) && isrational(car(cdr(cdr(p)))) && isnegativenumber(car(cdr(p)))) {\n      if (DEBUG_IS) {\n        console.log(\"hasNegativeRationalExponent: \" + p.toString() + \" has imaginary component\");\n      }\n      return 1;\n    } else {\n      if (DEBUG_IS) {\n        console.log(\"hasNegativeRationalExponent: \" + p.toString() + \" has NO imaginary component\");\n      }\n      return 0;\n    }\n  };\n\n  isimaginarynumberdouble = function(p) {\n    if ((car(p) === symbol(MULTIPLY) && length(p) === 3 && isdouble(cadr(p)) && hasNegativeRationalExponent(caddr(p))) || equal(p, imaginaryunit)) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  isimaginarynumber = function(p) {\n    if ((car(p) === symbol(MULTIPLY) && length(p) === 3 && isNumericAtom(cadr(p)) && equal(caddr(p), imaginaryunit)) || equal(p, imaginaryunit) || hasNegativeRationalExponent(caddr(p))) {\n      if (DEBUG_IS) {\n        console.log(\"isimaginarynumber: \" + p.toString() + \" is imaginary number\");\n      }\n      return 1;\n    } else {\n      if (DEBUG_IS) {\n        console.log(\"isimaginarynumber: \" + p.toString() + \" isn't an imaginary number\");\n      }\n      return 0;\n    }\n  };\n\n  iscomplexnumberdouble = function(p) {\n    if ((car(p) === symbol(ADD) && length(p) === 3 && isdouble(cadr(p)) && isimaginarynumberdouble(caddr(p))) || isimaginarynumberdouble(p)) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  iscomplexnumber = function(p) {\n    if (DEBUG_IS) {\n      debugger;\n    }\n    if ((car(p) === symbol(ADD) && length(p) === 3 && isNumericAtom(cadr(p)) && isimaginarynumber(caddr(p))) || isimaginarynumber(p)) {\n      if (DEBUG) {\n        console.log(\"iscomplexnumber: \" + p.toString() + \" is imaginary number\");\n      }\n      return 1;\n    } else {\n      if (DEBUG) {\n        console.log(\"iscomplexnumber: \" + p.toString() + \" is imaginary number\");\n      }\n      return 0;\n    }\n  };\n\n  iseveninteger = function(p) {\n    if (isinteger(p) && p.q.a.isEven()) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  isnegative = function(p) {\n    if (car(p) === symbol(ADD) && isnegativeterm(cadr(p))) {\n      return 1;\n    } else if (isnegativeterm(p)) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  // returns 1 if there's a symbol somewhere.\n  // not used anywhere.\n  // NOTE: PI and POWER are symbols,\n  // so for example 2^3 would be symbolic\n  // while -1^(1/2) i.e. 'i' is not, so this can\n  // be tricky to use.\n  issymbolic = function(p) {\n    if (issymbol(p)) {\n      return 1;\n    } else {\n      while (iscons(p)) {\n        if (issymbolic(car(p))) {\n          return 1;\n        }\n        p = cdr(p);\n      }\n      return 0;\n    }\n  };\n\n  // i.e. 2, 2^3, etc.\n  isintegerfactor = function(p) {\n    return isinteger(p) || car(p) === symbol(POWER) && isinteger(cadr(p)) && isinteger(caddr(p));\n  };\n\n  isNumberOneOverSomething = function(p) {\n    return isfraction(p) && MEQUAL(p.q.a.abs(), 1);\n  };\n\n  isoneover = function(p) {\n    return car(p) === symbol(POWER) && isminusone(caddr(p));\n  };\n\n  isfraction = function(p) {\n    return p.k === NUM && !MEQUAL(p.q.b, 1);\n  };\n\n  // p is a U, n an int\n  equaln = function(p, n) {\n    switch (p.k) {\n      case NUM:\n        return MEQUAL(p.q.a, n) && MEQUAL(p.q.b, 1);\n      case DOUBLE:\n        return p.d === n;\n      default:\n        return false;\n    }\n  };\n\n  // p is a U, a and b ints\n  equalq = function(p, a, b) {\n    switch (p.k) {\n      case NUM:\n        return MEQUAL(p.q.a, a) && MEQUAL(p.q.b, b);\n      case DOUBLE:\n        return p.d === a / b;\n      default:\n        return false;\n    }\n  };\n\n  // 1/2 ?\n  isoneovertwo = function(p) {\n    return equalq(p, 1, 2);\n  };\n\n  // -1/2 ?\n  isminusoneovertwo = function(p) {\n    return equalq(p, -1, 2);\n  };\n\n  // 1/sqrt(2) ?\n  isoneoversqrttwo = function(p) {\n    return car(p) === symbol(POWER) && equaln(cadr(p), 2) && equalq(caddr(p), -1, 2);\n  };\n\n  // -1/sqrt(2) ?\n  isminusoneoversqrttwo = function(p) {\n    return car(p) === symbol(MULTIPLY) && equaln(cadr(p), -1) && isoneoversqrttwo(caddr(p)) && length(p) === 3;\n  };\n\n  // sqrt(3)/2 ?\n  issqrtthreeovertwo = function(p) {\n    return car(p) === symbol(MULTIPLY) && isoneovertwo(cadr(p)) && issqrtthree(caddr(p)) && length(p) === 3;\n  };\n\n  // -sqrt(3)/2 ?\n  isminussqrtthreeovertwo = function(p) {\n    return car(p) === symbol(MULTIPLY) && isminusoneovertwo(cadr(p)) && issqrtthree(caddr(p)) && length(p) === 3;\n  };\n\n  // p == sqrt(3) ?\n  issqrtthree = function(p) {\n    return car(p) === symbol(POWER) && equaln(cadr(p), 3) && isoneovertwo(caddr(p));\n  };\n\n  isfloating = function(p) {\n    if (p.k === DOUBLE || p === symbol(FLOATF)) {\n      return 1;\n    }\n    while (iscons(p)) {\n      if (isfloating(car(p))) {\n        return 1;\n      }\n      p = cdr(p);\n    }\n    return 0;\n  };\n\n  isimaginaryunit = function(p) {\n    if (equal(p, imaginaryunit)) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  // n/2 * i * pi ?\n\n  // return value:\n\n  //  0  no\n\n  //  1  1\n\n  //  2  -1\n\n  //  3  i\n\n  //  4  -i\n  isquarterturn = function(p) {\n    var minussign, n;\n    n = 0;\n    minussign = 0;\n    if (car(p) !== symbol(MULTIPLY)) {\n      return 0;\n    }\n    if (equal(cadr(p), imaginaryunit)) {\n      if (caddr(p) !== symbol(PI)) {\n        return 0;\n      }\n      if (length(p) !== 3) {\n        return 0;\n      }\n      return 2;\n    }\n    if (!isNumericAtom(cadr(p))) {\n      return 0;\n    }\n    if (!equal(caddr(p), imaginaryunit)) {\n      return 0;\n    }\n    if (cadddr(p) !== symbol(PI)) {\n      return 0;\n    }\n    if (length(p) !== 4) {\n      return 0;\n    }\n    push(cadr(p));\n    push_integer(2);\n    multiply();\n    n = pop_integer();\n    if (isNaN(n)) {\n      return 0;\n    }\n    if (n < 1) {\n      minussign = 1;\n      n = -n;\n    }\n    switch (n % 4) {\n      case 0:\n        n = 1;\n        break;\n      case 1:\n        if (minussign) {\n          n = 4;\n        } else {\n          n = 3;\n        }\n        break;\n      case 2:\n        n = 2;\n        break;\n      case 3:\n        if (minussign) {\n          n = 3;\n        } else {\n          n = 4;\n        }\n    }\n    return n;\n  };\n\n  // special multiple of pi?\n\n  // returns for the following multiples of pi...\n\n  //  -4/2  -3/2  -2/2  -1/2  1/2  2/2  3/2  4/2\n\n  //  4  1  2  3  1  2  3  4\n  isnpi = function(p) {\n    var doNothing, n;\n    n = 0;\n    if (p === symbol(PI)) {\n      return 2;\n    }\n    if (car(p) === symbol(MULTIPLY) && isNumericAtom(cadr(p)) && caddr(p) === symbol(PI) && length(p) === 3) {\n      doNothing = 0;\n    } else {\n      return 0;\n    }\n    push(cadr(p));\n    push_integer(2);\n    multiply();\n    n = pop_integer();\n    if (isNaN(n)) {\n      return 0;\n    }\n    if (n < 0) {\n      n = 4 - (-n) % 4;\n    } else {\n      n = 1 + (n - 1) % 4;\n    }\n    return n;\n  };\n\n  $.isZeroAtomOrTensor = isZeroAtomOrTensor;\n\n  $.isnegativenumber = isnegativenumber;\n\n  $.isplusone = isplusone;\n\n  $.isminusone = isminusone;\n\n  $.isinteger = isinteger;\n\n  $.isnonnegativeinteger = isnonnegativeinteger;\n\n  $.isposint = isposint;\n\n  $.isnegativeterm = isnegativeterm;\n\n  $.isimaginarynumber = isimaginarynumber;\n\n  $.iscomplexnumber = iscomplexnumber;\n\n  $.iseveninteger = iseveninteger;\n\n  $.isnegative = isnegative;\n\n  $.issymbolic = issymbolic;\n\n  $.isintegerfactor = isintegerfactor;\n\n  $.isoneover = isoneover;\n\n  $.isfraction = isfraction;\n\n  $.isoneoversqrttwo = isoneoversqrttwo;\n\n  $.isminusoneoversqrttwo = isminusoneoversqrttwo;\n\n  $.isfloating = isfloating;\n\n  $.isimaginaryunit = isimaginaryunit;\n\n  $.isquarterturn = isquarterturn;\n\n  $.isnpi = isnpi;\n\n  Eval_isprime = function() {\n    push(cadr(p1));\n    Eval();\n    p1 = pop();\n    if (isnonnegativeinteger(p1) && mprime(p1.q.a)) {\n      return push_integer(1);\n    } else {\n      return push_integer(0);\n    }\n  };\n\n  Eval_laguerre = function() {\n    // 1st arg\n    push(cadr(p1));\n    Eval();\n    // 2nd arg\n    push(caddr(p1));\n    Eval();\n    // 3rd arg\n    push(cadddr(p1));\n    Eval();\n    p2 = pop();\n    if (p2 === symbol(NIL)) {\n      push_integer(0);\n    } else {\n      push(p2);\n    }\n    return laguerre();\n  };\n\n  //define X p1\n  //define N p2\n  //define K p3\n  //define Y p4\n  //define Y0 p5\n  //define Y1 p6\n  laguerre = function() {\n    var n;\n    n = 0;\n    save();\n    p3 = pop();\n    p2 = pop();\n    p1 = pop();\n    push(p2);\n    n = pop_integer();\n    if (n < 0 || isNaN(n)) {\n      push_symbol(LAGUERRE);\n      push(p1);\n      push(p2);\n      push(p3);\n      list(4);\n      restore();\n      return;\n    }\n    if (issymbol(p1)) {\n      laguerre2(n);\n    } else {\n      p4 = p1;\n      p1 = symbol(SECRETX);\n      laguerre2(n);\n      p1 = p4;\n      push(symbol(SECRETX));\n      push(p1);\n      subst();\n      Eval();\n    }\n    return restore();\n  };\n\n  laguerre2 = function(n) {\n    var i, o, ref, results;\n    i = 0;\n    push_integer(1);\n    push_integer(0);\n    p6 = pop();\n    results = [];\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      p5 = p6;\n      p6 = pop();\n      push_integer(2 * i + 1);\n      push(p1);\n      subtract();\n      push(p3);\n      add();\n      push(p6);\n      multiply();\n      push_integer(i);\n      push(p3);\n      add();\n      push(p5);\n      multiply();\n      subtract();\n      push_integer(i + 1);\n      results.push(divide());\n    }\n    return results;\n  };\n\n  // Find the least common multiple of two expressions.\n  Eval_lcm = function() {\n    var results;\n    p1 = cdr(p1);\n    push(car(p1));\n    Eval();\n    p1 = cdr(p1);\n    results = [];\n    while (iscons(p1)) {\n      push(car(p1));\n      Eval();\n      lcm();\n      results.push(p1 = cdr(p1));\n    }\n    return results;\n  };\n\n  lcm = function() {\n    var prev_expanding;\n    prev_expanding = expanding;\n    save();\n    yylcm();\n    restore();\n    return expanding = prev_expanding;\n  };\n\n  yylcm = function() {\n    expanding = 1;\n    p2 = pop();\n    p1 = pop();\n    push(p1);\n    push(p2);\n    gcd();\n    push(p1);\n    divide();\n    push(p2);\n    divide();\n    return inverse();\n  };\n\n  Eval_leading = function() {\n    push(cadr(p1));\n    Eval();\n    push(caddr(p1));\n    Eval();\n    p1 = pop();\n    if (p1 === symbol(NIL)) {\n      guess();\n    } else {\n      push(p1);\n    }\n    return leading();\n  };\n\n  //define P p1\n  //define X p2\n  //define N p3\n  leading = function() {\n    save();\n    p2 = pop();\n    p1 = pop();\n    push(p1); // N = degree of P\n    push(p2);\n    degree();\n    p3 = pop();\n    push(p1); // divide through by X ^ N\n    push(p2);\n    push(p3);\n    power();\n    divide();\n    push(p2); // remove terms that depend on X\n    filter();\n    return restore();\n  };\n\n  Eval_legendre = function() {\n    // 1st arg\n    push(cadr(p1));\n    Eval();\n    // 2nd arg\n    push(caddr(p1));\n    Eval();\n    // 3rd arg (optional)\n    push(cadddr(p1));\n    Eval();\n    p2 = pop();\n    if (p2 === symbol(NIL)) {\n      push_integer(0);\n    } else {\n      push(p2);\n    }\n    return legendre();\n  };\n\n  //define X p1\n  //define N p2\n  //define M p3\n  //define Y p4\n  //define Y0 p5\n  //define Y1 p6\n  legendre = function() {\n    save();\n    __legendre();\n    return restore();\n  };\n\n  __legendre = function() {\n    var m, n;\n    m = 0;\n    n = 0;\n    p3 = pop();\n    p2 = pop();\n    p1 = pop();\n    push(p2);\n    n = pop_integer();\n    push(p3);\n    m = pop_integer();\n    if (n < 0 || isNaN(n) || m < 0 || isNaN(m)) {\n      push_symbol(LEGENDRE);\n      push(p1);\n      push(p2);\n      push(p3);\n      list(4);\n      return;\n    }\n    if (issymbol(p1)) {\n      __legendre2(n, m);\n    } else {\n      p4 = p1;\n      p1 = symbol(SECRETX);\n      __legendre2(n, m);\n      p1 = p4;\n      push(symbol(SECRETX));\n      push(p1);\n      subst();\n      Eval();\n    }\n    return __legendre3(m);\n  };\n\n  __legendre2 = function(n, m) {\n    var i, i1, o, ref, ref1, results;\n    i = 0;\n    push_integer(1);\n    push_integer(0);\n    p6 = pop();\n//  i=1  p5 = 0 \n//    p6 = 1 \n//    ((2*i+1)*x*p6 - i*p5) / i = x\n\n//  i=2  p5 = 1\n//    p6 = x\n//    ((2*i+1)*x*p6 - i*p5) / i = -1/2 + 3/2*x^2\n\n//  i=3  p5 = x\n//    p6 = -1/2 + 3/2*x^2\n//    ((2*i+1)*x*p6 - i*p5) / i = -3/2*x + 5/2*x^3\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      p5 = p6;\n      p6 = pop();\n      push_integer(2 * i + 1);\n      push(p1);\n      multiply();\n      push(p6);\n      multiply();\n      push_integer(i);\n      push(p5);\n      multiply();\n      subtract();\n      push_integer(i + 1);\n      divide();\n    }\n    results = [];\n    for (i = i1 = 0, ref1 = m; (0 <= ref1 ? i1 < ref1 : i1 > ref1); i = 0 <= ref1 ? ++i1 : --i1) {\n      push(p1);\n      results.push(derivative());\n    }\n    return results;\n  };\n\n  // moveTos tos * (-1)^m * (1-x^2)^(m/2)\n  __legendre3 = function(m) {\n    if (m === 0) {\n      return;\n    }\n    if (car(p1) === symbol(COS)) {\n      push(cadr(p1));\n      sine();\n      square();\n    } else if (car(p1) === symbol(SIN)) {\n      push(cadr(p1));\n      cosine();\n      square();\n    } else {\n      push_integer(1);\n      push(p1);\n      square();\n      subtract();\n    }\n    push_integer(m);\n    push_rational(1, 2);\n    multiply();\n    power();\n    multiply();\n    if (m % 2) {\n      return negate();\n    }\n  };\n\n  // Create a list from n things on the stack.\n\n  // n is an integer\n  list = function(n) {\n    var listIterator, o, ref, results;\n    listIterator = 0;\n    push(symbol(NIL));\n    results = [];\n    for (listIterator = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); listIterator = 0 <= ref ? ++o : --o) {\n      results.push(cons());\n    }\n    return results;\n  };\n\n  // Natural logarithm.\n\n  // Note that we use the mathematics / Javascript / Mathematica\n  // convention that \"log\" is indeed the natural logarithm.\n\n  // In engineering, biology, astronomy, \"log\" can stand instead\n  // for the \"common\" logarithm i.e. base 10. Also note that Google\n  // calculations use log for the common logarithm.\n  Eval_log = function() {\n    push(cadr(p1));\n    Eval();\n    return logarithm();\n  };\n\n  logarithm = function() {\n    save();\n    yylog();\n    return restore();\n  };\n\n  yylog = function() {\n    var d;\n    d = 0.0;\n    p1 = pop();\n    if (p1 === symbol(E)) {\n      push_integer(1);\n      return;\n    }\n    if (equaln(p1, 1)) {\n      push_integer(0);\n      return;\n    }\n    if (isnegativenumber(p1)) {\n      push(p1);\n      negate();\n      logarithm();\n      push(imaginaryunit);\n      if (evaluatingAsFloats) {\n        push_double(Math.PI);\n      } else {\n        push_symbol(PI);\n      }\n      multiply();\n      add();\n      return;\n    }\n    if (isdouble(p1)) {\n      d = Math.log(p1.d);\n      push_double(d);\n      return;\n    }\n    // rational number and not an integer?\n    if (isfraction(p1)) {\n      push(p1);\n      numerator();\n      logarithm();\n      push(p1);\n      denominator();\n      logarithm();\n      subtract();\n      return;\n    }\n    // log(a ^ b) --> b log(a)\n    if (car(p1) === symbol(POWER)) {\n      push(caddr(p1));\n      push(cadr(p1));\n      logarithm();\n      multiply();\n      return;\n    }\n    // log(a * b) --> log(a) + log(b)\n    if (car(p1) === symbol(MULTIPLY)) {\n      push_integer(0);\n      p1 = cdr(p1);\n      while (iscons(p1)) {\n        push(car(p1));\n        logarithm();\n        add();\n        p1 = cdr(p1);\n      }\n      return;\n    }\n    push_symbol(LOG);\n    push(p1);\n    return list(2);\n  };\n\n  // now this might be a little confusing, so a\n  // clarification is in order.\n  // First off, at the scripting level most things\n  // as they are handled get evalled.\n  // That means that they are recursively \"calculated\"\n  // as much as possible, i.e. variables are recursively\n  // looked up for their values, operators are applied,\n  // functions are ivoked, etc.\n  // I.e. while scripting, most things are\n  // evalled all the times.\n  // e.g. if I type\n  //   x = 1+1\n  // then x is actually assigned 2, not 1+1\n  // Something that helps a little is \"quote\", e.g.\n  // If I assign\n  //   x = quote(1+1)\n  // then x actually contains 1+1, not 2.\n  // But then x is evaluated as soon as I type\n  //   x // gives \"2\" as x is evaluated\n\n  // Evaluation is great, but sometimes one wants\n  // to look at the actual structure of an expression\n  // or a content of a variable, without those\n  // being evaluated first.\n\n  // for example I might type\n  //   x = a + b\n  //   a = 1\n  //   b = 2\n  // and from this point on printing the actual\n  // structure of x is impossible, because from\n  // now on any evaluation of x will give \"3\"\n  // You might say \"but you have x defined up there,\n  // what's the point of printing it out?\", to which\n  // the answer is that one might do further\n  // substitutions or transformations of special kind\n  // to x. One might want to look at the structure\n  // and it might be complex or impossible.\n\n  // So this function does that.\n  // If it's passed a variable, then it\n  // DOES NOT eval the variable, RATHER\n  // it prints the content of the variable without\n  // evaluating it.\n  // In the other cases it works like \"quote\" e.g.\n  // it just gives the argument as is, again without\n  // evaluating it.\n\n  // In the following examples, for brevity, I just\n  // use\n  //   x = quote(1+2)\n  // instead of this:\n  //   x = a + b\n  //   a = 1\n  //   b = 2\n  // to put a structure in x that is easy to see whether\n  // it's avaulated or not.\n\n  // So lookup allows this:\n  //   x = quote(1+2)\n  //   print(lookup(x)) # gives 1+2\n\n  // Note that there would be potentially a way\n  // to achieve a similar result, you could do:\n  //   x = quote(quote(1+2))\n  //   print(x)\n  // but you can't always control x to contain\n  // two quotes like that...\n  // note how two \"quotes\" are needed because\n  // if you just put one, then\n  // x would indeed contain 1+2 instead of 3,\n  // but then print would evaluate that to 3:\n  //   x = quote(1+2) # now x contains 1+2, not 3\n  //   print(x) # but x evaluated here to 3\n\n  // Other workarounds would not work:\n  //   x = quote(1+2)\n  //   print(quote(x))\n  // would not work because quote(x) literally means 'x'\n  // so 'x' is printed instead of its content.\n\n  // Note also that lookup allows you to copy\n  // the structure of a variable to another:\n  //   x = a + b\n  //   a = 1\n  //   b = 2\n  // now:\n  //   y = x # y contains the number 3 and prints to 3\n  //   y = lookup(x) # y contains \"a+b\" and prints to 3\n  //   y = quote(x) # y contains \"x\" and prints to 3\n  // note that in the first and second case y is\n  // independent from x, i.e. changing x doesn't change y\n  // while in the last case it is.\n\n  // Another similar simple example is when doing something\n  // like this:\n  //    x = y\n  //    y = z\n  //    x\n  //       => gives z\n  //    lookup(x)\n  //       => gives y\n  //          i.e. lookup allows you to see the immediate\n  //          content of x, rather than the evaluation which\n  //          would end up in x -> y -> z\n  // Note that if you invert the order of the assignments i.e.\n  //    y = z\n  //    x = y\n  // Then at this point x immediately contains z, since the\n  // assignment x = y is not quoted, hence y is evaluated to z\n  // when assigned to x.\n  //    lookup(x)\n  //       => gives z\n  Eval_lookup = function() {\n    p1 = cadr(p1);\n    if (!iscons(p1) && cadr(p1).k === SYM) {\n      p1 = get_binding(p1);\n    }\n    return push(p1); // Bignum addition and subtraction\n  };\n\n  \n  //static unsigned int *addf(unsigned int *, unsigned int *)\n  //static unsigned int *subf(unsigned int *, unsigned int *)\n  //static int ucmp(unsigned int *, unsigned int *)\n  madd = function(a, b) {\n    return a.add(b);\n  };\n\n  msub = function(a, b) {\n    return a.subtract(b);\n  };\n\n  addf = function(a, b) {\n    return a.add(b);\n  };\n\n  subf = function(a, b) {\n    return a.subtract(b);\n  };\n\n  // unsigned compare\n  ucmp = function(a, b) {\n    return a.compareAbs(b);\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Bignum GCD\n\n  //  Uses the binary GCD algorithm.\n\n  //  See \"The Art of Computer Programming\" p. 338.\n\n  //  mgcd always returns a positive value\n\n  //  mgcd(0, 0) = 0\n\n  //  mgcd(u, 0) = |u|\n\n  //  mgcd(0, v) = |v|\n\n  //-----------------------------------------------------------------------------\n  mgcd = function(u, v) {\n    return bigInt.gcd(u, v);\n  };\n\n  //if SELFTEST\n\n  // s is a string\n  new_string = function(s) {\n    var theNewString;\n    theNewString = new U();\n    theNewString.k = STR;\n    theNewString.str = s;\n    return theNewString;\n  };\n\n  out_of_memory = function() {\n    return stop(\"out of memory\");\n  };\n\n  // both ints\n  push_zero_matrix = function(i, j) {\n    push(alloc_tensor(i * j));\n    stack[tos - 1].tensor.ndim = 2;\n    stack[tos - 1].tensor.dim[0] = i;\n    return stack[tos - 1].tensor.dim[1] = j;\n  };\n\n  push_identity_matrix = function(n) {\n    var i, o, ref;\n    push_zero_matrix(n, n);\n    for (i = o = 0, ref = n; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      stack[tos - 1].tensor.elem[i * n + i] = one;\n    }\n    return check_tensor_dimensions(stack[tos - 1]);\n  };\n\n  push_cars = function(p) {\n    var results;\n    results = [];\n    while (iscons(p)) {\n      push(car(p));\n      results.push(p = cdr(p));\n    }\n    return results;\n  };\n\n  // see cmp_expr definition, this\n  // function alone just does simple structure comparison\n  // or compares numbers (either rationals or integers or doubles)\n  // but can't be used alone to test\n  // more complex mathematical equalities...\n  equal = function(p1, p2) {\n    if (cmp_expr(p1, p2) === 0) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  lessp = function(p1, p2) {\n    if (cmp_expr(p1, p2) < 0) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  sign = function(n) {\n    if (n < 0) {\n      return -1;\n    } else if (n > 0) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  // compares whether two expressions\n  // have the same structure.\n  // For example this method alone\n  // would compare \"1+1\" and \"2\"\n  // as different.\n  // It just so happens though that one oftens\n  // evaluates the two sides before passing them\n  // to this function, so chances are that the two\n  // sides have the same normal form.\n  // Even a simple evaluation might not cut it\n  // though... a simplification of both sides\n  // would then help. And even that might not\n  // cut it in some cases...\n  cmp_expr = function(p1, p2) {\n    var n;\n    n = 0;\n    if (p1 === p2) {\n      return 0;\n    }\n    if (p1 === symbol(NIL)) {\n      return -1;\n    }\n    if (p2 === symbol(NIL)) {\n      return 1;\n    }\n    if (isNumericAtom(p1) && isNumericAtom(p2)) {\n      return sign(compare_numbers(p1, p2));\n    }\n    if (isNumericAtom(p1)) {\n      return -1;\n    }\n    if (isNumericAtom(p2)) {\n      return 1;\n    }\n    if (isstr(p1) && isstr(p2)) {\n      return sign(strcmp(p1.str, p2.str));\n    }\n    if (isstr(p1)) {\n      return -1;\n    }\n    if (isstr(p2)) {\n      return 1;\n    }\n    if (issymbol(p1) && issymbol(p2)) {\n      return sign(strcmp(get_printname(p1), get_printname(p2)));\n    }\n    if (issymbol(p1)) {\n      return -1;\n    }\n    if (issymbol(p2)) {\n      return 1;\n    }\n    if (istensor(p1) && istensor(p2)) {\n      return compare_tensors(p1, p2);\n    }\n    if (istensor(p1)) {\n      return -1;\n    }\n    if (istensor(p2)) {\n      return 1;\n    }\n    // recursion here\n    while (iscons(p1) && iscons(p2)) {\n      n = cmp_expr(car(p1), car(p2));\n      if (n !== 0) {\n        return n;\n      }\n      p1 = cdr(p1);\n      p2 = cdr(p2);\n    }\n    if (iscons(p2)) {\n      return -1;\n    }\n    if (iscons(p1)) {\n      return 1;\n    }\n    return 0;\n  };\n\n  length = function(p) {\n    var n;\n    n = 0;\n    while (iscons(p)) {\n      p = cdr(p);\n      n++;\n    }\n    return n;\n  };\n\n  unique = function(p) {\n    save();\n    p1 = symbol(NIL);\n    p2 = symbol(NIL);\n    unique_f(p);\n    if (p2 !== symbol(NIL)) {\n      p1 = symbol(NIL);\n    }\n    p = p1;\n    restore();\n    return p;\n  };\n\n  unique_f = function(p) {\n    if (isstr(p)) {\n      if (p1 === symbol(NIL)) {\n        p1 = p;\n      } else if (p !== p1) {\n        p2 = p;\n      }\n      return;\n    }\n    while (iscons(p)) {\n      unique_f(car(p));\n      if (p2 !== symbol(NIL)) {\n        return;\n      }\n      p = cdr(p);\n    }\n  };\n\n  ssqrt = function() {\n    push_rational(1, 2);\n    return power();\n  };\n\n  yyexpand = function() {\n    var prev_expanding;\n    prev_expanding = expanding;\n    expanding = 1;\n    Eval();\n    return expanding = prev_expanding;\n  };\n\n  exponential = function() {\n    push_symbol(E);\n    swap();\n    return power();\n  };\n\n  square = function() {\n    push_integer(2);\n    return power();\n  };\n\n  //__cmp = (p1, p2) ->\n  //  return cmp_expr(p1, p2)\n\n  // n an integer\n  sort_stack = function(n) {\n    var h, subsetOfStack;\n    //qsort(stack + tos - n, n, sizeof (U *), __cmp)\n    h = tos - n;\n    subsetOfStack = stack.slice(h, h + n);\n    subsetOfStack.sort(cmp_expr);\n    return stack = stack.slice(0, h).concat(subsetOfStack).concat(stack.slice(h + n));\n  };\n\n  $.equal = equal;\n\n  $.length = length;\n\n  // Bignum multiplication and division\n  mmul = function(a, b) {\n    return a.multiply(b);\n  };\n\n  mdiv = function(a, b) {\n    return a.divide(b);\n  };\n\n  // a = a + b\n  /*\n  static void\n  addf(unsigned int *a, unsigned int *b, int len)\n  {\n    int i\n    long long t = 0; # can be signed or unsigned \n    for (i = 0; i < len; i++) {\n      t += (long long) a[i] + b[i]\n      a[i] = (unsigned int) t\n      t >>= 32\n    }\n  }\n\n  // a = a - b\n\n  static void\n  subf(unsigned int *a, unsigned int *b, int len)\n  {\n    int i\n    long long t = 0; # must be signed\n    for (i = 0; i < len; i++) {\n      t += (long long) a[i] - b[i]\n      a[i] = (unsigned int) t\n      t >>= 32\n    }\n  }\n\n  // a = b * c\n\n  // 0xffffffff + 0xffffffff * 0xffffffff == 0xffffffff00000000\n\n  static void\n  mulf(unsigned int *a, unsigned int *b, int len, unsigned int c)\n  {\n    int i\n    unsigned long long t = 0; # must be unsigned\n    for (i = 0; i < len; i++) {\n      t += (unsigned long long) b[i] * c\n      a[i] = (unsigned int) t\n      t >>= 32\n    }\n    a[i] = (unsigned int) t\n  }\n  */\n  mmod = function(a, b) {\n    return a.mod(b);\n  };\n\n  // return both quotient and remainder of a/b\n  // we'd have this method as divmod(number)\n  // but obviously doesn't change the passed parameters\n  mdivrem = function(a, b) {\n    var toReturn;\n    toReturn = a.divmod(b);\n    return [toReturn.quotient, toReturn.remainder];\n  };\n\n  //if SELFTEST\n\n  // small integer tests\n  Eval_mod = function() {\n    push(cadr(p1));\n    Eval();\n    push(caddr(p1));\n    Eval();\n    return mod();\n  };\n\n  mod = function() {\n    var n;\n    n = 0;\n    save();\n    p2 = pop();\n    p1 = pop();\n    if (isZeroAtomOrTensor(p2)) {\n      stop(\"mod function: divide by zero\");\n    }\n    if (!isNumericAtom(p1) || !isNumericAtom(p2)) {\n      push_symbol(MOD);\n      push(p1);\n      push(p2);\n      list(3);\n      restore();\n      return;\n    }\n    if (isdouble(p1)) {\n      push(p1);\n      n = pop_integer();\n      if (isNaN(n)) {\n        stop(\"mod function: cannot convert float value to integer\");\n      }\n      push_integer(n);\n      p1 = pop();\n    }\n    if (isdouble(p2)) {\n      push(p2);\n      n = pop_integer();\n      if (isNaN(n)) {\n        stop(\"mod function: cannot convert float value to integer\");\n      }\n      push_integer(n);\n      p2 = pop();\n    }\n    if (!isinteger(p1) || !isinteger(p2)) {\n      stop(\"mod function: integer arguments expected\");\n    }\n    p3 = new U();\n    p3.k = NUM;\n    p3.q.a = mmod(p1.q.a, p2.q.a);\n    p3.q.b = mint(1);\n    push(p3);\n    return restore();\n  };\n\n  // Bignum power\n\n  // a is a bigint, n is a small normal int\n  mpow = function(a, n) {\n    return a.pow(n);\n  };\n\n  //if SELFTEST\n\n  // Bignum prime test (returns 1 if prime, 0 if not)\n\n  // Uses Algorithm P (probabilistic primality test) from p. 395 of\n  // \"The Art of Computer Programming, Volume 2\" by Donald E. Knuth.\n  mprime = function(n) {\n    return n.isProbablePrime();\n  };\n\n  //if SELFTEST\n\n  //-----------------------------------------------------------------------------\n\n  //  Bignum root\n\n  //  Returns null pointer if not perfect root.\n\n  //  The sign of the radicand is ignored.\n\n  //-----------------------------------------------------------------------------\n  mroot = function(n, index) {\n    var i, j, k, o, ref, x, y;\n    // this doesn't quite work\n    //return n.pow(1/index +  0.0000000000000001)\n\n    // sign of radicand ignored\n    n = n.abs();\n    i = 0;\n    j = 0;\n    k = 0;\n    if (index === 0) {\n      stop(\"root index is zero\");\n    }\n    // count number of bits\n    k = 0;\n    while (n.shiftRight(k) > 0) {\n      k++;\n    }\n    if (k === 0) {\n      return mint(0);\n    }\n    // initial guess\n    k = Math.floor((k - 1) / index);\n    j = Math.floor(k / 32 + 1);\n    x = bigInt(j);\n    for (i = o = 0, ref = j; (0 <= ref ? o < ref : o > ref); i = 0 <= ref ? ++o : --o) {\n      // zero-out the ith bit\n      x = x.and(bigInt(1).shiftLeft(i).not());\n    }\n    while (k >= 0) {\n      // set the kth bit\n      x = x.or(bigInt(1).shiftLeft(k));\n      y = mpow(x, index);\n      switch (mcmp(y, n)) {\n        case 0:\n          return x;\n        case 1:\n          //mp_clr_bit(x, k)\n          // clear the kth bit\n          x = x.and(bigInt(1).shiftLeft(k).not());\n      }\n      k--;\n    }\n    return 0;\n  };\n\n  //if SELFTEST\n\n  // Symbolic multiplication\n\n  // multiplication is commutative, so it can't be used\n  // e.g. on two matrices.\n  // But it can be used, say, on a scalar and a matrix.,\n  // so the output of a multiplication is not\n  // always a scalar.\n\n  //extern void append(void)\n  //static void parse_p1(void)\n  //static void parse_p2(void)\n  //static void __normalize_radical_factors(int)\n  DEBUG_MULTIPLY = false;\n\n  Eval_multiply = function() {\n    var results;\n    push(cadr(p1));\n    Eval();\n    p1 = cddr(p1);\n    results = [];\n    while (iscons(p1)) {\n      push(car(p1));\n      Eval();\n      multiply();\n      results.push(p1 = cdr(p1));\n    }\n    return results;\n  };\n\n  // this one doesn't eval the factors,\n  // so you pass i*(-1)^(1/2), it wouldnt't\n  // give -1, because i is not evalled\n  multiply = function() {\n    if (esc_flag) {\n      stop(\"escape key stop\");\n    }\n    if (isNumericAtom(stack[tos - 2]) && isNumericAtom(stack[tos - 1])) {\n      return multiply_numbers();\n    } else {\n      save();\n      yymultiply();\n      return restore();\n    }\n  };\n\n  yymultiply = function() {\n    var h, i, n, o, ref, ref1;\n    h = 0;\n    i = 0;\n    n = 0;\n    // pop operands\n    p2 = pop();\n    p1 = pop();\n    h = tos;\n    // is either operand zero?\n    if (isZeroAtom(p1) || isZeroAtom(p2)) {\n      if (evaluatingAsFloats) {\n        push_double(0.0);\n      } else {\n        push(zero);\n      }\n      return;\n    }\n    // is either operand a sum?\n\n    //console.log(\"yymultiply: expanding: \" + expanding)\n    if (expanding && isadd(p1)) {\n      p1 = cdr(p1);\n      if (evaluatingAsFloats) {\n        push_double(0.0);\n      } else {\n        push(zero);\n      }\n      while (iscons(p1)) {\n        push(car(p1));\n        push(p2);\n        multiply();\n        add();\n        p1 = cdr(p1);\n      }\n      return;\n    }\n    if (expanding && isadd(p2)) {\n      p2 = cdr(p2);\n      if (evaluatingAsFloats) {\n        push_double(0.0);\n      } else {\n        push(zero);\n      }\n      while (iscons(p2)) {\n        push(p1);\n        push(car(p2));\n        multiply();\n        add();\n        p2 = cdr(p2);\n      }\n      return;\n    }\n    if (!istensor(p1) && istensor(p2)) {\n      push(p1);\n      push(p2);\n      scalar_times_tensor();\n      return;\n    }\n    // tensor times scalar?\n    if (istensor(p1) && !istensor(p2)) {\n      push(p1);\n      push(p2);\n      tensor_times_scalar();\n      return;\n    }\n    // adjust operands\n    if (car(p1) === symbol(MULTIPLY)) {\n      p1 = cdr(p1);\n    } else {\n      push(p1);\n      list(1);\n      p1 = pop();\n    }\n    if (car(p2) === symbol(MULTIPLY)) {\n      p2 = cdr(p2);\n    } else {\n      push(p2);\n      list(1);\n      p2 = pop();\n    }\n    // handle numerical coefficients\n    if (isNumericAtom(car(p1)) && isNumericAtom(car(p2))) {\n      push(car(p1));\n      push(car(p2));\n      multiply_numbers();\n      p1 = cdr(p1);\n      p2 = cdr(p2);\n    } else if (isNumericAtom(car(p1))) {\n      push(car(p1));\n      p1 = cdr(p1);\n    } else if (isNumericAtom(car(p2))) {\n      push(car(p2));\n      p2 = cdr(p2);\n    } else {\n      if (evaluatingAsFloats) {\n        push_double(1.0);\n      } else {\n        push(one);\n      }\n    }\n    parse_p1();\n    parse_p2();\n    while (iscons(p1) && iscons(p2)) {\n      //    if (car(p1)->gamma && car(p2)->gamma) {\n      //      combine_gammas(h)\n      //      p1 = cdr(p1)\n      //      p2 = cdr(p2)\n      //      parse_p1()\n      //      parse_p2()\n      //      continue\n      //    }\n      if (caar(p1) === symbol(OPERATOR) && caar(p2) === symbol(OPERATOR)) {\n        push_symbol(OPERATOR);\n        push(cdar(p1));\n        push(cdar(p2));\n        append();\n        cons();\n        p1 = cdr(p1);\n        p2 = cdr(p2);\n        parse_p1();\n        parse_p2();\n        continue;\n      }\n      switch (cmp_expr(p3, p4)) {\n        case -1:\n          push(car(p1));\n          p1 = cdr(p1);\n          parse_p1();\n          break;\n        case 1:\n          push(car(p2));\n          p2 = cdr(p2);\n          parse_p2();\n          break;\n        case 0:\n          combine_factors(h);\n          p1 = cdr(p1);\n          p2 = cdr(p2);\n          parse_p1();\n          parse_p2();\n          break;\n        default:\n          stop(\"internal error 2\");\n      }\n    }\n    // push remaining factors, if any\n    while (iscons(p1)) {\n      push(car(p1));\n      p1 = cdr(p1);\n    }\n    while (iscons(p2)) {\n      push(car(p2));\n      p2 = cdr(p2);\n    }\n    // normalize radical factors\n\n    // example: 2*2(-1/2) -> 2^(1/2)\n\n    // must be done after merge because merge may produce radical\n\n    // example: 2^(1/2-a)*2^a -> 2^(1/2)\n    __normalize_radical_factors(h);\n    // this hack should not be necessary, unless power returns a multiply\n\n    //for (i = h; i < tos; i++) {\n    //  if (car(stack[i]) == symbol(MULTIPLY)) {\n    //    multiply_all(tos - h)\n    //    return\n    //  }\n    //}\n    if (expanding) {\n      for (i = o = ref = h, ref1 = tos; (ref <= ref1 ? o < ref1 : o > ref1); i = ref <= ref1 ? ++o : --o) {\n        if (isadd(stack[i])) {\n          multiply_all(tos - h);\n          return;\n        }\n      }\n    }\n    // n is the number of result factors on the stack\n    n = tos - h;\n    if (n === 1) {\n      return;\n    }\n    // discard integer 1\n    if (isrational(stack[h]) && equaln(stack[h], 1)) {\n      if (n === 2) {\n        p7 = pop();\n        pop();\n        push(p7);\n      } else {\n        stack[h] = symbol(MULTIPLY);\n        list(n);\n      }\n      return;\n    }\n    list(n);\n    p7 = pop();\n    push_symbol(MULTIPLY);\n    push(p7);\n    return cons();\n  };\n\n  // Decompose a factor into base and power.\n\n  // input:  car(p1)    factor\n\n  // output:  p3    factor's base\n\n  //    p5    factor's power (possibly 1)\n  parse_p1 = function() {\n    p3 = car(p1);\n    p5 = evaluatingAsFloats ? one_as_double : one;\n    if (car(p3) === symbol(POWER)) {\n      p5 = caddr(p3);\n      return p3 = cadr(p3);\n    }\n  };\n\n  // Decompose a factor into base and power.\n\n  // input:  car(p2)    factor\n\n  // output:  p4    factor's base\n\n  //    p6    factor's power (possibly 1)\n  parse_p2 = function() {\n    p4 = car(p2);\n    p6 = evaluatingAsFloats ? one_as_double : one;\n    if (car(p4) === symbol(POWER)) {\n      p6 = caddr(p4);\n      return p4 = cadr(p4);\n    }\n  };\n\n  // h an integer\n  combine_factors = function(h) {\n    push(p4);\n    push(p5);\n    push(p6);\n    add();\n    power();\n    p7 = pop();\n    if (isNumericAtom(p7)) {\n      push(stack[h]);\n      push(p7);\n      multiply_numbers();\n      return stack[h] = pop();\n    } else if (car(p7) === symbol(MULTIPLY)) {\n      // power can return number * factor (i.e. -1 * i)\n      if (isNumericAtom(cadr(p7)) && cdddr(p7) === symbol(NIL)) {\n        push(stack[h]);\n        push(cadr(p7));\n        multiply_numbers();\n        stack[h] = pop();\n        return push(caddr(p7));\n      } else {\n        return push(p7);\n      }\n    } else {\n      return push(p7);\n    }\n  };\n\n  gp = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, -6, -7, -8, -3, -4, -5, 13, 14, 15, -16, 9, 10, 11, -12], [0, 0, 6, -1, -11, 10, -2, -15, 14, 12, -5, 4, -9, 16, -8, 7, -13], [0, 0, 7, 11, -1, -9, 15, -2, -13, 5, 12, -3, -10, 8, 16, -6, -14], [0, 0, 8, -10, 9, -1, -14, 13, -2, -4, 3, 12, -11, -7, 6, 16, -15], [0, 0, 3, 2, 15, -14, 1, 11, -10, 16, -8, 7, 13, 12, -5, 4, 9], [0, 0, 4, -15, 2, 13, -11, 1, 9, 8, 16, -6, 14, 5, 12, -3, 10], [0, 0, 5, 14, -13, 2, 10, -9, 1, -7, 6, 16, 15, -4, 3, 12, 11], [0, 0, 13, 12, -5, 4, 16, -8, 7, -1, -11, 10, -3, -2, -15, 14, -6], [0, 0, 14, 5, 12, -3, 8, 16, -6, 11, -1, -9, -4, 15, -2, -13, -7], [0, 0, 15, -4, 3, 12, -7, 6, 16, -10, 9, -1, -5, -14, 13, -2, -8], [0, 0, 16, -9, -10, -11, -13, -14, -15, -3, -4, -5, 1, -6, -7, -8, 2], [0, 0, 9, -16, 8, -7, -12, 5, -4, -2, -15, 14, 6, -1, -11, 10, 3], [0, 0, 10, -8, -16, 6, -5, -12, 3, 15, -2, -13, 7, 11, -1, -9, 4], [0, 0, 11, 7, -6, -16, 4, -3, -12, -14, 13, -2, 8, -10, 9, -1, 5], [0, 0, 12, 13, 14, 15, 9, 10, 11, -6, -7, -8, -2, -3, -4, -5, -1]];\n\n  //if 0\n\n  // h an int\n  combine_gammas = function(h) {\n    var n;\n    n = gp[Math.floor(p1.gamma)][Math.floor(p2.gamma)];\n    if (n < 0) {\n      n = -n;\n      push(stack[h]);\n      negate();\n      stack[h] = pop();\n    }\n    if (n > 1) {\n      return push(_gamma[n]);\n    }\n  };\n\n  // this is useful for example when you are just adding/removing\n  // factors from an already factored quantity.\n  // e.g. if you factored x^2 + 3x + 2 into (x+1)(x+2)\n  // and you want to divide by (x+1) , i.e. you multiply by (x-1)^-1,\n  // then there is no need to expand.\n  multiply_noexpand = function() {\n    var prev_expanding;\n    prev_expanding = expanding;\n    expanding = 0;\n    multiply();\n    return expanding = prev_expanding;\n  };\n\n  // multiply n factors on stack\n\n  // n an integer\n  multiply_all = function(n) {\n    var h, i, o, ref;\n    i = 0;\n    if (n === 1) {\n      return;\n    }\n    if (n === 0) {\n      push(evaluatingAsFloats ? one_as_double : one);\n      return;\n    }\n    h = tos - n;\n    push(stack[h]);\n    for (i = o = 1, ref = n; (1 <= ref ? o < ref : o > ref); i = 1 <= ref ? ++o : --o) {\n      push(stack[h + i]);\n      multiply();\n    }\n    stack[h] = pop();\n    return moveTos(h + 1);\n  };\n\n  // n an integer\n  multiply_all_noexpand = function(n) {\n    var prev_expanding;\n    prev_expanding = expanding;\n    expanding = 0;\n    multiply_all(n);\n    return expanding = prev_expanding;\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Symbolic division, or numeric division if doubles are found.\n\n  //  Input:    Dividend and divisor on stack\n\n  //  Output:    Quotient on stack\n\n  //-----------------------------------------------------------------------------\n  divide = function() {\n    if (isNumericAtom(stack[tos - 2]) && isNumericAtom(stack[tos - 1])) {\n      return divide_numbers();\n    } else {\n      inverse();\n      return multiply();\n    }\n  };\n\n  // this is different from inverse of a matrix (inv)!\n  inverse = function() {\n    if (isNumericAtom(stack[tos - 1])) {\n      return invert_number();\n    } else {\n      push_integer(-1);\n      return power();\n    }\n  };\n\n  reciprocate = function() {\n    return inverse();\n  };\n\n  negate = function() {\n    if (isNumericAtom(stack[tos - 1])) {\n      return negate_number();\n    } else {\n      if (evaluatingAsFloats) {\n        push_double(-1.0);\n      } else {\n        push_integer(-1);\n      }\n      return multiply();\n    }\n  };\n\n  negate_expand = function() {\n    var prev_expanding;\n    prev_expanding = expanding;\n    expanding = 1;\n    negate();\n    return expanding = prev_expanding;\n  };\n\n  negate_noexpand = function() {\n    var prev_expanding;\n    prev_expanding = expanding;\n    expanding = 0;\n    negate();\n    return expanding = prev_expanding;\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Normalize radical factors\n\n  //  Input:    stack[h]  Coefficient factor, possibly 1\n\n  //      stack[h + 1]  Second factor\n\n  //      stack[tos - 1]  Last factor\n\n  //  Output:    Reduced coefficent and normalized radicals (maybe)\n\n  //  Example:  2*2^(-1/2) -> 2^(1/2)\n\n  //  (power number number) is guaranteed to have the following properties:\n\n  //  1. Base is an integer\n\n  //  2. Absolute value of exponent < 1\n\n  //  These properties are assured by the power function.\n\n  //-----------------------------------------------------------------------------\n\n  //define A p1\n  //define B p2\n\n  //define BASE p3\n  //define EXPO p4\n\n  //define TMP p5\n\n  // h is an int\n  __normalize_radical_factors = function(h) {\n    var i, i1, j1, o, ref, ref1, ref2, ref3, ref4, ref5;\n    i = 0;\n    // if coeff is 1 or floating then don't bother\n    if (isplusone(stack[h]) || isminusone(stack[h]) || isdouble(stack[h])) {\n      return;\n    }\n// if no radicals then don't bother\n    for (i = o = ref = h + 1, ref1 = tos; (ref <= ref1 ? o < ref1 : o > ref1); i = ref <= ref1 ? ++o : --o) {\n      if (__is_radical_number(stack[i])) {\n        break;\n      }\n    }\n    if (i === tos) {\n      return;\n    }\n    // ok, try to simplify\n    save();\n    // numerator\n    push(stack[h]);\n    mp_numerator();\n    if (DEBUG_MULTIPLY) {\n      console.log(\"__normalize_radical_factors numerator: \" + stack[tos - 1]);\n    }\n    p1 = pop();\n    for (i = i1 = ref2 = h + 1, ref3 = tos; (ref2 <= ref3 ? i1 < ref3 : i1 > ref3); i = ref2 <= ref3 ? ++i1 : --i1) {\n      if (isplusone(p1) || isminusone(p1)) { // p1 is A\n        break;\n      }\n      if (!__is_radical_number(stack[i])) {\n        continue;\n      }\n      p3 = cadr(stack[i]);\n      p4 = caddr(stack[i]);\n      if (!isnegativenumber(p4)) { //p4 is EXPO\n        continue;\n      }\n      // numerator divisible by p3 (base)?\n      push(p1);\n      push(p3);\n      divide();\n      p5 = pop();\n      if (!isinteger(p5)) { //p5 is TMP\n        continue;\n      }\n      // reduce numerator\n      p1 = p5;\n      push_symbol(POWER);\n      push(p3);\n      push(evaluatingAsFloats ? one_as_double : one);\n      push(p4);\n      add();\n      list(3);\n      stack[i] = pop();\n    }\n    // denominator\n    push(stack[h]);\n    mp_denominator();\n    if (DEBUG_MULTIPLY) {\n      console.log(\"__normalize_radical_factors denominator: \" + stack[tos - 1]);\n    }\n    p2 = pop();\n    for (i = j1 = ref4 = h + 1, ref5 = tos; (ref4 <= ref5 ? j1 < ref5 : j1 > ref5); i = ref4 <= ref5 ? ++j1 : --j1) {\n      if (isplusone(p2)) { // p2 is B\n        break;\n      }\n      if (!__is_radical_number(stack[i])) {\n        continue;\n      }\n      p3 = cadr(stack[i]);\n      p4 = caddr(stack[i]);\n      if (isnegativenumber(p4)) { //p4 is EXPO\n        continue;\n      }\n      // denominator divisible by p3? #p3 is BASE\n      push(p2);\n      push(p3);\n      divide();\n      p5 = pop();\n      if (!isinteger(p5)) { //p5 is TMP\n        continue;\n      }\n      if (DEBUG_MULTIPLY) {\n        console.log(\"__new radical p5: \" + p5.toString());\n      }\n      if (DEBUG_MULTIPLY) {\n        console.log(\"__new radical top stack: \" + stack[tos - 1]);\n      }\n      // reduce denominator\n      p2 = p5;\n      push_symbol(POWER);\n      push(p3);\n      push(p4);\n      if (DEBUG_MULTIPLY) {\n        console.log(\"__new radical p3: \" + p3.toString());\n      }\n      if (DEBUG_MULTIPLY) {\n        console.log(\"__new radical p4: \" + p4.toString());\n      }\n      push(one);\n      subtract();\n      if (dontCreateNewRadicalsInDenominatorWhenEvalingMultiplication) {\n        if (isinteger(p3) && !isinteger(stack[tos - 1]) && isnegativenumber(stack[tos - 1])) {\n          // bail out,\n          // we want to avoid going ahead with the subtraction of\n          // the exponents, because that would turn a perfectly good\n          // integer exponent in the denominator into a fractional one\n          // i.e. a radical.\n          // Note that this only prevents new radicals ending up\n          // in the denominator, it doesn't fix existing ones.\n          pop();\n          pop();\n          pop();\n          push(p1);\n          push(p3);\n          divide();\n          p1 = pop();\n          break;\n        }\n      }\n      if (DEBUG_MULTIPLY) {\n        console.log(\"__new radical exponent: \" + stack[tos - 1]);\n      }\n      list(3);\n      stack[i] = pop();\n    }\n    // reconstitute the coefficient\n    push(p1);\n    push(p2);\n    divide();\n    stack[h] = pop();\n    return restore();\n  };\n\n  // don't include i\n  // p is a U\n  // TODO should this be in is.coffee ?\n  __is_radical_number = function(p) {\n    // don't use i\n    return car(p) === symbol(POWER) && isNumericAtom(cadr(p)) && isfraction(caddr(p)) && !isminusone(cadr(p));\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  > a*hilbert(2)\n  //  ((a,1/2*a),(1/2*a,1/3*a))\n\n  //  Note that \"a\" is presumed to be a scalar. Is this correct?\n\n  //  Yes, because \"*\" has no meaning if \"a\" is a tensor.\n  //  To multiply tensors, \"dot\" or \"outer\" should be used.\n\n  //  > dot(a,hilbert(2))\n  //  dot(a,((1,1/2),(1/2,1/3)))\n\n  //  In this case \"a\" could be a scalar or tensor so the result is not\n  //  expanded.\n\n  //-----------------------------------------------------------------------------\n\n  // find the roots of a polynomial numerically\n  NROOTS_YMAX = 101;\n\n  NROOTS_DELTA = 1.0e-6;\n\n  NROOTS_EPSILON = 1.0e-9;\n\n  NROOTS_ABS = function(z) {\n    return Math.sqrt(z.r * z.r + z.i * z.i);\n  };\n\n  // random between -2 and 2\n  theRandom = 0.0;\n\n  NROOTS_RANDOM = function() {\n    //theRandom += 0.2\n    //return theRandom\n    return 4.0 * Math.random() - 2.0;\n  };\n\n  numericRootOfPolynomial = (function() {\n    class numericRootOfPolynomial {};\n\n    numericRootOfPolynomial.prototype.r = 0.0;\n\n    numericRootOfPolynomial.prototype.i = 0.0;\n\n    return numericRootOfPolynomial;\n\n  }).call(this);\n\n  nroots_a = new numericRootOfPolynomial();\n\n  nroots_b = new numericRootOfPolynomial();\n\n  nroots_x = new numericRootOfPolynomial();\n\n  nroots_y = new numericRootOfPolynomial();\n\n  nroots_fa = new numericRootOfPolynomial();\n\n  nroots_fb = new numericRootOfPolynomial();\n\n  nroots_dx = new numericRootOfPolynomial();\n\n  nroots_df = new numericRootOfPolynomial();\n\n  nroots_c = [];\n\n  for (initNRoots = o = 0, ref = NROOTS_YMAX; (0 <= ref ? o < ref : o > ref); initNRoots = 0 <= ref ? ++o : --o) {\n    nroots_c[initNRoots] = new numericRootOfPolynomial();\n  }\n\n  Eval_nroots = function() {\n    var h, i, i1, j1, k, l1, n, ref1, ref2, ref3;\n    h = 0;\n    i = 0;\n    k = 0;\n    n = 0;\n    push(cadr(p1));\n    Eval();\n    push(caddr(p1));\n    Eval();\n    p2 = pop();\n    if (p2 === symbol(NIL)) {\n      guess();\n    } else {\n      push(p2);\n    }\n    p2 = pop();\n    p1 = pop();\n    if (!ispolyexpandedform(p1, p2)) {\n      stop(\"nroots: polynomial?\");\n    }\n    // mark the stack\n    h = tos;\n    // get the coefficients\n    n = coeff(p2, p1);\n    if (n > NROOTS_YMAX) {\n      stop(\"nroots: degree?\");\n    }\n// convert the coefficients to real and imaginary doubles\n    for (i = i1 = 0, ref1 = n; (0 <= ref1 ? i1 < ref1 : i1 > ref1); i = 0 <= ref1 ? ++i1 : --i1) {\n      push(stack[h + i]);\n      real();\n      yyfloat();\n      Eval();\n      p1 = pop();\n      push(stack[h + i]);\n      imag();\n      yyfloat();\n      Eval();\n      p2 = pop();\n      if (!isdouble(p1) || !isdouble(p2)) {\n        stop(\"nroots: coefficients?\");\n      }\n      nroots_c[i].r = p1.d;\n      nroots_c[i].i = p2.d;\n    }\n    // pop the coefficients\n    moveTos(h);\n    // n is the number of coefficients, n = deg(p) + 1\n    monic(n);\n    for (k = j1 = ref2 = n; j1 > 1; k = j1 += -1) {\n      findroot(k);\n      if (Math.abs(nroots_a.r) < NROOTS_DELTA) {\n        nroots_a.r = 0.0;\n      }\n      if (Math.abs(nroots_a.i) < NROOTS_DELTA) {\n        nroots_a.i = 0.0;\n      }\n      push_double(nroots_a.r);\n      push_double(nroots_a.i);\n      push(imaginaryunit);\n      multiply();\n      add();\n      NROOTS_divpoly(k);\n    }\n    // now make n equal to the number of roots\n    n = tos - h;\n    if (n > 1) {\n      sort_stack(n);\n      p1 = alloc_tensor(n);\n      p1.tensor.ndim = 1;\n      p1.tensor.dim[0] = n;\n      for (i = l1 = 0, ref3 = n; (0 <= ref3 ? l1 < ref3 : l1 > ref3); i = 0 <= ref3 ? ++l1 : --l1) {\n        p1.tensor.elem[i] = stack[h + i];\n      }\n      moveTos(h);\n      return push(p1);\n    }\n  };\n\n  // divide the polynomial by its leading coefficient\n  monic = function(n) {\n    var i1, k, ref1, t;\n    k = 0;\n    t = 0.0;\n    nroots_y.r = nroots_c[n - 1].r;\n    nroots_y.i = nroots_c[n - 1].i;\n    t = nroots_y.r * nroots_y.r + nroots_y.i * nroots_y.i;\n    for (k = i1 = 0, ref1 = n - 1; (0 <= ref1 ? i1 < ref1 : i1 > ref1); k = 0 <= ref1 ? ++i1 : --i1) {\n      nroots_c[k].r = (nroots_c[k].r * nroots_y.r + nroots_c[k].i * nroots_y.i) / t;\n      nroots_c[k].i = (nroots_c[k].i * nroots_y.r - nroots_c[k].r * nroots_y.i) / t;\n    }\n    nroots_c[n - 1].r = 1.0;\n    return nroots_c[n - 1].i = 0.0;\n  };\n\n  // uses the secant method\n  findroot = function(n) {\n    var i1, j, j1, k, nrabs, t;\n    j = 0;\n    k = 0;\n    t = 0.0;\n    if (NROOTS_ABS(nroots_c[0]) < NROOTS_DELTA) {\n      nroots_a.r = 0.0;\n      nroots_a.i = 0.0;\n      return;\n    }\n    for (j = i1 = 0; i1 < 100; j = ++i1) {\n      nroots_a.r = NROOTS_RANDOM();\n      nroots_a.i = NROOTS_RANDOM();\n      compute_fa(n);\n      nroots_b.r = nroots_a.r;\n      nroots_b.i = nroots_a.i;\n      nroots_fb.r = nroots_fa.r;\n      nroots_fb.i = nroots_fa.i;\n      nroots_a.r = NROOTS_RANDOM();\n      nroots_a.i = NROOTS_RANDOM();\n      for (k = j1 = 0; j1 < 1000; k = ++j1) {\n        compute_fa(n);\n        nrabs = NROOTS_ABS(nroots_fa);\n        if (DEBUG) {\n          console.log(\"nrabs: \" + nrabs);\n        }\n        if (nrabs < NROOTS_EPSILON) {\n          return;\n        }\n        if (NROOTS_ABS(nroots_fa) < NROOTS_ABS(nroots_fb)) {\n          nroots_x.r = nroots_a.r;\n          nroots_x.i = nroots_a.i;\n          nroots_a.r = nroots_b.r;\n          nroots_a.i = nroots_b.i;\n          nroots_b.r = nroots_x.r;\n          nroots_b.i = nroots_x.i;\n          nroots_x.r = nroots_fa.r;\n          nroots_x.i = nroots_fa.i;\n          nroots_fa.r = nroots_fb.r;\n          nroots_fa.i = nroots_fb.i;\n          nroots_fb.r = nroots_x.r;\n          nroots_fb.i = nroots_x.i;\n        }\n        // dx = nroots_b - nroots_a\n        nroots_dx.r = nroots_b.r - nroots_a.r;\n        nroots_dx.i = nroots_b.i - nroots_a.i;\n        // df = fb - fa\n        nroots_df.r = nroots_fb.r - nroots_fa.r;\n        nroots_df.i = nroots_fb.i - nroots_fa.i;\n        // y = dx / df\n        t = nroots_df.r * nroots_df.r + nroots_df.i * nroots_df.i;\n        if (t === 0.0) {\n          break;\n        }\n        nroots_y.r = (nroots_dx.r * nroots_df.r + nroots_dx.i * nroots_df.i) / t;\n        nroots_y.i = (nroots_dx.i * nroots_df.r - nroots_dx.r * nroots_df.i) / t;\n        // a = b - y * fb\n        nroots_a.r = nroots_b.r - (nroots_y.r * nroots_fb.r - nroots_y.i * nroots_fb.i);\n        nroots_a.i = nroots_b.i - (nroots_y.r * nroots_fb.i + nroots_y.i * nroots_fb.r);\n      }\n    }\n    return stop(\"nroots: convergence error\");\n  };\n\n  compute_fa = function(n) {\n    var i1, k, ref1, results, t;\n    k = 0;\n    t = 0.0;\n    // x = a\n    nroots_x.r = nroots_a.r;\n    nroots_x.i = nroots_a.i;\n    // fa = c0 + c1 * x\n    nroots_fa.r = nroots_c[0].r + nroots_c[1].r * nroots_x.r - nroots_c[1].i * nroots_x.i;\n    nroots_fa.i = nroots_c[0].i + nroots_c[1].r * nroots_x.i + nroots_c[1].i * nroots_x.r;\n    results = [];\n    for (k = i1 = 2, ref1 = n; (2 <= ref1 ? i1 < ref1 : i1 > ref1); k = 2 <= ref1 ? ++i1 : --i1) {\n      // x = a * x\n      t = nroots_a.r * nroots_x.r - nroots_a.i * nroots_x.i;\n      nroots_x.i = nroots_a.r * nroots_x.i + nroots_a.i * nroots_x.r;\n      nroots_x.r = t;\n      // fa += c[k] * x\n      nroots_fa.r += nroots_c[k].r * nroots_x.r - nroots_c[k].i * nroots_x.i;\n      results.push(nroots_fa.i += nroots_c[k].r * nroots_x.i + nroots_c[k].i * nroots_x.r);\n    }\n    return results;\n  };\n\n  // divide the polynomial by x - a\n  NROOTS_divpoly = function(n) {\n    var i1, j1, k, ref1, ref2, results;\n    k = 0;\n    for (k = i1 = ref1 = n - 1; (ref1 <= 0 ? i1 < 0 : i1 > 0); k = ref1 <= 0 ? ++i1 : --i1) {\n      nroots_c[k - 1].r += nroots_c[k].r * nroots_a.r - nroots_c[k].i * nroots_a.i;\n      nroots_c[k - 1].i += nroots_c[k].i * nroots_a.r + nroots_c[k].r * nroots_a.i;\n    }\n    if (NROOTS_ABS(nroots_c[0]) > NROOTS_DELTA) {\n      stop(\"nroots: residual error\");\n    }\n    results = [];\n    for (k = j1 = 0, ref2 = n - 1; (0 <= ref2 ? j1 < ref2 : j1 > ref2); k = 0 <= ref2 ? ++j1 : --j1) {\n      nroots_c[k].r = nroots_c[k + 1].r;\n      results.push(nroots_c[k].i = nroots_c[k + 1].i);\n    }\n    return results;\n  };\n\n  Eval_numerator = function() {\n    push(cadr(p1));\n    Eval();\n    return numerator();\n  };\n\n  numerator = function() {\n    var h, theArgument;\n    h = 0;\n    theArgument = pop();\n    if (car(theArgument) === symbol(ADD)) {\n      push(theArgument);\n      //console.trace \"rationalising \"\n      rationalize();\n      theArgument = pop();\n    }\n    //console.log \"rationalised: \" + theArgument\n    if (car(theArgument) === symbol(MULTIPLY) && !isplusone(car(cdr(theArgument)))) {\n      h = tos;\n      theArgument = cdr(theArgument);\n      //console.log \"theArgument inside multiply: \" + theArgument\n      //console.log \"first term: \" + car(theArgument)\n      while (iscons(theArgument)) {\n        push(car(theArgument));\n        numerator();\n        theArgument = cdr(theArgument);\n      }\n      return multiply_all(tos - h);\n    } else if (isrational(theArgument)) {\n      push(theArgument);\n      return mp_numerator();\n    } else if (car(theArgument) === symbol(POWER) && isnegativeterm(caddr(theArgument))) {\n      return push(one);\n    } else {\n      return push(theArgument);\n    }\n  };\n\n  // Outer product of tensors\n  Eval_outer = function() {\n    var results;\n    p1 = cdr(p1);\n    push(car(p1));\n    Eval();\n    p1 = cdr(p1);\n    results = [];\n    while (iscons(p1)) {\n      push(car(p1));\n      Eval();\n      outer();\n      results.push(p1 = cdr(p1));\n    }\n    return results;\n  };\n\n  outer = function() {\n    save();\n    p2 = pop();\n    p1 = pop();\n    if (istensor(p1) && istensor(p2)) {\n      yyouter();\n    } else {\n      push(p1);\n      push(p2);\n      if (istensor(p1)) {\n        tensor_times_scalar();\n      } else if (istensor(p2)) {\n        scalar_times_tensor();\n      } else {\n        multiply();\n      }\n    }\n    return restore();\n  };\n\n  yyouter = function() {\n    var i, i1, j, j1, k, l1, m1, ndim, nelem, ref1, ref2, ref3, ref4;\n    i = 0;\n    j = 0;\n    k = 0;\n    ndim = 0;\n    nelem = 0;\n    ndim = p1.tensor.ndim + p2.tensor.ndim;\n    if (ndim > MAXDIM) {\n      stop(\"outer: rank of result exceeds maximum\");\n    }\n    nelem = p1.tensor.nelem * p2.tensor.nelem;\n    p3 = alloc_tensor(nelem);\n    p3.tensor.ndim = ndim;\n    for (i = i1 = 0, ref1 = p1.tensor.ndim; (0 <= ref1 ? i1 < ref1 : i1 > ref1); i = 0 <= ref1 ? ++i1 : --i1) {\n      p3.tensor.dim[i] = p1.tensor.dim[i];\n    }\n    j = i;\n    for (i = j1 = 0, ref2 = p2.tensor.ndim; (0 <= ref2 ? j1 < ref2 : j1 > ref2); i = 0 <= ref2 ? ++j1 : --j1) {\n      p3.tensor.dim[j + i] = p2.tensor.dim[i];\n    }\n    k = 0;\n    for (i = l1 = 0, ref3 = p1.tensor.nelem; (0 <= ref3 ? l1 < ref3 : l1 > ref3); i = 0 <= ref3 ? ++l1 : --l1) {\n      for (j = m1 = 0, ref4 = p2.tensor.nelem; (0 <= ref4 ? m1 < ref4 : m1 > ref4); j = 0 <= ref4 ? ++m1 : --m1) {\n        push(p1.tensor.elem[i]);\n        push(p2.tensor.elem[j]);\n        multiply();\n        p3.tensor.elem[k++] = pop();\n      }\n    }\n    return push(p3);\n  };\n\n  partition = function() {\n    save();\n    p2 = pop();\n    p1 = pop();\n    push_integer(1);\n    p3 = pop();\n    p4 = p3;\n    p1 = cdr(p1);\n    while (iscons(p1)) {\n      if (Find(car(p1), p2)) {\n        push(p4);\n        push(car(p1));\n        multiply();\n        p4 = pop();\n      } else {\n        push(p3);\n        push(car(p1));\n        multiply();\n        p3 = pop();\n      }\n      p1 = cdr(p1);\n    }\n    push(p3);\n    push(p4);\n    return restore();\n  };\n\n  /*\n    Add a pattern i.e. a substitution rule.\n    Substitution rule needs a template as first argument\n    and what to transform it to as second argument.\n    Optional third argument is a boolean test which\n    adds conditions to when the rule is applied.\n  */\n  // same as Eval_pattern but only leaves\n  // NIL on stack at return, hence gives no\n  // printout\n  Eval_silentpattern = function() {\n    Eval_pattern();\n    pop();\n    return push_symbol(NIL);\n  };\n\n  Eval_pattern = function() {\n    var firstArgument, patternPosition, secondArgument, stringKey, thirdArgument;\n    if (!iscons(cdr(p1))) {\n      stop(\"pattern needs at least a template and a transformed version\");\n    }\n    firstArgument = car(cdr(p1));\n    secondArgument = car(cdr(cdr(p1)));\n    if (secondArgument === symbol(NIL)) {\n      stop(\"pattern needs at least a template and a transformed version\");\n    }\n    if (!iscons(cdr(cdr(p1)))) {\n      thirdArgument = symbol(NIL);\n    } else {\n      thirdArgument = car(cdr(cdr(cdr(p1))));\n    }\n    if (equal(firstArgument, secondArgument)) {\n      stop(\"recursive pattern\");\n    }\n    // console.log \"Eval_pattern of \" + cdr(p1)\n    // this is likely to create garbage collection\n    // problems in the C version as it's an\n    // untracked reference\n    stringKey = \"template: \" + print_list(firstArgument);\n    stringKey += \" tests: \" + print_list(thirdArgument);\n    if (DEBUG) {\n      console.log(\"pattern stringkey: \" + stringKey);\n    }\n    patternPosition = userSimplificationsInStringForm.indexOf(stringKey);\n    // if pattern is not there yet, add it, otherwise replace it\n    if (patternPosition === -1) {\n      //console.log \"adding pattern because it doesn't exist: \" + cdr(p1)\n      userSimplificationsInStringForm.push(stringKey);\n      userSimplificationsInListForm.push(cdr(p1));\n    } else {\n      if (DEBUG) {\n        console.log(\"pattern already exists, replacing. \" + cdr(p1));\n      }\n      userSimplificationsInStringForm[patternPosition] = stringKey;\n      userSimplificationsInListForm[patternPosition] = cdr(p1);\n    }\n    // return the pattern node itself so we can\n    // give some printout feedback\n    push_symbol(PATTERN);\n    push(cdr(p1));\n    return list(2);\n  };\n\n  do_clearPatterns = function() {\n    userSimplificationsInListForm = [];\n    return userSimplificationsInStringForm = [];\n  };\n\n  Eval_clearpatterns = function() {\n    // this is likely to create garbage collection\n    // problems in the C version as it's an\n    // untracked reference\n    do_clearPatterns();\n    \n    // return nothing\n    return push_symbol(NIL);\n  };\n\n  Eval_patternsinfo = function() {\n    var patternsinfoToBePrinted;\n    patternsinfoToBePrinted = patternsinfo();\n    if (patternsinfoToBePrinted !== \"\") {\n      return push(new_string(patternsinfoToBePrinted));\n    } else {\n      return push_symbol(NIL);\n    }\n  };\n\n  patternsinfo = function() {\n    var i, i1, len, patternsinfoToBePrinted;\n    patternsinfoToBePrinted = \"\";\n    for (i1 = 0, len = userSimplificationsInListForm.length; i1 < len; i1++) {\n      i = userSimplificationsInListForm[i1];\n      patternsinfoToBePrinted += userSimplificationsInListForm + \"\\n\";\n    }\n    return patternsinfoToBePrinted;\n  };\n\n  Eval_polar = function() {\n    push(cadr(p1));\n    Eval();\n    return polar();\n  };\n\n  polar = function() {\n    // there are points where we turn polar\n    // representations into rect, we set a \"stack flag\"\n    // here to avoid that, so we don't undo the\n    // work that we are trying to do.\n    evaluatingPolar++;\n    save();\n    p1 = pop();\n    push(p1);\n    abs();\n    push(imaginaryunit);\n    push(p1);\n    arg();\n    multiply();\n    exponential();\n    multiply();\n    evaluatingPolar--;\n    return restore();\n  };\n\n  // Factor using the Pollard rho method\n  n_factor_number = 0;\n\n  factor_number = function() {\n    var h;\n    h = 0;\n    save();\n    p1 = pop();\n    // 0 or 1?\n    if (equaln(p1, 0) || equaln(p1, 1) || equaln(p1, -1)) {\n      push(p1);\n      restore();\n      return;\n    }\n    n_factor_number = p1.q.a;\n    h = tos;\n    factor_a();\n    if (tos - h > 1) {\n      list(tos - h);\n      push_symbol(MULTIPLY);\n      swap();\n      cons();\n    }\n    return restore();\n  };\n\n  // factor using table look-up, then switch to rho method if necessary\n\n  // From TAOCP Vol. 2 by Knuth, p. 380 (Algorithm A)\n  factor_a = function() {\n    var i1, k;\n    k = 0;\n    if (n_factor_number.isNegative()) {\n      n_factor_number = setSignTo(n_factor_number, 1);\n      push_integer(-1);\n    }\n    for (k = i1 = 0; i1 < 10000; k = ++i1) {\n      try_kth_prime(k);\n      // if n_factor_number is 1 then we're done\n      if (n_factor_number.compare(1) === 0) {\n        return;\n      }\n    }\n    return factor_b();\n  };\n\n  try_kth_prime = function(k) {\n    var count, d, q, r;\n    count = 0;\n    d = mint(primetab[k]);\n    count = 0;\n    while (1) {\n      // if n_factor_number is 1 then we're done\n      if (n_factor_number.compare(1) === 0) {\n        if (count) {\n          push_factor(d, count);\n        }\n        return;\n      }\n      [q, r] = mdivrem(n_factor_number, d);\n      // continue looping while remainder is zero\n      if (r.isZero()) {\n        count++;\n        n_factor_number = q;\n      } else {\n        break;\n      }\n    }\n    if (count) {\n      push_factor(d, count);\n    }\n    // q = n_factor_number/d, hence if q < d then\n    // n_factor_number < d^2 so n_factor_number is prime\n    if (mcmp(q, d) === -1) {\n      push_factor(n_factor_number, 1);\n      return n_factor_number = mint(1);\n    }\n  };\n\n  // From TAOCP Vol. 2 by Knuth, p. 385 (Algorithm B)\n  factor_b = function() {\n    var bigint_one, g, k, l, t, x, xprime;\n    k = 0;\n    l = 0;\n    bigint_one = mint(1);\n    x = mint(5);\n    xprime = mint(2);\n    k = 1;\n    l = 1;\n    while (1) {\n      if (mprime(n_factor_number)) {\n        push_factor(n_factor_number, 1);\n        return 0;\n      }\n      while (1) {\n        if (esc_flag) {\n          stop(\"esc\");\n        }\n        // g = gcd(x' - x, n_factor_number)\n        t = msub(xprime, x);\n        t = setSignTo(t, 1);\n        g = mgcd(t, n_factor_number);\n        if (MEQUAL(g, 1)) {\n          if (--k === 0) {\n            xprime = x;\n            l *= 2;\n            k = l;\n          }\n          // x = (x ^ 2 + 1) mod n_factor_number\n          t = mmul(x, x);\n          x = madd(t, bigint_one);\n          t = mmod(x, n_factor_number);\n          x = t;\n          continue;\n        }\n        push_factor(g, 1);\n        if (mcmp(g, n_factor_number) === 0) {\n          return -1;\n        }\n        // n_factor_number = n_factor_number / g\n        t = mdiv(n_factor_number, g);\n        n_factor_number = t;\n        // x = x mod n_factor_number\n        t = mmod(x, n_factor_number);\n        x = t;\n        // xprime = xprime mod n_factor_number\n        t = mmod(xprime, n_factor_number);\n        xprime = t;\n        break;\n      }\n    }\n  };\n\n  push_factor = function(d, count) {\n    p1 = new U();\n    p1.k = NUM;\n    p1.q.a = d;\n    p1.q.b = mint(1);\n    push(p1);\n    if (count > 1) {\n      push_symbol(POWER);\n      swap();\n      p1 = new U();\n      p1.k = NUM;\n      p1.q.a = mint(count);\n      p1.q.b = mint(1);\n      push(p1);\n      return list(3);\n    }\n  };\n\n  DEBUG_POWER = false;\n\n  Eval_power = function() {\n    if (DEBUG_POWER) {\n      debugger;\n    }\n    push(cadr(p1));\n    Eval();\n    push(caddr(p1));\n    Eval();\n    return power();\n  };\n\n  power = function() {\n    save();\n    yypower();\n    return restore();\n  };\n\n  yypower = function() {\n    var b_isEven_and_c_isItsInverse, hopefullySimplified, inputBase, inputExp, isThisOne, is_a_moreThanZero, n;\n    if (DEBUG_POWER) {\n      debugger;\n    }\n    n = 0;\n    p2 = pop(); // exponent\n    p1 = pop(); // base\n    inputExp = p2;\n    inputBase = p1;\n    //debugger\n    if (DEBUG_POWER) {\n      console.log(\"POWER: \" + p1 + \" ^ \" + p2);\n    }\n    // first, some very basic simplifications right away\n\n    //  1 ^ a    ->  1\n    //  a ^ 0    ->  1\n    if (equal(p1, one) || isZeroAtomOrTensor(p2)) {\n      if (evaluatingAsFloats) {\n        push_double(1.0);\n      } else {\n        push(one);\n      }\n      if (DEBUG_POWER) {\n        console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n      }\n      return;\n    }\n    //  a ^ 1    ->  a\n    if (equal(p2, one)) {\n      push(p1);\n      if (DEBUG_POWER) {\n        console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n      }\n      return;\n    }\n    //   -1 ^ -1    ->  -1\n    if (isminusone(p1) && isminusone(p2)) {\n      if (evaluatingAsFloats) {\n        push_double(1.0);\n      } else {\n        push(one);\n      }\n      negate();\n      if (DEBUG_POWER) {\n        console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n      }\n      return;\n    }\n    //   -1 ^ 1/2  ->  i\n    if (isminusone(p1) && (isoneovertwo(p2))) {\n      push(imaginaryunit);\n      if (DEBUG_POWER) {\n        console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n      }\n      return;\n    }\n    //   -1 ^ -1/2  ->  -i\n    if (isminusone(p1) && isminusoneovertwo(p2)) {\n      push(imaginaryunit);\n      negate();\n      if (DEBUG_POWER) {\n        console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n      }\n      return;\n    }\n    //   -1 ^ rational\n    if (isminusone(p1) && !isdouble(p1) && isrational(p2) && !isinteger(p2) && ispositivenumber(p2) && !evaluatingAsFloats) {\n      if (DEBUG_POWER) {\n        console.log(\"   power: -1 ^ rational\");\n      }\n      if (DEBUG_POWER) {\n        console.log(\" trick: p2.q.a , p2.q.b \" + p2.q.a + \" , \" + p2.q.b);\n      }\n      if (p2.q.a < p2.q.b) {\n        push_symbol(POWER);\n        push(p1);\n        push(p2);\n        list(3);\n      } else {\n        push_symbol(MULTIPLY);\n        push(p1);\n        push_symbol(POWER);\n        push(p1);\n        push_rational(p2.q.a.mod(p2.q.b), p2.q.b);\n        list(3);\n        list(3);\n        if (DEBUG_POWER) {\n          console.log(\" trick applied : \" + stack[tos - 1]);\n        }\n      }\n      // evaluates clock form into\n      // rectangular form. This seems to give\n      // slightly better form to some test results.\n      rect();\n      if (DEBUG_POWER) {\n        console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n      }\n      return;\n    }\n    // both base and exponent are rational numbers?\n    if (isrational(p1) && isrational(p2)) {\n      if (DEBUG_POWER) {\n        console.log(\"   power: isrational(p1) && isrational(p2)\");\n      }\n      push(p1);\n      push(p2);\n      qpow();\n      if (DEBUG_POWER) {\n        console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n      }\n      return;\n    }\n    // both base and exponent are either rational or double?\n    if (isNumericAtom(p1) && isNumericAtom(p2)) {\n      if (DEBUG_POWER) {\n        console.log(\"   power: both base and exponent are either rational or double \");\n      }\n      if (DEBUG_POWER) {\n        console.log(\"POWER - isNumericAtom(p1) && isNumericAtom(p2)\");\n      }\n      push(p1);\n      push(p2);\n      dpow();\n      if (DEBUG_POWER) {\n        console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n      }\n      return;\n    }\n    if (istensor(p1)) {\n      if (DEBUG_POWER) {\n        console.log(\"   power: istensor(p1) \");\n      }\n      power_tensor();\n      if (DEBUG_POWER) {\n        console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n      }\n      return;\n    }\n    // if we only assume variables to be real, then |a|^2 = a^2\n    // (if x is complex this doesn't hold e.g. i, which makes 1 and -1\n    if (car(p1) === symbol(ABS) && iseveninteger(p2) && !isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES)))) {\n      if (DEBUG_POWER) {\n        console.log(\"   power: even power of absolute of real value \");\n      }\n      push(cadr(p1));\n      push(p2);\n      power();\n      if (DEBUG_POWER) {\n        console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n      }\n      return;\n    }\n    // e^log(...)\n    if (p1 === symbol(E) && car(p2) === symbol(LOG)) {\n      push(cadr(p2));\n      if (DEBUG_POWER) {\n        console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n      }\n      return;\n    }\n    // e^some_float\n    if (p1 === symbol(E) && isdouble(p2)) {\n      if (DEBUG_POWER) {\n        console.log(\"   power: p1 == symbol(E) && isdouble(p2) \");\n      }\n      push_double(Math.exp(p2.d));\n      if (DEBUG_POWER) {\n        console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n      }\n      return;\n    }\n    // complex number in exponential form, get it to rectangular\n    // but only if we are not in the process of calculating a polar form,\n    // otherwise we'd just undo the work we want to do\n    if (p1 === symbol(E) && Find(p2, imaginaryunit) !== 0 && Find(p2, symbol(PI)) !== 0 && !evaluatingPolar) {\n      push_symbol(POWER);\n      push(p1);\n      push(p2);\n      list(3);\n      if (DEBUG_POWER) {\n        console.log(\"   power: turning complex exponential to rect: \" + stack[tos - 1]);\n      }\n      rect();\n      hopefullySimplified = pop();\n      if (Find(hopefullySimplified, symbol(PI)) === 0) {\n        if (DEBUG_POWER) {\n          console.log(\"   power: turned complex exponential to rect: \" + hopefullySimplified);\n        }\n        push(hopefullySimplified);\n        return;\n      }\n    }\n    //  (a * b) ^ c  ->  (a ^ c) * (b ^ c)\n    // note that we can't in general do this, for example\n    // sqrt(x*y) != x^(1/2) y^(1/2) (counterexample\" x = -1 and y = -1)\n    // BUT we can carve-out here some cases where this\n    // transformation is correct\n    if (car(p1) === symbol(MULTIPLY) && isinteger(p2)) {\n      if (DEBUG_POWER) {\n        console.log(\"   power: (a * b) ^ c  ->  (a ^ c) * (b ^ c) \");\n      }\n      p1 = cdr(p1);\n      push(car(p1));\n      push(p2);\n      power();\n      p1 = cdr(p1);\n      while (iscons(p1)) {\n        push(car(p1));\n        push(p2);\n        power();\n        multiply();\n        p1 = cdr(p1);\n      }\n      if (DEBUG_POWER) {\n        console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n      }\n      return;\n    }\n    // (a ^ b) ^ c  ->  a ^ (b * c)\n    // note that we can't in general do this, for example\n    // sqrt(x^y) !=  x^(1/2 y) (counterexample x = -1)\n    // BUT we can carve-out here some cases where this\n    // transformation is correct\n\n    // simple numeric check to see if a is a number > 0\n    is_a_moreThanZero = false;\n    if (isNumericAtom(cadr(p1))) {\n      is_a_moreThanZero = sign(compare_numbers(cadr(p1), zero));\n    }\n    if (car(p1) === symbol(POWER) && (isinteger(p2) || is_a_moreThanZero)) { // when a is >= 0\n      push(cadr(p1));\n      push(caddr(p1));\n      push(p2);\n      multiply();\n      power();\n      if (DEBUG_POWER) {\n        console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n      }\n      return;\n    }\n    b_isEven_and_c_isItsInverse = false;\n    if (iseveninteger(caddr(p1))) {\n      push(caddr(p1));\n      push(p2);\n      multiply();\n      isThisOne = pop();\n      if (isone(isThisOne)) {\n        b_isEven_and_c_isItsInverse = true;\n      }\n    }\n    if (car(p1) === symbol(POWER) && b_isEven_and_c_isItsInverse) {\n      if (DEBUG_POWER) {\n        console.log(\"   power: car(p1) == symbol(POWER) && b_isEven_and_c_isItsInverse \");\n      }\n      push(cadr(p1));\n      abs();\n      if (DEBUG_POWER) {\n        console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n      }\n      return;\n    }\n    //  when expanding,\n    //  (a + b) ^ n  ->  (a + b) * (a + b) ...\n    if (expanding && isadd(p1) && isNumericAtom(p2)) {\n      push(p2);\n      n = pop_integer();\n      if (n > 1 && !isNaN(n)) {\n        if (DEBUG_POWER) {\n          console.log(\"   power: expanding && isadd(p1) && isNumericAtom(p2) \");\n        }\n        power_sum(n);\n        if (DEBUG_POWER) {\n          console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n        }\n        return;\n      }\n    }\n    //  sin(x) ^ 2n -> (1 - cos(x) ^ 2) ^ n\n    if (trigmode === 1 && car(p1) === symbol(SIN) && iseveninteger(p2)) {\n      if (DEBUG_POWER) {\n        console.log(\"   power: trigmode == 1 && car(p1) == symbol(SIN) && iseveninteger(p2) \");\n      }\n      push_integer(1);\n      push(cadr(p1));\n      cosine();\n      push_integer(2);\n      power();\n      subtract();\n      push(p2);\n      push_rational(1, 2);\n      multiply();\n      power();\n      if (DEBUG_POWER) {\n        console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n      }\n      return;\n    }\n    //  cos(x) ^ 2n -> (1 - sin(x) ^ 2) ^ n\n    if (trigmode === 2 && car(p1) === symbol(COS) && iseveninteger(p2)) {\n      if (DEBUG_POWER) {\n        console.log(\"   power: trigmode == 2 && car(p1) == symbol(COS) && iseveninteger(p2) \");\n      }\n      push_integer(1);\n      push(cadr(p1));\n      sine();\n      push_integer(2);\n      power();\n      subtract();\n      push(p2);\n      push_rational(1, 2);\n      multiply();\n      power();\n      if (DEBUG_POWER) {\n        console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n      }\n      return;\n    }\n    // complex number? (just number, not expression)\n    if (iscomplexnumber(p1)) {\n      if (DEBUG_POWER) {\n        console.log(\" power - handling the case (a + ib) ^ n\");\n      }\n      // integer power?\n\n      // n will be negative here, positive n already handled\n      if (isinteger(p2)) {\n        //               /        \\  n\n        //         -n   |  a - ib  |\n        // (a + ib)   = | -------- |\n        //              |   2   2  |\n        //               \\ a + b  /\n        push(p1);\n        conjugate();\n        p3 = pop();\n        push(p3);\n        // gets the denominator\n        push(p3);\n        push(p1);\n        multiply();\n        divide();\n        if (!isone(p2)) {\n          push(p2);\n          negate();\n          power();\n        }\n        if (DEBUG_POWER) {\n          console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n        }\n        return;\n      }\n      // noninteger or floating power?\n      if (isNumericAtom(p2)) {\n        push(p1);\n        abs();\n        push(p2);\n        power();\n        push_integer(-1);\n        push(p1);\n        arg();\n        push(p2);\n        multiply();\n        if (evaluatingAsFloats || (iscomplexnumberdouble(p1) && isdouble(p2))) {\n          // remember that the \"double\" type is\n          // toxic, i.e. it propagates, so we do\n          // need to evaluate PI to its actual double\n          // value\n          push_double(Math.PI);\n        } else {\n          //console.log(\"power pushing PI when p1 is: \" + p1 + \" and p2 is:\" + p2)\n          push(symbol(PI));\n        }\n        divide();\n        power();\n        multiply();\n        // if we calculate the power making use of arctan:\n        //  * it prevents nested radicals from being simplified\n        //  * results become really hard to manipulate afterwards\n        //  * we can't go back to other forms.\n        // so leave the power as it is.\n        if (avoidCalculatingPowersIntoArctans) {\n          if (Find(stack[tos - 1], symbol(ARCTAN))) {\n            pop();\n            push_symbol(POWER);\n            push(p1);\n            push(p2);\n            list(3);\n          }\n        }\n        if (DEBUG_POWER) {\n          console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n        }\n        return;\n      }\n    }\n    \n    //push(p1)\n    //abs()\n    //push(p2)\n    //power()\n    //push(symbol(E))\n    //push(p1)\n    //arg()\n    //push(p2)\n    //multiply()\n    //push(imaginaryunit)\n    //multiply()\n    //power()\n    //multiply()\n\n    if (simplify_polar()) {\n      if (DEBUG_POWER) {\n        console.log(\"   power: using simplify_polar\");\n      }\n      return;\n    }\n    if (DEBUG_POWER) {\n      console.log(\"   power: nothing can be done \");\n    }\n    push_symbol(POWER);\n    push(p1);\n    push(p2);\n    list(3);\n    if (DEBUG_POWER) {\n      return console.log(\"   power of \" + inputBase + \" ^ \" + inputExp + \": \" + stack[tos - 1]);\n    }\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Compute the power of a sum\n\n  //  Input:    p1  sum\n\n  //      n  exponent\n\n  //  Output:    Result on stack\n\n  //  Note:\n\n  //  Uses the multinomial series (see Math World)\n\n  //                          n              n!          n1   n2       nk\n  //  (a1 + a2 + ... + ak)  = sum (--------------- a1   a2   ... ak  )\n  //                               n1! n2! ... nk!\n\n  //  The sum is over all n1 ... nk such that n1 + n2 + ... + nk = n.\n\n  //-----------------------------------------------------------------------------\n\n  // first index is the term number 0..k-1, second index is the exponent 0..n\n\n  //define A(i, j) frame[(i) * (n + 1) + (j)]\n  power_sum = function(n) {\n    var a, i, i1, j, j1, k, l1, ref1, ref2, ref3;\n    a = [];\n    i = 0;\n    j = 0;\n    k = 0;\n    // number of terms in the sum\n    k = length(p1) - 1;\n    // local frame\n    push_frame(k * (n + 1));\n    // array of powers\n    p1 = cdr(p1);\n    for (i = i1 = 0, ref1 = k; (0 <= ref1 ? i1 < ref1 : i1 > ref1); i = 0 <= ref1 ? ++i1 : --i1) {\n      for (j = j1 = 0, ref2 = n; (0 <= ref2 ? j1 <= ref2 : j1 >= ref2); j = 0 <= ref2 ? ++j1 : --j1) {\n        push(car(p1));\n        push_integer(j);\n        power();\n        stack[frame + i * (n + 1) + j] = pop();\n      }\n      p1 = cdr(p1);\n    }\n    push_integer(n);\n    factorial();\n    p1 = pop();\n    for (i = l1 = 0, ref3 = k; (0 <= ref3 ? l1 < ref3 : l1 > ref3); i = 0 <= ref3 ? ++l1 : --l1) {\n      a[i] = 0;\n    }\n    push(zero);\n    multinomial_sum(k, n, a, 0, n);\n    return pop_frame(k * (n + 1));\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Compute multinomial sum\n\n  //  Input:    k  number of factors\n\n  //      n  overall exponent\n\n  //      a  partition array\n\n  //      i  partition array index\n\n  //      m  partition remainder\n\n  //      p1  n!\n\n  //      A  factor array\n\n  //  Output:    Result on stack\n\n  //  Note:\n\n  //  Uses recursive descent to fill the partition array.\n\n  //-----------------------------------------------------------------------------\n\n  //int k, int n, int *a, int i, int m\n  multinomial_sum = function(k, n, a, i, m) {\n    var i1, j, j1, l1, ref1, ref2, ref3;\n    j = 0;\n    if (i < k - 1) {\n      for (j = i1 = 0, ref1 = m; (0 <= ref1 ? i1 <= ref1 : i1 >= ref1); j = 0 <= ref1 ? ++i1 : --i1) {\n        a[i] = j;\n        multinomial_sum(k, n, a, i + 1, m - j);\n      }\n      return;\n    }\n    a[i] = m;\n    // coefficient\n    push(p1);\n    for (j = j1 = 0, ref2 = k; (0 <= ref2 ? j1 < ref2 : j1 > ref2); j = 0 <= ref2 ? ++j1 : --j1) {\n      push_integer(a[j]);\n      factorial();\n      divide();\n    }\n// factors\n    for (j = l1 = 0, ref3 = k; (0 <= ref3 ? l1 < ref3 : l1 > ref3); j = 0 <= ref3 ? ++l1 : --l1) {\n      push(stack[frame + j * (n + 1) + a[j]]);\n      multiply();\n    }\n    return add();\n  };\n\n  // exp(n/2 i pi) ?\n\n  // p2 is the exponent expression\n\n  // clobbers p3\n  simplify_polar = function() {\n    var doNothing, n;\n    n = 0;\n    n = isquarterturn(p2);\n    switch (n) {\n      case 0:\n        doNothing = 1;\n        break;\n      case 1:\n        push_integer(1);\n        return 1;\n      case 2:\n        push_integer(-1);\n        return 1;\n      case 3:\n        push(imaginaryunit);\n        return 1;\n      case 4:\n        push(imaginaryunit);\n        negate();\n        return 1;\n    }\n    if (car(p2) === symbol(ADD)) {\n      p3 = cdr(p2);\n      while (iscons(p3)) {\n        n = isquarterturn(car(p3));\n        if (n) {\n          break;\n        }\n        p3 = cdr(p3);\n      }\n      switch (n) {\n        case 0:\n          return 0;\n        case 1:\n          push_integer(1);\n          break;\n        case 2:\n          push_integer(-1);\n          break;\n        case 3:\n          push(imaginaryunit);\n          break;\n        case 4:\n          push(imaginaryunit);\n          negate();\n      }\n      push(p2);\n      push(car(p3));\n      subtract();\n      exponential();\n      multiply();\n      return 1;\n    }\n    return 0;\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Look up the nth prime\n\n  //  Input:    n on stack (0 < n < 10001)\n\n  //  Output:    nth prime on stack\n\n  //-----------------------------------------------------------------------------\n  Eval_prime = function() {\n    push(cadr(p1));\n    Eval();\n    return prime();\n  };\n\n  prime = function() {\n    var n;\n    n = 0;\n    n = pop_integer();\n    if (n < 1 || n > MAXPRIMETAB) {\n      stop(\"prime: Argument out of range.\");\n    }\n    n = primetab[n - 1];\n    return push_integer(n);\n  };\n\n  power_str = \"^\";\n\n  codeGen = false;\n\n  // this is only invoked when user invokes\n  // \"print\" explicitly\n  Eval_print = function() {\n    stringsEmittedByUserPrintouts += _print(cdr(p1), printMode);\n    return push(symbol(NIL));\n  };\n\n  // this is only invoked when user invokes\n  // \"print2dascii\" explicitly\n  Eval_print2dascii = function() {\n    stringsEmittedByUserPrintouts += _print(cdr(p1), PRINTMODE_2DASCII);\n    return push(symbol(NIL));\n  };\n\n  // this is only invoked when user invokes\n  // \"printcomputer\" explicitly\n  Eval_printcomputer = function() {\n    stringsEmittedByUserPrintouts += _print(cdr(p1), PRINTMODE_COMPUTER);\n    return push(symbol(NIL));\n  };\n\n  // this is only invoked when user invokes\n  // \"printlatex\" explicitly\n  Eval_printlatex = function() {\n    stringsEmittedByUserPrintouts += _print(cdr(p1), PRINTMODE_LATEX);\n    return push(symbol(NIL));\n  };\n\n  // this is only invoked when user invokes\n  // \"printhuman\" explicitly\n  Eval_printhuman = function() {\n    var original_test_flag;\n    // test flag needs to be suspended\n    // because otherwise \"printcomputer\" mode\n    // will happen.\n    original_test_flag = test_flag;\n    test_flag = 0;\n    stringsEmittedByUserPrintouts += _print(cdr(p1), PRINTMODE_HUMAN);\n    test_flag = original_test_flag;\n    return push(symbol(NIL));\n  };\n\n  // this is only invoked when user invokes\n  // \"printlist\" explicitly\n  Eval_printlist = function() {\n    var beenPrinted;\n    beenPrinted = _print(cdr(p1), PRINTMODE_LIST);\n    stringsEmittedByUserPrintouts += beenPrinted;\n    return push(symbol(NIL));\n  };\n\n  _print = function(p, passedPrintMode) {\n    var accumulator, origPrintMode;\n    accumulator = \"\";\n    while (iscons(p)) {\n      push(car(p));\n      Eval();\n      p2 = pop();\n      origPrintMode = printMode;\n      if (passedPrintMode === PRINTMODE_COMPUTER) {\n        printMode = PRINTMODE_COMPUTER;\n        accumulator = printline(p2);\n        rememberPrint(accumulator, LAST_FULL_PRINT);\n      } else if (passedPrintMode === PRINTMODE_HUMAN) {\n        printMode = PRINTMODE_HUMAN;\n        accumulator = printline(p2);\n        rememberPrint(accumulator, LAST_PLAIN_PRINT);\n      } else if (passedPrintMode === PRINTMODE_2DASCII) {\n        printMode = PRINTMODE_2DASCII;\n        accumulator = print2dascii(p2);\n        rememberPrint(accumulator, LAST_2DASCII_PRINT);\n      } else if (passedPrintMode === PRINTMODE_LATEX) {\n        printMode = PRINTMODE_LATEX;\n        accumulator = printline(p2);\n        rememberPrint(accumulator, LAST_LATEX_PRINT);\n      } else if (passedPrintMode === PRINTMODE_LIST) {\n        printMode = PRINTMODE_LIST;\n        accumulator = print_list(p2);\n        rememberPrint(accumulator, LAST_LIST_PRINT);\n      }\n      printMode = origPrintMode;\n      p = cdr(p);\n    }\n    if (DEBUG) {\n      console.log(\"emttedString from display: \" + stringsEmittedByUserPrintouts);\n    }\n    return accumulator;\n  };\n\n  rememberPrint = function(theString, theTypeOfPrint) {\n    var parsedString;\n    scan('\"' + theString + '\"');\n    parsedString = pop();\n    return set_binding(symbol(theTypeOfPrint), parsedString);\n  };\n\n  print_str = function(s) {\n    if (DEBUG) {\n      console.log(\"emttedString from print_str: \" + stringsEmittedByUserPrintouts);\n    }\n    return s;\n  };\n\n  print_char = function(c) {\n    return c;\n  };\n\n  collectLatexStringFromReturnValue = function(p) {\n    var origPrintMode, originalCodeGen, returnedString;\n    origPrintMode = printMode;\n    printMode = PRINTMODE_LATEX;\n    originalCodeGen = codeGen;\n    codeGen = false;\n    returnedString = print_expr(p);\n    // some variables might contain underscores, escape those\n    returnedString = returnedString.replace(/_/g, \"\\\\_\");\n    printMode = origPrintMode;\n    codeGen = originalCodeGen;\n    if (DEBUG) {\n      console.log(\"emttedString from collectLatexStringFromReturnValue: \" + stringsEmittedByUserPrintouts);\n    }\n    return returnedString;\n  };\n\n  printline = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    accumulator += print_expr(p);\n    return accumulator;\n  };\n\n  print_base_of_denom = function(p1) {\n    var accumulator;\n    accumulator = \"\";\n    if (isfraction(p1) || car(p1) === symbol(ADD) || car(p1) === symbol(MULTIPLY) || car(p1) === symbol(POWER) || lessp(p1, zero)) { // p1 is BASE\n      accumulator += print_char('(');\n      accumulator += print_expr(p1);\n      accumulator += print_char(')');\n    } else {\n      accumulator += print_expr(p1); // p1 is BASE\n    }\n    return accumulator;\n  };\n\n  print_expo_of_denom = function(p2) {\n    var accumulator;\n    accumulator = \"\";\n    if (isfraction(p2) || car(p2) === symbol(ADD) || car(p2) === symbol(MULTIPLY) || car(p2) === symbol(POWER)) { // p2 is EXPO\n      accumulator += print_char('(');\n      accumulator += print_expr(p2);\n      accumulator += print_char(')');\n    } else {\n      accumulator += print_expr(p2); // p2 is EXPO\n    }\n    return accumulator;\n  };\n\n  // prints stuff after the divide symbol \"/\"\n\n  // d is the number of denominators\n\n  //define BASE p1\n  //define EXPO p2\n  print_denom = function(p, d) {\n    var accumulator;\n    accumulator = \"\";\n    save();\n    p1 = cadr(p);\n    p2 = caddr(p);\n    if (isminusone(p2)) { // p2 is EXPO\n      accumulator += print_base_of_denom(p1);\n      restore();\n      return accumulator;\n    }\n    if (d === 1) { // p2 is EXPO\n      accumulator += print_char('(');\n    }\n    // prepare the exponent\n    // (needs to be negated)\n    // before printing it out\n    push(p2);\n    negate();\n    p2 = pop();\n    accumulator += print_power(p1, p2);\n    if (d === 1) {\n      accumulator += print_char(')');\n    }\n    restore();\n    return accumulator;\n  };\n\n  //define A p3\n  //define B p4\n  print_a_over_b = function(p) {\n    var accumulator, d, doNothing, n;\n    accumulator = \"\";\n    flag = 0;\n    n = 0;\n    d = 0;\n    save();\n    // count numerators and denominators\n    n = 0;\n    d = 0;\n    p1 = cdr(p);\n    p2 = car(p1);\n    if (isrational(p2)) {\n      push(p2);\n      mp_numerator();\n      absval();\n      p3 = pop();\n      push(p2);\n      mp_denominator();\n      p4 = pop();\n      if (!isplusone(p3)) { // p3 is A\n        n++;\n      }\n      if (!isplusone(p4)) { // p4 is B\n        d++;\n      }\n      p1 = cdr(p1);\n    } else {\n      p3 = one;\n      p4 = one; // p4 is B\n    }\n    while (iscons(p1)) {\n      p2 = car(p1);\n      if (is_denominator(p2)) {\n        d++;\n      } else {\n        n++;\n      }\n      p1 = cdr(p1);\n    }\n    //debugger\n    if (printMode === PRINTMODE_LATEX) {\n      accumulator += print_str('\\\\frac{');\n    }\n    if (n === 0) {\n      accumulator += print_char('1');\n    } else {\n      flag = 0;\n      p1 = cdr(p);\n      if (isrational(car(p1))) {\n        p1 = cdr(p1);\n      }\n      if (!isplusone(p3)) { // p3 is A\n        accumulator += print_factor(p3);\n        flag = 1;\n      }\n      while (iscons(p1)) {\n        p2 = car(p1);\n        if (is_denominator(p2)) {\n          doNothing = 1;\n        } else {\n          if (flag) {\n            accumulator += print_multiply_sign();\n          }\n          accumulator += print_factor(p2);\n          flag = 1;\n        }\n        p1 = cdr(p1);\n      }\n    }\n    if (printMode === PRINTMODE_LATEX) {\n      accumulator += print_str('}{');\n    } else if (printMode === PRINTMODE_HUMAN && !test_flag) {\n      accumulator += print_str(\" / \");\n    } else {\n      accumulator += print_str(\"/\");\n    }\n    if (d > 1 && printMode !== PRINTMODE_LATEX) {\n      accumulator += print_char('(');\n    }\n    flag = 0;\n    p1 = cdr(p);\n    if (isrational(car(p1))) {\n      p1 = cdr(p1);\n    }\n    if (!isplusone(p4)) { // p4 is B\n      accumulator += print_factor(p4);\n      flag = 1;\n    }\n    while (iscons(p1)) {\n      p2 = car(p1);\n      if (is_denominator(p2)) {\n        if (flag) {\n          accumulator += print_multiply_sign();\n        }\n        accumulator += print_denom(p2, d);\n        flag = 1;\n      }\n      p1 = cdr(p1);\n    }\n    if (d > 1 && printMode !== PRINTMODE_LATEX) {\n      accumulator += print_char(')');\n    }\n    if (printMode === PRINTMODE_LATEX) {\n      accumulator += print_str('}');\n    }\n    restore();\n    return accumulator;\n  };\n\n  print_expr = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    if (isadd(p)) {\n      p = cdr(p);\n      if (sign_of_term(car(p)) === '-') {\n        accumulator += print_str(\"-\");\n      }\n      accumulator += print_term(car(p));\n      p = cdr(p);\n      while (iscons(p)) {\n        if (sign_of_term(car(p)) === '+') {\n          if (printMode === PRINTMODE_HUMAN && !test_flag) {\n            accumulator += print_str(\" + \");\n          } else {\n            accumulator += print_str(\"+\");\n          }\n        } else {\n          if (printMode === PRINTMODE_HUMAN && !test_flag) {\n            accumulator += print_str(\" - \");\n          } else {\n            accumulator += print_str(\"-\");\n          }\n        }\n        accumulator += print_term(car(p));\n        p = cdr(p);\n      }\n    } else {\n      if (sign_of_term(p) === '-') {\n        accumulator += print_str(\"-\");\n      }\n      accumulator += print_term(p);\n    }\n    return accumulator;\n  };\n\n  sign_of_term = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    if (car(p) === symbol(MULTIPLY) && isNumericAtom(cadr(p)) && lessp(cadr(p), zero)) {\n      accumulator += '-';\n    } else if (isNumericAtom(p) && lessp(p, zero)) {\n      accumulator += '-';\n    } else {\n      accumulator += '+';\n    }\n    return accumulator;\n  };\n\n  print_term = function(p) {\n    var accumulator, denom, numberOneOverSomething, origAccumulator, previousFactorWasANumber;\n    accumulator = \"\";\n    if (car(p) === symbol(MULTIPLY) && any_denominators(p)) {\n      accumulator += print_a_over_b(p);\n      return accumulator;\n    }\n    if (car(p) === symbol(MULTIPLY)) {\n      p = cdr(p);\n      // coeff -1?\n      if (isminusone(car(p))) {\n        //      print_char('-')\n        p = cdr(p);\n      }\n      previousFactorWasANumber = false;\n      // print the first factor ------------\n      if (isNumericAtom(car(p))) {\n        previousFactorWasANumber = true;\n      }\n      // this numberOneOverSomething thing is so that\n      // we show things of the form\n      //   numericFractionOfForm1/something * somethingElse\n      // as\n      //   somethingElse / something\n      // so for example 1/2 * sqrt(2) is rendered as\n      //   sqrt(2)/2\n      // rather than the first form, which looks confusing.\n      // NOTE that you might want to avoid this\n      // when printing polynomials, as it could be nicer\n      // to show the numeric coefficients well separated from\n      // the variable, but we'll see when we'll\n      // come to it if it's an issue.\n      numberOneOverSomething = false;\n      if (printMode === PRINTMODE_LATEX && iscons(cdr(p)) && isNumberOneOverSomething(car(p))) {\n        numberOneOverSomething = true;\n        denom = car(p).q.b.toString();\n      }\n      if (numberOneOverSomething) {\n        origAccumulator = accumulator;\n        accumulator = \"\";\n      } else {\n        accumulator += print_factor(car(p));\n      }\n      p = cdr(p);\n      // print all the other factors -------\n      while (iscons(p)) {\n        // check if we end up having a case where two numbers\n        // are next to each other. In those cases, latex needs\n        // to insert a \\cdot otherwise they end up\n        // right next to each other and read like one big number\n        if (printMode === PRINTMODE_LATEX) {\n          if (previousFactorWasANumber) {\n            // if what comes next is a power and the base\n            // is a number, then we are in the case\n            // of consecutive numbers.\n            // Note that sqrt() i.e when exponent is 1/2\n            // doesn't count because the radical gives\n            // a nice graphical separation already.\n            if (caar(p) === symbol(POWER)) {\n              if (isNumericAtom(car(cdr(car(p))))) {\n                if (!isfraction(car(cdr(cdr(car(p)))))) {\n                  accumulator += \" \\\\cdot \";\n                }\n              }\n            }\n          }\n        }\n        accumulator += print_multiply_sign();\n        accumulator += print_factor(car(p), false, true);\n        previousFactorWasANumber = false;\n        if (isNumericAtom(car(p))) {\n          previousFactorWasANumber = true;\n        }\n        p = cdr(p);\n      }\n      if (numberOneOverSomething) {\n        accumulator = origAccumulator + \"\\\\frac{\" + accumulator + \"}{\" + denom + \"}\";\n      }\n    } else {\n      accumulator += print_factor(p);\n    }\n    return accumulator;\n  };\n\n  print_subexpr = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    accumulator += print_char('(');\n    accumulator += print_expr(p);\n    accumulator += print_char(')');\n    return accumulator;\n  };\n\n  print_factorial_function = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    p = cadr(p);\n    if (isfraction(p) || car(p) === symbol(ADD) || car(p) === symbol(MULTIPLY) || car(p) === symbol(POWER) || car(p) === symbol(FACTORIAL)) {\n      accumulator += print_subexpr(p);\n    } else {\n      accumulator += print_expr(p);\n    }\n    accumulator += print_char('!');\n    return accumulator;\n  };\n\n  print_ABS_latex = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    accumulator += print_str(\"\\\\left |\");\n    accumulator += print_expr(cadr(p));\n    accumulator += print_str(\" \\\\right |\");\n    return accumulator;\n  };\n\n  print_BINOMIAL_latex = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    accumulator += print_str(\"\\\\binom{\");\n    accumulator += print_expr(cadr(p));\n    accumulator += print_str(\"}{\");\n    accumulator += print_expr(caddr(p));\n    accumulator += print_str(\"} \");\n    return accumulator;\n  };\n\n  print_DOT_latex = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    accumulator += print_expr(cadr(p));\n    accumulator += print_str(\" \\\\cdot \");\n    accumulator += print_expr(caddr(p));\n    return accumulator;\n  };\n\n  print_DOT_codegen = function(p) {\n    var accumulator;\n    accumulator = \"dot(\";\n    accumulator += print_expr(cadr(p));\n    accumulator += \", \";\n    accumulator += print_expr(caddr(p));\n    accumulator += \")\";\n    return accumulator;\n  };\n\n  print_SIN_codegen = function(p) {\n    var accumulator;\n    accumulator = \"Math.sin(\";\n    accumulator += print_expr(cadr(p));\n    accumulator += \")\";\n    return accumulator;\n  };\n\n  print_COS_codegen = function(p) {\n    var accumulator;\n    accumulator = \"Math.cos(\";\n    accumulator += print_expr(cadr(p));\n    accumulator += \")\";\n    return accumulator;\n  };\n\n  print_TAN_codegen = function(p) {\n    var accumulator;\n    accumulator = \"Math.tan(\";\n    accumulator += print_expr(cadr(p));\n    accumulator += \")\";\n    return accumulator;\n  };\n\n  print_ARCSIN_codegen = function(p) {\n    var accumulator;\n    accumulator = \"Math.asin(\";\n    accumulator += print_expr(cadr(p));\n    accumulator += \")\";\n    return accumulator;\n  };\n\n  print_ARCCOS_codegen = function(p) {\n    var accumulator;\n    accumulator = \"Math.acos(\";\n    accumulator += print_expr(cadr(p));\n    accumulator += \")\";\n    return accumulator;\n  };\n\n  print_ARCTAN_codegen = function(p) {\n    var accumulator;\n    accumulator = \"Math.atan(\";\n    accumulator += print_expr(cadr(p));\n    accumulator += \")\";\n    return accumulator;\n  };\n\n  print_SQRT_latex = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    accumulator += print_str(\"\\\\sqrt{\");\n    accumulator += print_expr(cadr(p));\n    accumulator += print_str(\"} \");\n    return accumulator;\n  };\n\n  print_TRANSPOSE_latex = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    accumulator += print_str(\"{\");\n    if (iscons(cadr(p))) {\n      accumulator += print_str('(');\n    }\n    accumulator += print_expr(cadr(p));\n    if (iscons(cadr(p))) {\n      accumulator += print_str(')');\n    }\n    accumulator += print_str(\"}\");\n    accumulator += print_str(\"^T\");\n    return accumulator;\n  };\n\n  print_TRANSPOSE_codegen = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    accumulator += print_str(\"transpose(\");\n    accumulator += print_expr(cadr(p));\n    accumulator += print_str(')');\n    return accumulator;\n  };\n\n  print_UNIT_codegen = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    accumulator += print_str(\"identity(\");\n    accumulator += print_expr(cadr(p));\n    accumulator += print_str(')');\n    return accumulator;\n  };\n\n  print_INV_latex = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    accumulator += print_str(\"{\");\n    if (iscons(cadr(p))) {\n      accumulator += print_str('(');\n    }\n    accumulator += print_expr(cadr(p));\n    if (iscons(cadr(p))) {\n      accumulator += print_str(')');\n    }\n    accumulator += print_str(\"}\");\n    accumulator += print_str(\"^{-1}\");\n    return accumulator;\n  };\n\n  print_INV_codegen = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    accumulator += print_str(\"inv(\");\n    accumulator += print_expr(cadr(p));\n    accumulator += print_str(')');\n    return accumulator;\n  };\n\n  print_DEFINT_latex = function(p) {\n    var accumulator, functionBody, i, i1, numberOfIntegrals, originalIntegral, ref1, theIntegral, theVariable;\n    accumulator = \"\";\n    functionBody = car(cdr(p));\n    p = cdr(p);\n    originalIntegral = p;\n    numberOfIntegrals = 0;\n    while (iscons(cdr(cdr(p)))) {\n      numberOfIntegrals++;\n      theIntegral = cdr(cdr(p));\n      accumulator += print_str(\"\\\\int^{\");\n      accumulator += print_expr(car(cdr(theIntegral)));\n      accumulator += print_str(\"}_{\");\n      accumulator += print_expr(car(theIntegral));\n      accumulator += print_str(\"} \\\\! \");\n      p = cdr(theIntegral);\n    }\n    accumulator += print_expr(functionBody);\n    accumulator += print_str(\" \\\\,\");\n    p = originalIntegral;\n    for (i = i1 = 1, ref1 = numberOfIntegrals; (1 <= ref1 ? i1 <= ref1 : i1 >= ref1); i = 1 <= ref1 ? ++i1 : --i1) {\n      theVariable = cdr(p);\n      accumulator += print_str(\" \\\\mathrm{d} \");\n      accumulator += print_expr(car(theVariable));\n      if (i < numberOfIntegrals) {\n        accumulator += print_str(\" \\\\, \");\n      }\n      p = cdr(cdr(theVariable));\n    }\n    return accumulator;\n  };\n\n  print_tensor = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    accumulator += print_tensor_inner(p, 0, 0)[1];\n    return accumulator;\n  };\n\n  // j scans the dimensions\n  // k is an increment for all the printed elements\n  //   since they are all together in sequence in one array\n  print_tensor_inner = function(p, j, k) {\n    var accumulator, i, i1, j1, ref1, ref2, retString;\n    accumulator = \"\";\n    accumulator += print_str(\"[\");\n    // only the last dimension prints the actual elements\n    // e.g. in a matrix, the first dimension contains\n    // vectors, not elements, and the second dimension\n    // actually contains the elements\n\n    // if not the last dimension, we are just printing wrappers\n    // and recursing down i.e. we print the next dimension\n    if (j < p.tensor.ndim - 1) {\n      for (i = i1 = 0, ref1 = p.tensor.dim[j]; (0 <= ref1 ? i1 < ref1 : i1 > ref1); i = 0 <= ref1 ? ++i1 : --i1) {\n        [k, retString] = print_tensor_inner(p, j + 1, k);\n        accumulator += retString;\n        // add separator between elements dimensions\n        // \"above\" the inner-most dimension\n        if (i !== p.tensor.dim[j] - 1) {\n          accumulator += print_str(\",\");\n        }\n      }\n    } else {\n// if we reached the last dimension, we print the actual\n// elements\n      for (i = j1 = 0, ref2 = p.tensor.dim[j]; (0 <= ref2 ? j1 < ref2 : j1 > ref2); i = 0 <= ref2 ? ++j1 : --j1) {\n        accumulator += print_expr(p.tensor.elem[k]);\n        // add separator between elements in the\n        // inner-most dimension\n        if (i !== p.tensor.dim[j] - 1) {\n          accumulator += print_str(\",\");\n        }\n        k++;\n      }\n    }\n    accumulator += print_str(\"]\");\n    return [k, accumulator];\n  };\n\n  print_tensor_latex = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    if (p.tensor.ndim <= 2) {\n      accumulator += print_tensor_inner_latex(true, p, 0, 0)[1];\n    }\n    return accumulator;\n  };\n\n  // firstLevel is needed because printing a matrix\n  // is not exactly an elegant recursive procedure:\n  // the vector on the first level prints the latex\n  // \"wrap\", while the vectors that make up the\n  // rows don't. so it's a bit asymmetric and this\n  // flag helps.\n  // j scans the dimensions\n  // k is an increment for all the printed elements\n  //   since they are all together in sequence in one array\n  print_tensor_inner_latex = function(firstLevel, p, j, k) {\n    var accumulator, i, i1, j1, ref1, ref2, retString;\n    accumulator = \"\";\n    // open the outer latex wrap\n    if (firstLevel) {\n      accumulator += \"\\\\begin{bmatrix} \";\n    }\n    // only the last dimension prints the actual elements\n    // e.g. in a matrix, the first dimension contains\n    // vectors, not elements, and the second dimension\n    // actually contains the elements\n\n    // if not the last dimension, we are just printing wrappers\n    // and recursing down i.e. we print the next dimension\n    if (j < p.tensor.ndim - 1) {\n      for (i = i1 = 0, ref1 = p.tensor.dim[j]; (0 <= ref1 ? i1 < ref1 : i1 > ref1); i = 0 <= ref1 ? ++i1 : --i1) {\n        [k, retString] = print_tensor_inner_latex(0, p, j + 1, k);\n        accumulator += retString;\n        if (i !== p.tensor.dim[j] - 1) {\n          // add separator between rows\n          accumulator += print_str(\" \\\\\\\\ \");\n        }\n      }\n    } else {\n// if we reached the last dimension, we print the actual\n// elements\n      for (i = j1 = 0, ref2 = p.tensor.dim[j]; (0 <= ref2 ? j1 < ref2 : j1 > ref2); i = 0 <= ref2 ? ++j1 : --j1) {\n        accumulator += print_expr(p.tensor.elem[k]);\n        // separator between elements in each row\n        if (i !== p.tensor.dim[j] - 1) {\n          accumulator += print_str(\" & \");\n        }\n        k++;\n      }\n    }\n    // close the outer latex wrap\n    if (firstLevel) {\n      accumulator += \" \\\\end{bmatrix}\";\n    }\n    return [k, accumulator];\n  };\n\n  print_SUM_latex = function(p) {\n    var accumulator;\n    accumulator = \"\\\\sum_{\";\n    accumulator += print_expr(caddr(p));\n    accumulator += \"=\";\n    accumulator += print_expr(cadddr(p));\n    accumulator += \"}^{\";\n    accumulator += print_expr(caddddr(p));\n    accumulator += \"}{\";\n    accumulator += print_expr(cadr(p));\n    accumulator += \"}\";\n    return accumulator;\n  };\n\n  print_SUM_codegen = function(p) {\n    var accumulator, body, lowerlimit, upperlimit, variable;\n    body = cadr(p);\n    variable = caddr(p);\n    lowerlimit = cadddr(p);\n    upperlimit = caddddr(p);\n    accumulator = \"(function(){\" + \" var \" + variable + \"; \" + \" var holderSum = 0; \" + \" var lowerlimit = \" + print_expr(lowerlimit) + \"; \" + \" var upperlimit = \" + print_expr(upperlimit) + \"; \" + \" for (\" + variable + \" = lowerlimit; \" + variable + \" < upperlimit; \" + variable + \"++) { \" + \"   holderSum += \" + print_expr(body) + \";\" + \" } \" + \" return holderSum;\" + \"})()\";\n    return accumulator;\n  };\n\n  print_TEST_latex = function(p) {\n    var accumulator;\n    accumulator = \"\\\\left\\\\{ \\\\begin{array}{ll}\";\n    p = cdr(p);\n    while (iscons(p)) {\n      // odd number of parameters means that the\n      // last argument becomes the default case\n      // i.e. the one without a test.\n      if (cdr(p) === symbol(NIL)) {\n        accumulator += \"{\";\n        accumulator += print_expr(car(p));\n        accumulator += \"} & otherwise \";\n        accumulator += \" \\\\\\\\\\\\\\\\\";\n        break;\n      }\n      accumulator += \"{\";\n      accumulator += print_expr(cadr(p));\n      accumulator += \"} & if & \";\n      accumulator += print_expr(car(p));\n      accumulator += \" \\\\\\\\\\\\\\\\\";\n      // test unsuccessful, continue to the\n      // next pair of test,value\n      p = cddr(p);\n    }\n    accumulator = accumulator.substring(0, accumulator.length - 4);\n    return accumulator += \"\\\\end{array} \\\\right.\";\n  };\n\n  print_TEST_codegen = function(p) {\n    var accumulator, howManyIfs;\n    accumulator = \"(function(){\";\n    p = cdr(p);\n    howManyIfs = 0;\n    while (iscons(p)) {\n      // odd number of parameters means that the\n      // last argument becomes the default case\n      // i.e. the one without a test.\n      if (cdr(p) === symbol(NIL)) {\n        accumulator += \"else {\";\n        accumulator += \"return (\" + print_expr(car(p)) + \");\";\n        accumulator += \"}\";\n        break;\n      }\n      if (howManyIfs) {\n        accumulator += \" else \";\n      }\n      accumulator += \"if (\" + print_expr(car(p)) + \"){\";\n      accumulator += \"return (\" + print_expr(cadr(p)) + \");\";\n      accumulator += \"}\";\n      // test unsuccessful, continue to the\n      // next pair of test,value\n      howManyIfs++;\n      p = cddr(p);\n    }\n    accumulator += \"})()\";\n    return accumulator;\n  };\n\n  print_TESTLT_latex = function(p) {\n    var accumulator;\n    accumulator = \"{\";\n    accumulator += print_expr(cadr(p));\n    accumulator += \"}\";\n    accumulator += \" < \";\n    accumulator += \"{\";\n    accumulator += print_expr(caddr(p));\n    return accumulator += \"}\";\n  };\n\n  print_TESTLE_latex = function(p) {\n    var accumulator;\n    accumulator = \"{\";\n    accumulator += print_expr(cadr(p));\n    accumulator += \"}\";\n    accumulator += \" \\\\leq \";\n    accumulator += \"{\";\n    accumulator += print_expr(caddr(p));\n    return accumulator += \"}\";\n  };\n\n  print_TESTGT_latex = function(p) {\n    var accumulator;\n    accumulator = \"{\";\n    accumulator += print_expr(cadr(p));\n    accumulator += \"}\";\n    accumulator += \" > \";\n    accumulator += \"{\";\n    accumulator += print_expr(caddr(p));\n    return accumulator += \"}\";\n  };\n\n  print_TESTGE_latex = function(p) {\n    var accumulator;\n    accumulator = \"{\";\n    accumulator += print_expr(cadr(p));\n    accumulator += \"}\";\n    accumulator += \" \\\\geq \";\n    accumulator += \"{\";\n    accumulator += print_expr(caddr(p));\n    return accumulator += \"}\";\n  };\n\n  print_TESTEQ_latex = function(p) {\n    var accumulator;\n    accumulator = \"{\";\n    accumulator += print_expr(cadr(p));\n    accumulator += \"}\";\n    accumulator += \" = \";\n    accumulator += \"{\";\n    accumulator += print_expr(caddr(p));\n    return accumulator += \"}\";\n  };\n\n  print_FOR_codegen = function(p) {\n    var accumulator, body, lowerlimit, upperlimit, variable;\n    body = cadr(p);\n    variable = caddr(p);\n    lowerlimit = cadddr(p);\n    upperlimit = caddddr(p);\n    accumulator = \"(function(){\" + \" var \" + variable + \"; \" + \" var lowerlimit = \" + print_expr(lowerlimit) + \"; \" + \" var upperlimit = \" + print_expr(upperlimit) + \"; \" + \" for (\" + variable + \" = lowerlimit; \" + variable + \" < upperlimit; \" + variable + \"++) { \" + \"   \" + print_expr(body) + \" } \" + \"})()\";\n    return accumulator;\n  };\n\n  print_DO_codegen = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    p = cdr(p);\n    while (iscons(p)) {\n      accumulator += print_expr(car(p));\n      p = cdr(p);\n    }\n    return accumulator;\n  };\n\n  print_SETQ_codegen = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    accumulator += print_expr(cadr(p));\n    accumulator += \" = \";\n    accumulator += print_expr(caddr(p));\n    accumulator += \"; \";\n    return accumulator;\n  };\n\n  print_PRODUCT_latex = function(p) {\n    var accumulator;\n    accumulator = \"\\\\prod_{\";\n    accumulator += print_expr(caddr(p));\n    accumulator += \"=\";\n    accumulator += print_expr(cadddr(p));\n    accumulator += \"}^{\";\n    accumulator += print_expr(caddddr(p));\n    accumulator += \"}{\";\n    accumulator += print_expr(cadr(p));\n    accumulator += \"}\";\n    return accumulator;\n  };\n\n  print_PRODUCT_codegen = function(p) {\n    var accumulator, body, lowerlimit, upperlimit, variable;\n    body = cadr(p);\n    variable = caddr(p);\n    lowerlimit = cadddr(p);\n    upperlimit = caddddr(p);\n    accumulator = \"(function(){\" + \" var \" + variable + \"; \" + \" var holderProduct = 1; \" + \" var lowerlimit = \" + print_expr(lowerlimit) + \"; \" + \" var upperlimit = \" + print_expr(upperlimit) + \"; \" + \" for (\" + variable + \" = lowerlimit; \" + variable + \" < upperlimit; \" + variable + \"++) { \" + \"   holderProduct *= \" + print_expr(body) + \";\" + \" } \" + \" return holderProduct;\" + \"})()\";\n    return accumulator;\n  };\n\n  print_base = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    if (isadd(cadr(p)) || caadr(p) === symbol(MULTIPLY) || caadr(p) === symbol(POWER) || isnegativenumber(cadr(p))) {\n      accumulator += print_str('(');\n      accumulator += print_expr(cadr(p));\n      accumulator += print_str(')');\n    } else if (isNumericAtom(cadr(p)) && (lessp(cadr(p), zero) || isfraction(cadr(p)))) {\n      accumulator += print_str('(');\n      accumulator += print_factor(cadr(p));\n      accumulator += print_str(')');\n    } else {\n      accumulator += print_factor(cadr(p));\n    }\n    return accumulator;\n  };\n\n  print_exponent = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    if (iscons(caddr(p)) || isfraction(caddr(p)) || (isNumericAtom(caddr(p)) && lessp(caddr(p), zero))) {\n      accumulator += print_str('(');\n      accumulator += print_expr(caddr(p));\n      accumulator += print_str(')');\n    } else {\n      accumulator += print_factor(caddr(p));\n    }\n    return accumulator;\n  };\n\n  print_power = function(base, exponent) {\n    var accumulator, denomExponent, newExponent, numExponent;\n    accumulator = \"\";\n    //debugger\n    if (DEBUG) {\n      console.log(\"power base: \" + base + \" \" + \" exponent: \" + exponent);\n    }\n    // quick check is this is actually a square root.\n    if (isoneovertwo(exponent)) {\n      if (equaln(base, 2)) {\n        if (codeGen) {\n          accumulator += print_str(\"Math.SQRT2\");\n          return accumulator;\n        }\n      } else {\n        if (printMode === PRINTMODE_LATEX) {\n          accumulator += print_str(\"\\\\sqrt{\");\n          accumulator += print_expr(base);\n          accumulator += print_str(\"}\");\n          return accumulator;\n        } else if (codeGen) {\n          accumulator += print_str(\"Math.sqrt(\");\n          accumulator += print_expr(base);\n          accumulator += print_str(')');\n          return accumulator;\n        }\n      }\n    }\n    if ((equaln(get_binding(symbol(PRINT_LEAVE_E_ALONE)), 1)) && base === symbol(E)) {\n      if (codeGen) {\n        accumulator += print_str(\"Math.exp(\");\n        accumulator += print_expo_of_denom(exponent);\n        accumulator += print_str(')');\n        return accumulator;\n      }\n      if (printMode === PRINTMODE_LATEX) {\n        accumulator += print_str(\"e^{\");\n        accumulator += print_expr(exponent);\n        accumulator += print_str(\"}\");\n      } else {\n        accumulator += print_str(\"exp(\");\n        accumulator += print_expr(exponent);\n        accumulator += print_str(')');\n      }\n      return accumulator;\n    }\n    if (codeGen) {\n      accumulator += print_str(\"Math.pow(\");\n      accumulator += print_base_of_denom(base);\n      accumulator += print_str(\", \");\n      accumulator += print_expo_of_denom(exponent);\n      accumulator += print_str(')');\n      return accumulator;\n    }\n    if ((equaln(get_binding(symbol(PRINT_LEAVE_X_ALONE)), 0)) || base.printname !== \"x\") {\n      // if the exponent is negative then\n      // we invert the base BUT we don't do\n      // that if the base is \"e\", because for\n      // example when trigonometric functions are\n      // expressed in terms of exponential functions\n      // that would be really confusing, one wants to\n      // keep \"e\" as the base and the negative exponent\n      if (base !== symbol(E)) {\n        if (isminusone(exponent)) {\n          if (printMode === PRINTMODE_LATEX) {\n            accumulator += print_str(\"\\\\frac{1}{\");\n          } else if (printMode === PRINTMODE_HUMAN && !test_flag) {\n            accumulator += print_str(\"1 / \");\n          } else {\n            accumulator += print_str(\"1/\");\n          }\n          if (iscons(base) && printMode !== PRINTMODE_LATEX) {\n            accumulator += print_str('(');\n            accumulator += print_expr(base);\n            accumulator += print_str(')');\n          } else {\n            accumulator += print_expr(base);\n          }\n          if (printMode === PRINTMODE_LATEX) {\n            accumulator += print_str(\"}\");\n          }\n          return accumulator;\n        }\n        if (isnegativeterm(exponent)) {\n          if (printMode === PRINTMODE_LATEX) {\n            accumulator += print_str(\"\\\\frac{1}{\");\n          } else if (printMode === PRINTMODE_HUMAN && !test_flag) {\n            accumulator += print_str(\"1 / \");\n          } else {\n            accumulator += print_str(\"1/\");\n          }\n          push(exponent);\n          push_integer(-1);\n          multiply();\n          newExponent = pop();\n          if (iscons(base) && printMode !== PRINTMODE_LATEX) {\n            accumulator += print_str('(');\n            accumulator += print_power(base, newExponent);\n            accumulator += print_str(')');\n          } else {\n            accumulator += print_power(base, newExponent);\n          }\n          if (printMode === PRINTMODE_LATEX) {\n            accumulator += print_str(\"}\");\n          }\n          return accumulator;\n        }\n      }\n      if (isfraction(exponent) && printMode === PRINTMODE_LATEX) {\n        accumulator += print_str(\"\\\\sqrt\");\n        push(exponent);\n        denominator();\n        denomExponent = pop();\n        if (!isplustwo(denomExponent)) {\n          accumulator += print_str(\"[\");\n          accumulator += print_expr(denomExponent);\n          accumulator += print_str(\"]\");\n        }\n        accumulator += print_str(\"{\");\n        push(exponent);\n        numerator();\n        numExponent = pop();\n        exponent = numExponent;\n        accumulator += print_power(base, exponent);\n        accumulator += print_str(\"}\");\n        return accumulator;\n      }\n    }\n    if (printMode === PRINTMODE_LATEX && isplusone(exponent)) {\n      // if we are in latex mode we turn many\n      // radicals into a radix sign with a power\n      // underneath, and the power is often one\n      // (e.g. square root turns into a radical\n      // with a power one underneath) so handle\n      // this case simply here, just print the base\n      accumulator += print_expr(base);\n    } else {\n      // print the base,\n      // determining if it needs to be\n      // wrapped in parentheses or not\n      if (isadd(base) || isnegativenumber(base)) {\n        accumulator += print_str('(');\n        accumulator += print_expr(base);\n        accumulator += print_str(')');\n      } else if (car(base) === symbol(MULTIPLY) || car(base) === symbol(POWER)) {\n        if (printMode !== PRINTMODE_LATEX) {\n          accumulator += print_str('(');\n        }\n        accumulator += print_factor(base, true);\n        if (printMode !== PRINTMODE_LATEX) {\n          accumulator += print_str(')');\n        }\n      } else if (isNumericAtom(base) && (lessp(base, zero) || isfraction(base))) {\n        accumulator += print_str('(');\n        accumulator += print_factor(base);\n        accumulator += print_str(')');\n      } else {\n        accumulator += print_factor(base);\n      }\n      // print the power symbol\n      //debugger\n      if (printMode === PRINTMODE_HUMAN && !test_flag) {\n        //print_str(\" ^ \")\n        accumulator += print_str(power_str);\n      } else {\n        accumulator += print_str(\"^\");\n      }\n      // print the exponent\n      if (printMode === PRINTMODE_LATEX) {\n        // in latex mode, one can omit the curly braces\n        // wrapping the exponent if the exponent is only\n        // one character long\n        if (print_expr(exponent).length > 1) {\n          accumulator += print_str(\"{\");\n          accumulator += print_expr(exponent);\n          accumulator += print_str(\"}\");\n        } else {\n          accumulator += print_expr(exponent);\n        }\n      } else if (iscons(exponent) || isfraction(exponent) || (isNumericAtom(exponent) && lessp(exponent, zero))) {\n        accumulator += print_str('(');\n        accumulator += print_expr(exponent);\n        accumulator += print_str(')');\n      } else {\n        accumulator += print_factor(exponent);\n      }\n    }\n    return accumulator;\n  };\n\n  print_index_function = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    p = cdr(p);\n    if (caar(p) === symbol(ADD) || caar(p) === symbol(MULTIPLY) || caar(p) === symbol(POWER) || caar(p) === symbol(FACTORIAL)) {\n      accumulator += print_subexpr(car(p));\n    } else {\n      accumulator += print_expr(car(p));\n    }\n    accumulator += print_str('[');\n    p = cdr(p);\n    if (iscons(p)) {\n      accumulator += print_expr(car(p));\n      p = cdr(p);\n      while (iscons(p)) {\n        accumulator += print_str(',');\n        accumulator += print_expr(car(p));\n        p = cdr(p);\n      }\n    }\n    accumulator += print_str(']');\n    return accumulator;\n  };\n\n  print_factor = function(p, omitParens, pastFirstFactor) {\n    var accumulator, base, exponent, fbody, parameters, returned;\n    // debugger\n    accumulator = \"\";\n    if (isNumericAtom(p)) {\n      // in an evaluated term, all the numeric parts\n      // are at the beginning of the term.\n      // When printing the EXPRESSION,\n      // we peek into the first factor of the term and we\n      // look at whether it's a number less then zero.\n      // if it is, we print the \"-\" as the \"leading\" part of the\n      // print of the EXPRESSION, and then we proceed printint the factors\n      // of the term. This means that when we come here, we must\n      // skip printing the minus if the number is negative,\n      // because it's already been printed.\n      if (pastFirstFactor && lessp(p, zero)) {\n        accumulator += '(';\n      }\n      accumulator += print_number(p, pastFirstFactor);\n      if (pastFirstFactor && lessp(p, zero)) {\n        accumulator += ')';\n      }\n      return accumulator;\n    }\n    if (isstr(p)) {\n      accumulator += print_str(\"\\\"\");\n      accumulator += print_str(p.str);\n      accumulator += print_str(\"\\\"\");\n      return accumulator;\n    }\n    if (istensor(p)) {\n      if (printMode === PRINTMODE_LATEX) {\n        accumulator += print_tensor_latex(p);\n      } else {\n        accumulator += print_tensor(p);\n      }\n      return accumulator;\n    }\n    if (car(p) === symbol(MULTIPLY)) {\n      if (!omitParens) {\n        if (sign_of_term(p) === '-' || printMode !== PRINTMODE_LATEX) {\n          if (printMode === PRINTMODE_LATEX) {\n            accumulator += print_str(\" \\\\left (\");\n          } else {\n            accumulator += print_str('(');\n          }\n        }\n      }\n      accumulator += print_expr(p);\n      if (!omitParens) {\n        if (sign_of_term(p) === '-' || printMode !== PRINTMODE_LATEX) {\n          if (printMode === PRINTMODE_LATEX) {\n            accumulator += print_str(\" \\\\right ) \");\n          } else {\n            accumulator += print_str(')');\n          }\n        }\n      }\n      return accumulator;\n    } else if (isadd(p)) {\n      if (!omitParens) {\n        accumulator += print_str('(');\n      }\n      accumulator += print_expr(p);\n      if (!omitParens) {\n        accumulator += print_str(')');\n      }\n      return accumulator;\n    }\n    if (car(p) === symbol(POWER)) {\n      base = cadr(p);\n      exponent = caddr(p);\n      accumulator += print_power(base, exponent);\n      return accumulator;\n    }\n    //  if (car(p) == _list) {\n    //    print_str(\"{\")\n    //    p = cdr(p)\n    //    if (iscons(p)) {\n    //      print_expr(car(p))\n    //      p = cdr(p)\n    //    }\n    //    while (iscons(p)) {\n    //      print_str(\",\")\n    //      print_expr(car(p))\n    //      p = cdr(p)\n    //    }\n    //    print_str(\"}\")\n    //    return\n    //  }\n    if (car(p) === symbol(FUNCTION)) {\n      fbody = cadr(p);\n      if (!codeGen) {\n        parameters = caddr(p);\n        accumulator += print_str(\"function \");\n        if (DEBUG) {\n          console.log(\"emittedString from print_factor \" + stringsEmittedByUserPrintouts);\n        }\n        returned = print_list(parameters);\n        accumulator += returned;\n        accumulator += print_str(\" -> \");\n      }\n      accumulator += print_expr(fbody);\n      return accumulator;\n    }\n    if (car(p) === symbol(PATTERN)) {\n      accumulator += print_expr(caadr(p));\n      if (printMode === PRINTMODE_LATEX) {\n        accumulator += print_str(\" \\\\rightarrow \");\n      } else {\n        if (printMode === PRINTMODE_HUMAN && !test_flag) {\n          accumulator += print_str(\" -> \");\n        } else {\n          accumulator += print_str(\"->\");\n        }\n      }\n      accumulator += print_expr(car(cdr(cadr(p))));\n      return accumulator;\n    }\n    if (car(p) === symbol(INDEX) && issymbol(cadr(p))) {\n      accumulator += print_index_function(p);\n      return accumulator;\n    }\n    if (car(p) === symbol(FACTORIAL)) {\n      accumulator += print_factorial_function(p);\n      return accumulator;\n    } else if (car(p) === symbol(ABS) && printMode === PRINTMODE_LATEX) {\n      accumulator += print_ABS_latex(p);\n      return accumulator;\n    } else if (car(p) === symbol(SQRT) && printMode === PRINTMODE_LATEX) {\n      //debugger\n      accumulator += print_SQRT_latex(p);\n      return accumulator;\n    } else if (car(p) === symbol(TRANSPOSE)) {\n      if (printMode === PRINTMODE_LATEX) {\n        accumulator += print_TRANSPOSE_latex(p);\n        return accumulator;\n      } else if (codeGen) {\n        accumulator += print_TRANSPOSE_codegen(p);\n        return accumulator;\n      }\n    } else if (car(p) === symbol(UNIT)) {\n      if (codeGen) {\n        accumulator += print_UNIT_codegen(p);\n        return accumulator;\n      }\n    } else if (car(p) === symbol(INV)) {\n      if (printMode === PRINTMODE_LATEX) {\n        accumulator += print_INV_latex(p);\n        return accumulator;\n      } else if (codeGen) {\n        accumulator += print_INV_codegen(p);\n        return accumulator;\n      }\n    } else if (car(p) === symbol(BINOMIAL) && printMode === PRINTMODE_LATEX) {\n      accumulator += print_BINOMIAL_latex(p);\n      return accumulator;\n    } else if (car(p) === symbol(DEFINT) && printMode === PRINTMODE_LATEX) {\n      accumulator += print_DEFINT_latex(p);\n      return accumulator;\n    } else if (isinnerordot(p)) {\n      if (printMode === PRINTMODE_LATEX) {\n        accumulator += print_DOT_latex(p);\n        return accumulator;\n      } else if (codeGen) {\n        accumulator += print_DOT_codegen(p);\n        return accumulator;\n      }\n    } else if (car(p) === symbol(SIN)) {\n      if (codeGen) {\n        accumulator += print_SIN_codegen(p);\n        return accumulator;\n      }\n    } else if (car(p) === symbol(COS)) {\n      if (codeGen) {\n        accumulator += print_COS_codegen(p);\n        return accumulator;\n      }\n    } else if (car(p) === symbol(TAN)) {\n      if (codeGen) {\n        accumulator += print_TAN_codegen(p);\n        return accumulator;\n      }\n    } else if (car(p) === symbol(ARCSIN)) {\n      if (codeGen) {\n        accumulator += print_ARCSIN_codegen(p);\n        return accumulator;\n      }\n    } else if (car(p) === symbol(ARCCOS)) {\n      if (codeGen) {\n        accumulator += print_ARCCOS_codegen(p);\n        return accumulator;\n      }\n    } else if (car(p) === symbol(ARCTAN)) {\n      if (codeGen) {\n        accumulator += print_ARCTAN_codegen(p);\n        return accumulator;\n      }\n    } else if (car(p) === symbol(SUM)) {\n      if (printMode === PRINTMODE_LATEX) {\n        accumulator += print_SUM_latex(p);\n        return accumulator;\n      } else if (codeGen) {\n        accumulator += print_SUM_codegen(p);\n        return accumulator;\n      }\n    //else if car(p) == symbol(QUOTE)\n    //  if printMode == PRINTMODE_LATEX\n    //    print_expr(cadr(p))\n    //    return accumulator\n    } else if (car(p) === symbol(PRODUCT)) {\n      if (printMode === PRINTMODE_LATEX) {\n        accumulator += print_PRODUCT_latex(p);\n        return accumulator;\n      } else if (codeGen) {\n        accumulator += print_PRODUCT_codegen(p);\n        return accumulator;\n      }\n    } else if (car(p) === symbol(FOR)) {\n      if (codeGen) {\n        accumulator += print_FOR_codegen(p);\n        return accumulator;\n      }\n    } else if (car(p) === symbol(DO)) {\n      if (codeGen) {\n        accumulator += print_DO_codegen(p);\n        return accumulator;\n      }\n    } else if (car(p) === symbol(TEST)) {\n      if (codeGen) {\n        accumulator += print_TEST_codegen(p);\n        return accumulator;\n      }\n      if (printMode === PRINTMODE_LATEX) {\n        accumulator += print_TEST_latex(p);\n        return accumulator;\n      }\n    } else if (car(p) === symbol(TESTLT)) {\n      if (codeGen) {\n        accumulator += \"((\" + print_expr(cadr(p)) + \") < (\" + print_expr(caddr(p)) + \"))\";\n        return accumulator;\n      }\n      if (printMode === PRINTMODE_LATEX) {\n        accumulator += print_TESTLT_latex(p);\n        return accumulator;\n      }\n    } else if (car(p) === symbol(TESTLE)) {\n      if (codeGen) {\n        accumulator += \"((\" + print_expr(cadr(p)) + \") <= (\" + print_expr(caddr(p)) + \"))\";\n        return accumulator;\n      }\n      if (printMode === PRINTMODE_LATEX) {\n        accumulator += print_TESTLE_latex(p);\n        return accumulator;\n      }\n    } else if (car(p) === symbol(TESTGT)) {\n      if (codeGen) {\n        accumulator += \"((\" + print_expr(cadr(p)) + \") > (\" + print_expr(caddr(p)) + \"))\";\n        return accumulator;\n      }\n      if (printMode === PRINTMODE_LATEX) {\n        accumulator += print_TESTGT_latex(p);\n        return accumulator;\n      }\n    } else if (car(p) === symbol(TESTGE)) {\n      if (codeGen) {\n        accumulator += \"((\" + print_expr(cadr(p)) + \") >= (\" + print_expr(caddr(p)) + \"))\";\n        return accumulator;\n      }\n      if (printMode === PRINTMODE_LATEX) {\n        accumulator += print_TESTGE_latex(p);\n        return accumulator;\n      }\n    } else if (car(p) === symbol(TESTEQ)) {\n      if (codeGen) {\n        accumulator += \"((\" + print_expr(cadr(p)) + \") === (\" + print_expr(caddr(p)) + \"))\";\n        return accumulator;\n      }\n      if (printMode === PRINTMODE_LATEX) {\n        accumulator += print_TESTEQ_latex(p);\n        return accumulator;\n      }\n    } else if (car(p) === symbol(FLOOR)) {\n      if (codeGen) {\n        accumulator += \"Math.floor(\" + print_expr(cadr(p)) + \")\";\n        return accumulator;\n      }\n      if (printMode === PRINTMODE_LATEX) {\n        accumulator += \" \\\\lfloor {\" + print_expr(cadr(p)) + \"} \\\\rfloor \";\n        return accumulator;\n      }\n    } else if (car(p) === symbol(CEILING)) {\n      if (codeGen) {\n        accumulator += \"Math.ceiling(\" + print_expr(cadr(p)) + \")\";\n        return accumulator;\n      }\n      if (printMode === PRINTMODE_LATEX) {\n        accumulator += \" \\\\lceil {\" + print_expr(cadr(p)) + \"} \\\\rceil \";\n        return accumulator;\n      }\n    } else if (car(p) === symbol(ROUND)) {\n      if (codeGen) {\n        accumulator += \"Math.round(\" + print_expr(cadr(p)) + \")\";\n        return accumulator;\n      }\n    } else if (car(p) === symbol(SETQ)) {\n      if (codeGen) {\n        accumulator += print_SETQ_codegen(p);\n        return accumulator;\n      } else {\n        accumulator += print_expr(cadr(p));\n        accumulator += print_str(\"=\");\n        accumulator += print_expr(caddr(p));\n        return accumulator;\n      }\n    }\n    if (iscons(p)) {\n      //if (car(p) == symbol(FORMAL) && cadr(p)->k == SYM) {\n      //  print_str(((struct symbol *) cadr(p))->name)\n      //  return\n      //}\n      accumulator += print_factor(car(p));\n      p = cdr(p);\n      if (!omitParens) {\n        accumulator += print_str('(');\n      }\n      if (iscons(p)) {\n        accumulator += print_expr(car(p));\n        p = cdr(p);\n        while (iscons(p)) {\n          accumulator += print_str(\",\");\n          accumulator += print_expr(car(p));\n          p = cdr(p);\n        }\n      }\n      if (!omitParens) {\n        accumulator += print_str(')');\n      }\n      return accumulator;\n    }\n    if (p === symbol(DERIVATIVE)) {\n      accumulator += print_char('d');\n    } else if (p === symbol(E)) {\n      if (codeGen) {\n        accumulator += print_str(\"Math.E\");\n      } else {\n        accumulator += print_str(\"e\");\n      }\n    } else if (p === symbol(PI)) {\n      if (printMode === PRINTMODE_LATEX) {\n        accumulator += print_str(\"\\\\pi\");\n      } else {\n        accumulator += print_str(\"pi\");\n      }\n    } else {\n      accumulator += print_str(get_printname(p));\n    }\n    return accumulator;\n  };\n\n  print_list = function(p) {\n    var accumulator;\n    accumulator = \"\";\n    switch (p.k) {\n      case CONS:\n        accumulator += '(';\n        accumulator += print_list(car(p));\n        if (p === cdr(p) && p !== symbol(NIL)) {\n          console.log(\"oh no recursive!\");\n          debugger;\n        }\n        p = cdr(p);\n        while (iscons(p)) {\n          accumulator += \" \";\n          accumulator += print_list(car(p));\n          p = cdr(p);\n          if (p === cdr(p) && p !== symbol(NIL)) {\n            console.log(\"oh no recursive!\");\n            debugger;\n          }\n        }\n        if (p !== symbol(NIL)) {\n          accumulator += \" . \";\n          accumulator += print_list(p);\n        }\n        accumulator += ')';\n        break;\n      case STR:\n        //print_str(\"\\\"\")\n        accumulator += p.str;\n        break;\n      //print_str(\"\\\"\")\n      case NUM:\n      case DOUBLE:\n        accumulator += print_number(p, true);\n        break;\n      case SYM:\n        accumulator += get_printname(p);\n        break;\n      default:\n        accumulator += \"<tensor>\";\n    }\n    return accumulator;\n  };\n\n  print_multiply_sign = function() {\n    var accumulator;\n    accumulator = \"\";\n    if (printMode === PRINTMODE_LATEX) {\n      if (printMode === PRINTMODE_HUMAN && !test_flag) {\n        accumulator += print_str(\" \");\n      } else {\n        return accumulator;\n      }\n    }\n    if (printMode === PRINTMODE_HUMAN && !test_flag && !codeGen) {\n      accumulator += print_str(\" \");\n    } else {\n      accumulator += print_str(\"*\");\n    }\n    return accumulator;\n  };\n\n  is_denominator = function(p) {\n    if (car(p) === symbol(POWER) && cadr(p) !== symbol(E) && isnegativeterm(caddr(p))) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  // don't consider the leading fraction\n  // we want 2/3*a*b*c instead of 2*a*b*c/3\n  any_denominators = function(p) {\n    var q;\n    p = cdr(p);\n    //  if (isfraction(car(p)))\n    //    return 1\n    while (iscons(p)) {\n      q = car(p);\n      if (is_denominator(q)) {\n        return 1;\n      }\n      p = cdr(p);\n    }\n    return 0;\n  };\n\n  /*\n\n  Prints in \"2d\", e.g. instead of 1/(x+1)^2 :\n\n        1\n   ----------\n           2\n    (1 + x)\n\n   Note that although this looks more natural, a) it's not parsable and\n   b) it can be occasionally be ambiguous, such as:\n\n     1\n   ----\n     2\n   x\n\n  is 1/x^2 but it also looks a little like x^(1/2)\n\n  */\n  //-----------------------------------------------------------------------------\n\n  //  Examples:\n\n  //     012345678\n  //  -2 .........\n  //  -1 .........\n  //   0 ..hello..  x=2, y=0, h=1, w=5\n  //   1 .........\n  //   2 .........\n\n  //     012345678\n  //  -2 .........\n  //  -1 ..355....\n  //   0 ..---....  x=2, y=-1, h=3, w=3\n  //   1 ..113....\n  //   2 .........\n\n  //-----------------------------------------------------------------------------\n  YMAX = 10000;\n\n  glyph = (function() {\n    class glyph {};\n\n    glyph.prototype.c = 0;\n\n    glyph.prototype.x = 0;\n\n    glyph.prototype.y = 0;\n\n    return glyph;\n\n  }).call(this);\n\n  // will contain glyphs\n  chartab = [];\n\n  for (charTabIndex = i1 = 0, ref1 = YMAX; (0 <= ref1 ? i1 < ref1 : i1 > ref1); charTabIndex = 0 <= ref1 ? ++i1 : --i1) {\n    chartab[charTabIndex] = new glyph();\n  }\n\n  yindex = 0;\n\n  level = 0;\n\n  emit_x = 0;\n\n  expr_level = 0;\n\n  display_flag = 0;\n\n  // this is not really the translated version,\n  // the original is in window.cpp and is\n  // rather more complex\n  printchar_nowrap = function(character) {\n    var accumulator;\n    accumulator = \"\";\n    accumulator += character;\n    return accumulator;\n  };\n\n  printchar = function(character) {\n    return printchar_nowrap(character);\n  };\n\n  print2dascii = function(p) {\n    var beenPrinted, h, w, y;\n    h = 0;\n    w = 0;\n    y = 0;\n    save();\n    yindex = 0;\n    level = 0;\n    emit_x = 0;\n    emit_top_expr(p);\n    // if too wide then print flat\n    [h, w, y] = get_size(0, yindex);\n    if (w > 100) {\n      printline(p);\n      restore();\n      return;\n    }\n    beenPrinted = print_glyphs();\n    restore();\n    return beenPrinted;\n  };\n\n  emit_top_expr = function(p) {\n    if (car(p) === symbol(SETQ)) {\n      emit_expr(cadr(p));\n      __emit_str(\" = \");\n      emit_expr(caddr(p));\n      return;\n    }\n    if (istensor(p)) {\n      return emit_tensor(p);\n    } else {\n      return emit_expr(p);\n    }\n  };\n\n  will_be_displayed_as_fraction = function(p) {\n    if (level > 0) {\n      return 0;\n    }\n    if (isfraction(p)) {\n      return 1;\n    }\n    if (car(p) !== symbol(MULTIPLY)) {\n      return 0;\n    }\n    if (isfraction(cadr(p))) {\n      return 1;\n    }\n    while (iscons(p)) {\n      if (isdenominator(car(p))) {\n        return 1;\n      }\n      p = cdr(p);\n    }\n    return 0;\n  };\n\n  emit_expr = function(p) {\n    //  if (level > 0) {\n    //    printexpr(p)\n    //    return\n    //  }\n    expr_level++;\n    if (car(p) === symbol(ADD)) {\n      p = cdr(p);\n      if (__is_negative(car(p))) {\n        __emit_char('-');\n        if (will_be_displayed_as_fraction(car(p))) {\n          __emit_char(' ');\n        }\n      }\n      emit_term(car(p));\n      p = cdr(p);\n      while (iscons(p)) {\n        if (__is_negative(car(p))) {\n          __emit_char(' ');\n          __emit_char('-');\n          __emit_char(' ');\n        } else {\n          __emit_char(' ');\n          __emit_char('+');\n          __emit_char(' ');\n        }\n        emit_term(car(p));\n        p = cdr(p);\n      }\n    } else {\n      if (__is_negative(p)) {\n        __emit_char('-');\n        if (will_be_displayed_as_fraction(p)) {\n          __emit_char(' ');\n        }\n      }\n      emit_term(p);\n    }\n    return expr_level--;\n  };\n\n  emit_unsigned_expr = function(p) {\n    var results;\n    if (car(p) === symbol(ADD)) {\n      p = cdr(p);\n      //    if (__is_negative(car(p)))\n      //      __emit_char('-')\n      emit_term(car(p));\n      p = cdr(p);\n      results = [];\n      while (iscons(p)) {\n        if (__is_negative(car(p))) {\n          __emit_char(' ');\n          __emit_char('-');\n          __emit_char(' ');\n        } else {\n          __emit_char(' ');\n          __emit_char('+');\n          __emit_char(' ');\n        }\n        emit_term(car(p));\n        results.push(p = cdr(p));\n      }\n      return results;\n    } else {\n      //    if (__is_negative(p))\n      //      __emit_char('-')\n      return emit_term(p);\n    }\n  };\n\n  __is_negative = function(p) {\n    if (isnegativenumber(p)) {\n      return 1;\n    }\n    if (car(p) === symbol(MULTIPLY) && isnegativenumber(cadr(p))) {\n      return 1;\n    }\n    return 0;\n  };\n\n  emit_term = function(p) {\n    var n;\n    if (car(p) === symbol(MULTIPLY)) {\n      n = count_denominators(p);\n      if (n && level === 0) {\n        return emit_fraction(p, n);\n      } else {\n        return emit_multiply(p, n);\n      }\n    } else {\n      return emit_factor(p);\n    }\n  };\n\n  isdenominator = function(p) {\n    if (car(p) === symbol(POWER) && cadr(p) !== symbol(E) && __is_negative(caddr(p))) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  count_denominators = function(p) {\n    var count, q;\n    count = 0;\n    p = cdr(p);\n    //  if (isfraction(car(p))) {\n    //    count++\n    //    p = cdr(p)\n    //  }\n    while (iscons(p)) {\n      q = car(p);\n      if (isdenominator(q)) {\n        count++;\n      }\n      p = cdr(p);\n    }\n    return count;\n  };\n\n  // n is the number of denominators, not counting a fraction like 1/2\n  emit_multiply = function(p, n) {\n    var results;\n    if (n === 0) {\n      p = cdr(p);\n      if (isplusone(car(p)) || isminusone(car(p))) {\n        p = cdr(p);\n      }\n      emit_factor(car(p));\n      p = cdr(p);\n      results = [];\n      while (iscons(p)) {\n        __emit_char(' ');\n        emit_factor(car(p));\n        results.push(p = cdr(p));\n      }\n      return results;\n    } else {\n      emit_numerators(p);\n      __emit_char('/');\n      // need grouping if more than one denominator\n      if (n > 1 || isfraction(cadr(p))) {\n        __emit_char('(');\n        emit_denominators(p);\n        return __emit_char(')');\n      } else {\n        return emit_denominators(p);\n      }\n    }\n  };\n\n  //define A p3\n  //define B p4\n\n  // sign of term has already been emitted\n  emit_fraction = function(p, d) {\n    var count, doNothing, k1, k2, n, x;\n    count = 0;\n    k1 = 0;\n    k2 = 0;\n    n = 0;\n    x = 0;\n    save();\n    p3 = one;\n    p4 = one;\n    if (isrational(cadr(p))) {\n      push(cadr(p));\n      mp_numerator();\n      absval();\n      p3 = pop();\n      push(cadr(p));\n      mp_denominator();\n      p4 = pop(); // p4 is B\n    }\n    if (isdouble(cadr(p))) {\n      push(cadr(p));\n      absval();\n      p3 = pop(); // p3 is A\n    }\n    \n    // count numerators\n    if (isplusone(p3)) { // p3 is A\n      n = 0;\n    } else {\n      n = 1;\n    }\n    p1 = cdr(p);\n    if (isNumericAtom(car(p1))) {\n      p1 = cdr(p1);\n    }\n    while (iscons(p1)) {\n      p2 = car(p1);\n      if (isdenominator(p2)) {\n        doNothing = 1;\n      } else {\n        n++;\n      }\n      p1 = cdr(p1);\n    }\n    // emit numerators\n    x = emit_x;\n    k1 = yindex;\n    count = 0;\n    if (!isplusone(p3)) { // p3 is A\n      emit_number(p3, 0);\n      count++;\n    }\n    // skip over \"multiply\"\n    p1 = cdr(p);\n    // skip over numerical coefficient, already handled\n    if (isNumericAtom(car(p1))) {\n      p1 = cdr(p1);\n    }\n    while (iscons(p1)) {\n      p2 = car(p1);\n      if (isdenominator(p2)) {\n        doNothing = 1;\n      } else {\n        if (count > 0) {\n          __emit_char(' ');\n        }\n        if (n === 1) {\n          emit_expr(p2);\n        } else {\n          emit_factor(p2);\n        }\n        count++;\n      }\n      p1 = cdr(p1);\n    }\n    if (count === 0) {\n      __emit_char('1');\n    }\n    // emit denominators\n    k2 = yindex;\n    count = 0;\n    if (!isplusone(p4)) { // p4 is B\n      emit_number(p4, 0);\n      count++;\n      d++;\n    }\n    p1 = cdr(p);\n    if (isrational(car(p1))) {\n      p1 = cdr(p1);\n    }\n    while (iscons(p1)) {\n      p2 = car(p1);\n      if (isdenominator(p2)) {\n        if (count > 0) {\n          __emit_char(' ');\n        }\n        emit_denominator(p2, d);\n        count++;\n      }\n      p1 = cdr(p1);\n    }\n    fixup_fraction(x, k1, k2);\n    return restore();\n  };\n\n  // p points to a multiply\n  emit_numerators = function(p) {\n    var doNothing, n;\n    save();\n    n = 0;\n    p1 = one;\n    p = cdr(p);\n    if (isrational(car(p))) {\n      push(car(p));\n      mp_numerator();\n      absval();\n      p1 = pop();\n      p = cdr(p);\n    } else if (isdouble(car(p))) {\n      push(car(p));\n      absval();\n      p1 = pop();\n      p = cdr(p);\n    }\n    n = 0;\n    if (!isplusone(p1)) {\n      emit_number(p1, 0);\n      n++;\n    }\n    while (iscons(p)) {\n      if (isdenominator(car(p))) {\n        doNothing = 1;\n      } else {\n        if (n > 0) {\n          __emit_char(' ');\n        }\n        emit_factor(car(p));\n        n++;\n      }\n      p = cdr(p);\n    }\n    if (n === 0) {\n      __emit_char('1');\n    }\n    return restore();\n  };\n\n  // p points to a multiply\n  emit_denominators = function(p) {\n    var n;\n    save();\n    n = 0;\n    p = cdr(p);\n    if (isfraction(car(p))) {\n      push(car(p));\n      mp_denominator();\n      p1 = pop();\n      emit_number(p1, 0);\n      n++;\n      p = cdr(p);\n    }\n    while (iscons(p)) {\n      if (isdenominator(car(p))) {\n        if (n > 0) {\n          __emit_char(' ');\n        }\n        emit_denominator(car(p), 0);\n        n++;\n      }\n      p = cdr(p);\n    }\n    return restore();\n  };\n\n  emit_factor = function(p) {\n    if (istensor(p)) {\n      if (level === 0) {\n        //emit_tensor(p)\n        emit_flat_tensor(p);\n      } else {\n        emit_flat_tensor(p);\n      }\n      return;\n    }\n    if (isdouble(p)) {\n      emit_number(p, 0);\n      return;\n    }\n    if (car(p) === symbol(ADD) || car(p) === symbol(MULTIPLY)) {\n      emit_subexpr(p);\n      return;\n    }\n    if (car(p) === symbol(POWER)) {\n      emit_power(p);\n      return;\n    }\n    if (iscons(p)) {\n      //if (car(p) == symbol(FORMAL) && cadr(p).k == SYM)\n      //  emit_symbol(cadr(p))\n      //else\n      emit_function(p);\n      return;\n    }\n    if (isNumericAtom(p)) {\n      if (level === 0) {\n        emit_numerical_fraction(p);\n      } else {\n        emit_number(p, 0);\n      }\n      return;\n    }\n    if (issymbol(p)) {\n      emit_symbol(p);\n      return;\n    }\n    if (isstr(p)) {\n      emit_string(p);\n    }\n  };\n\n  emit_numerical_fraction = function(p) {\n    var k1, k2, x;\n    k1 = 0;\n    k2 = 0;\n    x = 0;\n    save();\n    push(p);\n    mp_numerator();\n    absval();\n    p3 = pop();\n    push(p);\n    mp_denominator();\n    p4 = pop();\n    if (isplusone(p4)) { // p4 is B\n      emit_number(p3, 0);\n      restore();\n      return;\n    }\n    x = emit_x;\n    k1 = yindex;\n    emit_number(p3, 0);\n    k2 = yindex;\n    emit_number(p4, 0); // p4 is B\n    fixup_fraction(x, k1, k2);\n    return restore();\n  };\n\n  // if it's a factor then it doesn't need parens around it, i.e. 1/sin(theta)^2\n  isfactor = function(p) {\n    if (iscons(p) && car(p) !== symbol(ADD) && car(p) !== symbol(MULTIPLY) && car(p) !== symbol(POWER)) {\n      return 1;\n    }\n    if (issymbol(p)) {\n      return 1;\n    }\n    if (isfraction(p)) {\n      return 0;\n    }\n    if (isnegativenumber(p)) {\n      return 0;\n    }\n    if (isNumericAtom(p)) {\n      return 1;\n    }\n    return 0;\n  };\n\n  emit_power = function(p) {\n    var k1, k2, x;\n    k1 = 0;\n    k2 = 0;\n    x = 0;\n    if (cadr(p) === symbol(E)) {\n      __emit_str(\"exp(\");\n      emit_expr(caddr(p));\n      __emit_char(')');\n      return;\n    }\n    if (level > 0) {\n      if (isminusone(caddr(p))) {\n        __emit_char('1');\n        __emit_char('/');\n        if (isfactor(cadr(p))) {\n          emit_factor(cadr(p));\n        } else {\n          emit_subexpr(cadr(p));\n        }\n      } else {\n        if (isfactor(cadr(p))) {\n          emit_factor(cadr(p));\n        } else {\n          emit_subexpr(cadr(p));\n        }\n        __emit_char('^');\n        if (isfactor(caddr(p))) {\n          emit_factor(caddr(p));\n        } else {\n          emit_subexpr(caddr(p));\n        }\n      }\n      return;\n    }\n    // special case: 1 over something\n    if (__is_negative(caddr(p))) {\n      x = emit_x;\n      k1 = yindex;\n      __emit_char('1');\n      k2 = yindex;\n      //level++\n      emit_denominator(p, 1);\n      //level--\n      fixup_fraction(x, k1, k2);\n      return;\n    }\n    k1 = yindex;\n    if (isfactor(cadr(p))) {\n      emit_factor(cadr(p));\n    } else {\n      emit_subexpr(cadr(p));\n    }\n    k2 = yindex;\n    level++;\n    emit_expr(caddr(p));\n    level--;\n    return fixup_power(k1, k2);\n  };\n\n  // if n == 1 then emit as expr (no parens)\n\n  // p is a power\n  emit_denominator = function(p, n) {\n    var k1, k2;\n    k1 = 0;\n    k2 = 0;\n    // special case: 1 over something\n    if (isminusone(caddr(p))) {\n      if (n === 1) {\n        emit_expr(cadr(p));\n      } else {\n        emit_factor(cadr(p));\n      }\n      return;\n    }\n    k1 = yindex;\n    // emit base\n    if (isfactor(cadr(p))) {\n      emit_factor(cadr(p));\n    } else {\n      emit_subexpr(cadr(p));\n    }\n    k2 = yindex;\n    // emit exponent, don't emit minus sign\n    level++;\n    emit_unsigned_expr(caddr(p));\n    level--;\n    return fixup_power(k1, k2);\n  };\n\n  emit_function = function(p) {\n    if (car(p) === symbol(INDEX) && issymbol(cadr(p))) {\n      emit_index_function(p);\n      return;\n    }\n    if (car(p) === symbol(FACTORIAL)) {\n      emit_factorial_function(p);\n      return;\n    }\n    if (car(p) === symbol(DERIVATIVE)) {\n      __emit_char('d');\n    } else {\n      emit_symbol(car(p));\n    }\n    __emit_char('(');\n    p = cdr(p);\n    if (iscons(p)) {\n      emit_expr(car(p));\n      p = cdr(p);\n      while (iscons(p)) {\n        __emit_char(',');\n        //__emit_char(' ')\n        emit_expr(car(p));\n        p = cdr(p);\n      }\n    }\n    return __emit_char(')');\n  };\n\n  emit_index_function = function(p) {\n    p = cdr(p);\n    if (caar(p) === symbol(ADD) || caar(p) === symbol(MULTIPLY) || caar(p) === symbol(POWER) || caar(p) === symbol(FACTORIAL)) {\n      emit_subexpr(car(p));\n    } else {\n      emit_expr(car(p));\n    }\n    __emit_char('[');\n    p = cdr(p);\n    if (iscons(p)) {\n      emit_expr(car(p));\n      p = cdr(p);\n      while (iscons(p)) {\n        __emit_char(',');\n        emit_expr(car(p));\n        p = cdr(p);\n      }\n    }\n    return __emit_char(']');\n  };\n\n  emit_factorial_function = function(p) {\n    p = cadr(p);\n    if (isfraction(p) || car(p) === symbol(ADD) || car(p) === symbol(MULTIPLY) || car(p) === symbol(POWER) || car(p) === symbol(FACTORIAL)) {\n      emit_subexpr(p);\n    } else {\n      emit_expr(p);\n    }\n    return __emit_char('!');\n  };\n\n  emit_subexpr = function(p) {\n    __emit_char('(');\n    emit_expr(p);\n    return __emit_char(')');\n  };\n\n  emit_symbol = function(p) {\n    var i, j1, pPrintName, ref2, results;\n    i = 0;\n    if (p === symbol(E)) {\n      __emit_str(\"exp(1)\");\n      return;\n    }\n    pPrintName = get_printname(p);\n    results = [];\n    for (i = j1 = 0, ref2 = pPrintName.length; (0 <= ref2 ? j1 < ref2 : j1 > ref2); i = 0 <= ref2 ? ++j1 : --j1) {\n      results.push(__emit_char(pPrintName[i]));\n    }\n    return results;\n  };\n\n  emit_string = function(p) {\n    var i, j1, pString, ref2;\n    i = 0;\n    pString = p.str;\n    __emit_char('\"');\n    for (i = j1 = 0, ref2 = pString.length; (0 <= ref2 ? j1 < ref2 : j1 > ref2); i = 0 <= ref2 ? ++j1 : --j1) {\n      __emit_char(pString[i]);\n    }\n    return __emit_char('\"');\n  };\n\n  fixup_fraction = function(x, k1, k2) {\n    var dx, dy, h1, h2, i, j1, ref2, results, w, w1, w2, y, y1, y2;\n    dx = 0;\n    dy = 0;\n    i = 0;\n    w = 0;\n    y = 0;\n    h1 = 0;\n    w1 = 0;\n    y1 = 0;\n    h2 = 0;\n    w2 = 0;\n    y2 = 0;\n    [h1, w1, y1] = get_size(k1, k2);\n    [h2, w2, y2] = get_size(k2, yindex);\n    if (w2 > w1) {\n      dx = (w2 - w1) / 2; // shift numerator right\n    } else {\n      dx = 0;\n    }\n    dx++;\n    // this is how much is below the baseline\n    y = y1 + h1 - 1;\n    dy = -y - 1;\n    move(k1, k2, dx, dy);\n    if (w2 > w1) {\n      dx = -w1;\n    } else {\n      dx = -w1 + (w1 - w2) / 2;\n    }\n    dx++;\n    dy = -y2 + 1;\n    move(k2, yindex, dx, dy);\n    if (w2 > w1) {\n      w = w2;\n    } else {\n      w = w1;\n    }\n    w += 2;\n    emit_x = x;\n    results = [];\n    for (i = j1 = 0, ref2 = w; (0 <= ref2 ? j1 < ref2 : j1 > ref2); i = 0 <= ref2 ? ++j1 : --j1) {\n      results.push(__emit_char('-'));\n    }\n    return results;\n  };\n\n  fixup_power = function(k1, k2) {\n    var dy, h1, h2, w1, w2, y1, y2;\n    dy = 0;\n    h1 = 0;\n    w1 = 0;\n    y1 = 0;\n    h2 = 0;\n    w2 = 0;\n    y2 = 0;\n    [h1, w1, y1] = get_size(k1, k2);\n    [h2, w2, y2] = get_size(k2, yindex);\n    // move superscript to baseline\n    dy = -y2 - h2 + 1;\n    // now move above base\n    dy += y1 - 1;\n    return move(k2, yindex, 0, dy);\n  };\n\n  move = function(j, k, dx, dy) {\n    var i, j1, ref2, ref3, results;\n    i = 0;\n    results = [];\n    for (i = j1 = ref2 = j, ref3 = k; (ref2 <= ref3 ? j1 < ref3 : j1 > ref3); i = ref2 <= ref3 ? ++j1 : --j1) {\n      chartab[i].x += dx;\n      results.push(chartab[i].y += dy);\n    }\n    return results;\n  };\n\n  // finds the bounding rectangle and vertical position\n  get_size = function(j, k) {\n    var h, i, j1, max_x, max_y, min_x, min_y, ref2, ref3, w, y;\n    i = 0;\n    min_x = chartab[j].x;\n    max_x = chartab[j].x;\n    min_y = chartab[j].y;\n    max_y = chartab[j].y;\n    for (i = j1 = ref2 = j + 1, ref3 = k; (ref2 <= ref3 ? j1 < ref3 : j1 > ref3); i = ref2 <= ref3 ? ++j1 : --j1) {\n      if (chartab[i].x < min_x) {\n        min_x = chartab[i].x;\n      }\n      if (chartab[i].x > max_x) {\n        max_x = chartab[i].x;\n      }\n      if (chartab[i].y < min_y) {\n        min_y = chartab[i].y;\n      }\n      if (chartab[i].y > max_y) {\n        max_y = chartab[i].y;\n      }\n    }\n    h = max_y - min_y + 1;\n    w = max_x - min_x + 1;\n    y = min_y;\n    return [h, w, y];\n  };\n\n  displaychar = function(c) {\n    return __emit_char(c);\n  };\n\n  __emit_char = function(c) {\n    if (yindex === YMAX) {\n      return;\n    }\n    if (chartab[yindex] == null) {\n      debugger;\n    }\n    chartab[yindex].c = c;\n    chartab[yindex].x = emit_x;\n    chartab[yindex].y = 0;\n    yindex++;\n    return emit_x++;\n  };\n\n  __emit_str = function(s) {\n    var i, j1, ref2, results;\n    i = 0;\n    results = [];\n    for (i = j1 = 0, ref2 = s.length; (0 <= ref2 ? j1 < ref2 : j1 > ref2); i = 0 <= ref2 ? ++j1 : --j1) {\n      results.push(__emit_char(s[i]));\n    }\n    return results;\n  };\n\n  emit_number = function(p, emit_sign) {\n    var i, j1, l1, m1, ref2, ref3, ref4, results, results1, tmpString;\n    tmpString = \"\";\n    i = 0;\n    switch (p.k) {\n      case NUM:\n        tmpString = p.q.a.toString();\n        if (tmpString[0] === '-' && emit_sign === 0) {\n          tmpString = tmpString.substring(1);\n        }\n        for (i = j1 = 0, ref2 = tmpString.length; (0 <= ref2 ? j1 < ref2 : j1 > ref2); i = 0 <= ref2 ? ++j1 : --j1) {\n          __emit_char(tmpString[i]);\n        }\n        tmpString = p.q.b.toString();\n        if (tmpString === \"1\") {\n          break;\n        }\n        __emit_char('/');\n        results = [];\n        for (i = l1 = 0, ref3 = tmpString.length; (0 <= ref3 ? l1 < ref3 : l1 > ref3); i = 0 <= ref3 ? ++l1 : --l1) {\n          results.push(__emit_char(tmpString[i]));\n        }\n        return results;\n        break;\n      case DOUBLE:\n        tmpString = doubleToReasonableString(p.d);\n        if (tmpString[0] === '-' && emit_sign === 0) {\n          tmpString = tmpString.substring(1);\n        }\n        results1 = [];\n        for (i = m1 = 0, ref4 = tmpString.length; (0 <= ref4 ? m1 < ref4 : m1 > ref4); i = 0 <= ref4 ? ++m1 : --m1) {\n          results1.push(__emit_char(tmpString[i]));\n        }\n        return results1;\n    }\n  };\n\n  // a and b are glyphs\n  cmpGlyphs = function(a, b) {\n    if (a.y < b.y) {\n      return -1;\n    }\n    if (a.y > b.y) {\n      return 1;\n    }\n    if (a.x < b.x) {\n      return -1;\n    }\n    if (a.x > b.x) {\n      return 1;\n    }\n    return 0;\n  };\n\n  print_glyphs = function() {\n    var accumulator, i, j1, ref2, subsetOfStack, x, y;\n    i = 0;\n    accumulator = \"\";\n    \n    // now sort the glyphs by their vertical positions,\n    // since we are going to build a string where obviously the\n    // \"upper\" line has to printed out first, followed by\n    // a new line, followed by the other lines.\n    //qsort(chartab, yindex, sizeof (struct glyph), __cmp)\n    subsetOfStack = chartab.slice(0, yindex);\n    subsetOfStack.sort(cmpGlyphs);\n    chartab = [].concat(subsetOfStack).concat(chartab.slice(yindex));\n    x = 0;\n    y = chartab[0].y;\n    for (i = j1 = 0, ref2 = yindex; (0 <= ref2 ? j1 < ref2 : j1 > ref2); i = 0 <= ref2 ? ++j1 : --j1) {\n      while (chartab[i].y > y) {\n        accumulator += printchar('\\n');\n        x = 0;\n        y++;\n      }\n      while (chartab[i].x > x) {\n        accumulator += printchar_nowrap(' ');\n        x++;\n      }\n      accumulator += printchar_nowrap(chartab[i].c);\n      x++;\n    }\n    return accumulator;\n  };\n\n  buffer = \"\";\n\n  getdisplaystr = function() {\n    yindex = 0;\n    level = 0;\n    emit_x = 0;\n    emit_expr(pop());\n    fill_buf();\n    return buffer;\n  };\n\n  fill_buf = function() {\n    var i, j1, ref2, sIndex, subsetOfStack, tmpBuffer, x, y;\n    tmpBuffer = buffer;\n    sIndex = 0;\n    i = 0;\n    //qsort(chartab, yindex, sizeof (struct glyph), __cmp)\n    subsetOfStack = chartab.slice(0, yindex);\n    subsetOfStack.sort(cmpGlyphs);\n    chartab = [].concat(subsetOfStack).concat(chartab.slice(yindex));\n    x = 0;\n    y = chartab[0].y;\n    for (i = j1 = 0, ref2 = yindex; (0 <= ref2 ? j1 < ref2 : j1 > ref2); i = 0 <= ref2 ? ++j1 : --j1) {\n      while (chartab[i].y > y) {\n        tmpBuffer[sIndex++] = '\\n';\n        x = 0;\n        y++;\n      }\n      while (chartab[i].x > x) {\n        tmpBuffer[sIndex++] = ' ';\n        x++;\n      }\n      tmpBuffer[sIndex++] = chartab[i].c;\n      x++;\n    }\n    return tmpBuffer[sIndex++] = '\\n';\n  };\n\n  N = 100;\n\n  oneElement = (function() {\n    class oneElement {};\n\n    oneElement.prototype.x = 0;\n\n    oneElement.prototype.y = 0;\n\n    oneElement.prototype.h = 0;\n\n    oneElement.prototype.w = 0;\n\n    oneElement.prototype.index = 0;\n\n    oneElement.prototype.count = 0;\n\n    return oneElement;\n\n  }).call(this);\n\n  elem = [];\n\n  for (elelmIndex = j1 = 0; j1 < 10000; elelmIndex = ++j1) {\n    elem[elelmIndex] = new oneElement();\n  }\n\n  SPACE_BETWEEN_COLUMNS = 3;\n\n  SPACE_BETWEEN_ROWS = 1;\n\n  emit_tensor = function(p) {\n    var col, dx, dy, eh, ew, h, i, l1, m1, n, n1, ncol, nrow, o1, ref2, ref3, ref4, ref5, row, w, x, y;\n    i = 0;\n    n = 0;\n    nrow = 0;\n    ncol = 0;\n    x = 0;\n    y = 0;\n    h = 0;\n    w = 0;\n    dx = 0;\n    dy = 0;\n    eh = 0;\n    ew = 0;\n    row = 0;\n    col = 0;\n    if (p.tensor.ndim > 2) {\n      emit_flat_tensor(p);\n      return;\n    }\n    nrow = p.tensor.dim[0];\n    if (p.tensor.ndim === 2) {\n      ncol = p.tensor.dim[1];\n    } else {\n      ncol = 1;\n    }\n    n = nrow * ncol;\n    if (n > N) {\n      emit_flat_tensor(p);\n      return;\n    }\n    // horizontal coordinate of the matrix\n\n    //if 0\n    //emit_x += 2; # make space for left paren\n    //endif\n    x = emit_x;\n// emit each element\n    for (i = l1 = 0, ref2 = n; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      elem[i].index = yindex;\n      elem[i].x = emit_x;\n      emit_expr(p.tensor.elem[i]);\n      elem[i].count = yindex - elem[i].index;\n      [elem[i].h, elem[i].w, elem[i].y] = get_size(elem[i].index, yindex);\n    }\n    // find element height and width\n    eh = 0;\n    ew = 0;\n    for (i = m1 = 0, ref3 = n; (0 <= ref3 ? m1 < ref3 : m1 > ref3); i = 0 <= ref3 ? ++m1 : --m1) {\n      if (elem[i].h > eh) {\n        eh = elem[i].h;\n      }\n      if (elem[i].w > ew) {\n        ew = elem[i].w;\n      }\n    }\n    // this is the overall height of the matrix\n    h = nrow * eh + (nrow - 1) * SPACE_BETWEEN_ROWS;\n    // this is the overall width of the matrix\n    w = ncol * ew + (ncol - 1) * SPACE_BETWEEN_COLUMNS;\n    // this is the vertical coordinate of the matrix\n    y = -(h / 2);\n// move elements around\n    for (row = n1 = 0, ref4 = nrow; (0 <= ref4 ? n1 < ref4 : n1 > ref4); row = 0 <= ref4 ? ++n1 : --n1) {\n      for (col = o1 = 0, ref5 = ncol; (0 <= ref5 ? o1 < ref5 : o1 > ref5); col = 0 <= ref5 ? ++o1 : --o1) {\n        i = row * ncol + col;\n        // first move to upper left corner of matrix\n        dx = x - elem[i].x;\n        dy = y - elem[i].y;\n        move(elem[i].index, elem[i].index + elem[i].count, dx, dy);\n        // now move to official position\n        dx = 0;\n        if (col > 0) {\n          dx = col * (ew + SPACE_BETWEEN_COLUMNS);\n        }\n        dy = 0;\n        if (row > 0) {\n          dy = row * (eh + SPACE_BETWEEN_ROWS);\n        }\n        // small correction for horizontal centering\n        dx += (ew - elem[i].w) / 2;\n        // small correction for vertical centering\n        dy += (eh - elem[i].h) / 2;\n        move(elem[i].index, elem[i].index + elem[i].count, dx, dy);\n      }\n    }\n    return emit_x = x + w;\n  };\n\n  emit_flat_tensor = function(p) {\n    return emit_tensor_inner(p, 0, 0);\n  };\n\n  emit_tensor_inner = function(p, j, k) {\n    var i, l1, ref2;\n    i = 0;\n    __emit_char('(');\n    for (i = l1 = 0, ref2 = p.tensor.dim[j]; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      if (j + 1 === p.tensor.ndim) {\n        emit_expr(p.tensor.elem[k]);\n        k = k + 1;\n      } else {\n        k = emit_tensor_inner(p, j + 1, k);\n      }\n      if (i + 1 < p.tensor.dim[j]) {\n        __emit_char(',');\n      }\n    }\n    __emit_char(')');\n    return k;\n  };\n\n  // 'product' function\n\n  //define A p3\n  //define B p4\n  //define I p5\n  //define X p6\n\n  // leaves the product at the top of the stack\n  Eval_product = function() {\n    var body, i, indexVariable, j, k, l1, oldIndexVariableValue, ref2, ref3;\n    i = 0;\n    j = 0;\n    k = 0;\n    // 1st arg\n    body = cadr(p1);\n    // 2nd arg (index)\n    indexVariable = caddr(p1);\n    if (!issymbol(indexVariable)) {\n      stop(\"sum: 2nd arg?\");\n    }\n    // 3rd arg (lower limit)\n    push(cadddr(p1));\n    Eval();\n    j = pop_integer();\n    if (isNaN(j)) {\n      push(p1);\n      return;\n    }\n    // 4th arg (upper limit)\n    push(caddddr(p1));\n    Eval();\n    k = pop_integer();\n    if (isNaN(k)) {\n      push(p1);\n      return;\n    }\n    // remember contents of the index\n    // variable so we can put it back after the loop\n    oldIndexVariableValue = get_binding(indexVariable);\n    push_integer(1);\n    for (i = l1 = ref2 = j, ref3 = k; (ref2 <= ref3 ? l1 <= ref3 : l1 >= ref3); i = ref2 <= ref3 ? ++l1 : --l1) {\n      push_integer(i);\n      p5 = pop();\n      set_binding(indexVariable, p5);\n      push(body);\n      Eval();\n      if (DEBUG) {\n        console.log(\"product - factor 1: \" + stack[tos - 1].toString());\n        console.log(\"product - factor 2: \" + stack[tos - 2].toString());\n      }\n      multiply();\n      if (DEBUG) {\n        console.log(\"product - result: \" + stack[tos - 1].toString());\n      }\n    }\n    // put back the index variable to original content\n    return set_binding(indexVariable, oldIndexVariableValue);\n  };\n\n  //  Add rational numbers\n\n  //  Input:    tos-2    addend\n\n  //      tos-1    addend\n\n  //  Output:    sum on stack\n  qadd = function() {\n    var gcdBetweenNumeratorAndDenominator, qadd_ab, qadd_ba, qadd_denominator, qadd_frac1, qadd_frac2, qadd_numerator, resultSum;\n    // a, qadd_ab, b, qadd_ba, c are all bigNum\n    // we are adding the fractions qadd_frac1 + qadd_frac2 i.e.\n    // qadd_frac1.q.a/qadd_frac1.q.b + qadd_frac2.q.a/qadd_frac2.q.b\n    qadd_frac2 = pop();\n    qadd_frac1 = pop();\n    qadd_ab = mmul(qadd_frac1.q.a, qadd_frac2.q.b);\n    qadd_ba = mmul(qadd_frac1.q.b, qadd_frac2.q.a);\n    qadd_numerator = madd(qadd_ab, qadd_ba);\n    //mfree(qadd_ab)\n    //mfree(qadd_ba)\n\n    // zero?\n    if (MZERO(qadd_numerator)) {\n      //console.log \"qadd IS ZERO\"\n      //mfree(qadd_numerator)\n      push(zero);\n      return;\n    }\n    qadd_denominator = mmul(qadd_frac1.q.b, qadd_frac2.q.b);\n    gcdBetweenNumeratorAndDenominator = mgcd(qadd_numerator, qadd_denominator);\n    //console.log \"gcd(\"+qadd_numerator+\",\"+qadd_denominator+\"): \" + gcdBetweenNumeratorAndDenominator\n    gcdBetweenNumeratorAndDenominator = makeSignSameAs(gcdBetweenNumeratorAndDenominator, qadd_denominator);\n    //console.log \"qadd qadd_denominator: \" + qadd_denominator\n    //console.log \"qadd gcdBetweenNumeratorAndDenominator: \" + gcdBetweenNumeratorAndDenominator\n    resultSum = new U();\n    resultSum.k = NUM;\n    resultSum.q.a = mdiv(qadd_numerator, gcdBetweenNumeratorAndDenominator);\n    resultSum.q.b = mdiv(qadd_denominator, gcdBetweenNumeratorAndDenominator);\n    //console.log \"qadd resultSum.q.a: \" + resultSum.q.a\n    //console.log \"qadd resultSum.q.b: \" + resultSum.q.b\n\n    //mfree(qadd_numerator)\n    //mfree(qadd_denominator)\n    //mfree(gcdBetweenNumeratorAndDenominator)\n    return push(resultSum);\n  };\n\n  //console.log \"qadd result: \" + resultSum\n\n  //  Divide rational numbers\n\n  //  Input:    tos-2    dividend\n\n  //      tos-1    divisor\n\n  //  Output:    quotient on stack\n  qdiv = function() {\n    var aa, bb, c;\n    save();\n    p2 = pop();\n    p1 = pop();\n    // zero?\n    if (MZERO(p2.q.a)) {\n      stop(\"divide by zero\");\n    }\n    if (MZERO(p1.q.a)) {\n      push(zero);\n      restore();\n      return;\n    }\n    aa = mmul(p1.q.a, p2.q.b);\n    bb = mmul(p1.q.b, p2.q.a);\n    c = mgcd(aa, bb);\n    c = makeSignSameAs(c, bb);\n    p1 = new U();\n    p1.k = NUM;\n    p1.q.a = mdiv(aa, c);\n    p1.q.b = mdiv(bb, c);\n    push(p1);\n    return restore();\n  };\n\n  //  Multiply rational numbers\n\n  //  Input:    tos-2    multiplicand\n\n  //      tos-1    multiplier\n\n  //  Output:    product on stack\n  qmul = function() {\n    var aa, bb, c;\n    save();\n    p2 = pop();\n    p1 = pop();\n    // zero?\n    if (MZERO(p1.q.a) || MZERO(p2.q.a)) {\n      push(zero);\n      restore();\n      return;\n    }\n    aa = mmul(p1.q.a, p2.q.a);\n    bb = mmul(p1.q.b, p2.q.b);\n    c = mgcd(aa, bb);\n    c = makeSignSameAs(c, bb);\n    p1 = new U();\n    p1.k = NUM;\n    p1.q.a = mdiv(aa, c);\n    p1.q.b = mdiv(bb, c);\n    //mfree(aa)\n    //mfree(bb)\n    push(p1);\n    return restore();\n  };\n\n  // Rational power function\n  qpow = function() {\n    save();\n    qpowf();\n    return restore();\n  };\n\n  //define BASE p1\n  //define EXPO p2\n  qpowf = function() {\n    var a, b, expo, t, x, y;\n    expo = 0;\n    //unsigned int a, b, *t, *x, *y\n    p2 = pop();\n    p1 = pop();\n    if (isplusone(p1) || isZeroAtomOrTensor(p2)) { // p1 is BASE  # p2 is EXPO\n      push_integer(1);\n      return;\n    }\n    // if (-1)^(1/2) -> leave it as is\n    if (isminusone(p1) && isoneovertwo(p2)) { // p1 is BASE  # p2 is EXPO\n      push(imaginaryunit);\n      return;\n    }\n    // if base is zero then return 0\n    if (isZeroAtomOrTensor(p1)) { // p1 is BASE\n      if (isnegativenumber(p2)) { // p2 is EXPO\n        stop(\"divide by zero\");\n      }\n      push(zero);\n      return;\n    }\n    // if exponent is 1 then return base\n    if (isplusone(p2)) { // p2 is EXPO\n      push(p1);\n      return;\n    }\n    // if exponent is integer then power\n    if (isinteger(p2)) { // p2 is EXPO\n      push(p2);\n      expo = pop_integer();\n      if (isNaN(expo)) {\n        // expo greater than 32 bits\n        push_symbol(POWER);\n        push(p1);\n        push(p2);\n        list(3);\n        return;\n      }\n      x = mpow(p1.q.a, Math.abs(expo));\n      y = mpow(p1.q.b, Math.abs(expo));\n      if (expo < 0) {\n        t = x;\n        x = y;\n        y = t;\n        x = makeSignSameAs(x, y);\n        y = makePositive(y);\n      }\n      p3 = new U();\n      p3.k = NUM;\n      p3.q.a = x;\n      p3.q.b = y;\n      push(p3);\n      return;\n    }\n    // from here on out the exponent is NOT an integer\n\n    // if base is -1 then normalize polar angle\n    if (isminusone(p1)) { // p1 is BASE\n      push(p2);\n      normalize_angle();\n      return;\n    }\n    // if base is negative then (-N)^M -> N^M * (-1)^M\n    if (isnegativenumber(p1)) { // p1 is BASE\n      push(p1);\n      negate();\n      push(p2);\n      qpow();\n      push_integer(-1);\n      push(p2);\n      qpow();\n      multiply();\n      return;\n    }\n    if (!isinteger(p1)) { // p1 is BASE\n      push(p1);\n      mp_numerator();\n      push(p2);\n      qpow();\n      push(p1);\n      mp_denominator();\n      push(p2);\n      negate();\n      qpow();\n      multiply();\n      return;\n    }\n    // At this point p1 (BASE) is a positive integer.\n\n    // If p1 (BASE) is small then factor it.\n    if (is_small_integer(p1)) { // p1 is BASE\n      push(p1);\n      push(p2);\n      quickfactor();\n      return;\n    }\n    if (!isSmall(p2.q.a) || !isSmall(p2.q.b)) { // p2 is EXPO\n      push_symbol(POWER);\n      push(p1); // p1 is BASE\n      push(p2);\n      list(3);\n      return;\n    }\n    a = p2.q.a;\n    b = p2.q.b;\n    x = mroot(p1.q.a, b);\n    if (x === 0) {\n      push_symbol(POWER);\n      push(p1);\n      push(p2);\n      list(3);\n      return;\n    }\n    y = mpow(x, a);\n    //mfree(x)\n    p3 = new U();\n    p3.k = NUM;\n    if (p2.q.a.isNegative()) { // p2 is EXPO\n      p3.q.a = bigInt(1);\n      p3.q.b = y;\n    } else {\n      p3.q.a = y;\n      p3.q.b = bigInt(1);\n    }\n    return push(p3);\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Normalize the angle of unit imaginary, i.e. (-1) ^ N\n\n  //  Input:    N on stack (must be rational, not float)\n\n  //  Output:    Result on stack\n\n  //  Note:\n\n  //  n = q * d + r\n\n  //  Example:\n  //            n  d  q  r\n\n  //  (-1)^(8/3)  ->   (-1)^(2/3)  8  3  2  2\n  //  (-1)^(7/3)  ->   (-1)^(1/3)  7  3  2  1\n  //  (-1)^(5/3)  ->  -(-1)^(2/3)  5  3  1  2\n  //  (-1)^(4/3)  ->  -(-1)^(1/3)  4  3  1  1\n  //  (-1)^(2/3)  ->   (-1)^(2/3)  2  3  0  2\n  //  (-1)^(1/3)  ->   (-1)^(1/3)  1  3  0  1\n\n  //  (-1)^(-1/3)  ->  -(-1)^(2/3)  -1  3  -1  2\n  //  (-1)^(-2/3)  ->  -(-1)^(1/3)  -2  3  -1  1\n  //  (-1)^(-4/3)  ->   (-1)^(2/3)  -4  3  -2  2\n  //  (-1)^(-5/3)  ->   (-1)^(1/3)  -5  3  -2  1\n  //  (-1)^(-7/3)  ->  -(-1)^(2/3)  -7  3  -3  2\n  //  (-1)^(-8/3)  ->  -(-1)^(1/3)  -8  3  -3  1\n\n  //-----------------------------------------------------------------------------\n\n  //define A p1\n  //define Q p2\n  //define R p3\n  normalize_angle = function() {\n    save();\n    p1 = pop();\n    if (isinteger(p1)) { // p1 is A\n      if (p1.q.a.isOdd()) { // p1 is A\n        push_integer(-1); // odd exponent\n      } else {\n        push_integer(1); // even exponent\n      }\n      restore();\n      return;\n    }\n    // floor\n    push(p1);\n    bignum_truncate();\n    p2 = pop();\n    if (isnegativenumber(p1)) { // p1 is A\n      push(p2); // p2 is Q\n      push_integer(-1);\n      add();\n      p2 = pop(); // p2 is Q\n    }\n    \n    // remainder (always positive)\n    push(p1);\n    push(p2);\n    subtract();\n    p3 = pop();\n    push_symbol(POWER);\n    push_integer(-1);\n    push(p3); // p3 is R\n    list(3);\n    // negate if quotient is odd\n    if (p2.q.a.isOdd()) { // p2 is Q\n      negate();\n    }\n    return restore();\n  };\n\n  is_small_integer = function(p) {\n    return isSmall(p.q.a);\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Factor small numerical powers\n\n  //  Input:    tos-2    Base (positive integer < 2^31 - 1)\n\n  //      tos-1    Exponent\n\n  //  Output:    Expr on stack\n\n  //-----------------------------------------------------------------------------\n\n  //define BASE p1\n  //define EXPO p2\n  quickfactor = function() {\n    var h, i, l1, n, ref2, stackIndex;\n    i = 0;\n    save();\n    p2 = pop();\n    p1 = pop();\n    h = tos;\n    push(p1);\n    factor_small_number();\n    n = tos - h;\n    stackIndex = h;\n    for (i = l1 = 0, ref2 = n; l1 < ref2; i = l1 += 2) {\n      push(stack[stackIndex + i]);\n      push(stack[stackIndex + i + 1]);\n      push(p2);\n      multiply();\n      quickpower();\n    }\n    // stack has n results from factor_number_raw()\n\n    // on top of that are all the expressions from quickpower()\n\n    // multiply the quickpower() results\n    multiply_all(tos - h - n);\n    p1 = pop();\n    moveTos(h);\n    push(p1);\n    return restore();\n  };\n\n  // p1 (BASE) is a prime number so power is simpler\n  quickpower = function() {\n    var expo;\n    expo = 0;\n    save();\n    p2 = pop();\n    p1 = pop();\n    push(p2);\n    bignum_truncate();\n    p3 = pop();\n    push(p2);\n    push(p3);\n    subtract();\n    p4 = pop();\n    if (!isZeroAtomOrTensor(p4)) {\n      push_symbol(POWER);\n      push(p1);\n      push(p4);\n      list(3);\n    }\n    push(p3);\n    expo = pop_integer();\n    if (isNaN(expo)) {\n      push_symbol(POWER);\n      push(p1);\n      push(p3);\n      list(3);\n      restore();\n      return;\n    }\n    if (expo === 0) {\n      restore();\n      return;\n    }\n    push(p1);\n    bignum_power_number(expo);\n    return restore();\n  };\n\n  //if SELFTEST\n\n  // Divide polynomials\n  Eval_quotient = function() {\n    push(cadr(p1));\n    Eval();\n    push(caddr(p1));\n    Eval();\n    push(cadddr(p1));\n    Eval();\n    p1 = pop();\n    if (p1 === symbol(NIL)) {\n      p1 = symbol(SYMBOL_X);\n    }\n    push(p1);\n    return divpoly();\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Divide polynomials\n\n  //  Input:    tos-3    Dividend\n\n  //      tos-2    Divisor\n\n  //      tos-1    x\n\n  //  Output:    tos-1    Quotient\n\n  //-----------------------------------------------------------------------------\n\n  //define DIVIDEND p1\n  //define DIVISOR p2\n  //define X p3\n  //define Q p4\n  //define QUOTIENT p5\n  divpoly = function() {\n    var dividend, divisor, h, i, l1, m, n, ref2, x;\n    h = 0;\n    i = 0;\n    m = 0;\n    n = 0;\n    x = 0;\n    //U **dividend, **divisor\n    save();\n    p3 = pop();\n    p2 = pop();\n    p1 = pop();\n    h = tos;\n    dividend = tos;\n    m = coeff(p3, p1) - 1;\n    divisor = tos;\n    n = coeff(p3, p2) - 1;\n    x = m - n;\n    push_integer(0);\n    p5 = pop();\n    while (x >= 0) {\n      push(stack[dividend + m]);\n      push(stack[divisor + n]);\n      divide();\n      p4 = pop();\n      for (i = l1 = 0, ref2 = n; (0 <= ref2 ? l1 <= ref2 : l1 >= ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n        push(stack[dividend + x + i]);\n        push(stack[divisor + i]);\n        push(p4);\n        multiply();\n        subtract();\n        stack[dividend + x + i] = pop();\n      }\n      push(p5);\n      push(p4);\n      push(p3);\n      push_integer(x);\n      power();\n      multiply();\n      add();\n      p5 = pop();\n      m--;\n      x--;\n    }\n    moveTos(h);\n    push(p5);\n    return restore();\n  };\n\n  DEBUG_RATIONALIZE = false;\n\n  Eval_rationalize = function() {\n    push(cadr(p1));\n    Eval();\n    return rationalize();\n  };\n\n  rationalize = function() {\n    var x;\n    x = expanding;\n    yyrationalize();\n    return expanding = x;\n  };\n\n  yyrationalize = function() {\n    var commonDenominator, eachTerm, theArgument;\n    theArgument = pop();\n    if (istensor(theArgument)) {\n      __rationalize_tensor(theArgument);\n      return;\n    }\n    expanding = 0;\n    if (car(theArgument) !== symbol(ADD)) {\n      push(theArgument);\n      return;\n    }\n    if (DEBUG_RATIONALIZE) {\n      console.log(\"rationalize: this is the input expr: \" + theArgument);\n    }\n    // get new denominator\n    push(one);\n    multiply_denominators(theArgument);\n    commonDenominator = pop();\n    if (DEBUG_RATIONALIZE) {\n      console.log(\"rationalize: this is the new denominator: \" + commonDenominator);\n    }\n    // multiply each term by new denominator\n    push(zero);\n    eachTerm = cdr(theArgument);\n    while (iscons(eachTerm)) {\n      if (DEBUG_RATIONALIZE) {\n        console.log(\"term: \" + car(eachTerm));\n      }\n      push(commonDenominator);\n      push(car(eachTerm));\n      multiply();\n      add();\n      eachTerm = cdr(eachTerm);\n    }\n    if (DEBUG_RATIONALIZE) {\n      console.log(\"rationalize: original terms times new denominator: \" + stack[tos - 1]);\n    }\n    // collect common factors\n    Condense();\n    if (DEBUG_RATIONALIZE) {\n      console.log(\"rationalize: after factoring: \" + stack[tos - 1]);\n    }\n    // divide by common denominator\n    push(commonDenominator);\n    divide();\n    if (DEBUG_RATIONALIZE) {\n      return console.log(\"rationalize: after dividing by new denom. (and we're done): \" + stack[tos - 1]);\n    }\n  };\n\n  multiply_denominators = function(p) {\n    var results;\n    if (car(p) === symbol(ADD)) {\n      p = cdr(p);\n      results = [];\n      while (iscons(p)) {\n        multiply_denominators_term(car(p));\n        results.push(p = cdr(p));\n      }\n      return results;\n    } else {\n      return multiply_denominators_term(p);\n    }\n  };\n\n  multiply_denominators_term = function(p) {\n    var results;\n    if (car(p) === symbol(MULTIPLY)) {\n      p = cdr(p);\n      results = [];\n      while (iscons(p)) {\n        multiply_denominators_factor(car(p));\n        results.push(p = cdr(p));\n      }\n      return results;\n    } else {\n      return multiply_denominators_factor(p);\n    }\n  };\n\n  multiply_denominators_factor = function(p) {\n    if (car(p) !== symbol(POWER)) {\n      return;\n    }\n    push(p);\n    p = caddr(p);\n    // like x^(-2) ?\n    if (isnegativenumber(p)) {\n      inverse();\n      __lcm();\n      return;\n    }\n    // like x^(-a) ?\n    if (car(p) === symbol(MULTIPLY) && isnegativenumber(cadr(p))) {\n      inverse();\n      __lcm();\n      return;\n    }\n    // no match\n    return pop();\n  };\n\n  __rationalize_tensor = function(theTensor) {\n    var i, l1, n, ref2;\n    i = 0;\n    push(theTensor);\n    Eval();\n    theTensor = pop();\n    if (!istensor(theTensor)) { // might be zero\n      push(theTensor);\n      return;\n    }\n    n = theTensor.tensor.nelem;\n    for (i = l1 = 0, ref2 = n; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      push(theTensor.tensor.elem[i]);\n      rationalize();\n      theTensor.tensor.elem[i] = pop();\n    }\n    check_tensor_dimensions(theTensor);\n    return push(theTensor);\n  };\n\n  __lcm = function() {\n    save();\n    p1 = pop();\n    p2 = pop();\n    push(p1);\n    push(p2);\n    multiply();\n    push(p1);\n    push(p2);\n    gcd();\n    divide();\n    return restore();\n  };\n\n  Eval_real = function() {\n    push(cadr(p1));\n    Eval();\n    return real();\n  };\n\n  real = function() {\n    save();\n    rect();\n    p1 = pop();\n    push(p1);\n    push(p1);\n    conjugate();\n    add();\n    push_integer(2);\n    divide();\n    return restore();\n  };\n\n  DEBUG_RECT = false;\n\n  Eval_rect = function() {\n    push(cadr(p1));\n    Eval();\n    return rect();\n  };\n\n  rect = function() {\n    var input;\n    save();\n    p1 = pop();\n    input = p1;\n    if (DEBUG_RECT) {\n      console.log(\"RECT of \" + input);\n    }\n    if (DEBUG_RECT) {\n      console.log(\"any clock forms in : \" + input + \" ? \" + findPossibleClockForm(input));\n    }\n    // if we assume real variables, then the\n    // rect of any symbol is the symbol itself\n    // (note that 'i' is not a symbol, it's made of (-1)^(1/2))\n    // otherwise we have to leave unevalled\n    if (issymbol(p1)) {\n      if (DEBUG_RECT) {\n        console.log(\" rect: simple symbol: \" + input);\n      }\n      if (!isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES)))) {\n        push(p1);\n      } else {\n        push_symbol(YYRECT);\n        push(p1);\n        list(2);\n      }\n    } else if (!isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES))) && !findPossibleExponentialForm(p1) && !findPossibleClockForm(p1) && !(Find(p1, symbol(SIN)) && Find(p1, symbol(COS)) && Find(p1, imaginaryunit))) { // no polar form?\n      if (DEBUG_RECT) {\n        console.log(\" rect: simple symbol: \" + input);\n      }\n      push(p1);\n    // ib\n    } else if (car(p1) === symbol(MULTIPLY) && isimaginaryunit(cadr(p1)) && !isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES)))) {\n      push(p1);\n    // sum\n    } else if (car(p1) === symbol(ADD)) {\n      if (DEBUG_RECT) {\n        console.log(\" rect - \" + input + \" is a sum \");\n      }\n      push_integer(0);\n      p1 = cdr(p1);\n      while (iscons(p1)) {\n        push(car(p1));\n        rect();\n        add();\n        p1 = cdr(p1);\n      }\n    } else {\n      // try to get to the rectangular form by doing\n      // abs(p1) * (cos (theta) + i * sin(theta))\n      // where theta is arg(p1)\n      if (DEBUG_RECT) {\n        console.log(\" rect - \" + input + \" is NOT a sum \");\n      }\n      push(p1);\n      abs();\n      if (DEBUG_RECT) {\n        console.log(\" rect - \" + input + \" abs: \" + stack[tos - 1].toString());\n      }\n      push(p1);\n      arg();\n      if (DEBUG_RECT) {\n        console.log(\" rect - \" + input + \" arg of \" + p1 + \" : \" + stack[tos - 1].toString());\n      }\n      p1 = pop();\n      push(p1);\n      cosine();\n      if (DEBUG_RECT) {\n        console.log(\" rect - \" + input + \" cosine: \" + stack[tos - 1].toString());\n      }\n      push(imaginaryunit);\n      push(p1);\n      sine();\n      if (DEBUG_RECT) {\n        console.log(\" rect - \" + input + \" sine: \" + stack[tos - 1].toString());\n      }\n      multiply();\n      if (DEBUG_RECT) {\n        console.log(\" rect - \" + input + \" i * sine: \" + stack[tos - 1].toString());\n      }\n      add();\n      if (DEBUG_RECT) {\n        console.log(\" rect - \" + input + \" cos + i * sine: \" + stack[tos - 1].toString());\n      }\n      multiply();\n    }\n    restore();\n    if (DEBUG_RECT) {\n      return console.log(\"rect of \" + input + \" : \" + stack[tos - 1]);\n    }\n  };\n\n  //define POLY p1\n  //define X p2\n  //define A p3\n  //define B p4\n  //define C p5\n  //define Y p6\n  show_power_debug = false;\n\n  performing_roots = false;\n\n  Eval_roots = function() {\n    // this transforms simple \"equation\" forms into\n    // something that can be processed. E.g., say, y = 3x - 2\n    // A == B -> A - B\n    // A = B -> A - B\n    p2 = cadr(p1);\n    if (car(p2) === symbol(SETQ) || car(p2) === symbol(TESTEQ)) {\n      push(cadr(p2));\n      Eval();\n      push(caddr(p2));\n      Eval();\n      subtract();\n    } else {\n      push(p2);\n      Eval();\n      p2 = pop();\n      if (car(p2) === symbol(SETQ) || car(p2) === symbol(TESTEQ)) {\n        push(cadr(p2));\n        Eval();\n        push(caddr(p2));\n        Eval();\n        subtract();\n      } else {\n        push(p2);\n      }\n    }\n    // 2nd arg, x\n    push(caddr(p1));\n    Eval();\n    p2 = pop();\n    if (p2 === symbol(NIL)) {\n      guess();\n    } else {\n      push(p2);\n    }\n    p2 = pop();\n    p1 = pop();\n    if (!ispolyexpandedform(p1, p2)) {\n      stop(\"roots: 1st argument is not a polynomial in the variable \" + p2);\n    }\n    push(p1);\n    push(p2);\n    return roots();\n  };\n\n  hasImaginaryCoeff = function(k) {\n    var h, i, imaginaryCoefficients, l1, ref2;\n    //polycoeff = tos\n    imaginaryCoefficients = false;\n    h = tos;\n    for (i = l1 = ref2 = k; l1 > 0; i = l1 += -1) {\n      //console.log \"hasImaginaryCoeff - coeff.:\" + stack[tos-i].toString()\n      if (iscomplexnumber(stack[tos - i])) {\n        imaginaryCoefficients = true;\n        break;\n      }\n    }\n    return imaginaryCoefficients;\n  };\n\n  isSimpleRoot = function(k) {\n    var h, i, isSimpleRootPolynomial, l1, ref2;\n    //polycoeff = tos\n\n    //tos-n    Coefficient of x^0\n    //tos-1    Coefficient of x^(n-1)\n    if (k > 2) {\n      isSimpleRootPolynomial = true;\n      h = tos;\n      if (isZeroAtomOrTensor(stack[tos - k])) {\n        isSimpleRootPolynomial = false;\n      }\n      for (i = l1 = ref2 = k - 1; l1 > 1; i = l1 += -1) {\n        if (!isZeroAtomOrTensor(stack[tos - i])) {\n          isSimpleRootPolynomial = false;\n          break;\n        }\n      }\n    } else {\n      isSimpleRootPolynomial = false;\n    }\n    return isSimpleRootPolynomial;\n  };\n\n  normalisedCoeff = function(variable, polynomial) {\n    var divideBy, i, k, l1, m1, miniStack, ref2, ref3;\n    k = coeff(variable, polynomial);\n    //console.log(\"->\" + tos)\n    divideBy = stack[tos - 1];\n    miniStack = [];\n    for (i = l1 = 1, ref2 = k; (1 <= ref2 ? l1 <= ref2 : l1 >= ref2); i = 1 <= ref2 ? ++l1 : --l1) {\n      miniStack.push(pop());\n    }\n//console.log(tos)\n    for (i = m1 = ref3 = k - 1; (ref3 <= 0 ? m1 <= 0 : m1 >= 0); i = ref3 <= 0 ? ++m1 : --m1) {\n      push(miniStack[i]);\n      push(divideBy);\n      divide();\n    }\n    //console.log(tos)\n    return k;\n  };\n\n  // takes the polynomial and the\n  // variable on the stack\n  roots = function() {\n    var h, i, k, l1, lastCoeff, leadingCoeff, n, ref2;\n    h = 0;\n    i = 0;\n    n = 0;\n    if (DEBUG) {\n      console.log(\"roots: \" + stack[tos - 1].toString() + \" \" + stack[tos - 2].toString());\n    }\n    save();\n    // the simplification of nested radicals uses\n    // \"roots\", which in turn uses simplification\n    // of nested radicals. Usually there is no problem,\n    // one level of recursion does the job. Beyond that,\n    // we probably got stuck in a strange case of infinite\n    // recursion, so bail out and return NIL.\n    if (recursionLevelNestedRadicalsRemoval > 1) {\n      pop();\n      pop();\n      push(symbol(NIL));\n      restore();\n      return;\n    }\n    performing_roots = true;\n    h = tos - 2;\n    if (DEBUG) {\n      console.log(\"roots checking if \" + stack[tos - 1].toString() + \" is a case of simple roots\");\n    }\n    p2 = pop();\n    p1 = pop();\n    push(p1);\n    push(p2);\n    k = normalisedCoeff(p2, p1);\n    if (isSimpleRoot(k)) {\n      if (DEBUG) {\n        console.log(\"yes, \" + stack[tos - 1].toString() + \" is a case of simple roots\");\n      }\n      lastCoeff = stack[tos - k];\n      leadingCoeff = stack[tos - 1];\n      moveTos(tos - k);\n      pop();\n      pop();\n      getSimpleRoots(k, leadingCoeff, lastCoeff);\n    } else {\n      moveTos(tos - k);\n      roots2();\n    }\n    n = tos - h;\n    if (n === 0) {\n      stop(\"roots: the polynomial is not factorable, try nroots\");\n    }\n    if (n === 1) {\n      performing_roots = false;\n      restore();\n      return;\n    }\n    sort_stack(n);\n    p1 = alloc_tensor(n);\n    p1.tensor.ndim = 1;\n    p1.tensor.dim[0] = n;\n    for (i = l1 = 0, ref2 = n; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      p1.tensor.elem[i] = stack[h + i];\n    }\n    moveTos(h);\n    push(p1);\n    restore();\n    return performing_roots = false;\n  };\n\n  // ok to generate these roots take a look at their form\n  // in the case of even and odd exponents here:\n  // http://www.wolframalpha.com/input/?i=roots+x%5E14+%2B+1\n  // http://www.wolframalpha.com/input/?i=roots+ax%5E14+%2B+b\n  // http://www.wolframalpha.com/input/?i=roots+x%5E15+%2B+1\n  // http://www.wolframalpha.com/input/?i=roots+a*x%5E15+%2B+b\n  getSimpleRoots = function(n, leadingCoeff, lastCoeff) {\n    var aSol, commonPart, l1, m1, ref2, ref3, rootsOfOne;\n    if (DEBUG) {\n      console.log(\"getSimpleRoots\");\n    }\n    save();\n    //tos-n    Coefficient of x^0\n    //tos-1    Coefficient of x^(n-1)\n    n = n - 1;\n    push(lastCoeff);\n    push_rational(1, n);\n    power();\n    push(leadingCoeff);\n    push_rational(1, n);\n    power();\n    divide();\n    commonPart = pop();\n    if (n % 2 === 0) {\n      for (rootsOfOne = l1 = 1, ref2 = n; l1 <= ref2; rootsOfOne = l1 += 2) {\n        push(commonPart);\n        push_integer(-1);\n        push_rational(rootsOfOne, n);\n        power();\n        multiply();\n        aSol = pop();\n        push(aSol);\n        push(aSol);\n        negate();\n      }\n    } else {\n      for (rootsOfOne = m1 = 1, ref3 = n; (1 <= ref3 ? m1 <= ref3 : m1 >= ref3); rootsOfOne = 1 <= ref3 ? ++m1 : --m1) {\n        push(commonPart);\n        push_integer(-1);\n        push_rational(rootsOfOne, n);\n        power();\n        multiply();\n        if (rootsOfOne % 2 === 0) {\n          negate();\n        }\n      }\n    }\n    return restore();\n  };\n\n  roots2 = function() {\n    var k;\n    save();\n    if (DEBUG) {\n      console.log(\"roots2: \" + stack[tos - 1].toString() + \" \" + stack[tos - 2].toString());\n    }\n    p2 = pop(); // the polynomial variable\n    p1 = pop(); // the polynomial\n    push(p1);\n    push(p2);\n    k = normalisedCoeff(p2, p1);\n    if (!hasImaginaryCoeff(k)) {\n      moveTos(tos - k);\n      factorpoly();\n      p1 = pop();\n    } else {\n      moveTos(tos - k);\n      pop();\n      pop();\n    }\n    if (car(p1) === symbol(MULTIPLY)) {\n      p1 = cdr(p1);\n      // scan through all the factors\n      // and find the roots of each of them\n      while (iscons(p1)) {\n        push(car(p1));\n        push(p2);\n        roots3();\n        p1 = cdr(p1);\n      }\n    } else {\n      push(p1);\n      push(p2);\n      roots3();\n    }\n    return restore();\n  };\n\n  roots3 = function() {\n    var n;\n    save();\n    p2 = pop();\n    p1 = pop();\n    if (car(p1) === symbol(POWER) && ispolyexpandedform(cadr(p1), p2) && isposint(caddr(p1))) {\n      n = normalisedCoeff(p2, cadr(p1));\n      mini_solve(n);\n    } else if (ispolyexpandedform(p1, p2)) {\n      n = normalisedCoeff(p2, p1);\n      mini_solve(n);\n    }\n    return restore();\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Input:    stack[tos - 2]    polynomial\n\n  //      stack[tos - 1]    dependent symbol\n\n  //  Output:    stack      roots on stack\n\n  //            (input args are popped first)\n\n  //-----------------------------------------------------------------------------\n\n  // note that for many quadratic, cubic and quartic polynomials we don't\n  // actually end up using the quadratic/cubic/quartic formulas in here,\n  // since there is a chance we factored the polynomial and in so\n  // doing we found some solutions and lowered the degree.\n  mini_solve = function(n) {\n    var C_CHECKED_AS_NOT_ZERO, Q_CHECKED_AS_NOT_ZERO, R_18_a_b_c_d, R_27_a2_d, R_2_b3, R_3_a, R_3_a_C, R_3_a_c, R_4_DELTA03, R_6_a, R_6_a_C, R_C, R_C_over_3a, R_C_simplified_toCheckIfZero, R_DELTA0, R_DELTA0_simplified_toCheckIfZero, R_DELTA0_toBeCheckedIfZero, R_DELTA1, R_Q, R_Q_simplified_toCheckIfZero, R_S, R_S_simplified_toCheckIfZero, R_a2, R_a2_d, R_a2_d2, R_a3, R_a_b_c, R_a_b_c_d, R_a_c, R_b2, R_b2_c2, R_b3, R_b3_d, R_c2, R_c3, R_d2, R_determinant, R_determinant_simplified_toCheckIfZero, R_e2, R_e3, R_m, R_m27_a2_d2, R_m4_a_c3, R_m4_b3_d, R_m9_a_b_c, R_m_b_over_3a, R_minus_4S2_minus_2p, R_minus_b_over_4a, R_p, R_principalCubicRoot, R_q, R_q_over_S, R_r, S_CHECKED_AS_NOT_ZERO, ThreePPlus2M, TwoQOversqrtPPlus2M, biquadraticSolutions, choiceOfRadicalInQSoSIsNotZero, coeff2, coeff3, coeff4, depressedSolutions, eachSolution, flipSignOFQSoCIsNotZero, flipSignOFRadicalSoQIsNotZero, i_sqrt3, l1, len, len1, len2, m1, n1, one_minus_i_sqrt3, one_plus_i_sqrt3, ref2, ref3, ref4, resolventCubicSolutions, root_solution, sqrtPPlus2M, toBeCheckedIFZero;\n    //console.log \"mini_solve >>>>>>>>>>>>>>>>>>>>>>>> tos:\" + tos\n    save();\n    // AX + B, X = -B/A\n    if (n === 2) {\n      //console.log \"mini_solve >>>>>>>>> 1st degree\"\n      p3 = pop();\n      p4 = pop();\n      push(p4);\n      push(p3);\n      divide();\n      negate();\n      restore();\n      return;\n    }\n    // AX^2 + BX + C, X = (-B +/- (B^2 - 4AC)^(1/2)) / (2A)\n    if (n === 3) {\n      //console.log \"mini_solve >>>>>>>>> 2nd degree\"\n      p3 = pop(); // A\n      p4 = pop(); // B\n      p5 = pop(); // C\n      \n      // B^2\n      push(p4);\n      push_integer(2);\n      power();\n      // 4AC\n      push_integer(4);\n      push(p3);\n      multiply();\n      push(p5);\n      multiply();\n      // B^2 - 4AC\n      subtract();\n      //(B^2 - 4AC)^(1/2)\n      push_rational(1, 2);\n      power();\n      //p6 is (B^2 - 4AC)^(1/2)\n      p6 = pop();\n      push(p6);\n      push(p4);\n      subtract(); // -B + (B^2 - 4AC)^(1/2)\n      \n      // 1/2A\n      push(p3);\n      push_integer(2);\n      multiply();\n      divide();\n      //simplify()\n      //rationalize()\n      // tos - 1 now is 1st root: (-B + (B^2 - 4AC)^(1/2)) / (2A)\n      push(p6);\n      push(p4);\n      add();\n      // tos - 1 now is  B + (B^2 - 4AC)^(1/2)\n      // tos - 2: 1st root: (-B + (B^2 - 4AC)^(1/2)) / (2A)\n      negate();\n      // tos - 1 now is  -B -(B^2 - 4AC)^(1/2)\n      // tos - 2: 1st root: (-B + (B^2 - 4AC)^(1/2)) / (2A)\n\n      // 1/2A again\n      push(p3);\n      divide();\n      push_rational(1, 2);\n      multiply();\n      //simplify()\n      //rationalize()\n      // tos - 1: 2nd root: (-B - (B^2 - 4AC)^(1/2)) / (2A)\n      // tos - 2: 1st root: (-B + (B^2 - 4AC)^(1/2)) / (2A)\n      restore();\n      return;\n    }\n    //if (n == 4)\n    if (n === 4 || n === 5) {\n      p3 = pop(); // A\n      p4 = pop(); // B\n      p5 = pop(); // C\n      p6 = pop(); // D\n      \n      // C - only related calculations\n      push(p5);\n      push(p5);\n      multiply();\n      R_c2 = pop();\n      push(R_c2);\n      push(p5);\n      multiply();\n      R_c3 = pop();\n      // B - only related calculations\n      push(p4);\n      push(p4);\n      multiply();\n      R_b2 = pop();\n      push(R_b2);\n      push(p4);\n      multiply();\n      R_b3 = pop();\n      push(R_b3);\n      push(p6);\n      multiply();\n      R_b3_d = pop();\n      push(R_b3_d);\n      push_integer(-4);\n      multiply();\n      R_m4_b3_d = pop();\n      push(R_b3);\n      push_integer(2);\n      multiply();\n      R_2_b3 = pop();\n      // A - only related calculations\n      push(p3);\n      push(p3);\n      multiply();\n      R_a2 = pop();\n      push(R_a2);\n      push(p3);\n      multiply();\n      R_a3 = pop();\n      push_integer(3);\n      push(p3);\n      multiply();\n      R_3_a = pop();\n      push(R_a2);\n      push(p6);\n      multiply();\n      R_a2_d = pop();\n      push(R_a2_d);\n      push(p6);\n      multiply();\n      R_a2_d2 = pop();\n      push(R_a2_d);\n      push_integer(27);\n      multiply();\n      R_27_a2_d = pop();\n      push(R_a2_d2);\n      push_integer(-27);\n      multiply();\n      R_m27_a2_d2 = pop();\n      push(R_3_a);\n      push_integer(2);\n      multiply();\n      R_6_a = pop();\n      // mixed calculations\n      push(p3);\n      push(p5);\n      multiply();\n      R_a_c = pop();\n      push(R_a_c);\n      push(p4);\n      multiply();\n      R_a_b_c = pop();\n      push(R_a_b_c);\n      push(p6);\n      multiply();\n      R_a_b_c_d = pop();\n      push(R_a_c);\n      push_integer(3);\n      multiply();\n      R_3_a_c = pop();\n      push_integer(-4);\n      push(p3);\n      push(R_c3);\n      multiply();\n      multiply();\n      R_m4_a_c3 = pop();\n      push(R_a_b_c);\n      push_integer(9);\n      multiply();\n      negate();\n      R_m9_a_b_c = pop();\n      push(R_a_b_c_d);\n      push_integer(18);\n      multiply();\n      R_18_a_b_c_d = pop();\n      push(R_b2);\n      push(R_3_a_c);\n      subtract();\n      R_DELTA0 = pop();\n      push(R_b2);\n      push(R_c2);\n      multiply();\n      R_b2_c2 = pop();\n      push(p4);\n      negate();\n      push(R_3_a);\n      divide();\n      R_m_b_over_3a = pop();\n      if (n === 4) {\n        if (DEBUG) {\n          console.log(\">>>>>>>>>>>>>>>> actually using cubic formula <<<<<<<<<<<<<<< \");\n        }\n        //console.log \">>>> A:\" + p3.toString()\n        //console.log \">>>> B:\" + p4.toString()\n        //console.log \">>>> C:\" + p5.toString()\n        //console.log \">>>> D:\" + p6.toString()\n        if (DEBUG) {\n          console.log(\"cubic: D0: \" + R_DELTA0.toString());\n        }\n        push(R_DELTA0);\n        push_integer(3);\n        power();\n        push_integer(4);\n        multiply();\n        R_4_DELTA03 = pop();\n        push(R_DELTA0);\n        simplify();\n        absValFloat();\n        R_DELTA0_toBeCheckedIfZero = pop();\n        if (DEBUG) {\n          console.log(\"cubic: D0 as float: \" + R_DELTA0_toBeCheckedIfZero.toString());\n        }\n        //if isZeroAtomOrTensor(R_DELTA0_toBeCheckedIfZero)\n        //  console.log \" *********************************** D0 IS ZERO\"\n\n        // DETERMINANT\n        push(R_18_a_b_c_d);\n        push(R_m4_b3_d);\n        push(R_b2_c2);\n        push(R_m4_a_c3);\n        push(R_m27_a2_d2);\n        add();\n        add();\n        add();\n        add();\n        simplify();\n        absValFloat();\n        R_determinant = pop();\n        if (DEBUG) {\n          console.log(\"cubic: DETERMINANT: \" + R_determinant.toString());\n        }\n        // R_DELTA1\n        push(R_2_b3);\n        push(R_m9_a_b_c);\n        push(R_27_a2_d);\n        add();\n        add();\n        R_DELTA1 = pop();\n        if (DEBUG) {\n          console.log(\"cubic: D1: \" + R_DELTA1.toString());\n        }\n        // R_Q\n        push(R_DELTA1);\n        push_integer(2);\n        power();\n        push(R_4_DELTA03);\n        subtract();\n        push_rational(1, 2);\n        power();\n        simplify();\n        R_Q = pop();\n        if (isZeroAtomOrTensor(R_determinant)) {\n          if (isZeroAtomOrTensor(R_DELTA0_toBeCheckedIfZero)) {\n            if (DEBUG) {\n              console.log(\" cubic: DETERMINANT IS ZERO and delta0 is zero\");\n            }\n            push(R_m_b_over_3a); // just same solution three times\n            restore();\n            return;\n          } else {\n            if (DEBUG) {\n              console.log(\" cubic: DETERMINANT IS ZERO and delta0 is not zero\");\n            }\n            push(p3);\n            push(p6);\n            push_integer(9);\n            multiply();\n            multiply();\n            push(p4);\n            push(p5);\n            multiply();\n            subtract();\n            push(R_DELTA0);\n            push_integer(2);\n            multiply();\n            divide(); // first solution\n            root_solution = pop();\n            push(root_solution); // pushing two of them on the stack\n            push(root_solution);\n            // second solution here\n            // 4abc\n            push(R_a_b_c);\n            push_integer(4);\n            multiply();\n            // -9a*a*d\n            push(p3);\n            push(p3);\n            push(p6);\n            push_integer(9);\n            multiply();\n            multiply();\n            multiply();\n            negate();\n            // -9*b^3\n            push(R_b3);\n            negate();\n            // sum the three terms\n            add();\n            add();\n            // denominator is a*delta0\n            push(p3);\n            push(R_DELTA0);\n            multiply();\n            // build the fraction\n            divide();\n            restore();\n            return;\n          }\n        }\n        C_CHECKED_AS_NOT_ZERO = false;\n        flipSignOFQSoCIsNotZero = false;\n        while (!C_CHECKED_AS_NOT_ZERO) {\n          // R_C\n          push(R_Q);\n          if (flipSignOFQSoCIsNotZero) {\n            negate();\n          }\n          push(R_DELTA1);\n          add();\n          push_rational(1, 2);\n          multiply();\n          push_rational(1, 3);\n          power();\n          simplify();\n          R_C = pop();\n          if (DEBUG) {\n            console.log(\"cubic: C: \" + R_C.toString());\n          }\n          push(R_C);\n          simplify();\n          absValFloat();\n          R_C_simplified_toCheckIfZero = pop();\n          if (DEBUG) {\n            console.log(\"cubic: C as absval and float: \" + R_C_simplified_toCheckIfZero.toString());\n          }\n          if (isZeroAtomOrTensor(R_C_simplified_toCheckIfZero)) {\n            if (DEBUG) {\n              console.log(\" cubic: C IS ZERO flipping the sign\");\n            }\n            flipSignOFQSoCIsNotZero = true;\n          } else {\n            C_CHECKED_AS_NOT_ZERO = true;\n          }\n        }\n        push(R_C);\n        push(R_3_a);\n        multiply();\n        R_3_a_C = pop();\n        push(R_3_a_C);\n        push_integer(2);\n        multiply();\n        R_6_a_C = pop();\n        // imaginary parts calculations\n        push(imaginaryunit);\n        push_integer(3);\n        push_rational(1, 2);\n        power();\n        multiply();\n        i_sqrt3 = pop();\n        push_integer(1);\n        push(i_sqrt3);\n        add();\n        one_plus_i_sqrt3 = pop();\n        push_integer(1);\n        push(i_sqrt3);\n        subtract();\n        one_minus_i_sqrt3 = pop();\n        push(R_C);\n        push(R_3_a);\n        divide();\n        R_C_over_3a = pop();\n        // first solution\n        push(R_m_b_over_3a); // first term\n        push(R_C_over_3a);\n        negate(); // second term\n        push(R_DELTA0);\n        push(R_3_a_C);\n        divide();\n        negate(); // third term\n        // now add the three terms together\n        add();\n        add();\n        simplify();\n        // second solution\n        push(R_m_b_over_3a); // first term\n        push(R_C_over_3a);\n        push(one_plus_i_sqrt3);\n        multiply();\n        push_integer(2);\n        divide(); // second term\n        push(one_minus_i_sqrt3);\n        push(R_DELTA0);\n        multiply();\n        push(R_6_a_C);\n        divide(); // third term\n        // now add the three terms together\n        add();\n        add();\n        simplify();\n        // third solution\n        push(R_m_b_over_3a); // first term\n        push(R_C_over_3a);\n        push(one_minus_i_sqrt3);\n        multiply();\n        push_integer(2);\n        divide(); // second term\n        push(one_plus_i_sqrt3);\n        push(R_DELTA0);\n        multiply();\n        push(R_6_a_C);\n        divide(); // third term\n        // now add the three terms together\n        add();\n        add();\n        simplify();\n        restore();\n        return;\n      }\n      // See http://www.sscc.edu/home/jdavidso/Math/Catalog/Polynomials/Fourth/Fourth.html\n      // for a description of general shapes and properties of fourth degree polynomials\n      if (n === 5) {\n        if (DEBUG) {\n          console.log(\">>>>>>>>>>>>>>>> actually using quartic formula <<<<<<<<<<<<<<< \");\n        }\n        p7 = pop(); // E\n        if (isZeroAtomOrTensor(p4) && isZeroAtomOrTensor(p6) && !isZeroAtomOrTensor(p5) && !isZeroAtomOrTensor(p7)) {\n          if (DEBUG) {\n            console.log(\"biquadratic case\");\n          }\n          push(p3);\n          push(symbol(SECRETX));\n          push_integer(2);\n          power();\n          multiply();\n          push(p5);\n          push(symbol(SECRETX));\n          multiply();\n          push(p7);\n          add();\n          add();\n          push(symbol(SECRETX));\n          roots();\n          biquadraticSolutions = pop();\n          ref2 = biquadraticSolutions.tensor.elem;\n          for (l1 = 0, len = ref2.length; l1 < len; l1++) {\n            eachSolution = ref2[l1];\n            push(eachSolution);\n            push_rational(1, 2);\n            power();\n            simplify();\n            push(eachSolution);\n            push_rational(1, 2);\n            power();\n            negate();\n            simplify();\n          }\n          restore();\n          return;\n        }\n        // D - only related calculations\n        push(p6);\n        push(p6);\n        multiply();\n        R_d2 = pop();\n        // E - only related calculations\n        push(p7);\n        push(p7);\n        multiply();\n        R_e2 = pop();\n        push(R_e2);\n        push(p7);\n        multiply();\n        R_e3 = pop();\n        // DETERMINANT\n        push_integer(256);\n        push(R_a3);\n        push(R_e3);\n        multiply();\n        multiply(); // first term 256 a^3 e^3\n        push_integer(-192);\n        push(R_a2_d);\n        push(R_e2);\n        push(p4);\n        multiply();\n        multiply();\n        multiply(); // second term -192 a^3 b d e^2\n        push_integer(-128);\n        push(R_a2);\n        push(R_c2);\n        push(R_e2);\n        multiply();\n        multiply();\n        multiply(); // third term -128 a^2 c^2 e^2\n        push_integer(144);\n        push(R_a2_d2);\n        push(p5);\n        push(p7);\n        multiply();\n        multiply();\n        multiply(); // fourth term 144 a^2 c d^2 e\n        push(R_m27_a2_d2);\n        push(R_d2);\n        multiply(); // fifth term -27 a^2 d^4\n        push_integer(144);\n        push(R_a_b_c);\n        push(p4);\n        push(R_e2);\n        multiply();\n        multiply();\n        multiply(); // sixth term 144 a b^2 c e^2\n        push_integer(-6);\n        push(p3);\n        push(R_b2);\n        push(R_d2);\n        push(p7);\n        multiply();\n        multiply();\n        multiply();\n        multiply(); // seventh term -6 a b^2 d^2 e\n        push_integer(-80);\n        push(R_a_b_c_d);\n        push(p5);\n        push(p7);\n        multiply();\n        multiply();\n        multiply(); // eigth term -80 a b c^2 d e\n        push_integer(18);\n        push(R_a_b_c_d);\n        push(R_d2);\n        multiply();\n        multiply(); // ninth term 18 a b c d^3\n        push_integer(16);\n        push(R_a_c);\n        push(R_c3);\n        push(p7);\n        multiply();\n        multiply();\n        multiply(); // tenth term 16 a c^4 e\n        push_integer(-4);\n        push(R_a_c);\n        push(R_c2);\n        push(R_d2);\n        multiply();\n        multiply();\n        multiply(); // eleventh term -4 a c^3 d^2\n        push_integer(-27);\n        push(R_b3);\n        push(p4);\n        push(R_e2);\n        multiply();\n        multiply();\n        multiply(); // twelveth term -27 b^4 e^2\n        push_integer(18);\n        push(R_b3_d);\n        push(p5);\n        push(p7);\n        multiply();\n        multiply();\n        multiply(); // thirteenth term 18 b^3 c d e\n        push(R_m4_b3_d);\n        push(R_d2);\n        multiply(); // fourteenth term -4 b^3 d^3\n        push_integer(-4);\n        push(R_b2_c2);\n        push(p5);\n        push(p7);\n        multiply();\n        multiply();\n        multiply(); // fifteenth term -4 b^2 c^3 e\n        push(R_b2_c2);\n        push(R_d2);\n        multiply(); // sixteenth term b^2 c^2 d^2\n        \n        // add together the sixteen terms by doing\n        // fifteen adds\n        add();\n        add();\n        add();\n        add();\n        add();\n        add();\n        add();\n        add();\n        add();\n        add();\n        add();\n        add();\n        add();\n        add();\n        add();\n        R_determinant = pop();\n        if (DEBUG) {\n          console.log(\"R_determinant: \" + R_determinant.toString());\n        }\n        // DELTA0\n        push(R_c2); // term one of DELTA0\n        push_integer(-3);\n        push(p4);\n        push(p6);\n        multiply();\n        multiply(); // term two of DELTA0\n        push_integer(12);\n        push(p3);\n        push(p7);\n        multiply();\n        multiply(); // term three of DELTA0\n        \n        // add the three terms together\n        add();\n        add();\n        R_DELTA0 = pop();\n        if (DEBUG) {\n          console.log(\"R_DELTA0: \" + R_DELTA0.toString());\n        }\n        // DELTA1\n        push_integer(2);\n        push(R_c3);\n        multiply();\n        push_integer(-9);\n        push(p4);\n        push(p5);\n        push(p6);\n        multiply();\n        multiply();\n        multiply();\n        push_integer(27);\n        push(R_b2);\n        push(p7);\n        multiply();\n        multiply();\n        push_integer(27);\n        push(p3);\n        push(R_d2);\n        multiply();\n        multiply();\n        push_integer(-72);\n        push(R_a_c);\n        push(p7);\n        multiply();\n        multiply();\n        // add the five terms together\n        add();\n        add();\n        add();\n        add();\n        R_DELTA1 = pop();\n        if (DEBUG) {\n          console.log(\"R_DELTA1: \" + R_DELTA1.toString());\n        }\n        // p\n        push_integer(8);\n        push(R_a_c);\n        multiply();\n        push_integer(-3);\n        push(R_b2);\n        multiply();\n        add();\n        push_integer(8);\n        push(R_a2);\n        multiply();\n        divide();\n        R_p = pop();\n        if (DEBUG) {\n          console.log(\"p: \" + R_p.toString());\n        }\n        // q\n        push(R_b3);\n        push_integer(-4);\n        push(R_a_b_c);\n        multiply();\n        push_integer(8);\n        push(R_a2_d);\n        multiply();\n        add();\n        add();\n        push_integer(8);\n        push(R_a3);\n        multiply();\n        divide();\n        R_q = pop();\n        if (DEBUG) {\n          console.log(\"q: \" + R_q.toString());\n        }\n        if (DEBUG) {\n          console.log(\"tos 1 \" + tos);\n        }\n        if (!isZeroAtomOrTensor(p4)) {\n          if (DEBUG) {\n            console.log(\"tos 2 \" + tos);\n          }\n          push_integer(8);\n          push(p5);\n          push(p3);\n          multiply();\n          multiply();\n          push_integer(-3);\n          push(p4);\n          push_integer(2);\n          power();\n          multiply();\n          add();\n          push_integer(8);\n          push(p3);\n          push_integer(2);\n          power();\n          multiply();\n          divide();\n          R_p = pop();\n          if (DEBUG) {\n            console.log(\"p for depressed quartic: \" + R_p.toString());\n          }\n          push(p4);\n          push_integer(3);\n          power();\n          push_integer(-4);\n          push(p3);\n          push(p4);\n          push(p5);\n          multiply();\n          multiply();\n          multiply();\n          push_integer(8);\n          push(p6);\n          push(p3);\n          push_integer(2);\n          power();\n          multiply();\n          multiply();\n          add();\n          add();\n          push_integer(8);\n          push(p3);\n          push_integer(3);\n          power();\n          multiply();\n          divide();\n          R_q = pop();\n          if (DEBUG) {\n            console.log(\"q for depressed quartic: \" + R_q.toString());\n          }\n          // convert to depressed quartic\n          push(p4);\n          push_integer(4);\n          power();\n          push_integer(-3);\n          multiply();\n          push_integer(256);\n          push(R_a3);\n          push(p7);\n          multiply();\n          multiply();\n          push_integer(-64);\n          push(R_a2_d);\n          push(p4);\n          multiply();\n          multiply();\n          push_integer(16);\n          push(R_b2);\n          push(p3);\n          push(p5);\n          multiply();\n          multiply();\n          multiply();\n          add();\n          add();\n          add();\n          push_integer(256);\n          push(p3);\n          push_integer(4);\n          power();\n          multiply();\n          divide();\n          R_r = pop();\n          if (DEBUG) {\n            console.log(\"r for depressed quartic: \" + R_r.toString());\n          }\n          if (DEBUG) {\n            console.log(\"tos 4 \" + tos);\n          }\n          push(symbol(SECRETX));\n          push_integer(4);\n          power();\n          if (DEBUG) {\n            console.log(\"4 * x^4: \" + stack[tos - 1].toString());\n          }\n          push(R_p);\n          push(symbol(SECRETX));\n          push_integer(2);\n          power();\n          multiply();\n          if (DEBUG) {\n            console.log(\"R_p * x^2: \" + stack[tos - 1].toString());\n          }\n          push(R_q);\n          push(symbol(SECRETX));\n          multiply();\n          if (DEBUG) {\n            console.log(\"R_q * x: \" + stack[tos - 1].toString());\n          }\n          push(R_r);\n          if (DEBUG) {\n            console.log(\"R_r: \" + stack[tos - 1].toString());\n          }\n          add();\n          add();\n          add();\n          simplify();\n          if (DEBUG) {\n            console.log(\"solving depressed quartic: \" + stack[tos - 1].toString());\n          }\n          push(symbol(SECRETX));\n          roots();\n          depressedSolutions = pop();\n          if (DEBUG) {\n            console.log(\"depressedSolutions: \" + depressedSolutions);\n          }\n          ref3 = depressedSolutions.tensor.elem;\n          for (m1 = 0, len1 = ref3.length; m1 < len1; m1++) {\n            eachSolution = ref3[m1];\n            push(eachSolution);\n            push(p4);\n            push_integer(4);\n            push(p3);\n            multiply();\n            divide();\n            subtract();\n            simplify();\n            if (DEBUG) {\n              console.log(\"solution from depressed: \" + stack[tos - 1].toString());\n            }\n          }\n          restore();\n          return;\n        } else {\n          R_p = p5;\n          R_q = p6;\n          R_r = p7;\n          /*\n           * Descartes' solution\n           * https://en.wikipedia.org/wiki/Quartic_function#Descartes.27_solution\n           * finding the \"u\" in the depressed equation\n\n          push_integer(2)\n          push(R_p)\n          multiply()\n          coeff2 = pop()\n\n          push_integer(-4)\n          push(R_p)\n          push_integer(2)\n          power()\n          multiply()\n          push(R_r)\n          multiply()\n          coeff3 = pop()\n\n          push(R_q)\n          push_integer(2)\n          power()\n          negate()\n          coeff4 = pop()\n\n           * now build the polynomial\n          push(symbol(SECRETX))\n          push_integer(3)\n          power()\n\n          push(coeff2)\n          push(symbol(SECRETX))\n          push_integer(2)\n          power()\n          multiply()\n\n          push(coeff3)\n          push(symbol(SECRETX))\n          multiply()\n\n          push(coeff4)\n\n          add()\n          add()\n          add()\n\n          console.log(\"Descarte's resolventCubic: \" +  stack[tos-1].toString())\n          push(symbol(SECRETX))\n\n          roots()\n\n          resolventCubicSolutions = pop()\n          console.log(\"Descarte's resolventCubic solutions: \" +  resolventCubicSolutions)\n          console.log(\"tos: \" +  tos)\n\n          R_u = null\n          #R_u = resolventCubicSolutions.tensor.elem[1]\n          for eachSolution in resolventCubicSolutions.tensor.elem\n            console.log(\"examining solution: \" +  eachSolution)\n            push(eachSolution)\n            push_integer(2)\n            multiply()\n            push(R_p)\n            add()\n\n            absValFloat()\n            toBeCheckedIFZero = pop()\n            console.log(\"abs value is: \" +  eachSolution)\n            if !isZeroAtomOrTensor(toBeCheckedIFZero)\n              R_u = eachSolution\n              break\n\n          console.log(\"chosen solution: \" +  R_u)\n\n          push(R_u)\n          negate()\n          R_s = pop()\n\n          push(R_p)\n          push(R_u)\n          push_integer(2)\n          power()\n          push(R_q)\n          push(R_u)\n          divide()\n          add()\n          add()\n          push_integer(2)\n          divide()\n          R_t = pop()\n\n          push(R_p)\n          push(R_u)\n          push_integer(2)\n          power()\n          push(R_q)\n          push(R_u)\n          divide()\n          subtract()\n          add()\n          push_integer(2)\n          divide()\n          R_v = pop()\n\n           * factoring the quartic into two quadratics:\n\n           * now build the polynomial\n          push(symbol(SECRETX))\n          push_integer(2)\n          power()\n\n          push(R_s)\n          push(symbol(SECRETX))\n          multiply()\n\n          push(R_t)\n\n          add()\n          add()\n\n          console.log(\"factored quartic 1: \" + stack[tos-1].toString())\n\n          push(symbol(SECRETX))\n          push_integer(2)\n          power()\n\n          push(R_u)\n          push(symbol(SECRETX))\n          multiply()\n\n          push(R_v)\n\n          add()\n          add()\n\n          console.log(\"factored quartic 2: \" + stack[tos-1].toString())\n          pop()\n\n          restore()\n          return\n           */\n          // Ferrari's solution\n          // https://en.wikipedia.org/wiki/Quartic_function#Ferrari.27s_solution\n          // finding the \"m\" in the depressed equation\n          push_rational(5, 2);\n          push(R_p);\n          multiply();\n          coeff2 = pop();\n          push_integer(2);\n          push(R_p);\n          push_integer(2);\n          power();\n          multiply();\n          push(R_r);\n          subtract();\n          coeff3 = pop();\n          push(R_p);\n          push_integer(3);\n          power();\n          push_integer(2);\n          divide();\n          push_rational(-1, 2);\n          push(R_p);\n          push(R_r);\n          multiply();\n          multiply();\n          push_rational(-1, 8);\n          push(R_q);\n          push_integer(2);\n          power();\n          multiply();\n          add();\n          add();\n          coeff4 = pop();\n          push(symbol(SECRETX));\n          push_integer(3);\n          power();\n          push(coeff2);\n          push(symbol(SECRETX));\n          push_integer(2);\n          power();\n          multiply();\n          push(coeff3);\n          push(symbol(SECRETX));\n          multiply();\n          push(coeff4);\n          add();\n          add();\n          add();\n          if (DEBUG) {\n            console.log(\"resolventCubic: \" + stack[tos - 1].toString());\n          }\n          push(symbol(SECRETX));\n          roots();\n          resolventCubicSolutions = pop();\n          if (DEBUG) {\n            console.log(\"resolventCubicSolutions: \" + resolventCubicSolutions);\n          }\n          R_m = null;\n          ref4 = resolventCubicSolutions.tensor.elem;\n          //R_m = resolventCubicSolutions.tensor.elem[1]\n          for (n1 = 0, len2 = ref4.length; n1 < len2; n1++) {\n            eachSolution = ref4[n1];\n            if (DEBUG) {\n              console.log(\"examining solution: \" + eachSolution);\n            }\n            push(eachSolution);\n            push_integer(2);\n            multiply();\n            push(R_p);\n            add();\n            absValFloat();\n            toBeCheckedIFZero = pop();\n            if (DEBUG) {\n              console.log(\"abs value is: \" + eachSolution);\n            }\n            if (!isZeroAtomOrTensor(toBeCheckedIFZero)) {\n              R_m = eachSolution;\n              break;\n            }\n          }\n          if (DEBUG) {\n            console.log(\"chosen solution: \" + R_m);\n          }\n          push(R_m);\n          push_integer(2);\n          multiply();\n          push(R_p);\n          add();\n          push_rational(1, 2);\n          power();\n          simplify();\n          sqrtPPlus2M = pop();\n          push(R_q);\n          push_integer(2);\n          multiply();\n          push(sqrtPPlus2M);\n          divide();\n          simplify();\n          TwoQOversqrtPPlus2M = pop();\n          push(R_p);\n          push_integer(3);\n          multiply();\n          push(R_m);\n          push_integer(2);\n          multiply();\n          add();\n          ThreePPlus2M = pop();\n          // solution1\n          push(sqrtPPlus2M);\n          push(ThreePPlus2M);\n          push(TwoQOversqrtPPlus2M);\n          add();\n          negate();\n          push_rational(1, 2);\n          power();\n          simplify();\n          add();\n          push_integer(2);\n          divide();\n          // solution2\n          push(sqrtPPlus2M);\n          push(ThreePPlus2M);\n          push(TwoQOversqrtPPlus2M);\n          add();\n          negate();\n          push_rational(1, 2);\n          power();\n          simplify();\n          subtract();\n          push_integer(2);\n          divide();\n          // solution3\n          push(sqrtPPlus2M);\n          negate();\n          push(ThreePPlus2M);\n          push(TwoQOversqrtPPlus2M);\n          subtract();\n          negate();\n          push_rational(1, 2);\n          power();\n          simplify();\n          add();\n          push_integer(2);\n          divide();\n          // solution4\n          push(sqrtPPlus2M);\n          negate();\n          push(ThreePPlus2M);\n          push(TwoQOversqrtPPlus2M);\n          subtract();\n          negate();\n          push_rational(1, 2);\n          power();\n          simplify();\n          subtract();\n          push_integer(2);\n          divide();\n          restore();\n          return;\n        }\n        // Q ---------------------------\n        push(R_determinant);\n        simplify();\n        absValFloat();\n        R_determinant_simplified_toCheckIfZero = pop();\n        push(R_DELTA0);\n        simplify();\n        absValFloat();\n        R_DELTA0_simplified_toCheckIfZero = pop();\n        S_CHECKED_AS_NOT_ZERO = false;\n        choiceOfRadicalInQSoSIsNotZero = 0;\n        while (!S_CHECKED_AS_NOT_ZERO) {\n          Q_CHECKED_AS_NOT_ZERO = false;\n          flipSignOFRadicalSoQIsNotZero = false;\n          while (!Q_CHECKED_AS_NOT_ZERO) {\n            // D1 under the outer radical\n            push(R_DELTA1);\n            // D1^2 under the inner radical\n            push(R_DELTA1);\n            push_integer(2);\n            power();\n            // 4*D0^3 under the inner radical\n            push_integer(-4);\n            push(R_DELTA0);\n            push_integer(3);\n            power();\n            multiply();\n            // addition under the inner radical\n            add();\n            // the second radical\n            push_rational(1, 2);\n            power();\n            if (flipSignOFRadicalSoQIsNotZero) {\n              negate();\n            }\n            // the addition under the outer radical\n            add();\n            // content of outer radical divided by two\n            push_integer(2);\n            divide();\n            if (DEBUG) {\n              console.log(\"content of cubic root: \" + stack[tos - 1].toString());\n            }\n            // outer radical calculation: cubic root\n            // now we actually have to find all the roots\n            // because we have to pick the one that makes S != 0\n            push_rational(1, 3);\n            power();\n            simplify();\n            R_principalCubicRoot = pop();\n            if (DEBUG) {\n              console.log(\"principal cubic root: \" + R_principalCubicRoot.toString());\n            }\n            if (DEBUG) {\n              console.log(\"tos : \" + tos);\n            }\n            if (choiceOfRadicalInQSoSIsNotZero === 0) {\n              if (DEBUG) {\n                console.log(\"chosing principal cubic root\");\n              }\n              push(R_principalCubicRoot);\n            } else if (choiceOfRadicalInQSoSIsNotZero === 1) {\n              if (DEBUG) {\n                console.log(\"chosing cubic root beyond principal\");\n              }\n              push(R_principalCubicRoot);\n              push_rational(-1, 2);\n              multiply();\n              push_integer(3);\n              push_rational(1, 2);\n              power();\n              push(imaginaryunit);\n              multiply();\n              push_rational(-1, 2);\n              multiply();\n              push(R_principalCubicRoot);\n              multiply();\n              add();\n            } else if (choiceOfRadicalInQSoSIsNotZero === 1) {\n              if (DEBUG) {\n                console.log(\"chosing cubic root beyond beyond principal\");\n              }\n              push(R_principalCubicRoot);\n              push_rational(-1, 2);\n              multiply();\n              push_integer(3);\n              push_rational(1, 2);\n              power();\n              push(imaginaryunit);\n              multiply();\n              push_rational(1, 2);\n              multiply();\n              push(R_principalCubicRoot);\n              multiply();\n              add();\n            }\n            simplify();\n            R_Q = pop();\n            if (DEBUG) {\n              console.log(\"Q \" + R_Q.toString());\n            }\n            if (DEBUG) {\n              console.log(\"tos: \" + tos);\n            }\n            push(R_Q);\n            simplify();\n            absValFloat();\n            R_Q_simplified_toCheckIfZero = pop();\n            if (DEBUG) {\n              console.log(\"Q simplified and abs\" + R_Q_simplified_toCheckIfZero.toString());\n            }\n            if (isZeroAtomOrTensor(R_Q_simplified_toCheckIfZero) && (!isZeroAtomOrTensor(R_determinant_simplified_toCheckIfZero) && isZeroAtomOrTensor(R_DELTA0_simplified_toCheckIfZero))) {\n              if (DEBUG) {\n                console.log(\" *********************************** Q IS ZERO and it matters, flipping the sign\");\n              }\n              flipSignOFRadicalSoQIsNotZero = true;\n            } else {\n              Q_CHECKED_AS_NOT_ZERO = true;\n            }\n            if (DEBUG) {\n              console.log(\"tos: \" + tos);\n            }\n          }\n          // S\n          push_rational(-2, 3);\n          push(R_p);\n          multiply();\n          push(R_Q);\n          push(R_DELTA0);\n          push(R_Q);\n          divide();\n          add();\n          //rationalize()\n          //console.log(\"rationalised: \" + stack[tos-1].toString())\n          //simplify()\n          push(R_3_a);\n          divide();\n          add();\n          push_rational(1, 2);\n          power();\n          push_integer(2);\n          divide();\n          show_power_debug = true;\n          simplify();\n          R_S = pop();\n          if (DEBUG) {\n            console.log(\"S \" + R_S.toString());\n          }\n          // now check if S is zero\n          push(R_S);\n          simplify();\n          absValFloat();\n          R_S_simplified_toCheckIfZero = pop();\n          if (DEBUG) {\n            console.log(\"S \" + R_S_simplified_toCheckIfZero.toString());\n          }\n          if (isZeroAtomOrTensor(R_S_simplified_toCheckIfZero)) {\n            if (DEBUG) {\n              console.log(\" *********************************** S IS ZERO chosing another cubic root\");\n            }\n            choiceOfRadicalInQSoSIsNotZero++;\n          } else {\n            S_CHECKED_AS_NOT_ZERO = true;\n          }\n          if (DEBUG) {\n            console.log(\"tos: \" + tos);\n          }\n        }\n        // ----------------------------\n        if (DEBUG) {\n          console.log(\"tos: \" + tos);\n        }\n        push(p4);\n        negate();\n        push(p3);\n        push_integer(4);\n        multiply();\n        divide();\n        R_minus_b_over_4a = pop();\n        push_integer(-4);\n        push(R_S);\n        push_integer(2);\n        power();\n        multiply();\n        push_integer(2);\n        push(R_p);\n        multiply();\n        subtract();\n        R_minus_4S2_minus_2p = pop();\n        push(R_q);\n        push(R_S);\n        divide();\n        R_q_over_S = pop();\n        if (DEBUG) {\n          console.log(\"tos before putting together the 4 solutions: \" + tos);\n        }\n        // first solution\n        push(R_minus_b_over_4a); // first term\n        push(R_S);\n        subtract();\n        push(R_minus_4S2_minus_2p);\n        push(R_q_over_S);\n        add();\n        push_rational(1, 2);\n        power();\n        push_integer(2);\n        divide();\n        add();\n        simplify();\n        // second solution\n        push(R_minus_b_over_4a); // first term\n        push(R_S);\n        subtract();\n        push(R_minus_4S2_minus_2p);\n        push(R_q_over_S);\n        add();\n        push_rational(1, 2);\n        power();\n        push_integer(2);\n        divide();\n        subtract();\n        simplify();\n        // third solution\n        push(R_minus_b_over_4a); // first term\n        push(R_S);\n        add();\n        push(R_minus_4S2_minus_2p);\n        push(R_q_over_S);\n        subtract();\n        push_rational(1, 2);\n        power();\n        push_integer(2);\n        divide();\n        add();\n        simplify();\n        // fourth solution\n        push(R_minus_b_over_4a); // first term\n        push(R_S);\n        add();\n        push(R_minus_4S2_minus_2p);\n        push(R_q_over_S);\n        subtract();\n        push_rational(1, 2);\n        power();\n        push_integer(2);\n        divide();\n        subtract();\n        simplify();\n        restore();\n        return;\n      }\n    }\n    moveTos(tos - n);\n    return restore();\n  };\n\n  Eval_round = function() {\n    push(cadr(p1));\n    Eval();\n    return yround();\n  };\n\n  yround = function() {\n    save();\n    yyround();\n    return restore();\n  };\n\n  yyround = function() {\n    var d;\n    d = 0.0;\n    p1 = pop();\n    if (!isNumericAtom(p1)) {\n      push_symbol(ROUND);\n      push(p1);\n      list(2);\n      return;\n    }\n    if (isdouble(p1)) {\n      d = Math.round(p1.d);\n      push_double(d);\n      return;\n    }\n    if (isinteger(p1)) {\n      push(p1);\n      return;\n    }\n    push(p1);\n    yyfloat();\n    p1 = pop();\n    return push_integer(Math.round(p1.d));\n  };\n\n  // This scanner uses the recursive descent method.\n\n  // The char pointers token_str and scan_str are pointers to the input string as\n  // in the following example.\n\n  //  | g | a | m | m | a |   | a | l | p | h | a |\n  //    ^                   ^\n  //    token_str           scan_str\n\n  // The char pointer token_buf points to a malloc buffer.\n\n  //  | g | a | m | m | a | \\0 |\n  //    ^\n  //    token_buf\n\n  // In the sequence of method invocations for scanning,\n  // first we do the calls for scanning the operands\n  // of the operators of least precedence.\n  // So, since precedence in maths goes something like\n  // (form high to low) exponents, mult/div, plus/minus\n  // so we scan first for terms, then factors, then powers.\n  // That's the general idea, but of course we also have to deal\n  // with things like parens, non-commutative\n  // dot (or inner) product, assignments and tests,\n  // function calls etc.\n  // Note that a^1/2 is, correctly, a/2, not, incorrectly, sqrt(a),\n  // see comment in related test in power.coffee for more about this.\n\n  //  Notes:\n\n  //  Formerly add() and multiply() were used to construct expressions but\n  //  this preevaluation caused problems.\n\n  //  For example, suppose A has the floating point value inf.\n\n  //  Before, the expression A/A resulted in 1 because the scanner would\n  //  divide the symbols.\n\n  //  After removing add() and multiply(), A/A results in nan which is the\n  //  correct result.\n\n  //  The functions negate() and inverse() are used but they do not cause\n  //  problems with preevaluation of symbols.\n  T_INTEGER = 1001;\n\n  T_DOUBLE = 1002;\n\n  T_SYMBOL = 1003;\n\n  T_FUNCTION = 1004;\n\n  T_NEWLINE = 1006;\n\n  T_STRING = 1007;\n\n  T_GTEQ = 1008;\n\n  T_LTEQ = 1009;\n\n  T_EQ = 1010;\n\n  T_NEQ = 1011;\n\n  T_QUOTASSIGN = 1012;\n\n  token = \"\";\n\n  newline_flag = 0;\n\n  meta_mode = 0;\n\n  input_str = 0;\n\n  scan_str = 0;\n\n  token_str = 0;\n\n  token_buf = 0;\n\n  lastFoundSymbol = null;\n\n  symbolsRightOfAssignment = null;\n\n  symbolsLeftOfAssignment = null;\n\n  isSymbolLeftOfAssignment = null;\n\n  scanningParameters = null;\n\n  functionInvokationsScanningStack = null;\n\n  skipRootVariableToBeSolved = false;\n\n  assignmentFound = null;\n\n  // Returns number of chars scanned and expr on stack.\n\n  // Returns zero when nothing left to scan.\n\n  // takes a string\n  scanned = \"\";\n\n  scan = function(s) {\n    if (DEBUG) {\n      console.log(\"#### scanning \" + s);\n    }\n    //if s==\"y=x\"\n    //  debugger\n    //if s==\"y\"\n    //  debugger\n    //if s==\"i=sqrt(-1)\"\n    //  debugger\n    lastFoundSymbol = null;\n    symbolsRightOfAssignment = [];\n    symbolsLeftOfAssignment = [];\n    isSymbolLeftOfAssignment = true;\n    scanningParameters = [];\n    functionInvokationsScanningStack = [\"\"];\n    assignmentFound = false;\n    scanned = s;\n    meta_mode = 0;\n    expanding++;\n    input_str = 0;\n    scan_str = 0;\n    get_next_token();\n    if (token === \"\") {\n      push(symbol(NIL));\n      expanding--;\n      return 0;\n    }\n    scan_stmt();\n    expanding--;\n    if (!assignmentFound) {\n      symbolsInExpressionsWithoutAssignments = symbolsInExpressionsWithoutAssignments.concat(symbolsLeftOfAssignment);\n    }\n    return token_str - input_str;\n  };\n\n  // takes a string\n  scan_meta = function(s) {\n    scanned = s;\n    meta_mode = 1;\n    expanding++;\n    input_str = 0;\n    scan_str = 0;\n    get_next_token();\n    if (token === \"\") {\n      push(symbol(NIL));\n      expanding--;\n      return 0;\n    }\n    scan_stmt();\n    expanding--;\n    return token_str - input_str;\n  };\n\n  scan_stmt = function() {\n    var assignmentIsOfQuotedType, existingDependencies, i, indexOfSymbolLeftOfAssignment, l1, len, len1, m1, symbolLeftOfAssignment;\n    scan_relation();\n    assignmentIsOfQuotedType = false;\n    if (token === T_QUOTASSIGN) {\n      assignmentIsOfQuotedType = true;\n    }\n    if (token === T_QUOTASSIGN || token === '=') {\n      symbolLeftOfAssignment = lastFoundSymbol;\n      if (DEBUG) {\n        console.log(\"assignment!\");\n      }\n      assignmentFound = true;\n      isSymbolLeftOfAssignment = false;\n      get_next_token();\n      push_symbol(SETQ);\n      swap();\n      // if it's a := then add a quote\n      if (assignmentIsOfQuotedType) {\n        push_symbol(QUOTE);\n      }\n      scan_relation();\n      // if it's a := then you have to list\n      // together the quote and its argument\n      if (assignmentIsOfQuotedType) {\n        list(2);\n      }\n      list(3);\n      isSymbolLeftOfAssignment = true;\n      if (codeGen) {\n        // in case of re-assignment, the symbol on the\n        // left will also be in the set of the symbols\n        // on the right. In that case just remove it from\n        // the symbols on the right.\n        indexOfSymbolLeftOfAssignment = symbolsRightOfAssignment.indexOf(symbolLeftOfAssignment);\n        if (indexOfSymbolLeftOfAssignment !== -1) {\n          symbolsRightOfAssignment.splice(indexOfSymbolLeftOfAssignment, 1);\n          symbolsHavingReassignments.push(symbolLeftOfAssignment);\n        }\n        \n        // print out the immediate dependencies\n        if (DEBUG) {\n          console.log(\"locally, \" + symbolLeftOfAssignment + \" depends on: \");\n          for (l1 = 0, len = symbolsRightOfAssignment.length; l1 < len; l1++) {\n            i = symbolsRightOfAssignment[l1];\n            console.log(\"  \" + i);\n          }\n        }\n        // ok add the local dependencies to the existing\n        // dependencies of this left-value symbol\n\n        // create the exiting dependencies list if it doesn't exist\n        if (symbolsDependencies[symbolLeftOfAssignment] == null) {\n          symbolsDependencies[symbolLeftOfAssignment] = [];\n        }\n        existingDependencies = symbolsDependencies[symbolLeftOfAssignment];\n// copy over the new dependencies to the existing\n// dependencies avoiding repetitions\n        for (m1 = 0, len1 = symbolsRightOfAssignment.length; m1 < len1; m1++) {\n          i = symbolsRightOfAssignment[m1];\n          if (existingDependencies.indexOf(i) === -1) {\n            existingDependencies.push(i);\n          }\n        }\n        return symbolsRightOfAssignment = [];\n      }\n    }\n  };\n\n  scan_relation = function() {\n    scan_expression();\n    switch (token) {\n      case T_EQ:\n        push_symbol(TESTEQ);\n        swap();\n        get_next_token();\n        scan_expression();\n        return list(3);\n      case T_NEQ:\n        push_symbol(NOT);\n        swap();\n        push_symbol(TESTEQ);\n        swap();\n        get_next_token();\n        scan_expression();\n        list(3);\n        return list(2);\n      case T_LTEQ:\n        push_symbol(TESTLE);\n        swap();\n        get_next_token();\n        scan_expression();\n        return list(3);\n      case T_GTEQ:\n        push_symbol(TESTGE);\n        swap();\n        get_next_token();\n        scan_expression();\n        return list(3);\n      case '<':\n        push_symbol(TESTLT);\n        swap();\n        get_next_token();\n        scan_expression();\n        return list(3);\n      case '>':\n        push_symbol(TESTGT);\n        swap();\n        get_next_token();\n        scan_expression();\n        return list(3);\n    }\n  };\n\n  scan_expression = function() {\n    var h;\n    h = tos;\n    switch (token) {\n      case '+':\n        get_next_token();\n        scan_term();\n        break;\n      case '-':\n        get_next_token();\n        scan_term();\n        negate();\n        break;\n      default:\n        scan_term();\n    }\n    while (newline_flag === 0 && (token === '+' || token === '-')) {\n      if (token === '+') {\n        get_next_token();\n        scan_term();\n      } else {\n        get_next_token();\n        scan_term();\n        negate();\n      }\n    }\n    if (tos - h > 1) {\n      list(tos - h);\n      push_symbol(ADD);\n      swap();\n      return cons();\n    }\n  };\n\n  is_factor = function() {\n    if ((typeof token.charCodeAt === \"function\" ? token.charCodeAt(0) : void 0) === dotprod_unicode) {\n      return 1;\n    }\n    switch (token) {\n      case '*':\n      case '/':\n        return 1;\n      case '(':\n      case T_SYMBOL:\n      case T_FUNCTION:\n      case T_INTEGER:\n      case T_DOUBLE:\n      case T_STRING:\n        if (newline_flag) { // implicit mul can't cross line\n          scan_str = token_str; // better error display\n          return 0;\n        } else {\n          return 1;\n        }\n    }\n    return 0;\n  };\n\n  simplify_1_in_products = function(tos, h) {\n    if (tos > h && isrational(stack[tos - 1]) && equaln(stack[tos - 1], 1)) {\n      return pop();\n    }\n  };\n\n  // calculate away consecutive constants\n  multiply_consecutive_constants = function(tos, h) {\n    if (tos > h + 1 && isNumericAtom(stack[tos - 2]) && isNumericAtom(stack[tos - 1])) {\n      return multiply();\n    }\n  };\n\n  scan_term = function() {\n    var h;\n    h = tos;\n    scan_factor();\n    if (parse_time_simplifications) {\n      simplify_1_in_products(tos, h);\n    }\n    while (is_factor()) {\n      if (token === '*') {\n        get_next_token();\n        scan_factor();\n      } else if (token === '/') {\n        // in case of 1/... then\n        // we scanned the 1, we get rid\n        // of it because otherwise it becomes\n        // an extra factor that wasn't there and\n        // things like\n        // 1/(2*a) become 1*(1/(2*a))\n        simplify_1_in_products(tos, h);\n        get_next_token();\n        scan_factor();\n        inverse();\n      } else if ((typeof token.charCodeAt === \"function\" ? token.charCodeAt(0) : void 0) === dotprod_unicode) {\n        get_next_token();\n        push_symbol(INNER);\n        swap();\n        scan_factor();\n        list(3);\n      } else {\n        scan_factor();\n      }\n      if (parse_time_simplifications) {\n        multiply_consecutive_constants(tos, h);\n        simplify_1_in_products(tos, h);\n      }\n    }\n    if (h === tos) {\n      return push_integer(1);\n    } else if (tos - h > 1) {\n      list(tos - h);\n      push_symbol(MULTIPLY);\n      swap();\n      return cons();\n    }\n  };\n\n  scan_power = function() {\n    if (token === '^') {\n      get_next_token();\n      push_symbol(POWER);\n      swap();\n      scan_factor();\n      return list(3);\n    }\n  };\n\n  scan_index = function(h) {\n    //console.log \"[ as index\"\n    get_next_token();\n    push_symbol(INDEX);\n    swap();\n    scan_expression();\n    while (token === ',') {\n      get_next_token();\n      scan_expression();\n    }\n    if (token !== ']') {\n      scan_error(\"] expected\");\n    }\n    get_next_token();\n    return list(tos - h);\n  };\n\n  scan_factor = function() {\n    var firstFactorIsNumber, h;\n    h = tos;\n    //console.log \"scan_factor token: \" + token\n    firstFactorIsNumber = false;\n    if (token === '(') {\n      scan_subexpr();\n    } else if (token === T_SYMBOL) {\n      scan_symbol();\n    } else if (token === T_FUNCTION) {\n      scan_function_call_with_function_name();\n    } else if (token === '[') {\n      //console.log \"[ as tensor\"\n      //debugger\n      scan_tensor();\n    } else if (token === T_INTEGER) {\n      firstFactorIsNumber = true;\n      bignum_scan_integer(token_buf);\n      get_next_token();\n    } else if (token === T_DOUBLE) {\n      firstFactorIsNumber = true;\n      bignum_scan_float(token_buf);\n      get_next_token();\n    } else if (token === T_STRING) {\n      scan_string();\n    } else {\n      scan_error(\"syntax error\");\n    }\n    // after the main initial part of the factor that\n    // we just scanned above,\n    // we can get an arbitrary about of appendages\n    // of the form ...[...](...)...\n    // If the main part is not a number, then these are all, respectively,\n    //  - index references (as opposed to tensor definition) and\n    //  - function calls without an explicit function name\n    //    (instead of subexpressions or parameters of function\n    //    definitions or function calls with an explicit function\n    //    name), respectively\n    while (token === '[' || token === '(' && newline_flag === 0 && !firstFactorIsNumber) {\n      if (token === '[') {\n        scan_index(h);\n      } else if (token === '(') {\n        //console.log \"( as function call without function name \"\n        scan_function_call_without_function_name();\n      }\n    }\n    while (token === '!') {\n      get_next_token();\n      push_symbol(FACTORIAL);\n      swap();\n      list(2);\n    }\n    while ((typeof token.charCodeAt === \"function\" ? token.charCodeAt(0) : void 0) === transpose_unicode) {\n      get_next_token();\n      push_symbol(TRANSPOSE);\n      swap();\n      list(2);\n    }\n    return scan_power();\n  };\n\n  addSymbolRightOfAssignment = function(theSymbol) {\n    var i, l1, prefixVar, ref2;\n    if (predefinedSymbolsInGlobalScope_doNotTrackInDependencies.indexOf(theSymbol) === -1 && symbolsRightOfAssignment.indexOf(theSymbol) === -1 && symbolsRightOfAssignment.indexOf(\"'\" + theSymbol) === -1 && !skipRootVariableToBeSolved) {\n      if (DEBUG) {\n        console.log(\"... adding symbol: \" + theSymbol + \" to the set of the symbols right of assignment\");\n      }\n      prefixVar = \"\";\n      for (i = l1 = 1, ref2 = functionInvokationsScanningStack.length; (1 <= ref2 ? l1 < ref2 : l1 > ref2); i = 1 <= ref2 ? ++l1 : --l1) {\n        if (functionInvokationsScanningStack[i] !== \"\") {\n          prefixVar += functionInvokationsScanningStack[i] + \"_\" + i + \"_\";\n        }\n      }\n      theSymbol = prefixVar + theSymbol;\n      return symbolsRightOfAssignment.push(theSymbol);\n    }\n  };\n\n  addSymbolLeftOfAssignment = function(theSymbol) {\n    var i, l1, prefixVar, ref2;\n    if (predefinedSymbolsInGlobalScope_doNotTrackInDependencies.indexOf(theSymbol) === -1 && symbolsLeftOfAssignment.indexOf(theSymbol) === -1 && symbolsLeftOfAssignment.indexOf(\"'\" + theSymbol) === -1 && !skipRootVariableToBeSolved) {\n      if (DEBUG) {\n        console.log(\"... adding symbol: \" + theSymbol + \" to the set of the symbols left of assignment\");\n      }\n      prefixVar = \"\";\n      for (i = l1 = 1, ref2 = functionInvokationsScanningStack.length; (1 <= ref2 ? l1 < ref2 : l1 > ref2); i = 1 <= ref2 ? ++l1 : --l1) {\n        if (functionInvokationsScanningStack[i] !== \"\") {\n          prefixVar += functionInvokationsScanningStack[i] + \"_\" + i + \"_\";\n        }\n      }\n      theSymbol = prefixVar + theSymbol;\n      return symbolsLeftOfAssignment.push(theSymbol);\n    }\n  };\n\n  scan_symbol = function() {\n    if (token !== T_SYMBOL) {\n      scan_error(\"symbol expected\");\n    }\n    if (meta_mode && token_buf.length === 1) {\n      switch (token_buf[0]) {\n        case 'a':\n          push(symbol(METAA));\n          break;\n        case 'b':\n          push(symbol(METAB));\n          break;\n        case 'x':\n          push(symbol(METAX));\n          break;\n        default:\n          push(usr_symbol(token_buf));\n      }\n    } else {\n      push(usr_symbol(token_buf));\n    }\n    //console.log \"found symbol: \" + token_buf\n    if (scanningParameters.length === 0) {\n      if (DEBUG) {\n        console.log(\"out of scanning parameters, processing \" + token_buf);\n      }\n      lastFoundSymbol = token_buf;\n      if (isSymbolLeftOfAssignment) {\n        addSymbolLeftOfAssignment(token_buf);\n      }\n    } else {\n      if (DEBUG) {\n        console.log(\"still scanning parameters, skipping \" + token_buf);\n      }\n      if (isSymbolLeftOfAssignment) {\n        addSymbolRightOfAssignment(\"'\" + token_buf);\n      }\n    }\n    if (DEBUG) {\n      console.log(\"found symbol: \" + token_buf + \" left of assignment: \" + isSymbolLeftOfAssignment);\n    }\n    if (!isSymbolLeftOfAssignment) {\n      addSymbolRightOfAssignment(token_buf);\n    }\n    return get_next_token();\n  };\n\n  scan_string = function() {\n    push(new_string(token_buf));\n    return get_next_token();\n  };\n\n  scan_function_call_with_function_name = function() {\n    var functionName, i, l1, n, p, ref2;\n    if (DEBUG) {\n      console.log(\"-- scan_function_call_with_function_name start\");\n    }\n    n = 1; // the parameter number as we scan parameters\n    p = new U();\n    p = usr_symbol(token_buf);\n    push(p);\n    functionName = token_buf;\n    if (functionName === \"roots\" || functionName === \"defint\" || functionName === \"sum\" || functionName === \"product\" || functionName === \"for\") {\n      functionInvokationsScanningStack.push(token_buf);\n    }\n    lastFoundSymbol = token_buf;\n    if (!isSymbolLeftOfAssignment) {\n      addSymbolRightOfAssignment(token_buf);\n    }\n    get_next_token(); // open parens\n    get_next_token(); // 1st parameter\n    scanningParameters.push(true);\n    if (token !== ')') {\n      scan_stmt();\n      n++;\n      while (token === ',') {\n        get_next_token();\n        // roots' disappearing variable, if there, is the second one\n        if (n === 2 && functionInvokationsScanningStack[functionInvokationsScanningStack.length - 1].indexOf(\"roots\") !== -1) {\n          symbolsRightOfAssignment = symbolsRightOfAssignment.filter(function(x) {\n            return !(new RegExp(\"roots_\" + (functionInvokationsScanningStack.length - 1) + \"_\" + token_buf)).test(x);\n          });\n          skipRootVariableToBeSolved = true;\n        }\n        // sums' disappearing variable, is alsways the second one\n        if (n === 2 && functionInvokationsScanningStack[functionInvokationsScanningStack.length - 1].indexOf(\"sum\") !== -1) {\n          symbolsRightOfAssignment = symbolsRightOfAssignment.filter(function(x) {\n            return !(new RegExp(\"sum_\" + (functionInvokationsScanningStack.length - 1) + \"_\" + token_buf)).test(x);\n          });\n          skipRootVariableToBeSolved = true;\n        }\n        // product's disappearing variable, is alsways the second one\n        if (n === 2 && functionInvokationsScanningStack[functionInvokationsScanningStack.length - 1].indexOf(\"product\") !== -1) {\n          symbolsRightOfAssignment = symbolsRightOfAssignment.filter(function(x) {\n            return !(new RegExp(\"product_\" + (functionInvokationsScanningStack.length - 1) + \"_\" + token_buf)).test(x);\n          });\n          skipRootVariableToBeSolved = true;\n        }\n        // for's disappearing variable, is alsways the second one\n        if (n === 2 && functionInvokationsScanningStack[functionInvokationsScanningStack.length - 1].indexOf(\"for\") !== -1) {\n          symbolsRightOfAssignment = symbolsRightOfAssignment.filter(function(x) {\n            return !(new RegExp(\"for_\" + (functionInvokationsScanningStack.length - 1) + \"_\" + token_buf)).test(x);\n          });\n          skipRootVariableToBeSolved = true;\n        }\n        // defint's disappearing variables can be in positions 2,5,8...\n        if (functionInvokationsScanningStack[functionInvokationsScanningStack.length - 1].indexOf(\"defint\") !== -1 && (n === 2 || (n > 2 && ((n - 2) % 3 === 0)))) {\n          symbolsRightOfAssignment = symbolsRightOfAssignment.filter(function(x) {\n            return !(new RegExp(\"defint_\" + (functionInvokationsScanningStack.length - 1) + \"_\" + token_buf)).test(x);\n          });\n          skipRootVariableToBeSolved = true;\n        }\n        scan_stmt();\n        skipRootVariableToBeSolved = false;\n        n++;\n      }\n      // todo refactor this, there are two copies\n      // this catches the case where the \"roots\" variable is not specified\n      if (n === 2 && functionInvokationsScanningStack[functionInvokationsScanningStack.length - 1].indexOf(\"roots\") !== -1) {\n        symbolsRightOfAssignment = symbolsRightOfAssignment.filter(function(x) {\n          return !(new RegExp(\"roots_\" + (functionInvokationsScanningStack.length - 1) + \"_\" + \"x\")).test(x);\n        });\n      }\n    }\n    scanningParameters.pop();\n    for (i = l1 = 0, ref2 = symbolsRightOfAssignment.length; (0 <= ref2 ? l1 <= ref2 : l1 >= ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      if (symbolsRightOfAssignment[i] != null) {\n        if (functionName === \"roots\") {\n          symbolsRightOfAssignment[i] = symbolsRightOfAssignment[i].replace(new RegExp(\"roots_\" + (functionInvokationsScanningStack.length - 1) + \"_\"), \"\");\n        }\n        if (functionName === \"defint\") {\n          symbolsRightOfAssignment[i] = symbolsRightOfAssignment[i].replace(new RegExp(\"defint_\" + (functionInvokationsScanningStack.length - 1) + \"_\"), \"\");\n        }\n        if (functionName === \"sum\") {\n          symbolsRightOfAssignment[i] = symbolsRightOfAssignment[i].replace(new RegExp(\"sum_\" + (functionInvokationsScanningStack.length - 1) + \"_\"), \"\");\n        }\n        if (functionName === \"product\") {\n          symbolsRightOfAssignment[i] = symbolsRightOfAssignment[i].replace(new RegExp(\"product_\" + (functionInvokationsScanningStack.length - 1) + \"_\"), \"\");\n        }\n        if (functionName === \"for\") {\n          symbolsRightOfAssignment[i] = symbolsRightOfAssignment[i].replace(new RegExp(\"for_\" + (functionInvokationsScanningStack.length - 1) + \"_\"), \"\");\n        }\n      }\n    }\n    if (token !== ')') {\n      scan_error(\") expected\");\n    }\n    get_next_token();\n    list(n);\n    if (functionName === \"roots\" || functionName === \"defint\" || functionName === \"sum\" || functionName === \"product\" || functionName === \"for\") {\n      functionInvokationsScanningStack.pop();\n    }\n    if (functionName === symbol(PATTERN).printname) {\n      patternHasBeenFound = true;\n    }\n    if (DEBUG) {\n      return console.log(\"-- scan_function_call_with_function_name end\");\n    }\n  };\n\n  scan_function_call_without_function_name = function() {\n    var n;\n    if (DEBUG) {\n      console.log(\"-- scan_function_call_without_function_name start\");\n    }\n    // the function will have to be looked up\n    // at runtime (i.e. we need to evaulate something to find it\n    // e.g. it might be inside a tensor, so we'd need to evaluate\n    // a tensor element access in that case)\n    push_symbol(EVAL);\n    swap();\n    list(2);\n    n = 1; // the parameter number as we scan parameters\n    get_next_token(); // left paren\n    scanningParameters.push(true);\n    if (token !== ')') {\n      scan_stmt();\n      n++;\n      while (token === ',') {\n        get_next_token();\n        scan_stmt();\n        n++;\n      }\n    }\n    scanningParameters.pop();\n    if (token !== ')') {\n      scan_error(\") expected\");\n    }\n    get_next_token();\n    list(n);\n    if (DEBUG) {\n      return console.log(\"-- scan_function_call_without_function_name end: \" + stack[tos - 1]);\n    }\n  };\n\n  // scan subexpression\n  scan_subexpr = function() {\n    var n;\n    n = 0;\n    if (token !== '(') {\n      scan_error(\"( expected\");\n    }\n    get_next_token();\n    scan_stmt();\n    if (token !== ')') {\n      scan_error(\") expected\");\n    }\n    return get_next_token();\n  };\n\n  scan_tensor = function() {\n    var n;\n    n = 0;\n    if (token !== '[') {\n      scan_error(\"[ expected\");\n    }\n    get_next_token();\n    //console.log \"scanning the next statement\"\n    scan_stmt();\n    n = 1;\n    while (token === ',') {\n      get_next_token();\n      scan_stmt();\n      n++;\n    }\n    //console.log \"building tensor with elements number: \" + n\n    build_tensor(n);\n    if (token !== ']') {\n      scan_error(\"] expected\");\n    }\n    return get_next_token();\n  };\n\n  scan_error = function(errmsg) {\n    errorMessage = \"\";\n    // try not to put question mark on orphan line\n    while (input_str !== scan_str) {\n      if ((scanned[input_str] === '\\n' || scanned[input_str] === '\\r') && input_str + 1 === scan_str) {\n        break;\n      }\n      errorMessage += scanned[input_str++];\n    }\n    errorMessage += \" ? \";\n    while (scanned[input_str] && (scanned[input_str] !== '\\n' && scanned[input_str] !== '\\r')) {\n      errorMessage += scanned[input_str++];\n    }\n    errorMessage += '\\n';\n    return stop(errmsg);\n  };\n\n  // There are n expressions on the stack, possibly tensors.\n\n  // This function assembles the stack expressions into a single tensor.\n\n  // For example, at the top level of the expression ((a,b),(c,d)), the vectors\n  // (a,b) and (c,d) would be on the stack.\n\n  // takes an integer\n  build_tensor = function(n) {\n    var i, l1, ref2;\n    // int i, j, k, ndim, nelem\n    i = 0;\n    save();\n    p2 = alloc_tensor(n);\n    p2.tensor.ndim = 1;\n    p2.tensor.dim[0] = n;\n    for (i = l1 = 0, ref2 = n; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      p2.tensor.elem[i] = stack[tos - n + i];\n    }\n    check_tensor_dimensions(p2);\n    moveTos(tos - n);\n    push(p2);\n    return restore();\n  };\n\n  get_next_token = function() {\n    newline_flag = 0;\n    while (1) {\n      get_token();\n      if (token !== T_NEWLINE) {\n        break;\n      }\n      newline_flag = 1;\n    }\n    if (DEBUG) {\n      return console.log(\"get_next_token token: \" + token);\n    }\n  };\n\n  //if token == ')'\n  //  debugger\n  get_token = function() {\n    // skip spaces\n    while (isspace(scanned[scan_str])) {\n      if (scanned[scan_str] === '\\n' || scanned[scan_str] === '\\r') {\n        token = T_NEWLINE;\n        scan_str++;\n        return;\n      }\n      scan_str++;\n    }\n    token_str = scan_str;\n    // end of string?\n    if (scan_str === scanned.length) {\n      token = \"\";\n      return;\n    }\n    // number?\n    if (isdigit(scanned[scan_str]) || scanned[scan_str] === '.') {\n      while (isdigit(scanned[scan_str])) {\n        scan_str++;\n      }\n      if (scanned[scan_str] === '.') {\n        scan_str++;\n        while (isdigit(scanned[scan_str])) {\n          scan_str++;\n        }\n        if (scanned[scan_str] === 'e' && (scanned[scan_str + 1] === '+' || scanned[scan_str + 1] === '-' || isdigit(scanned[scan_str + 1]))) {\n          scan_str += 2;\n          while (isdigit(scanned[scan_str])) {\n            scan_str++;\n          }\n        }\n        token = T_DOUBLE;\n      } else {\n        token = T_INTEGER;\n      }\n      update_token_buf(token_str, scan_str);\n      return;\n    }\n    // symbol?\n    if (isalpha(scanned[scan_str])) {\n      while (isalnumorunderscore(scanned[scan_str])) {\n        scan_str++;\n      }\n      if (scanned[scan_str] === '(') {\n        token = T_FUNCTION;\n      } else {\n        token = T_SYMBOL;\n      }\n      update_token_buf(token_str, scan_str);\n      return;\n    }\n    // string ?\n    if (scanned[scan_str] === '\"') {\n      scan_str++;\n      while (scanned[scan_str] !== '\"') {\n        //if (scan_str == scanned.length || scanned[scan_str] == '\\n' || scanned[scan_str] == '\\r')\n        if (scan_str === scanned.length - 1) {\n          scan_str++;\n          scan_error(\"runaway string\");\n          scan_str--;\n        }\n        scan_str++;\n      }\n      scan_str++;\n      token = T_STRING;\n      update_token_buf(token_str + 1, scan_str - 1);\n      return;\n    }\n    // comment?\n    if (scanned[scan_str] === '#' || scanned[scan_str] === '-' && scanned[scan_str + 1] === '-') {\n      while (scanned[scan_str] && scanned[scan_str] !== '\\n' && scanned[scan_str] !== '\\r') {\n        scan_str++;\n      }\n      if (scanned[scan_str]) {\n        scan_str++;\n      }\n      token = T_NEWLINE;\n      return;\n    }\n    // quote-assignment\n    if (scanned[scan_str] === ':' && scanned[scan_str + 1] === '=') {\n      scan_str += 2;\n      token = T_QUOTASSIGN;\n      return;\n    }\n    // relational operator?\n    if (scanned[scan_str] === '=' && scanned[scan_str + 1] === '=') {\n      scan_str += 2;\n      token = T_EQ;\n      return;\n    }\n    // != operator. It's a little odd because\n    // \"!\" is not a \"not\", which would make things consistent.\n    // (it's used for factorial).\n    // An alternative would be to use \"<>\" but it's not used\n    // a lot in other languages...\n    if (scanned[scan_str] === '!' && scanned[scan_str + 1] === '=') {\n      scan_str += 2;\n      token = T_NEQ;\n      return;\n    }\n    if (scanned[scan_str] === '<' && scanned[scan_str + 1] === '=') {\n      scan_str += 2;\n      token = T_LTEQ;\n      return;\n    }\n    if (scanned[scan_str] === '>' && scanned[scan_str + 1] === '=') {\n      scan_str += 2;\n      token = T_GTEQ;\n      return;\n    }\n    // single char token\n    return token = scanned[scan_str++];\n  };\n\n  // both strings\n  update_token_buf = function(a, b) {\n    return token_buf = scanned.substring(a, b);\n  };\n\n  $.scan = scan;\n\n  //-----------------------------------------------------------------------------\n\n  //  Author : philippe.billet@noos.fr\n\n  //  sgn sign function\n\n  //-----------------------------------------------------------------------------\n  Eval_sgn = function() {\n    push(cadr(p1));\n    Eval();\n    return sgn();\n  };\n\n  sgn = function() {\n    save();\n    yysgn();\n    return restore();\n  };\n\n  //define X p1\n  yysgn = function() {\n    p1 = pop();\n    if (isdouble(p1)) {\n      if (p1.d > 0) {\n        push_integer(1);\n        return;\n      } else {\n        if (p1.d === 0) {\n          push_integer(1);\n          return;\n        } else {\n          push_integer(-1);\n          return;\n        }\n      }\n    }\n    if (isrational(p1)) {\n      if (MSIGN(mmul(p1.q.a, p1.q.b)) === -1) {\n        push_integer(-1);\n        return;\n      } else {\n        if (MZERO(mmul(p1.q.a, p1.q.b))) {\n          push_integer(0);\n          return;\n        } else {\n          push_integer(1);\n          return;\n        }\n      }\n    }\n    if (iscomplexnumber(p1)) {\n      push_integer(-1);\n      push(p1);\n      absval();\n      power();\n      push(p1);\n      multiply();\n      return;\n    }\n    if (isnegativeterm(p1)) {\n      push_symbol(SGN);\n      push(p1);\n      negate();\n      list(2);\n      push_integer(-1);\n      multiply();\n      return;\n    }\n    /*\n    push_integer(2)\n    push(p1)\n    heaviside()\n    multiply()\n    push_integer(-1)\n    add()\n    */\n    push_symbol(SGN);\n    push(p1);\n    return list(2);\n  };\n\n  // shape of tensor\n  Eval_shape = function() {\n    push(cadr(p1));\n    Eval();\n    return shape();\n  };\n\n  shape = function() {\n    var ai, an, i, l1, m1, ndim, ref2, ref3, t;\n    i = 0;\n    ndim = 0;\n    t = 0;\n    ai = [];\n    an = [];\n    for (i = l1 = 0, ref2 = MAXDIM; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      ai[i] = 0;\n      an[i] = 0;\n    }\n    //U **a, **b\n    save();\n    p1 = pop();\n    if (!istensor(p1)) {\n      if (!isZeroAtomOrTensor(p1)) {\n        stop(\"transpose: tensor expected, 1st arg is not a tensor\");\n      }\n      push(zero);\n      restore();\n      return;\n    }\n    ndim = p1.tensor.ndim;\n    p2 = alloc_tensor(ndim);\n    p2.tensor.ndim = 1;\n    p2.tensor.dim[0] = ndim;\n    for (i = m1 = 0, ref3 = ndim; (0 <= ref3 ? m1 < ref3 : m1 > ref3); i = 0 <= ref3 ? ++m1 : --m1) {\n      push_integer(p1.tensor.dim[i]);\n      p2.tensor.elem[i] = pop();\n    }\n    push(p2);\n    return restore();\n  };\n\n  /*\n   Simplify factorials\n\n  The following script\n\n    F(n,k) = k binomial(n,k)\n    (F(n,k) + F(n,k-1)) / F(n+1,k)\n\n  generates\n\n         k! n!             n! (1 - k + n)!              k! n!\n   -------------------- + -------------------- - ----------------------\n   (-1 + k)! (1 + n)!     (1 + n)! (-k + n)!     k (-1 + k)! (1 + n)!\n\n  Simplify each term to get\n\n      k       1 - k + n       1\n   ------- + ----------- - -------\n    1 + n       1 + n       1 + n\n\n  Then simplify the sum to get\n\n      n\n   -------\n    1 + n\n\n  */\n  // simplify factorials term-by-term\n  Eval_simfac = function() {\n    push(cadr(p1));\n    Eval();\n    return simfac();\n  };\n\n  //if 1\n  simfac = function() {\n    var h;\n    h = 0;\n    save();\n    p1 = pop();\n    if (car(p1) === symbol(ADD)) {\n      h = tos;\n      p1 = cdr(p1);\n      while (p1 !== symbol(NIL)) {\n        push(car(p1));\n        simfac_term();\n        p1 = cdr(p1);\n      }\n      add_all(tos - h);\n    } else {\n      push(p1);\n      simfac_term();\n    }\n    return restore();\n  };\n\n  //else\n  /*\n  void\n  simfac(void)\n  {\n    int h\n    save()\n    p1 = pop()\n    if (car(p1) == symbol(ADD)) {\n      h = tos\n      p1 = cdr(p1)\n      while (p1 != symbol(NIL)) {\n        push(car(p1))\n        simfac_term()\n        p1 = cdr(p1)\n      }\n      addk(tos - h)\n      p1 = pop()\n      if (find(p1, symbol(FACTORIAL))) {\n        push(p1)\n        if (car(p1) == symbol(ADD)) {\n          Condense()\n          simfac_term()\n        }\n      }\n    } else {\n      push(p1)\n      simfac_term()\n    }\n    restore()\n  }\n\n  #endif\n   */\n  simfac_term = function() {\n    var doNothing, h;\n    h = 0;\n    save();\n    p1 = pop();\n    // if not a product of factors then done\n    if (car(p1) !== symbol(MULTIPLY)) {\n      push(p1);\n      restore();\n      return;\n    }\n    // push all factors\n    h = tos;\n    p1 = cdr(p1);\n    while (p1 !== symbol(NIL)) {\n      push(car(p1));\n      p1 = cdr(p1);\n    }\n    // keep trying until no more to do\n    while (yysimfac(h)) {\n      doNothing = 1;\n    }\n    multiply_all_noexpand(tos - h);\n    return restore();\n  };\n\n  // try all pairs of factors\n  yysimfac = function(h) {\n    var i, j, l1, m1, ref2, ref3, ref4, ref5;\n    i = 0;\n    j = 0;\n    for (i = l1 = ref2 = h, ref3 = tos; (ref2 <= ref3 ? l1 < ref3 : l1 > ref3); i = ref2 <= ref3 ? ++l1 : --l1) {\n      p1 = stack[i];\n      for (j = m1 = ref4 = h, ref5 = tos; (ref4 <= ref5 ? m1 < ref5 : m1 > ref5); j = ref4 <= ref5 ? ++m1 : --m1) {\n        if (i === j) {\n          continue;\n        }\n        p2 = stack[j];\n        //  n! / n    ->  (n - 1)!\n        if (car(p1) === symbol(FACTORIAL) && car(p2) === symbol(POWER) && isminusone(caddr(p2)) && equal(cadr(p1), cadr(p2))) {\n          push(cadr(p1));\n          push(one);\n          subtract();\n          factorial();\n          stack[i] = pop();\n          stack[j] = one;\n          return 1;\n        }\n        //  n / n!    ->  1 / (n - 1)!\n        if (car(p2) === symbol(POWER) && isminusone(caddr(p2)) && caadr(p2) === symbol(FACTORIAL) && equal(p1, cadadr(p2))) {\n          push(p1);\n          push_integer(-1);\n          add();\n          factorial();\n          reciprocate();\n          stack[i] = pop();\n          stack[j] = one;\n          return 1;\n        }\n        //  (n + 1) n!  ->  (n + 1)!\n        if (car(p2) === symbol(FACTORIAL)) {\n          push(p1);\n          push(cadr(p2));\n          subtract();\n          p3 = pop();\n          if (isplusone(p3)) {\n            push(p1);\n            factorial();\n            stack[i] = pop();\n            stack[j] = one;\n            return 1;\n          }\n        }\n        //  1 / ((n + 1) n!)  ->  1 / (n + 1)!\n        if (car(p1) === symbol(POWER) && isminusone(caddr(p1)) && car(p2) === symbol(POWER) && isminusone(caddr(p2)) && caadr(p2) === symbol(FACTORIAL)) {\n          push(cadr(p1));\n          push(cadr(cadr(p2)));\n          subtract();\n          p3 = pop();\n          if (isplusone(p3)) {\n            push(cadr(p1));\n            factorial();\n            reciprocate();\n            stack[i] = pop();\n            stack[j] = one;\n            return 1;\n          }\n        }\n        //  (n + 1)! / n!  ->  n + 1\n\n        //  n! / (n + 1)!  ->  1 / (n + 1)\n        if (car(p1) === symbol(FACTORIAL) && car(p2) === symbol(POWER) && isminusone(caddr(p2)) && caadr(p2) === symbol(FACTORIAL)) {\n          push(cadr(p1));\n          push(cadr(cadr(p2)));\n          subtract();\n          p3 = pop();\n          if (isplusone(p3)) {\n            stack[i] = cadr(p1);\n            stack[j] = one;\n            return 1;\n          }\n          if (isminusone(p3)) {\n            push(cadr(cadr(p2)));\n            reciprocate();\n            stack[i] = pop();\n            stack[j] = one;\n            return 1;\n          }\n          if (equaln(p3, 2)) {\n            stack[i] = cadr(p1);\n            push(cadr(p1));\n            push_integer(-1);\n            add();\n            stack[j] = pop();\n            return 1;\n          }\n          if (equaln(p3, -2)) {\n            push(cadr(cadr(p2)));\n            reciprocate();\n            stack[i] = pop();\n            push(cadr(cadr(p2)));\n            push_integer(-1);\n            add();\n            reciprocate();\n            stack[j] = pop();\n            return 1;\n          }\n        }\n      }\n    }\n    return 0;\n  };\n\n  DEBUG_SIMPLIFY = false;\n\n  Eval_simplify = function() {\n    push(cadr(p1));\n    runUserDefinedSimplifications();\n    Eval();\n    return simplify();\n  };\n\n  runUserDefinedSimplifications = function() {\n    var atLeastOneSuccessInRouldOfRulesApplications, eachConsecutiveRuleApplication, eachSimplification, l1, len, len1, m1, numberOfRulesApplications, originalexpanding, success;\n    // -----------------------\n    // unfortunately for the time being user\n    // specified simplifications are only\n    // run in things which don't contain\n    // integrals.\n    // Doesn't work yet, could be because of\n    // some clobbering as \"transform\" is called\n    // recursively?\n    if (userSimplificationsInListForm.length !== 0 && !Find(cadr(p1), symbol(INTEGRAL))) {\n      originalexpanding = expanding;\n      expanding = false;\n      if (DEBUG_SIMPLIFY) {\n        console.log(\"runUserDefinedSimplifications passed: \" + stack[tos - 1].toString());\n      }\n      Eval();\n      if (DEBUG_SIMPLIFY) {\n        console.log(\"runUserDefinedSimplifications after eval no expanding: \" + stack[tos - 1].toString());\n      }\n      expanding = originalexpanding;\n      p1 = stack[tos - 1];\n      if (DEBUG_SIMPLIFY) {\n        console.log(\"patterns to be checked: \");\n      }\n      for (l1 = 0, len = userSimplificationsInListForm.length; l1 < len; l1++) {\n        eachSimplification = userSimplificationsInListForm[l1];\n        if (DEBUG_SIMPLIFY) {\n          console.log(\"...\" + eachSimplification);\n        }\n      }\n      atLeastOneSuccessInRouldOfRulesApplications = true;\n      numberOfRulesApplications = 0;\n      while (atLeastOneSuccessInRouldOfRulesApplications && numberOfRulesApplications < MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES) {\n        atLeastOneSuccessInRouldOfRulesApplications = false;\n        numberOfRulesApplications++;\n        for (m1 = 0, len1 = userSimplificationsInListForm.length; m1 < len1; m1++) {\n          eachSimplification = userSimplificationsInListForm[m1];\n          success = true;\n          eachConsecutiveRuleApplication = 0;\n          while (success && eachConsecutiveRuleApplication < MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE) {\n            eachConsecutiveRuleApplication++;\n            if (DEBUG_SIMPLIFY) {\n              console.log(\"simplify - tos: \" + tos + \" checking pattern: \" + eachSimplification + \" on: \" + p1);\n            }\n            push_symbol(NIL);\n            success = transform(eachSimplification, true);\n            if (success) {\n              atLeastOneSuccessInRouldOfRulesApplications = true;\n            }\n            p1 = stack[tos - 1];\n            if (DEBUG_SIMPLIFY) {\n              console.log(\"p1 at this stage of simplification: \" + p1);\n            }\n          }\n          if (eachConsecutiveRuleApplication === MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE) {\n            stop(\"maximum application of single transformation rule exceeded: \" + eachSimplification);\n          }\n        }\n      }\n      if (numberOfRulesApplications === MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES) {\n        stop(\"maximum application of all transformation rules exceeded \");\n      }\n      if (DEBUG_SIMPLIFY) {\n        console.log(\"METAX = \" + get_binding(symbol(METAX)));\n      }\n      if (DEBUG_SIMPLIFY) {\n        console.log(\"METAA = \" + get_binding(symbol(METAA)));\n      }\n      if (DEBUG_SIMPLIFY) {\n        return console.log(\"METAB = \" + get_binding(symbol(METAB)));\n      }\n    }\n  };\n\n  // ------------------------\n  simplifyForCodeGeneration = function() {\n    save();\n    runUserDefinedSimplifications();\n    codeGen = true;\n    // in \"codeGen\" mode we completely\n    // eval and simplify the function bodies\n    // because we really want to resolve all\n    // the variables indirections and apply\n    // all the simplifications we can.\n    simplify_main();\n    codeGen = false;\n    return restore();\n  };\n\n  simplify = function() {\n    save();\n    simplify_main();\n    return restore();\n  };\n\n  simplify_main = function() {\n    var args, fbody;\n    p1 = pop();\n    // when we do code generation, we proceed to\n    // fully evaluate and simplify the body of\n    // a function, so we resolve all variables\n    // indirections and we simplify everything\n    // we can given the current assignments.\n    if (codeGen && car(p1) === symbol(FUNCTION)) {\n      fbody = cadr(p1);\n      push(fbody);\n      // let's simplify the body so we give it a\n      // compact form\n      eval();\n      simplify();\n      p3 = pop();\n      // replace the evaled body\n      args = caddr(p1);\n      push_symbol(FUNCTION);\n      push(p3);\n      push(args);\n      list(3);\n      p1 = pop();\n    }\n    if (istensor(p1)) {\n      simplify_tensor();\n      return;\n    }\n    if (Find(p1, symbol(FACTORIAL))) {\n      push(p1);\n      simfac();\n      p2 = pop();\n      push(p1);\n      rationalize();\n      simfac();\n      p3 = pop();\n      if (count(p2) < count(p3)) {\n        p1 = p2;\n      } else {\n        p1 = p3;\n      }\n    }\n    f10();\n    if (DEBUG_SIMPLIFY) {\n      console.log(\"f10: \" + p1.toString());\n    }\n    f1();\n    if (DEBUG_SIMPLIFY) {\n      console.log(\"f1: \" + p1.toString());\n    }\n    f2();\n    if (DEBUG_SIMPLIFY) {\n      console.log(\"f2: \" + p1.toString());\n    }\n    f3();\n    if (DEBUG_SIMPLIFY) {\n      console.log(\"f3: \" + p1.toString());\n    }\n    f4();\n    if (DEBUG_SIMPLIFY) {\n      console.log(\"f4: \" + p1.toString());\n    }\n    f5();\n    if (DEBUG_SIMPLIFY) {\n      console.log(\"f5: \" + p1.toString());\n    }\n    f9();\n    if (DEBUG_SIMPLIFY) {\n      console.log(\"f9: \" + p1.toString());\n    }\n    simplify_polarRect();\n    if (do_simplify_nested_radicals) {\n      // if there is some de-nesting then\n      // re-run a simplification because\n      // the shape of the expression might\n      // have changed significantly.\n      // e.g. simplify(14^(1/2) - (16 - 4*7^(1/2))^(1/2))\n      // needs some more semplification after the de-nesting.\n      if (simplify_nested_radicals()) {\n        if (DEBUG_SIMPLIFY) {\n          console.log(\"de-nesting successful into: \" + p1.toString());\n        }\n        push(p1);\n        simplify();\n        return;\n      }\n    }\n    simplify_rectToClock();\n    simplify_rational_expressions();\n    return push(p1);\n  };\n\n  simplify_tensor = function() {\n    var i, l1, m1, ref2, ref3;\n    i = 0;\n    p2 = alloc_tensor(p1.tensor.nelem);\n    p2.tensor.ndim = p1.tensor.ndim;\n    for (i = l1 = 0, ref2 = p1.tensor.ndim; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      p2.tensor.dim[i] = p1.tensor.dim[i];\n    }\n    for (i = m1 = 0, ref3 = p1.tensor.nelem; (0 <= ref3 ? m1 < ref3 : m1 > ref3); i = 0 <= ref3 ? ++m1 : --m1) {\n      push(p1.tensor.elem[i]);\n      simplify();\n      p2.tensor.elem[i] = pop();\n    }\n    check_tensor_dimensions(p2);\n    if (isZeroAtomOrTensor(p2)) {\n      p2 = zero; // null tensor becomes scalar zero\n    }\n    return push(p2);\n  };\n\n  // try rationalizing\n  f1 = function() {\n    if (car(p1) !== symbol(ADD)) {\n      return;\n    }\n    push(p1);\n    rationalize();\n    p2 = pop();\n    if (count(p2) < count(p1)) {\n      return p1 = p2;\n    }\n  };\n\n  // try condensing\n  f2 = function() {\n    if (car(p1) !== symbol(ADD)) {\n      return;\n    }\n    push(p1);\n    Condense();\n    p2 = pop();\n    if (count(p2) <= count(p1)) {\n      return p1 = p2;\n    }\n  };\n\n  // this simplifies forms like (A-B) / (B-A)\n  f3 = function() {\n    push(p1);\n    rationalize();\n    negate();\n    rationalize();\n    negate();\n    rationalize();\n    p2 = pop();\n    if (count(p2) < count(p1)) {\n      return p1 = p2;\n    }\n  };\n\n  f10 = function() {\n    var a, b, carp1, miao, originalexpanding;\n    carp1 = car(p1);\n    miao = cdr(p1);\n    if (carp1 === symbol(MULTIPLY) || isinnerordot(p1)) {\n      // both operands a transpose?\n      if ((car(car(cdr(p1))) === symbol(TRANSPOSE)) && (car(car(cdr(cdr(p1)))) === symbol(TRANSPOSE))) {\n        if (DEBUG_SIMPLIFY) {\n          console.log(\"maybe collecting a transpose \" + p1);\n        }\n        a = cadr(car(cdr(p1)));\n        b = cadr(car(cdr(cdr(p1))));\n        if (carp1 === symbol(MULTIPLY)) {\n          push(a);\n          push(b);\n          multiply();\n        } else if (isinnerordot(p1)) {\n          push(b);\n          push(a);\n          inner();\n        }\n        push_integer(1);\n        push_integer(2);\n        originalexpanding = expanding;\n        expanding = false;\n        transpose();\n        expanding = originalexpanding;\n        p2 = pop();\n        if (count(p2) < count(p1)) {\n          p1 = p2;\n        }\n        if (DEBUG_SIMPLIFY) {\n          return console.log(\"collecting a transpose \" + p2);\n        }\n      }\n    }\n  };\n\n  // try expanding denominators\n  f4 = function() {\n    if (isZeroAtomOrTensor(p1)) {\n      return;\n    }\n    push(p1);\n    rationalize();\n    inverse();\n    rationalize();\n    inverse();\n    rationalize();\n    p2 = pop();\n    if (count(p2) < count(p1)) {\n      return p1 = p2;\n    }\n  };\n\n  // simplifies trig forms\n  simplify_trig = function() {\n    save();\n    p1 = pop();\n    f5();\n    push(p1);\n    return restore();\n  };\n\n  f5 = function() {\n    if (Find(p1, symbol(SIN)) === 0 && Find(p1, symbol(COS)) === 0) {\n      return;\n    }\n    p2 = p1;\n    trigmode = 1;\n    push(p2);\n    Eval();\n    p3 = pop();\n    trigmode = 2;\n    push(p2);\n    Eval();\n    p4 = pop();\n    trigmode = 0;\n    if (count(p4) < count(p3) || nterms(p4) < nterms(p3)) {\n      p3 = p4;\n    }\n    if (count(p3) < count(p1) || nterms(p3) < nterms(p1)) {\n      return p1 = p3;\n    }\n  };\n\n  // if it's a sum then try to simplify each term\n  f9 = function() {\n    var oldp1, oldp2;\n    if (car(p1) !== symbol(ADD)) {\n      return;\n    }\n    push_integer(0);\n    p2 = cdr(p1);\n    while (iscons(p2)) {\n      push(car(p2));\n      simplify();\n      add();\n      oldp1 = p1;\n      oldp2 = p2;\n      p1 = pop();\n      simplify_rational_expressions();\n      push(p1);\n      p1 = oldp1;\n      p2 = oldp2;\n      p2 = cdr(p2);\n    }\n    p2 = pop();\n    if (count(p2) < count(p1)) {\n      return p1 = p2;\n    }\n  };\n\n  simplify_rational_expressions = function() {\n    var denom, num, polyVar, sasa, theGCD;\n    push(p1);\n    denominator();\n    denom = pop();\n    if (isone(denom)) {\n      return;\n    }\n    push(p1);\n    numerator();\n    num = pop();\n    if (isone(num)) {\n      return;\n    }\n    if (!(polyVar = areunivarpolysfactoredorexpandedform(num, denom))) {\n      return;\n    }\n    push(num);\n    push(denom);\n    gcd();\n    push(polyVar);\n    factor();\n    theGCD = pop();\n    // if there are no common factors then\n    // bail\n    if (isone(theGCD)) {\n      return;\n    }\n    push(num);\n    push(polyVar);\n    factor();\n    push(theGCD);\n    //divide()\n    inverse();\n    multiply_noexpand();\n    simplify();\n    sasa = stack[tos - 1].toString();\n    push(denom);\n    push(polyVar);\n    factor();\n    push(theGCD);\n    //divide()\n    inverse();\n    multiply_noexpand();\n    simplify();\n    sasa = stack[tos - 1].toString();\n    divide();\n    //simplify()\n    Condense();\n    sasa = stack[tos - 1].toString();\n    p2 = pop();\n    if (count(p2) < count(p1)) {\n      return p1 = p2;\n    }\n  };\n\n  // things like 6*(cos(2/9*pi)+i*sin(2/9*pi))\n  // where we have sin and cos, those might start to\n  // look better in clock form i.e.  6*(-1)^(2/9) \n  simplify_rectToClock = function() {\n    //debugger\n    if (Find(p1, symbol(SIN)) === 0 && Find(p1, symbol(COS)) === 0) {\n      return;\n    }\n    push(p1);\n    Eval();\n    clockform();\n    p2 = pop();\n    if (DEBUG_SIMPLIFY) {\n      console.log(\"before simplification clockform: \" + p1 + \" after: \" + p2);\n    }\n    if (count(p2) < count(p1)) {\n      return p1 = p2;\n    }\n  };\n\n  simplify_polarRect = function() {\n    push(p1);\n    polarRectAMinusOneBase();\n    Eval();\n    p2 = pop();\n    if (count(p2) < count(p1)) {\n      return p1 = p2;\n    }\n  };\n\n  polarRectAMinusOneBase = function() {\n    var h;\n    save();\n    p1 = pop();\n    if (isimaginaryunit(p1)) {\n      push(p1);\n      restore();\n      return;\n    }\n    if (equal(car(p1), symbol(POWER)) && isminusone(cadr(p1))) {\n      // base we just said is minus 1\n      push(one);\n      negate();\n      // exponent\n      push(caddr(p1));\n      polarRectAMinusOneBase();\n      power();\n      // try to simplify it using polar and rect\n      polar();\n      rect();\n    } else if (iscons(p1)) {\n      h = tos;\n      while (iscons(p1)) {\n        //console.log(\"recursing on: \" + car(p1).toString())\n        push(car(p1));\n        polarRectAMinusOneBase();\n        //console.log(\"...transformed into: \" + stack[tos-1].toString())\n        p1 = cdr(p1);\n      }\n      list(tos - h);\n    } else {\n      push(p1);\n    }\n    restore();\n  };\n\n  nterms = function(p) {\n    if (car(p) !== symbol(ADD)) {\n      return 1;\n    } else {\n      return length(p) - 1;\n    }\n  };\n\n  simplify_nested_radicals = function() {\n    var prev_expanding, simplificationWithCondense, simplificationWithoutCondense, somethingSimplified;\n    if (recursionLevelNestedRadicalsRemoval > 0) {\n      if (DEBUG_SIMPLIFY) {\n        console.log(\"denesting bailing out because of too much recursion\");\n      }\n      return false;\n    }\n    push(p1);\n    somethingSimplified = take_care_of_nested_radicals();\n    // in this paragraph we check whether we can collect\n    // common factors without complicating the expression\n    // in particular we want to avoid \n    // collecting radicals like in this case where\n    // we collect sqrt(2):\n    //   2-2^(1/2) into 2^(1/2)*(-1+2^(1/2))\n    // but we do like to collect other non-radicals e.g.\n    //   17/2+3/2*5^(1/2) into 1/2*(17+3*5^(1/2))\n    // so what we do is we count the powers and we check\n    // which version has the least number of them.\n    simplificationWithoutCondense = stack[tos - 1];\n    prev_expanding = expanding;\n    expanding = 0;\n    yycondense();\n    expanding = prev_expanding;\n    simplificationWithCondense = pop();\n    //console.log(\"occurrences of powers in \" + simplificationWithoutCondense + \" :\" + countOccurrencesOfSymbol(symbol(POWER),simplificationWithoutCondense))\n    //console.log(\"occurrences of powers in \" + simplificationWithCondense + \" :\" + countOccurrencesOfSymbol(symbol(POWER),simplificationWithCondense))\n    if (countOccurrencesOfSymbol(symbol(POWER), simplificationWithoutCondense) < countOccurrencesOfSymbol(symbol(POWER), simplificationWithCondense)) {\n      push(simplificationWithoutCondense);\n    } else {\n      push(simplificationWithCondense);\n    }\n    // we got out result, wrap up\n    p1 = pop();\n    return somethingSimplified;\n  };\n\n  take_care_of_nested_radicals = function() {\n    var A, B, C, SOLUTION, anyRadicalSimplificationWorked, base, checkSize, commonBases, commonInnerExponent, countingTerms, eachSolution, exponent, firstTerm, h, i, innerbase, innerexponent, l1, len, len1, len2, len3, lowercase_a, lowercase_b, m1, n1, numberOfTerms, o1, possibleNewExpression, possibleNewExpressionValue, possibleRationalSolutions, possibleSolutions, potentialPower, realOfpossibleRationalSolutions, ref2, secondTerm, secondTermFactor, termsThatAreNotPowers, whichRationalSolution;\n    if (recursionLevelNestedRadicalsRemoval > 0) {\n      if (DEBUG_SIMPLIFY) {\n        console.log(\"denesting bailing out because of too much recursion\");\n      }\n      return false;\n    }\n    save();\n    p1 = pop();\n    //console.log(\"take_care_of_nested_radicals p1: \" + p1.toString())\n    if (equal(car(p1), symbol(POWER))) {\n      //console.log(\"ok it's a power \")\n      base = cadr(p1);\n      exponent = caddr(p1);\n      if (!isminusone(exponent) && equal(car(base), symbol(ADD)) && isfraction(exponent) && (equalq(exponent, 1, 3) || equalq(exponent, 1, 2))) {\n        //console.log(\"ok there is a radix with a term inside\")\n        firstTerm = cadr(base);\n        push(firstTerm);\n        take_care_of_nested_radicals();\n        pop();\n        secondTerm = caddr(base);\n        push(secondTerm);\n        take_care_of_nested_radicals();\n        pop();\n        //console.log(\"possible double radical term1: \" + firstTerm)\n        //console.log(\"possible double radical term2: \" + secondTerm)\n        numberOfTerms = 0;\n        countingTerms = base;\n        while (cdr(countingTerms) !== symbol(NIL)) {\n          numberOfTerms++;\n          countingTerms = cdr(countingTerms);\n        }\n        //console.log(\"number of terms: \" + numberOfTerms)\n        if (numberOfTerms > 2) {\n          //console.log(\"too many terms under outer radix \")\n          push(p1);\n          restore();\n          return false;\n        }\n        // list here all the factors\n        commonInnerExponent = null;\n        commonBases = [];\n        termsThatAreNotPowers = [];\n        if (car(secondTerm) === symbol(MULTIPLY)) {\n          // product of factors\n          secondTermFactor = cdr(secondTerm);\n          if (iscons(secondTermFactor)) {\n            while (iscons(secondTermFactor)) {\n              //console.log(\"second term factor BIS: \" + car(secondTermFactor).toString())\n              potentialPower = car(secondTermFactor);\n              if (car(potentialPower) === symbol(POWER)) {\n                innerbase = cadr(potentialPower);\n                innerexponent = caddr(potentialPower);\n                if (equalq(innerexponent, 1, 2)) {\n                  if (commonInnerExponent == null) {\n                    commonInnerExponent = innerexponent;\n                    commonBases.push(innerbase);\n                  } else {\n                    if (equal(innerexponent, commonInnerExponent)) {\n                      //console.log(\"common base: \" + innerbase.toString())\n                      commonBases.push(innerbase);\n                    } else {\n\n                    }\n                  }\n                }\n              } else {\n                //console.log(\"no common bases here \")\n                //console.log(\"this one is a power base: \" + innerbase + \" , exponent: \" + innerexponent)\n                termsThatAreNotPowers.push(potentialPower);\n              }\n              secondTermFactor = cdr(secondTermFactor);\n            }\n          }\n        } else if (car(secondTerm) === symbol(POWER)) {\n          innerbase = cadr(secondTerm);\n          innerexponent = caddr(secondTerm);\n          if ((commonInnerExponent == null) && equalq(innerexponent, 1, 2)) {\n            //console.log(\"tackling double radical 2: \" + p1.toString())\n            commonInnerExponent = innerexponent;\n            commonBases.push(innerbase);\n          }\n        }\n        if (commonBases.length === 0) {\n          push(p1);\n          restore();\n          return false;\n        }\n        A = firstTerm;\n        //console.log(\"A: \" + A.toString())\n        push_integer(1);\n        for (l1 = 0, len = commonBases.length; l1 < len; l1++) {\n          i = commonBases[l1];\n          push(i);\n          multiply();\n        }\n        //console.log(\"basis with common exponent: \" + i.toString())\n        C = pop();\n        //console.log(\"C: \" + C.toString())\n        push_integer(1);\n        for (m1 = 0, len1 = termsThatAreNotPowers.length; m1 < len1; m1++) {\n          i = termsThatAreNotPowers[m1];\n          push(i);\n          multiply();\n        }\n        //console.log(\"terms that are not powers: \" + i.toString())\n        B = pop();\n        //console.log(\"B: \" + B.toString())\n        if (equalq(exponent, 1, 3)) {\n          push(A);\n          negate();\n          push(C);\n          multiply();\n          push(B);\n          divide(); // 4th coeff\n          //console.log(\"constant coeff \" + stack[tos-1].toString())\n          checkSize = pop();\n          push(checkSize);\n          real();\n          yyfloat();\n          if (Math.abs(pop().d) > Math.pow(2, 32)) {\n            push(p1);\n            restore();\n            return false;\n          }\n          push(checkSize);\n          push_integer(3);\n          push(C);\n          multiply(); // 3rd coeff\n          //console.log(\"next coeff \" + stack[tos-1].toString())\n          checkSize = pop();\n          push(checkSize);\n          real();\n          yyfloat();\n          if (Math.abs(pop().d) > Math.pow(2, 32)) {\n            pop();\n            push(p1);\n            restore();\n            return false;\n          }\n          push(checkSize);\n          push(symbol(SECRETX));\n          multiply();\n          push_integer(-3);\n          push(A);\n          multiply();\n          push(B);\n          divide(); // 2nd coeff\n          checkSize = pop();\n          push(checkSize);\n          real();\n          yyfloat();\n          if (Math.abs(pop().d) > Math.pow(2, 32)) {\n            pop();\n            pop();\n            push(p1);\n            restore();\n            return false;\n          }\n          push(checkSize);\n          //console.log(\"next coeff \" + stack[tos-1].toString())\n          push(symbol(SECRETX));\n          push_integer(2);\n          power();\n          multiply();\n          push_integer(1); // 1st coeff\n          //console.log(\"next coeff \" + stack[tos-1].toString())\n          push(symbol(SECRETX));\n          push_integer(3);\n          power();\n          multiply();\n          add();\n          add();\n          add();\n        } else if (equalq(exponent, 1, 2)) {\n          push(C); // 3th coeff\n          checkSize = pop();\n          push(checkSize);\n          real();\n          yyfloat();\n          if (Math.abs(pop().d) > Math.pow(2, 32)) {\n            push(p1);\n            restore();\n            return false;\n          }\n          push(checkSize);\n          //console.log(\"constant coeff \" + stack[tos-1].toString())\n          push_integer(-2);\n          push(A);\n          multiply();\n          push(B);\n          divide(); // 2nd coeff\n          checkSize = pop();\n          push(checkSize);\n          real();\n          yyfloat();\n          if (Math.abs(pop().d) > Math.pow(2, 32)) {\n            pop();\n            push(p1);\n            restore();\n            return false;\n          }\n          push(checkSize);\n          //console.log(\"next coeff \" + stack[tos-1].toString())\n          push(symbol(SECRETX));\n          multiply();\n          push_integer(1); // 1st coeff\n          //console.log(\"next coeff \" + stack[tos-1].toString())\n          push(symbol(SECRETX));\n          push_integer(2);\n          power();\n          multiply();\n          add();\n          add();\n        }\n        //console.log(\"whole polynomial: \" + stack[tos-1].toString())\n        push(symbol(SECRETX));\n        recursionLevelNestedRadicalsRemoval++;\n        //console.log(\"invoking roots at recursion level: \" + recursionLevelNestedRadicalsRemoval)\n        roots();\n        recursionLevelNestedRadicalsRemoval--;\n        if (equal(stack[tos - 1], symbol(NIL))) {\n          if (DEBUG_SIMPLIFY) {\n            console.log(\"roots bailed out because of too much recursion\");\n          }\n          pop();\n          push(p1);\n          restore();\n          return false;\n        }\n        //console.log(\"all solutions: \" + stack[tos-1].toString())\n\n        // exclude the solutions with radicals\n        possibleSolutions = [];\n        ref2 = stack[tos - 1].tensor.elem;\n        for (n1 = 0, len2 = ref2.length; n1 < len2; n1++) {\n          eachSolution = ref2[n1];\n          if (!Find(eachSolution, symbol(POWER))) {\n            possibleSolutions.push(eachSolution);\n          }\n        }\n        pop(); // popping the tensor with the solutions\n        \n        //console.log(\"possible solutions: \" + possibleSolutions.toString())\n        if (possibleSolutions.length === 0) {\n          push(p1);\n          restore();\n          return false;\n        }\n        possibleRationalSolutions = [];\n        realOfpossibleRationalSolutions = [];\n//console.log(\"checking the one with maximum real part \")\n        for (o1 = 0, len3 = possibleSolutions.length; o1 < len3; o1++) {\n          i = possibleSolutions[o1];\n          push(i);\n          real();\n          yyfloat();\n          possibleRationalSolutions.push(i);\n          realOfpossibleRationalSolutions.push(pop().d);\n        }\n        whichRationalSolution = realOfpossibleRationalSolutions.indexOf(Math.max.apply(Math, realOfpossibleRationalSolutions));\n        SOLUTION = possibleRationalSolutions[whichRationalSolution];\n        //console.log(\"picked solution: \" + SOLUTION)\n        /*\n        #possibleNewExpressions = []\n        #realOfPossibleNewExpressions = []\n         * pick the solution which cubic root has no radicals\n        lowercase_b = null\n        for SOLUTION in possibleSolutions\n          console.log(\"testing solution: \" + SOLUTION.toString())\n\n          debugger\n          if equalq(exponent,1,3)\n            push(A)\n            push(SOLUTION)\n            push_integer(3)\n            power()\n            push_integer(3)\n            push(C)\n            multiply()\n            push(SOLUTION)\n            multiply()\n            add()\n            divide()\n            console.log(\"argument of cubic root: \" + stack[tos-1].toString())\n            push_rational(1,3)\n            power()\n          else if equalq(exponent,1,2)\n            push(A)\n            push(SOLUTION)\n            push_integer(2)\n            power()\n            push(C)\n            add()\n            divide()\n            console.log(\"argument of cubic root: \" + stack[tos-1].toString())\n            push_rational(1,2)\n            power()\n          console.log(\"b is: \" + stack[tos-1].toString())\n\n          lowercase_b = pop()\n\n          if !Find(lowercase_b, symbol(POWER))\n            break\n         */\n        if (equalq(exponent, 1, 3)) {\n          push(A);\n          push(SOLUTION);\n          push_integer(3);\n          power();\n          push_integer(3);\n          push(C);\n          multiply();\n          push(SOLUTION);\n          multiply();\n          add();\n          divide();\n          //console.log(\"argument of cubic root: \" + stack[tos-1].toString())\n          push_rational(1, 3);\n          power();\n        } else if (equalq(exponent, 1, 2)) {\n          push(A);\n          push(SOLUTION);\n          push_integer(2);\n          power();\n          push(C);\n          add();\n          divide();\n          //console.log(\"argument of cubic root: \" + stack[tos-1].toString())\n          push_rational(1, 2);\n          power();\n        }\n        //console.log(\"b is: \" + stack[tos-1].toString())\n        lowercase_b = pop();\n        if (lowercase_b == null) {\n          push(p1);\n          restore();\n          return false;\n        }\n        push(lowercase_b);\n        push(SOLUTION);\n        multiply();\n        if (equalq(exponent, 1, 3)) {\n          //console.log(\"a is: \" + stack[tos-1].toString())\n          lowercase_a = pop();\n          push(lowercase_b);\n          push(C);\n          push_rational(1, 2);\n          power();\n          multiply();\n          push(lowercase_a);\n          add();\n          simplify();\n        } else if (equalq(exponent, 1, 2)) {\n          //console.log(\"a could be: \" + stack[tos-1].toString())\n          lowercase_a = pop();\n          push(lowercase_b);\n          push(C);\n          push_rational(1, 2);\n          power();\n          multiply();\n          push(lowercase_a);\n          add();\n          simplify();\n          possibleNewExpression = pop();\n          //console.log(\"verifying if  \" + possibleNewExpression + \" is positive\")\n          push(possibleNewExpression);\n          real();\n          yyfloat();\n          possibleNewExpressionValue = pop();\n          if (!isnegativenumber(possibleNewExpressionValue)) {\n            //console.log(\"... it is positive\")\n            push(possibleNewExpression);\n          } else {\n            //console.log(\"... it is NOT positive\")\n            push(lowercase_b);\n            negate();\n            lowercase_b = pop();\n            push(lowercase_a);\n            negate();\n            lowercase_a = pop();\n            push(lowercase_b);\n            push(C);\n            push_rational(1, 2);\n            power();\n            multiply();\n            push(lowercase_a);\n            add();\n            simplify();\n          }\n        }\n        // possibleNewExpression is now at top of stack\n\n        //console.log(\"potential new expression: \" + stack[tos-1].toString())\n        p1 = pop();\n        //newExpression = pop()\n        //debugger\n        //push(newExpression)\n        //real()\n        //yyfloat()\n        //possibleNewExpressions.push(newExpression)\n        //realOfPossibleNewExpressions.push(pop().d)\n\n        //whichExpression = realOfPossibleNewExpressions.indexOf(Math.max.apply(Math, realOfPossibleNewExpressions))\n        //p1 = possibleNewExpressions[whichExpression]\n        //console.log(\"final new expression: \" + p1.toString())\n        push(p1);\n        restore();\n        return true;\n      } else {\n        push(p1);\n        restore();\n        return false;\n      }\n    } else if (iscons(p1)) {\n      h = tos;\n      anyRadicalSimplificationWorked = false;\n      while (iscons(p1)) {\n        //console.log(\"recursing on: \" + car(p1).toString())\n        push(car(p1));\n        anyRadicalSimplificationWorked = anyRadicalSimplificationWorked || take_care_of_nested_radicals();\n        //console.log(\"...transformed into: \" + stack[tos-1].toString())\n        p1 = cdr(p1);\n      }\n      list(tos - h);\n      restore();\n      return anyRadicalSimplificationWorked;\n    } else {\n      push(p1);\n      restore();\n      return false;\n    }\n    throw new Error(\"control flow should never reach here\");\n  };\n\n  // Sine function of numerical and symbolic arguments\n  Eval_sin = function() {\n    //console.log \"sin ---- \"\n    push(cadr(p1));\n    Eval();\n    return sine();\n  };\n\n  //console.log \"sin end ---- \"\n  sine = function() {\n    //console.log \"sine ---- \"\n    save();\n    p1 = pop();\n    if (car(p1) === symbol(ADD)) {\n      // sin of a sum can be further decomposed into\n      //sin(alpha+beta) = sin(alpha)*cos(beta)+sin(beta)*cos(alpha)\n      sine_of_angle_sum();\n    } else {\n      sine_of_angle();\n    }\n    return restore();\n  };\n\n  //console.log \"sine end ---- \"\n\n  // Use angle sum formula for special angles.\n\n  //define A p3\n  //define B p4\n\n  // decompose sum sin(alpha+beta) into\n  // sin(alpha)*cos(beta)+sin(beta)*cos(alpha)\n  sine_of_angle_sum = function() {\n    //console.log \"sin of angle sum ---- \"\n    p2 = cdr(p1);\n    while (iscons(p2)) {\n      p4 = car(p2);\n      if (isnpi(p4)) { // p4 is B\n        push(p1);\n        push(p4);\n        subtract();\n        p3 = pop();\n        push(p3);\n        sine();\n        push(p4);\n        cosine();\n        multiply();\n        push(p3);\n        cosine();\n        push(p4);\n        sine();\n        multiply();\n        add();\n        return;\n      }\n      //console.log \"sin of angle sum end ---- \"\n      p2 = cdr(p2);\n    }\n    return sine_of_angle();\n  };\n\n  //console.log \"sin of angle sum end ---- \"\n  sine_of_angle = function() {\n    var d, n;\n    if (car(p1) === symbol(ARCSIN)) {\n      push(cadr(p1));\n      return;\n    }\n    if (isdouble(p1)) {\n      d = Math.sin(p1.d);\n      if (Math.abs(d) < 1e-10) {\n        d = 0.0;\n      }\n      push_double(d);\n      return;\n    }\n    // sine function is antisymmetric, sin(-x) = -sin(x)\n    if (isnegative(p1)) {\n      push(p1);\n      negate();\n      sine();\n      negate();\n      return;\n    }\n    // sin(arctan(x)) = x / sqrt(1 + x^2)\n\n    // see p. 173 of the CRC Handbook of Mathematical Sciences\n    if (car(p1) === symbol(ARCTAN)) {\n      push(cadr(p1));\n      push_integer(1);\n      push(cadr(p1));\n      push_integer(2);\n      power();\n      add();\n      push_rational(-1, 2);\n      power();\n      multiply();\n      return;\n    }\n    // multiply by 180/pi to go from radians to degrees.\n    // we go from radians to degrees because it's much\n    // easier to calculate symbolic results of most (not all) \"classic\"\n    // angles (e.g. 30,45,60...) if we calculate the degrees\n    // and the we do a switch on that.\n    // Alternatively, we could look at the fraction of pi\n    // (e.g. 60 degrees is 1/3 pi) but that's more\n    // convoluted as we'd need to look at both numerator and\n    // denominator.\n    push(p1);\n    push_integer(180);\n    multiply();\n    if (evaluatingAsFloats) {\n      push_double(Math.PI);\n    } else {\n      push_symbol(PI);\n    }\n    divide();\n    n = pop_integer();\n    // most \"good\" (i.e. compact) trigonometric results\n    // happen for a round number of degrees. There are some exceptions\n    // though, e.g. 22.5 degrees, which we don't capture here.\n    if (n < 0 || isNaN(n)) {\n      push(symbol(SIN));\n      push(p1);\n      list(2);\n      return;\n    }\n    // values of some famous angles. Many more here:\n    // https://en.wikipedia.org/wiki/Trigonometric_constants_expressed_in_real_radicals\n    switch (n % 360) {\n      case 0:\n      case 180:\n        return push_integer(0);\n      case 30:\n      case 150:\n        return push_rational(1, 2);\n      case 210:\n      case 330:\n        return push_rational(-1, 2);\n      case 45:\n      case 135:\n        push_rational(1, 2);\n        push_integer(2);\n        push_rational(1, 2);\n        power();\n        return multiply();\n      case 225:\n      case 315:\n        push_rational(-1, 2);\n        push_integer(2);\n        push_rational(1, 2);\n        power();\n        return multiply();\n      case 60:\n      case 120:\n        push_rational(1, 2);\n        push_integer(3);\n        push_rational(1, 2);\n        power();\n        return multiply();\n      case 240:\n      case 300:\n        push_rational(-1, 2);\n        push_integer(3);\n        push_rational(1, 2);\n        power();\n        return multiply();\n      case 90:\n        return push_integer(1);\n      case 270:\n        return push_integer(-1);\n      default:\n        push(symbol(SIN));\n        push(p1);\n        return list(2);\n    }\n  };\n\n  //            exp(x) - exp(-x)\n  //  sinh(x) = ----------------\n  //                   2\n  Eval_sinh = function() {\n    push(cadr(p1));\n    Eval();\n    return ysinh();\n  };\n\n  ysinh = function() {\n    save();\n    yysinh();\n    return restore();\n  };\n\n  yysinh = function() {\n    var d;\n    d = 0.0;\n    p1 = pop();\n    if (car(p1) === symbol(ARCSINH)) {\n      push(cadr(p1));\n      return;\n    }\n    if (isdouble(p1)) {\n      d = Math.sinh(p1.d);\n      if (Math.abs(d) < 1e-10) {\n        d = 0.0;\n      }\n      push_double(d);\n      return;\n    }\n    if (isZeroAtomOrTensor(p1)) {\n      push(zero);\n      return;\n    }\n    push_symbol(SINH);\n    push(p1);\n    return list(2);\n  };\n\n  subst = function() {\n    var expr, i, l1, m1, newExpr, newTensor, oldExpr, ref2, ref3;\n    save();\n    newExpr = pop();\n    oldExpr = pop();\n    if (oldExpr === symbol(NIL) || newExpr === symbol(NIL)) {\n      restore();\n      return;\n    }\n    expr = pop();\n    if (istensor(expr)) {\n      newTensor = alloc_tensor(expr.tensor.nelem);\n      newTensor.tensor.ndim = expr.tensor.ndim;\n      for (i = l1 = 0, ref2 = expr.tensor.ndim; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n        newTensor.tensor.dim[i] = expr.tensor.dim[i];\n      }\n      for (i = m1 = 0, ref3 = expr.tensor.nelem; (0 <= ref3 ? m1 < ref3 : m1 > ref3); i = 0 <= ref3 ? ++m1 : --m1) {\n        push(expr.tensor.elem[i]);\n        push(oldExpr);\n        push(newExpr);\n        subst();\n        newTensor.tensor.elem[i] = pop();\n        check_tensor_dimensions(newTensor);\n      }\n      push(newTensor);\n    } else if (equal(expr, oldExpr)) {\n      push(newExpr);\n    } else if (iscons(expr)) {\n      push(car(expr));\n      push(oldExpr);\n      push(newExpr);\n      subst();\n      push(cdr(expr));\n      push(oldExpr);\n      push(newExpr);\n      subst();\n      cons();\n    } else {\n      push(expr);\n    }\n    return restore();\n  };\n\n  // 'sum' function\n\n  //define A p3\n  //define B p4\n  //define I p5\n  //define X p6\n\n  // leaves the sum at the top of the stack\n  Eval_sum = function() {\n    var body, i, indexVariable, j, k, l1, ref2, ref3;\n    i = 0;\n    j = 0;\n    k = 0;\n    // 1st arg\n    body = cadr(p1);\n    // 2nd arg (index)\n    indexVariable = caddr(p1);\n    if (!issymbol(indexVariable)) {\n      stop(\"sum: 2nd arg?\");\n    }\n    // 3rd arg (lower limit)\n    push(cadddr(p1));\n    Eval();\n    j = pop_integer();\n    if (isNaN(j)) {\n      push(p1);\n      return;\n    }\n    // 4th arg (upper limit)\n    push(caddddr(p1));\n    Eval();\n    k = pop_integer();\n    if (isNaN(k)) {\n      push(p1);\n      return;\n    }\n    // remember contents of the index\n    // variable so we can put it back after the loop\n    p4 = get_binding(indexVariable);\n    push_integer(0);\n    for (i = l1 = ref2 = j, ref3 = k; (ref2 <= ref3 ? l1 <= ref3 : l1 >= ref3); i = ref2 <= ref3 ? ++l1 : --l1) {\n      push_integer(i);\n      p5 = pop();\n      set_binding(indexVariable, p5);\n      push(body);\n      Eval();\n      add();\n    }\n    // put back the index variable to original content\n    return set_binding(indexVariable, p4);\n  };\n\n  // Tangent function of numerical and symbolic arguments\n  Eval_tan = function() {\n    push(cadr(p1));\n    Eval();\n    return tangent();\n  };\n\n  tangent = function() {\n    save();\n    yytangent();\n    return restore();\n  };\n\n  yytangent = function() {\n    var d, n;\n    n = 0;\n    d = 0.0;\n    p1 = pop();\n    if (car(p1) === symbol(ARCTAN)) {\n      push(cadr(p1));\n      return;\n    }\n    if (isdouble(p1)) {\n      d = Math.tan(p1.d);\n      if (Math.abs(d) < 1e-10) {\n        d = 0.0;\n      }\n      push_double(d);\n      return;\n    }\n    // tan function is antisymmetric, tan(-x) = -tan(x)\n    if (isnegative(p1)) {\n      push(p1);\n      negate();\n      tangent();\n      negate();\n      return;\n    }\n    // multiply by 180/pi to go from radians to degrees.\n    // we go from radians to degrees because it's much\n    // easier to calculate symbolic results of most (not all) \"classic\"\n    // angles (e.g. 30,45,60...) if we calculate the degrees\n    // and the we do a switch on that.\n    // Alternatively, we could look at the fraction of pi\n    // (e.g. 60 degrees is 1/3 pi) but that's more\n    // convoluted as we'd need to look at both numerator and\n    // denominator.\n    push(p1);\n    push_integer(180);\n    multiply();\n    if (evaluatingAsFloats) {\n      push_double(Math.PI);\n    } else {\n      push_symbol(PI);\n    }\n    divide();\n    n = pop_integer();\n    // most \"good\" (i.e. compact) trigonometric results\n    // happen for a round number of degrees. There are some exceptions\n    // though, e.g. 22.5 degrees, which we don't capture here.\n    if (n < 0 || isNaN(n)) {\n      push(symbol(TAN));\n      push(p1);\n      list(2);\n      return;\n    }\n    switch (n % 360) {\n      case 0:\n      case 180:\n        return push_integer(0);\n      case 30:\n      case 210:\n        push_rational(1, 3);\n        push_integer(3);\n        push_rational(1, 2);\n        power();\n        return multiply();\n      case 150:\n      case 330:\n        push_rational(-1, 3);\n        push_integer(3);\n        push_rational(1, 2);\n        power();\n        return multiply();\n      case 45:\n      case 225:\n        return push_integer(1);\n      case 135:\n      case 315:\n        return push_integer(-1);\n      case 60:\n      case 240:\n        push_integer(3);\n        push_rational(1, 2);\n        return power();\n      case 120:\n      case 300:\n        push_integer(3);\n        push_rational(1, 2);\n        power();\n        return negate();\n      default:\n        push(symbol(TAN));\n        push(p1);\n        return list(2);\n    }\n  };\n\n  //             exp(2 x) - 1\n  //  tanh(x) = --------------\n  //             exp(2 x) + 1\n  Eval_tanh = function() {\n    var d;\n    d = 0.0;\n    push(cadr(p1));\n    Eval();\n    p1 = pop();\n    if (car(p1) === symbol(ARCTANH)) {\n      push(cadr(p1));\n      return;\n    }\n    if (isdouble(p1)) {\n      d = Math.tanh(p1.d);\n      if (Math.abs(d) < 1e-10) {\n        d = 0.0;\n      }\n      push_double(d);\n      return;\n    }\n    if (isZeroAtomOrTensor(p1)) {\n      push(zero);\n      return;\n    }\n    push_symbol(TANH);\n    push(p1);\n    return list(2);\n  };\n\n  Eval_taylor = function() {\n    // 1st arg\n    p1 = cdr(p1);\n    push(car(p1));\n    Eval();\n    // 2nd arg\n    p1 = cdr(p1);\n    push(car(p1));\n    Eval();\n    p2 = pop();\n    if (p2 === symbol(NIL)) {\n      guess();\n    } else {\n      push(p2);\n    }\n    // 3rd arg\n    p1 = cdr(p1);\n    push(car(p1));\n    Eval();\n    p2 = pop();\n    if (p2 === symbol(NIL)) {\n      push_integer(24); // default number of terms\n    } else {\n      push(p2);\n    }\n    // 4th arg\n    p1 = cdr(p1);\n    push(car(p1));\n    Eval();\n    p2 = pop();\n    if (p2 === symbol(NIL)) {\n      push_integer(0); // default expansion point\n    } else {\n      push(p2);\n    }\n    return taylor();\n  };\n\n  //define F p1\n  //define X p2\n  //define N p3\n  //define A p4\n  //define C p5\n  taylor = function() {\n    var i, k, l1, ref2;\n    i = 0;\n    k = 0;\n    save();\n    p4 = pop();\n    p3 = pop();\n    p2 = pop();\n    p1 = pop();\n    push(p3);\n    k = pop_integer();\n    if (isNaN(k)) {\n      push_symbol(TAYLOR);\n      push(p1);\n      push(p2);\n      push(p3);\n      push(p4);\n      list(5);\n      restore();\n      return;\n    }\n    push(p1);\n    push(p2);\n    push(p4);\n    subst();\n    Eval();\n    push_integer(1);\n    p5 = pop();\n    for (i = l1 = 1, ref2 = k; (1 <= ref2 ? l1 <= ref2 : l1 >= ref2); i = 1 <= ref2 ? ++l1 : --l1) {\n      push(p1);\n      push(p2);\n      derivative();\n      p1 = pop();\n      if (isZeroAtomOrTensor(p1)) {\n        break;\n      }\n      push(p5);\n      push(p2);\n      push(p4);\n      subtract();\n      multiply();\n      p5 = pop();\n      push(p1);\n      push(p2);\n      push(p4);\n      subst();\n      Eval();\n      push(p5);\n      multiply();\n      push_integer(i);\n      factorial();\n      divide();\n      add();\n    }\n    return restore();\n  };\n\n  //(docs are generated from top-level comments, keep an eye on the formatting!)\n  /* tensor =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  General description\n  -------------------\n  Tensors are a strange in-between of matrices and \"computer\"\n  rectangular data structures.\n\n  Tensors, unlike matrices, and like rectangular data structures,\n  can have an arbitrary number of dimensions (rank), although a tensor with\n  rank zero is just a scalar.\n\n  Tensors, like matrices and unlike many computer rectangular data structures,\n  must be \"contiguous\" i.e. have no empty spaces within its size, and \"uniform\",\n  i.e. each element must have the same shape and hence the same rank.\n\n  Also tensors have necessarily to make a distinction between row vectors,\n  column vectors (which have a rank of 2) and uni-dimensional vectors (rank 1).\n  They look very similar but they are fundamentally different.\n\n  Tensors are 1-indexed, as per general math notation, and like Fortran,\n  Lua, Mathematica, SASL, MATLAB, Julia, Erlang and APL.\n\n  Tensors with elements that are also tensors get promoted to a higher rank\n  , this is so we can represent and get the rank of a matrix correctly.\n  Example:\n  Start with a tensor of rank 1 with 2 elements (i.e. shape: 2)\n  if you put in both its elements another 2 tensors\n  of rank 1 with 2 elements (i.e. shape: 2)\n  then the result is a tensor of rank 2 with shape 2,2\n  i.e. the dimension of a tensor at all times must be\n  the number of nested tensors in it.\n  Also, all tensors must be \"uniform\" i.e. they must be accessed\n  uniformly, which means that all existing elements of a tensor\n  must be contiguous and have the same shape.\n  Implication of it all is that you can't put arbitrary\n  tensors inside tensors (like you would do to represent block matrices)\n  Rather, all tensors inside tensors must have same shape (and hence, rank)\n\n  Limitations\n  -----------\n  n.a.\n\n  Implementation info\n  -------------------\n  Tensors are implemented...\n\n  */\n  // Called from the \"eval\" module to evaluate tensor elements.\n  // p1 points to the tensor operand.\n  Eval_tensor = function() {\n    var a, b, i, l1, m1, ndim, nelem, ref2, ref3;\n    i = 0;\n    ndim = 0;\n    nelem = 0;\n    //U **a, **b\n\n    //---------------------------------------------------------------------\n\n    //  create a new tensor for the result\n\n    //---------------------------------------------------------------------\n    check_tensor_dimensions(p1);\n    nelem = p1.tensor.nelem;\n    ndim = p1.tensor.ndim;\n    p2 = alloc_tensor(nelem);\n    p2.tensor.ndim = ndim;\n    for (i = l1 = 0, ref2 = ndim; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      p2.tensor.dim[i] = p1.tensor.dim[i];\n    }\n    //---------------------------------------------------------------------\n\n    //  b = Eval(a)\n\n    //---------------------------------------------------------------------\n    a = p1.tensor.elem;\n    b = p2.tensor.elem;\n    check_tensor_dimensions(p2);\n    for (i = m1 = 0, ref3 = nelem; (0 <= ref3 ? m1 < ref3 : m1 > ref3); i = 0 <= ref3 ? ++m1 : --m1) {\n      //console.log \"push/pop: pushing element a of \" + i\n      push(a[i]);\n      Eval();\n      //console.log \"push/pop: popping into element b of \" + i\n      b[i] = pop();\n    }\n    check_tensor_dimensions(p1);\n    check_tensor_dimensions(p2);\n    //---------------------------------------------------------------------\n\n    //  push the result\n\n    //---------------------------------------------------------------------\n    push(p2);\n    return promote_tensor();\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Add tensors\n\n  //  Input:    Operands on stack\n\n  //  Output:    Result on stack\n\n  //-----------------------------------------------------------------------------\n  tensor_plus_tensor = function() {\n    var a, b, c, i, l1, m1, n1, ndim, nelem, ref2, ref3, ref4;\n    i = 0;\n    ndim = 0;\n    nelem = 0;\n    //U **a, **b, **c\n    save();\n    p2 = pop();\n    p1 = pop();\n    // are the dimension lists equal?\n    ndim = p1.tensor.ndim;\n    if (ndim !== p2.tensor.ndim) {\n      push(symbol(NIL));\n      restore();\n      return;\n    }\n    for (i = l1 = 0, ref2 = ndim; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      if (p1.tensor.dim[i] !== p2.tensor.dim[i]) {\n        push(symbol(NIL));\n        restore();\n        return;\n      }\n    }\n    // create a new tensor for the result\n    nelem = p1.tensor.nelem;\n    p3 = alloc_tensor(nelem);\n    p3.tensor.ndim = ndim;\n    for (i = m1 = 0, ref3 = ndim; (0 <= ref3 ? m1 < ref3 : m1 > ref3); i = 0 <= ref3 ? ++m1 : --m1) {\n      p3.tensor.dim[i] = p1.tensor.dim[i];\n    }\n    // c = a + b\n    a = p1.tensor.elem;\n    b = p2.tensor.elem;\n    c = p3.tensor.elem;\n    for (i = n1 = 0, ref4 = nelem; (0 <= ref4 ? n1 < ref4 : n1 > ref4); i = 0 <= ref4 ? ++n1 : --n1) {\n      push(a[i]);\n      push(b[i]);\n      add();\n      c[i] = pop();\n    }\n    // push the result\n    push(p3);\n    return restore();\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  careful not to reorder factors\n\n  //-----------------------------------------------------------------------------\n  tensor_times_scalar = function() {\n    var a, b, i, l1, m1, ndim, nelem, ref2, ref3;\n    i = 0;\n    ndim = 0;\n    nelem = 0;\n    //U **a, **b\n    save();\n    p2 = pop();\n    p1 = pop();\n    ndim = p1.tensor.ndim;\n    nelem = p1.tensor.nelem;\n    p3 = alloc_tensor(nelem);\n    p3.tensor.ndim = ndim;\n    for (i = l1 = 0, ref2 = ndim; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      p3.tensor.dim[i] = p1.tensor.dim[i];\n    }\n    a = p1.tensor.elem;\n    b = p3.tensor.elem;\n    for (i = m1 = 0, ref3 = nelem; (0 <= ref3 ? m1 < ref3 : m1 > ref3); i = 0 <= ref3 ? ++m1 : --m1) {\n      push(a[i]);\n      push(p2);\n      multiply();\n      b[i] = pop();\n    }\n    push(p3);\n    return restore();\n  };\n\n  scalar_times_tensor = function() {\n    var a, b, i, l1, m1, ndim, nelem, ref2, ref3;\n    i = 0;\n    ndim = 0;\n    nelem = 0;\n    //U **a, **b\n    save();\n    p2 = pop();\n    p1 = pop();\n    ndim = p2.tensor.ndim;\n    nelem = p2.tensor.nelem;\n    p3 = alloc_tensor(nelem);\n    p3.tensor.ndim = ndim;\n    for (i = l1 = 0, ref2 = ndim; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      p3.tensor.dim[i] = p2.tensor.dim[i];\n    }\n    a = p2.tensor.elem;\n    b = p3.tensor.elem;\n    for (i = m1 = 0, ref3 = nelem; (0 <= ref3 ? m1 < ref3 : m1 > ref3); i = 0 <= ref3 ? ++m1 : --m1) {\n      push(p1);\n      push(a[i]);\n      multiply();\n      b[i] = pop();\n    }\n    push(p3);\n    return restore();\n  };\n\n  check_tensor_dimensions = function(p) {\n    if (p.tensor.nelem !== p.tensor.elem.length) {\n      console.log(\"something wrong in tensor dimensions\");\n      debugger;\n    }\n  };\n\n  is_square_matrix = function(p) {\n    if (istensor(p) && p.tensor.ndim === 2 && p.tensor.dim[0] === p.tensor.dim[1]) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  gradient of tensor\n\n  //-----------------------------------------------------------------------------\n  d_tensor_tensor = function() {\n    var a, b, c, i, j, l1, m1, n1, ndim, nelem, ref2, ref3, ref4;\n    i = 0;\n    j = 0;\n    ndim = 0;\n    nelem = 0;\n    //U **a, **b, **c\n    ndim = p1.tensor.ndim;\n    nelem = p1.tensor.nelem;\n    if (ndim + 1 >= MAXDIM) {\n      push_symbol(DERIVATIVE);\n      push(p1);\n      push(p2);\n      list(3);\n      return;\n    }\n    p3 = alloc_tensor(nelem * p2.tensor.nelem);\n    p3.tensor.ndim = ndim + 1;\n    for (i = l1 = 0, ref2 = ndim; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      p3.tensor.dim[i] = p1.tensor.dim[i];\n    }\n    p3.tensor.dim[ndim] = p2.tensor.dim[0];\n    a = p1.tensor.elem;\n    b = p2.tensor.elem;\n    c = p3.tensor.elem;\n    for (i = m1 = 0, ref3 = nelem; (0 <= ref3 ? m1 < ref3 : m1 > ref3); i = 0 <= ref3 ? ++m1 : --m1) {\n      for (j = n1 = 0, ref4 = p2.tensor.nelem; (0 <= ref4 ? n1 < ref4 : n1 > ref4); j = 0 <= ref4 ? ++n1 : --n1) {\n        push(a[i]);\n        push(b[j]);\n        derivative();\n        c[i * p2.tensor.nelem + j] = pop();\n      }\n    }\n    return push(p3);\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  gradient of scalar\n\n  //-----------------------------------------------------------------------------\n  d_scalar_tensor = function() {\n    var a, b, i, l1, ref2;\n    //U **a, **b\n    p3 = alloc_tensor(p2.tensor.nelem);\n    p3.tensor.ndim = 1;\n    p3.tensor.dim[0] = p2.tensor.dim[0];\n    a = p2.tensor.elem;\n    b = p3.tensor.elem;\n    for (i = l1 = 0, ref2 = p2.tensor.nelem; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      push(p1);\n      push(a[i]);\n      derivative();\n      b[i] = pop();\n    }\n    return push(p3);\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Derivative of tensor\n\n  //-----------------------------------------------------------------------------\n  d_tensor_scalar = function() {\n    var a, b, i, l1, m1, ref2, ref3;\n    i = 0;\n    //U **a, **b\n    p3 = alloc_tensor(p1.tensor.nelem);\n    p3.tensor.ndim = p1.tensor.ndim;\n    for (i = l1 = 0, ref2 = p1.tensor.ndim; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      p3.tensor.dim[i] = p1.tensor.dim[i];\n    }\n    a = p1.tensor.elem;\n    b = p3.tensor.elem;\n    for (i = m1 = 0, ref3 = p1.tensor.nelem; (0 <= ref3 ? m1 < ref3 : m1 > ref3); i = 0 <= ref3 ? ++m1 : --m1) {\n      push(a[i]);\n      push(p2);\n      derivative();\n      b[i] = pop();\n    }\n    return push(p3);\n  };\n\n  compare_tensors = function(p1, p2) {\n    var i, l1, m1, ref2, ref3;\n    i = 0;\n    if (p1.tensor.ndim < p2.tensor.ndim) {\n      return -1;\n    }\n    if (p1.tensor.ndim > p2.tensor.ndim) {\n      return 1;\n    }\n    for (i = l1 = 0, ref2 = p1.tensor.ndim; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      if (p1.tensor.dim[i] < p2.tensor.dim[i]) {\n        return -1;\n      }\n      if (p1.tensor.dim[i] > p2.tensor.dim[i]) {\n        return 1;\n      }\n    }\n    for (i = m1 = 0, ref3 = p1.tensor.nelem; (0 <= ref3 ? m1 < ref3 : m1 > ref3); i = 0 <= ref3 ? ++m1 : --m1) {\n      if (equal(p1.tensor.elem[i], p2.tensor.elem[i])) {\n        continue;\n      }\n      if (lessp(p1.tensor.elem[i], p2.tensor.elem[i])) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n    return 0;\n  };\n\n  //-----------------------------------------------------------------------------\n\n  //  Raise a tensor to a power\n\n  //  Input:    p1  tensor\n\n  //      p2  exponent\n\n  //  Output:    Result on stack\n\n  //-----------------------------------------------------------------------------\n  power_tensor = function() {\n    var i, k, l1, m1, n, ref2, ref3, results;\n    i = 0;\n    k = 0;\n    n = 0;\n    // first and last dims must be equal\n    k = p1.tensor.ndim - 1;\n    if (p1.tensor.dim[0] !== p1.tensor.dim[k]) {\n      push_symbol(POWER);\n      push(p1);\n      push(p2);\n      list(3);\n      return;\n    }\n    push(p2);\n    n = pop_integer();\n    if (isNaN(n)) {\n      push_symbol(POWER);\n      push(p1);\n      push(p2);\n      list(3);\n      return;\n    }\n    if (n === 0) {\n      if (p1.tensor.ndim !== 2) {\n        stop(\"power(tensor,0) with tensor rank not equal to 2\");\n      }\n      n = p1.tensor.dim[0];\n      p1 = alloc_tensor(n * n);\n      p1.tensor.ndim = 2;\n      p1.tensor.dim[0] = n;\n      p1.tensor.dim[1] = n;\n      for (i = l1 = 0, ref2 = n; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n        p1.tensor.elem[n * i + i] = one;\n      }\n      check_tensor_dimensions(p1);\n      push(p1);\n      return;\n    }\n    if (n < 0) {\n      n = -n;\n      push(p1);\n      inv();\n      p1 = pop();\n    }\n    push(p1);\n    results = [];\n    for (i = m1 = 1, ref3 = n; (1 <= ref3 ? m1 < ref3 : m1 > ref3); i = 1 <= ref3 ? ++m1 : --m1) {\n      push(p1);\n      inner();\n      if (isZeroAtomOrTensor(stack[tos - 1])) {\n        break;\n      } else {\n        results.push(void 0);\n      }\n    }\n    return results;\n  };\n\n  copy_tensor = function() {\n    var i, l1, m1, ref2, ref3;\n    i = 0;\n    save();\n    p1 = pop();\n    p2 = alloc_tensor(p1.tensor.nelem);\n    p2.tensor.ndim = p1.tensor.ndim;\n    for (i = l1 = 0, ref2 = p1.tensor.ndim; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      p2.tensor.dim[i] = p1.tensor.dim[i];\n    }\n    for (i = m1 = 0, ref3 = p1.tensor.nelem; (0 <= ref3 ? m1 < ref3 : m1 > ref3); i = 0 <= ref3 ? ++m1 : --m1) {\n      p2.tensor.elem[i] = p1.tensor.elem[i];\n    }\n    check_tensor_dimensions(p1);\n    check_tensor_dimensions(p2);\n    push(p2);\n    return restore();\n  };\n\n  // Tensors with elements that are also tensors get promoted to a higher rank.\n  promote_tensor = function() {\n    var i, j, k, l1, m1, n1, ndim, nelem, o1, q1, ref2, ref3, ref4, ref5, ref6;\n    i = 0;\n    j = 0;\n    k = 0;\n    nelem = 0;\n    ndim = 0;\n    save();\n    p1 = pop();\n    if (!istensor(p1)) {\n      push(p1);\n      restore();\n      return;\n    }\n    p2 = p1.tensor.elem[0];\n    for (i = l1 = 1, ref2 = p1.tensor.nelem; (1 <= ref2 ? l1 < ref2 : l1 > ref2); i = 1 <= ref2 ? ++l1 : --l1) {\n      if (!compatible(p2, p1.tensor.elem[i])) {\n        stop(\"Cannot promote tensor due to inconsistent tensor components.\");\n      }\n    }\n    if (!istensor(p2)) {\n      push(p1);\n      restore();\n      return;\n    }\n    ndim = p1.tensor.ndim + p2.tensor.ndim;\n    if (ndim > MAXDIM) {\n      stop(\"tensor rank > \" + MAXDIM);\n    }\n    nelem = p1.tensor.nelem * p2.tensor.nelem;\n    p3 = alloc_tensor(nelem);\n    p3.tensor.ndim = ndim;\n    for (i = m1 = 0, ref3 = p1.tensor.ndim; (0 <= ref3 ? m1 < ref3 : m1 > ref3); i = 0 <= ref3 ? ++m1 : --m1) {\n      p3.tensor.dim[i] = p1.tensor.dim[i];\n    }\n    for (j = n1 = 0, ref4 = p2.tensor.ndim; (0 <= ref4 ? n1 < ref4 : n1 > ref4); j = 0 <= ref4 ? ++n1 : --n1) {\n      p3.tensor.dim[i + j] = p2.tensor.dim[j];\n    }\n    k = 0;\n    for (i = o1 = 0, ref5 = p1.tensor.nelem; (0 <= ref5 ? o1 < ref5 : o1 > ref5); i = 0 <= ref5 ? ++o1 : --o1) {\n      p2 = p1.tensor.elem[i];\n      for (j = q1 = 0, ref6 = p2.tensor.nelem; (0 <= ref6 ? q1 < ref6 : q1 > ref6); j = 0 <= ref6 ? ++q1 : --q1) {\n        p3.tensor.elem[k++] = p2.tensor.elem[j];\n      }\n    }\n    check_tensor_dimensions(p2);\n    check_tensor_dimensions(p3);\n    push(p3);\n    return restore();\n  };\n\n  compatible = function(p, q) {\n    var i, l1, ref2;\n    if (!istensor(p) && !istensor(q)) {\n      return 1;\n    }\n    if (!istensor(p) || !istensor(q)) {\n      return 0;\n    }\n    if (p.tensor.ndim !== q.tensor.ndim) {\n      return 0;\n    }\n    for (i = l1 = 0, ref2 = p.tensor.ndim; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      if (p.tensor.dim[i] !== q.tensor.dim[i]) {\n        return 0;\n      }\n    }\n    return 1;\n  };\n\n  // If the number of args is odd then the last arg is the default result.\n  // Works like a switch statement. Could also be used for piecewise\n  // functions? TODO should probably be called \"switch\"?\n  Eval_test = function() {\n    var checkResult, orig;\n    orig = p1;\n    p1 = cdr(p1);\n    while (iscons(p1)) {\n      // odd number of parameters means that the\n      // last argument becomes the default case\n      // i.e. the one without a test.\n      if (cdr(p1) === symbol(NIL)) {\n        push(car(p1));\n        Eval();\n        return;\n      }\n      checkResult = isZeroLikeOrNonZeroLikeOrUndetermined(car(p1));\n      if (checkResult == null) {\n        // we couldn't determine the result\n        // of a test. This means we can't conclude\n        // anything about the result of the\n        // overall test, so we must bail\n        // with the unevalled test\n        push(orig);\n        return;\n      } else if (checkResult) {\n        // test succesful, we found out output\n        push(cadr(p1));\n        Eval();\n        return;\n      } else {\n        // test unsuccessful, continue to the\n        // next pair of test,value\n        p1 = cddr(p1);\n      }\n    }\n    // no test matched and there was no\n    // catch-all case, so we return zero.\n    return push_integer(0);\n  };\n\n  // we test A==B by first subtracting and checking if we symbolically\n  // get zero. If not, we evaluate to float and check if we get a zero.\n  // If we get another NUMBER then we know they are different.\n  // If we get something else, then we don't know and we return the\n  // unaveluated test, which is the same as saying \"maybe\".\n  Eval_testeq = function() {\n    var checkResult, orig, subtractionResult;\n    // first try without simplifyng both sides\n    orig = p1;\n    push(cadr(p1));\n    Eval();\n    push(caddr(p1));\n    Eval();\n    subtract();\n    subtractionResult = pop();\n    // OK so we are doing something tricky here\n    // we are using isZeroLikeOrNonZeroLikeOrUndetermined to check if the result\n    // is zero or not zero or unknown.\n    // isZeroLikeOrNonZeroLikeOrUndetermined has some routines\n    // to determine the zero-ness/non-zero-ness or\n    // undeterminate-ness of things so we use\n    // that here and down below.\n    checkResult = isZeroLikeOrNonZeroLikeOrUndetermined(subtractionResult);\n    if (checkResult) {\n      push_integer(0);\n      return;\n    } else if ((checkResult != null) && !checkResult) {\n      push_integer(1);\n      return;\n    }\n    // we didn't get a simple numeric result but\n    // let's try again after doing\n    // a simplification on both sides\n    push(cadr(p1));\n    Eval();\n    simplify();\n    push(caddr(p1));\n    Eval();\n    simplify();\n    subtract();\n    subtractionResult = pop();\n    checkResult = isZeroLikeOrNonZeroLikeOrUndetermined(subtractionResult);\n    if (checkResult) {\n      push_integer(0);\n      return;\n    } else if ((checkResult != null) && !checkResult) {\n      push_integer(1);\n      return;\n    }\n    // if we didn't get to a number then we\n    // don't know whether the quantities are\n    // different so do nothing\n    return push(orig);\n  };\n\n  // Relational operators expect a numeric result for operand difference.\n  Eval_testge = function() {\n    var comparison, orig;\n    orig = p1;\n    comparison = cmp_args();\n    if (comparison == null) {\n      push(orig);\n      return;\n    }\n    if (comparison >= 0) {\n      return push_integer(1);\n    } else {\n      return push_integer(0);\n    }\n  };\n\n  Eval_testgt = function() {\n    var comparison, orig;\n    orig = p1;\n    comparison = cmp_args();\n    if (comparison == null) {\n      push(orig);\n      return;\n    }\n    if (comparison > 0) {\n      return push_integer(1);\n    } else {\n      return push_integer(0);\n    }\n  };\n\n  Eval_testle = function() {\n    var comparison, orig;\n    orig = p1;\n    comparison = cmp_args();\n    if (comparison == null) {\n      push(orig);\n      return;\n    }\n    if (comparison <= 0) {\n      return push_integer(1);\n    } else {\n      return push_integer(0);\n    }\n  };\n\n  Eval_testlt = function() {\n    var comparison, orig;\n    orig = p1;\n    comparison = cmp_args();\n    if (comparison == null) {\n      push(orig);\n      return;\n    }\n    if (comparison < 0) {\n      return push_integer(1);\n    } else {\n      return push_integer(0);\n    }\n  };\n\n  // not definition\n  Eval_not = function() {\n    var checkResult, wholeAndExpression;\n    wholeAndExpression = p1;\n    checkResult = isZeroLikeOrNonZeroLikeOrUndetermined(cadr(p1));\n    if (checkResult == null) {\n      // inconclusive test on predicate\n      return push(wholeAndExpression);\n    } else if (checkResult) {\n      // true -> false\n      return push_integer(0);\n    } else {\n      // false -> true\n      return push_integer(1);\n    }\n  };\n\n  /* and =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  a,b,...\n\n  General description\n  -------------------\n  Logical-and of predicate expressions.\n\n  */\n  // and definition\n  Eval_and = function() {\n    var andPredicates, checkResult, somePredicateUnknown, wholeAndExpression;\n    wholeAndExpression = p1;\n    andPredicates = cdr(wholeAndExpression);\n    somePredicateUnknown = false;\n    while (iscons(andPredicates)) {\n      // eval each predicate\n      checkResult = isZeroLikeOrNonZeroLikeOrUndetermined(car(andPredicates));\n      if (checkResult == null) {\n        // here we have stuff that is not reconducible to any\n        // numeric value (or tensor with numeric values) e.g.\n        // 'a+b', so it just means that we just don't know the\n        // truth value of this particular predicate.\n        // We'll track the fact that we found an unknown\n        // predicate and we continue with the other predicates.\n        // (note that in case some subsequent predicate will be false,\n        // it won't matter that we found some unknowns and\n        // the whole test will be immediately zero).\n        somePredicateUnknown = true;\n        andPredicates = cdr(andPredicates);\n      } else if (checkResult) {\n        // found a true, move on to the next predicate\n        andPredicates = cdr(andPredicates);\n      } else if (!checkResult) {\n        // found a false, enough to falsify everything and return\n        push_integer(0);\n        return;\n      }\n    }\n    // We checked all the predicates and none of them\n    // was false. So they were all either true or unknown.\n    // Now, if even just one was unknown, we'll have to call this\n    // test as inconclusive and return the whole test expression.\n    // If all the predicates were known, then we can conclude\n    // that the test returns true.\n    if (somePredicateUnknown) {\n      return push(wholeAndExpression);\n    } else {\n      return push_integer(1);\n    }\n  };\n\n  // or definition\n  Eval_or = function() {\n    var checkResult, orPredicates, somePredicateUnknown, wholeOrExpression;\n    wholeOrExpression = p1;\n    orPredicates = cdr(wholeOrExpression);\n    somePredicateUnknown = false;\n    while (iscons(orPredicates)) {\n      // eval each predicate\n      checkResult = isZeroLikeOrNonZeroLikeOrUndetermined(car(orPredicates));\n      if (checkResult == null) {\n        // here we have stuff that is not reconducible to any\n        // numeric value (or tensor with numeric values) e.g.\n        // 'a+b', so it just means that we just don't know the\n        // truth value of this particular predicate.\n        // We'll track the fact that we found an unknown\n        // predicate and we continue with the other predicates.\n        // (note that in case some subsequent predicate will be false,\n        // it won't matter that we found some unknowns and\n        // the whole test will be immediately zero).\n        somePredicateUnknown = true;\n        orPredicates = cdr(orPredicates);\n      } else if (checkResult) {\n        // found a true, enough to return true\n        push_integer(1);\n        return;\n      } else if (!checkResult) {\n        // found a false, move on to the next predicate\n        orPredicates = cdr(orPredicates);\n      }\n    }\n    // We checked all the predicates and none of them\n    // was true. So they were all either false or unknown.\n    // Now, if even just one was unknown, we'll have to call this\n    // test as inconclusive and return the whole test expression.\n    // If all the predicates were known, then we can conclude\n    // that the test returns false.\n    if (somePredicateUnknown) {\n      return push(wholeOrExpression);\n    } else {\n      return push_integer(0);\n    }\n  };\n\n  // use subtract for cases like A < A + 1\n\n  // TODO you could be smarter here and\n  // simplify both sides only in the case\n  // of \"relational operator: cannot determine...\"\n  // a bit like we do in Eval_testeq\n  cmp_args = function() {\n    var t;\n    t = 0;\n    push(cadr(p1));\n    Eval();\n    simplify();\n    push(caddr(p1));\n    Eval();\n    simplify();\n    subtract();\n    p1 = pop();\n    // try floating point if necessary\n    if (p1.k !== NUM && p1.k !== DOUBLE) {\n      push(p1);\n      yyfloat();\n      Eval();\n      p1 = pop();\n    }\n    //console.log \"comparison: \" + p1.toString()\n    if (isZeroAtomOrTensor(p1)) {\n      //console.log \"comparison isZero \"\n      return 0;\n    }\n    switch (p1.k) {\n      case NUM:\n        if (MSIGN(p1.q.a) === -1) {\n          t = -1;\n        } else {\n          t = 1;\n        }\n        break;\n      case DOUBLE:\n        //console.log \"comparison p1.d: \" + p1.d\n        if (p1.d < 0.0) {\n          t = -1;\n        } else {\n          t = 1;\n        }\n        break;\n      default:\n        //console.log \"comparison is null\"\n        t = null;\n    }\n    return t;\n  };\n\n  /*\n  Transform an expression using a pattern. The\n  pattern can come from the integrals table or\n  the user-defined patterns.\n\n  The expression and free variable are on the stack.\n\n  The argument s is a null terminated list of transform rules.\n\n  For example, see the itab (integrals table)\n\n  Internally, the following symbols are used:\n\n    F  input expression\n\n    X  free variable, i.e. F of X\n\n    A  template expression\n\n    B  result expression\n\n    C  list of conditional expressions\n\n  Puts the final expression on top of stack\n  (whether it's transformed or not) and returns\n  true is successful, false if not.\n\n  */\n  // p1 and p2 are tmps\n\n  //define F p3\n  //define X p4\n  //define A p5\n  //define B p6\n  //define C p7\n  transform = function(s, generalTransform) {\n    var bookmarkTosToPrintDecomps, eachTransformEntry, i, l1, len, len1, m1, n1, numberOfDecomps, ref2, restTerm, secondTerm, success, theTransform, transform_h, transformationSuccessful, transformedTerms;\n    transform_h = 0;\n    save();\n    p1 = null;\n    p4 = pop(); // X i.e. free variable\n    p3 = pop(); // F i.e. input expression\n    if (DEBUG) {\n      console.log(\"         !!!!!!!!!   transform on: \" + p3);\n    }\n    saveMetaBindings();\n    set_binding(symbol(METAX), p4);\n    // put constants in F(X) on the stack\n    transform_h = tos;\n    push_integer(1);\n    push(p3);\n    push(p4);\n    polyform();\n    push(p4);\n    bookmarkTosToPrintDecomps = tos - 2;\n    decomp(generalTransform);\n    numberOfDecomps = tos - bookmarkTosToPrintDecomps;\n    if (DEBUG) {\n      console.log(\"  \" + numberOfDecomps + \" decomposed elements ====== \");\n      for (i = l1 = 0, ref2 = numberOfDecomps; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n        console.log(\"  decomposition element \" + i + \": \" + stack[tos - 1 - i]);\n      }\n    }\n    transformationSuccessful = false;\n    if (generalTransform) {\n      if (!isNumericAtom(p3)) {\n        theTransform = s;\n        if (DEBUG) {\n          console.log(\"applying transform: \" + theTransform);\n        }\n        if (DEBUG) {\n          console.log(\"scanning table entry \" + theTransform);\n        }\n        push(theTransform);\n        // replacements of meta variables. Note that we don't\n        // use scan_meta because the pattern is not a string\n        // that we have to parse, it's a tree already.\n        // replace a_ with METAA in the passed transformation\n        push(symbol(SYMBOL_A_UNDERSCORE));\n        push(symbol(METAA));\n        subst();\n        // replace b_ with METAB in the passed transformation\n        push(symbol(SYMBOL_B_UNDERSCORE));\n        push(symbol(METAB));\n        subst();\n        // replace x_ with METAX in the passed transformation\n        push(symbol(SYMBOL_X_UNDERSCORE));\n        push(symbol(METAX));\n        subst();\n        p1 = pop();\n        p5 = car(p1);\n        if (DEBUG) {\n          console.log(\"template expression: \" + p5);\n        }\n        p6 = cadr(p1);\n        p7 = cddr(p1);\n        /*\n        p5 = p1.tensor.elem[0]\n        p6 = p1.tensor.elem[1]\n        for i in [2..(p1.tensor.elem.length-1)]\n          push p1.tensor.elem[i]\n        list(p1.tensor.elem.length - 2)\n        p7 = pop()\n        */\n        if (f_equals_a(transform_h, generalTransform)) {\n          // successful transformation,\n          // transformed result is in p6\n          transformationSuccessful = true;\n        } else {\n          // the match failed but perhaps we can match\n          // something lower down in the tree, so\n          // let's recurse the tree\n          if (DEBUG) {\n            console.log(\"p3 at this point: \" + p3);\n          }\n          transformedTerms = [];\n          if (DEBUG) {\n            console.log(\"car(p3): \" + car(p3));\n          }\n          restTerm = p3;\n          if (iscons(restTerm)) {\n            transformedTerms.push(car(p3));\n            restTerm = cdr(p3);\n          }\n          while (iscons(restTerm)) {\n            secondTerm = car(restTerm);\n            restTerm = cdr(restTerm);\n            if (DEBUG) {\n              console.log(\"tos before recursive transform: \" + tos);\n            }\n            push(secondTerm);\n            push_symbol(NIL);\n            if (DEBUG) {\n              console.log(\"testing: \" + secondTerm);\n            }\n            //if (secondTerm+\"\") == \"eig(A x,transpose(A x))()\"\n            //  debugger\n            if (DEBUG) {\n              console.log(\"about to try to simplify other term: \" + secondTerm);\n            }\n            success = transform(s, generalTransform);\n            transformationSuccessful = transformationSuccessful || success;\n            transformedTerms.push(pop());\n            if (DEBUG) {\n              console.log(\"tried to simplify other term: \" + secondTerm + \" ...successful?: \" + success + \" ...transformed: \" + transformedTerms[transformedTerms.length - 1]);\n            }\n          }\n          // recreate the tree we were passed,\n          // but with all the terms being transformed\n          if (transformedTerms.length !== 0) {\n            for (m1 = 0, len = transformedTerms.length; m1 < len; m1++) {\n              i = transformedTerms[m1];\n              push(i);\n            }\n            list(transformedTerms.length);\n            p6 = pop(); // \"integrals\" mode\n          }\n        }\n      }\n    } else {\n      for (n1 = 0, len1 = s.length; n1 < len1; n1++) {\n        eachTransformEntry = s[n1];\n        if (DEBUG) {\n          console.log(\"scanning table entry \" + eachTransformEntry);\n          if ((eachTransformEntry + \"\").indexOf(\"f(sqrt(a+b*x),2/3*1/b*sqrt((a+b*x)^3))\") !== -1) {\n            debugger;\n          }\n        }\n        if (eachTransformEntry) {\n          scan_meta(eachTransformEntry);\n          p1 = pop();\n          p5 = cadr(p1);\n          p6 = caddr(p1);\n          p7 = cdddr(p1);\n          /*\n          p5 = p1.tensor.elem[0]\n          p6 = p1.tensor.elem[1]\n          for i in [2..(p1.tensor.elem.length-1)]\n            push p1.tensor.elem[i]\n          list(p1.tensor.elem.length - 2)\n          p7 = pop()\n          */\n          if (f_equals_a(transform_h, generalTransform)) {\n            // there is a successful transformation,\n            // transformed result is in p6\n            transformationSuccessful = true;\n            break;\n          }\n        }\n      }\n    }\n    moveTos(transform_h);\n    if (transformationSuccessful) {\n      //console.log \"transformation successful\"\n      // a transformation was successful\n      push(p6);\n      Eval();\n      p1 = pop();\n      //console.log \"...into: \" + p1\n      transformationSuccessful = true;\n    } else {\n      // transformations failed\n      if (generalTransform) {\n        // result = original expression\n        p1 = p3;\n      } else {\n        p1 = symbol(NIL);\n      }\n    }\n    restoreMetaBindings();\n    push(p1);\n    restore();\n    return transformationSuccessful;\n  };\n\n  saveMetaBindings = function() {\n    push(get_binding(symbol(METAA)));\n    push(get_binding(symbol(METAB)));\n    return push(get_binding(symbol(METAX)));\n  };\n\n  restoreMetaBindings = function() {\n    set_binding(symbol(METAX), pop());\n    set_binding(symbol(METAB), pop());\n    return set_binding(symbol(METAA), pop());\n  };\n\n  // search for a METAA and METAB such that F = A\n  f_equals_a = function(h, generalTransform) {\n    var fea_i, fea_j, l1, m1, originalexpanding, ref2, ref3, ref4, ref5;\n    fea_i = 0;\n    fea_j = 0;\n    for (fea_i = l1 = ref2 = h, ref3 = tos; (ref2 <= ref3 ? l1 < ref3 : l1 > ref3); fea_i = ref2 <= ref3 ? ++l1 : --l1) {\n      set_binding(symbol(METAA), stack[fea_i]);\n      if (DEBUG) {\n        console.log(\"  binding METAA to \" + get_binding(symbol(METAA)));\n      }\n      for (fea_j = m1 = ref4 = h, ref5 = tos; (ref4 <= ref5 ? m1 < ref5 : m1 > ref5); fea_j = ref4 <= ref5 ? ++m1 : --m1) {\n        set_binding(symbol(METAB), stack[fea_j]);\n        if (DEBUG) {\n          console.log(\"  binding METAB to \" + get_binding(symbol(METAB)));\n        }\n        // now test all the conditions (it's an and between them)\n        p1 = p7;\n        while (iscons(p1)) {\n          push(car(p1));\n          Eval();\n          p2 = pop();\n          if (isZeroAtomOrTensor(p2)) {\n            break;\n          }\n          p1 = cdr(p1);\n        }\n        if (iscons(p1)) {\n          // conditions are not met,\n          // skip to the next binding of metas\n          continue;\n        }\n        push(p3);\n        if (DEBUG) {\n          console.log(\"about to evaluate template expression: \" + p5 + \" binding METAA to \" + get_binding(symbol(METAA)) + \" and binding METAB to \" + get_binding(symbol(METAB)) + \" and binding METAX to \" + get_binding(symbol(METAX)));\n        }\n        push(p5);\n        if (generalTransform) {\n          originalexpanding = expanding;\n          expanding = false;\n        }\n        Eval();\n        if (generalTransform) {\n          expanding = originalexpanding;\n        }\n        if (DEBUG) {\n          console.log(\"  comparing \" + stack[tos - 1] + \" to: \" + stack[tos - 2]);\n        }\n        subtract();\n        p1 = pop();\n        if (isZeroAtomOrTensor(p1)) {\n          if (DEBUG) {\n            console.log(\"binding METAA to \" + get_binding(symbol(METAA)));\n            console.log(\"binding METAB to \" + get_binding(symbol(METAB)));\n            console.log(\"binding METAX to \" + get_binding(symbol(METAX)));\n            console.log(\"comparing \" + p3 + \" to: \" + p5);\n          }\n          return 1; // yes\n        }\n      }\n    }\n    return 0; // no\n  };\n\n  // Transpose tensor indices\n  Eval_transpose = function() {\n    push(cadr(p1));\n    Eval();\n    // add default params if they\n    // have not been passed\n    if (cddr(p1) === symbol(NIL)) {\n      push_integer(1);\n      push_integer(2);\n    } else {\n      push(caddr(p1));\n      Eval();\n      push(cadddr(p1));\n      Eval();\n    }\n    return transpose();\n  };\n\n  transpose = function() {\n    var a, accumulator, ai, an, b, eachEntry, i, innerTranspSwitch1, innerTranspSwitch2, j, k, l, l1, m, m1, n1, ndim, nelem, o1, q1, r1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, s1, t;\n    i = 0;\n    j = 0;\n    k = 0;\n    l = 0;\n    m = 0;\n    ndim = 0;\n    nelem = 0;\n    t = 0;\n    ai = [];\n    an = [];\n    for (i = l1 = 0, ref2 = MAXDIM; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      ai[i] = 0;\n      an[i] = 0;\n    }\n    //U **a, **b\n    save();\n    // by default p3 is 2 and p2 is 1\n    p3 = pop(); // index to be transposed\n    p2 = pop(); // other index to be transposed\n    p1 = pop(); // what needs to be transposed\n    \n    // a transposition just goes away when\n    // applied to a scalar\n    if (isNumericAtom(p1)) {\n      push(p1);\n      restore();\n      return;\n    }\n    // transposition goes away for identity matrix\n    if ((isplusone(p2) && isplustwo(p3)) || (isplusone(p3) && isplustwo(p2))) {\n      if (isidentitymatrix(p1)) {\n        push(p1);\n        restore();\n        return;\n      }\n    }\n    // a transposition just goes away when\n    // applied to another transposition with\n    // the same columns to be switched\n    if (istranspose(p1)) {\n      innerTranspSwitch1 = car(cdr(cdr(p1)));\n      innerTranspSwitch2 = car(cdr(cdr(cdr(p1))));\n      if ((equal(innerTranspSwitch1, p3) && equal(innerTranspSwitch2, p2)) || (equal(innerTranspSwitch2, p3) && equal(innerTranspSwitch1, p2)) || ((equal(innerTranspSwitch1, symbol(NIL)) && equal(innerTranspSwitch2, symbol(NIL))) && ((isplusone(p3) && isplustwo(p2)) || (isplusone(p2) && isplustwo(p3))))) {\n        push(car(cdr(p1)));\n        restore();\n        return;\n      }\n    }\n    // if operand is a sum then distribute\n    // (if we are in expanding mode)\n    if (expanding && isadd(p1)) {\n      p1 = cdr(p1);\n      push(zero);\n      while (iscons(p1)) {\n        push(car(p1));\n        // add the dimensions to switch but only if\n        // they are not the default ones.\n        push(p2);\n        push(p3);\n        transpose();\n        add();\n        p1 = cdr(p1);\n      }\n      restore();\n      return;\n    }\n    // if operand is a multiplication then distribute\n    // (if we are in expanding mode)\n    if (expanding && ismultiply(p1)) {\n      p1 = cdr(p1);\n      push(one);\n      while (iscons(p1)) {\n        push(car(p1));\n        // add the dimensions to switch but only if\n        // they are not the default ones.\n        push(p2);\n        push(p3);\n        transpose();\n        multiply();\n        p1 = cdr(p1);\n      }\n      restore();\n      return;\n    }\n    // distribute the transpose of a dot\n    // if in expanding mode\n    // note that the distribution happens\n    // in reverse as per tranpose rules.\n    // The dot operator is not\n    // commutative, so, it matters.\n    if (expanding && isinnerordot(p1)) {\n      p1 = cdr(p1);\n      accumulator = [];\n      while (iscons(p1)) {\n        accumulator.push([car(p1), p2, p3]);\n        p1 = cdr(p1);\n      }\n      for (eachEntry = m1 = ref3 = accumulator.length - 1; (ref3 <= 0 ? m1 <= 0 : m1 >= 0); eachEntry = ref3 <= 0 ? ++m1 : --m1) {\n        push(accumulator[eachEntry][0]);\n        push(accumulator[eachEntry][1]);\n        push(accumulator[eachEntry][2]);\n        transpose();\n        if (eachEntry !== accumulator.length - 1) {\n          inner();\n        }\n      }\n      restore();\n      return;\n    }\n    if (!istensor(p1)) {\n      if (!isZeroAtomOrTensor(p1)) {\n        //stop(\"transpose: tensor expected, 1st arg is not a tensor\")\n        push_symbol(TRANSPOSE);\n        push(p1);\n        if ((!isplusone(p2) || !isplustwo(p3)) && (!isplusone(p3) || !isplustwo(p2))) {\n          push(p2);\n          push(p3);\n          list(4);\n        } else {\n          list(2);\n        }\n        restore();\n        return;\n      }\n      push(zero);\n      restore();\n      return;\n    }\n    ndim = p1.tensor.ndim;\n    nelem = p1.tensor.nelem;\n    // is it a vector?\n    // so here it's something curious - note how vectors are\n    // not really special two-dimensional matrices, but rather\n    // 1-dimension objects (like tensors can be). So since\n    // they have one dimension, transposition has no effect.\n    // (as opposed as if they were special two-dimensional\n    // matrices)\n    // see also Ran Pan, Tensor Transpose and Its Properties. CoRR abs/1411.1503 (2014)\n    if (ndim === 1) {\n      push(p1);\n      restore();\n      return;\n    }\n    push(p2);\n    l = pop_integer();\n    push(p3);\n    m = pop_integer();\n    if (l < 1 || l > ndim || m < 1 || m > ndim) {\n      stop(\"transpose: index out of range\");\n    }\n    l--;\n    m--;\n    p2 = alloc_tensor(nelem);\n    p2.tensor.ndim = ndim;\n    for (i = n1 = 0, ref4 = ndim; (0 <= ref4 ? n1 < ref4 : n1 > ref4); i = 0 <= ref4 ? ++n1 : --n1) {\n      p2.tensor.dim[i] = p1.tensor.dim[i];\n    }\n    p2.tensor.dim[l] = p1.tensor.dim[m];\n    p2.tensor.dim[m] = p1.tensor.dim[l];\n    a = p1.tensor.elem;\n    b = p2.tensor.elem;\n// init tensor index\n    for (i = o1 = 0, ref5 = ndim; (0 <= ref5 ? o1 < ref5 : o1 > ref5); i = 0 <= ref5 ? ++o1 : --o1) {\n      ai[i] = 0;\n      an[i] = p1.tensor.dim[i];\n    }\n// copy components from a to b\n    for (i = q1 = 0, ref6 = nelem; (0 <= ref6 ? q1 < ref6 : q1 > ref6); i = 0 <= ref6 ? ++q1 : --q1) {\n      // swap indices l and m\n      t = ai[l];\n      ai[l] = ai[m];\n      ai[m] = t;\n      t = an[l];\n      an[l] = an[m];\n      an[m] = t;\n      k = 0;\n      for (j = r1 = 0, ref7 = ndim; (0 <= ref7 ? r1 < ref7 : r1 > ref7); j = 0 <= ref7 ? ++r1 : --r1) {\n        k = (k * an[j]) + ai[j];\n      }\n      // swap indices back\n      t = ai[l];\n      ai[l] = ai[m];\n      ai[m] = t;\n      t = an[l];\n      an[l] = an[m];\n      an[m] = t;\n      b[k] = a[i];\n// increment tensor index\n\n      // Suppose the tensor dimensions are 2 and 3.\n// Then the tensor index ai increments as follows:\n// 00 -> 01\n// 01 -> 02\n// 02 -> 10\n// 10 -> 11\n// 11 -> 12\n// 12 -> 00\n      for (j = s1 = ref8 = ndim - 1; (ref8 <= 0 ? s1 <= 0 : s1 >= 0); j = ref8 <= 0 ? ++s1 : --s1) {\n        if (++ai[j] < an[j]) {\n          break;\n        }\n        ai[j] = 0;\n      }\n    }\n    push(p2);\n    return restore();\n  };\n\n  // Evaluate a user defined function\n\n  //define F p3 # F is the function body\n  //define A p4 # A is the formal argument list\n  //define B p5 # B is the calling argument list\n  //define S p6 # S is the argument substitution list\n\n  // we got here because there was a function invocation and\n  // it's not been parsed (and consequently tagged) as any\n  // system function.\n  // So we are dealing with another function.\n  // The function could be actually defined, or not yet,\n  // so we'll deal with both cases.\n  /* d =====================================================================\n\n  Tags\n  ----\n  scripting, JS, internal, treenode, general concept\n\n  Parameters\n  ----------\n  f,x\n\n  General description\n  -------------------\n  Returns the partial derivative of f with respect to x. x can be a vector e.g. [x,y].\n\n  */\n  Eval_user_function = function() {\n    var bodyAndFormalArguments, h;\n    // Use \"derivative\" instead of \"d\" if there is no user function \"d\"\n    if (DEBUG) {\n      console.log(\"Eval_user_function evaluating: \" + car(p1));\n    }\n    if (car(p1) === symbol(SYMBOL_D) && get_binding(symbol(SYMBOL_D)) === symbol(SYMBOL_D)) {\n      Eval_derivative();\n      return;\n    }\n    // normally car(p1) is a symbol with the function name\n    // but it could be something that has to be\n    // evaluated to get to the function definition instead\n    // (e.g. the function is an element of an array)\n    // so we do an eval to sort it all out. \n    push(car(p1));\n    Eval();\n    // we expect to find either the body and\n    // formula arguments, OR, if the function\n    // has not been defined yet, then the\n    // function will just contain its own name, as\n    // all undefined variables do.\n    bodyAndFormalArguments = pop();\n    if (isNumericAtom(bodyAndFormalArguments)) {\n      stop(\"expected function invocation, found multiplication instead. Use '*' symbol explicitly for multiplication.\");\n    } else if (istensor(bodyAndFormalArguments)) {\n      stop(\"expected function invocation, found tensor product instead. Use 'dot/inner' explicitly.\");\n    } else if (isstr(bodyAndFormalArguments)) {\n      stop(\"expected function, found string instead.\");\n    }\n    p3 = car(cdr(bodyAndFormalArguments)); // p3 is function body F\n    // p4 is the formal argument list\n    // that is also contained here in the FUNCTION node \n    p4 = car(cdr(cdr(bodyAndFormalArguments)));\n    p5 = cdr(p1);\n    // next check is whether evaluation did nothing, so the function is undefined\n    if ((car(bodyAndFormalArguments) !== symbol(FUNCTION)) || (bodyAndFormalArguments === car(p1))) { // p3 is F\n      // leave everything as it was and return\n      h = tos;\n      push(bodyAndFormalArguments);\n      p1 = p5;\n      while (iscons(p1)) {\n        push(car(p1));\n        Eval();\n        p1 = cdr(p1);\n      }\n      list(tos - h);\n      return;\n    }\n    // Create the argument substitution list p6(S)\n    p1 = p4;\n    p2 = p5;\n    h = tos;\n    while (iscons(p1) && iscons(p2)) {\n      push(car(p1));\n      push(car(p2));\n      // why explicitly Eval the parameters when\n      // the body of the function is\n      // evalled anyways? Commenting it out. All tests pass...\n      //Eval()\n      p1 = cdr(p1);\n      p2 = cdr(p2);\n    }\n    list(tos - h);\n    p6 = pop();\n    push(p3);\n    if (iscons(p6)) { // p6 is S\n      push(p6);\n      rewrite_args();\n    }\n    //console.log \"rewritten body: \" + stack[tos-1]\n    return Eval();\n  };\n\n  // Rewrite by expanding symbols that contain args\n  rewrite_args = function() {\n    var h, n;\n    n = 0;\n    save();\n    // subst. list which is a list\n    // where each consecutive pair\n    // is what needs to be substituted and with what\n    p2 = pop();\n    p1 = pop();\n    if (istensor(p1)) {\n      n = rewrite_args_tensor();\n      restore();\n      return n;\n    }\n    if (iscons(p1)) {\n      h = tos;\n      if (car(p1) === car(p2)) {\n        // rewrite a function in\n        // the body with the one\n        // passed from the paramaters\n        push_symbol(EVAL);\n        push(car(cdr(p2)));\n        list(2);\n      } else {\n        // if there is no match\n        // then no substitution necessary\n        push(car(p1));\n      }\n      // continue recursively to\n      // rewrite the rest of the body\n      p1 = cdr(p1);\n      while (iscons(p1)) {\n        push(car(p1));\n        push(p2);\n        n += rewrite_args();\n        p1 = cdr(p1);\n      }\n      list(tos - h);\n      restore();\n      return n;\n    }\n    if (!issymbol(p1)) {\n      push(p1);\n      restore();\n      return 0;\n    }\n    // Here we are in a symbol case\n    // so we need to substitute\n\n    // Check if there is a direct match\n    // of symbols right away\n    p3 = p2;\n    while (iscons(p3)) {\n      if (p1 === car(p3)) {\n        push(cadr(p3));\n        restore();\n        return 1;\n      }\n      p3 = cddr(p3);\n    }\n    // Get the symbol's content, if _that_\n    // matches then do the substitution\n    p3 = get_binding(p1);\n    push(p3);\n    if (p1 !== p3) {\n      push(p2);\n      n = rewrite_args();\n      if (n === 0) {\n        pop();\n        push(p1); // restore if not rewritten with arg\n      }\n    }\n    restore();\n    return n;\n  };\n\n  rewrite_args_tensor = function() {\n    var i, l1, n, ref2;\n    n = 0;\n    i = 0;\n    push(p1);\n    copy_tensor();\n    p1 = pop();\n    for (i = l1 = 0, ref2 = p1.tensor.nelem; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      push(p1.tensor.elem[i]);\n      push(p2);\n      n += rewrite_args();\n      p1.tensor.elem[i] = pop();\n    }\n    check_tensor_dimensions(p1);\n    push(p1);\n    return n;\n  };\n\n  Eval_zero = function() {\n    var i, k, l1, m, m1, n, ref2, ref3;\n    i = 0;\n    k = [];\n    m = 0;\n    n = 0;\n    for (i = l1 = 0, ref2 = MAXDIM; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      k[i] = 0;\n    }\n    m = 1;\n    n = 0;\n    p2 = cdr(p1);\n    while (iscons(p2)) {\n      push(car(p2));\n      Eval();\n      i = pop_integer();\n      if (i < 1 || isNaN(i)) {\n        // if the input is nonsensical\n        // just return 0\n        push(zero);\n        return;\n      }\n      m *= i;\n      k[n++] = i;\n      p2 = cdr(p2);\n    }\n    if (n === 0) {\n      push(zero);\n      return;\n    }\n    p1 = alloc_tensor(m);\n    p1.tensor.ndim = n;\n    for (i = m1 = 0, ref3 = n; (0 <= ref3 ? m1 < ref3 : m1 > ref3); i = 0 <= ref3 ? ++m1 : --m1) {\n      p1.tensor.dim[i] = k[i];\n    }\n    return push(p1);\n  };\n\n  allocatedId = 0;\n\n  alloc_tensor = function(nelem) {\n    var i, l1, p, ref2;\n    i = 0;\n    p = new U();\n    p.k = TENSOR;\n    p.tensor = new tensor();\n    p.tensor.nelem = nelem;\n    for (i = l1 = 0, ref2 = nelem; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      p.tensor.elem[i] = zero;\n    }\n    p.tensor.allocatedId = allocatedId;\n    //if allocatedId == 9\n    //  debugger\n    allocatedId++;\n    check_tensor_dimensions(p);\n    return p;\n  };\n\n  /*\n  // garbage collector\n\n  void\n  gc(void)\n  {\n    int i, j\n    U *p\n\n    // tag everything\n\n    for (i = 0; i < mcount; i++) {\n      p = mem[i]\n      for (j = 0; j < N; j++)\n        p[j].tag = 1\n    }\n\n    // untag what's used\n\n    untag(p0)\n    untag(p1)\n    untag(p2)\n    untag(p3)\n    untag(p4)\n    untag(p5)\n    untag(p6)\n    untag(p7)\n    untag(p8)\n    untag(p9)\n\n    untag(one)\n    untag(zero)\n    untag(imaginaryunit)\n\n    for (i = 0; i < NSYM; i++) {\n      untag(binding[i])\n      untag(arglist[i])\n    }\n\n    for (i = 0; i < tos; i++)\n      untag(stack[i])\n\n    for (i = (int) (frame - stack); i < TOS; i++)\n      untag(stack[i])\n\n    // collect everything that's still tagged\n\n    free_count = 0\n\n    for (i = 0; i < mcount; i++) {\n      p = mem[i]\n      for (j = 0; j < N; j++) {\n        if (p[j].tag == 0)\n          continue\n        // still tagged so it's unused, put on free list\n        switch (p[j].k) {\n        case TENSOR:\n          free(p[j].u.tensor)\n          break\n        case STR:\n          free(p[j].u.str)\n          break\n        case NUM:\n          mfree(p[j].u.q.a)\n          mfree(p[j].u.q.b)\n          break\n        }\n        p[j].k = CONS; // so no double free occurs above\n        p[j].u.cons.cdr = free_list\n        free_list = p + j\n        free_count++\n      }\n    }\n  }\n\n  void\n  untag(U *p)\n  {\n    int i\n\n    if (iscons(p)) {\n      do {\n        if (p->tag == 0)\n          return\n        p->tag = 0\n        untag(p->u.cons.car)\n        p = p->u.cons.cdr\n      } while (iscons(p))\n      untag(p)\n      return\n    }\n\n    if (p->tag) {\n      p->tag = 0\n       if (istensor(p)) {\n        for (i = 0; i < p->u.tensor->nelem; i++)\n          untag(p->u.tensor->elem[i])\n      }\n    }\n  }\n\n  // get memory for 100,000 atoms\n\n  void\n  alloc_mem(void)\n  {\n    int i\n    U *p\n    if (mcount == M)\n      return\n    p = (U *) malloc(N * sizeof (struct U))\n    if (p == NULL)\n      return\n    mem[mcount++] = p\n    for (i = 0; i < N; i++) {\n      p[i].k = CONS; // so no free in gc\n      p[i].u.cons.cdr = p + i + 1\n    }\n    p[N - 1].u.cons.cdr = free_list\n    free_list = p\n    free_count += N\n  }\n\n  void\n  print_mem_info(void)\n  {\n    char buf[100]\n\n    sprintf(buf, \"%d blocks (%d bytes/block)\\n\", N * mcount, (int) sizeof (U))\n    printstr(buf)\n\n    sprintf(buf, \"%d free\\n\", free_count)\n    printstr(buf)\n\n    sprintf(buf, \"%d used\\n\", N * mcount - free_count)\n    printstr(buf)\n  }\n  */\n  // returns 1 if expr p contains expr q, otherweise returns 0\n  Find = function(p, q) {\n    var i, l1, ref2;\n    i = 0;\n    if (equal(p, q)) {\n      return 1;\n    }\n    if (istensor(p)) {\n      for (i = l1 = 0, ref2 = p.tensor.nelem; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n        if (Find(p.tensor.elem[i], q)) {\n          return 1;\n        }\n      }\n      return 0;\n    }\n    while (iscons(p)) {\n      if (Find(car(p), q)) {\n        return 1;\n      }\n      p = cdr(p);\n    }\n    return 0;\n  };\n\n  // find stuff like (-1)^(something (but disregard\n  // imaginary units which are in the form (-1)^(1/2))\n  findPossibleClockForm = function(p) {\n    var i, l1, ref2;\n    i = 0;\n    if (isimaginaryunit(p)) {\n      return 0;\n    }\n    if (car(p) === symbol(POWER) && !isinteger(caddr(p1))) {\n      if (Find(cadr(p), imaginaryunit)) {\n        //console.log \"found i^fraction \" + p\n        return 1;\n      }\n    }\n    if (car(p) === symbol(POWER) && equaln(cadr(p), -1) && !isinteger(caddr(p1))) {\n      //console.log \"found -1^fraction in \" + p\n      return 1;\n    }\n    if (istensor(p)) {\n      for (i = l1 = 0, ref2 = p.tensor.nelem; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n        if (findPossibleClockForm(p.tensor.elem[i])) {\n          return 1;\n        }\n      }\n      return 0;\n    }\n    while (iscons(p)) {\n      if (findPossibleClockForm(car(p))) {\n        return 1;\n      }\n      p = cdr(p);\n    }\n    return 0;\n  };\n\n  // find stuff like (e)^(i something)\n  findPossibleExponentialForm = function(p) {\n    var i, l1, ref2;\n    i = 0;\n    if (car(p) === symbol(POWER) && cadr(p) === symbol(E)) {\n      return Find(caddr(p), imaginaryunit);\n    }\n    if (istensor(p)) {\n      for (i = l1 = 0, ref2 = p.tensor.nelem; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n        if (findPossibleExponentialForm(p.tensor.elem[i])) {\n          return 1;\n        }\n      }\n      return 0;\n    }\n    while (iscons(p)) {\n      if (findPossibleExponentialForm(car(p))) {\n        return 1;\n      }\n      p = cdr(p);\n    }\n    return 0;\n  };\n\n  $.Find = Find;\n\n  init = function() {\n    var i, l1, ref2;\n    //debugger\n    //console.log \"DOING AN INIT ========================================================================\"\n    i = 0;\n    flag = 0;\n    reset_after_error();\n    chainOfUserSymbolsNotFunctionsBeingEvaluated = [];\n    if (flag) { // already initted\n      return;\n    }\n    flag = 1;\n// total clearout of symbol table\n    for (i = l1 = 0, ref2 = NSYM; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      symtab[i] = new U();\n      symtab[i].k = SYM;\n      binding[i] = symtab[i];\n      isSymbolReclaimable[i] = false;\n    }\n    return defn();\n  };\n\n  defn_str = [\n    \"version=\\\"\" + version + \"\\\"\",\n    \"e=exp(1)\",\n    \"i=sqrt(-1)\",\n    \"autoexpand=1\",\n    \"assumeRealVariables=1\",\n    \"trange=[-pi,pi]\",\n    \"xrange=[-10,10]\",\n    \"yrange=[-10,10]\",\n    \"last=0\",\n    \"trace=0\",\n    \"forceFixedPrintout=1\",\n    \"maxFixedPrintoutDigits=6\",\n    \"printLeaveEAlone=1\",\n    \"printLeaveXAlone=0\",\n    // cross definition\n    \"cross(u,v)=[u[2]*v[3]-u[3]*v[2],u[3]*v[1]-u[1]*v[3],u[1]*v[2]-u[2]*v[1]]\",\n    // curl definition\n    \"curl(v)=[d(v[3],y)-d(v[2],z),d(v[1],z)-d(v[3],x),d(v[2],x)-d(v[1],y)]\",\n    // div definition\n    \"div(v)=d(v[1],x)+d(v[2],y)+d(v[3],z)\",\n    // Note that we use the mathematics / Javascript / Mathematica\n    // convention that \"log\" is indeed the natural logarithm.\n\n    // In engineering, biology, astronomy, \"log\" can stand instead\n    // for the \"common\" logarithm i.e. base 10. Also note that Google\n    // calculations use log for the common logarithm.\n    \"ln(x)=log(x)\"\n  ];\n\n  defn = function() {\n    var definitionOfInterest, defn_i, l1, originalCodeGen, ref2;\n    p0 = symbol(NIL);\n    p1 = symbol(NIL);\n    p2 = symbol(NIL);\n    p3 = symbol(NIL);\n    p4 = symbol(NIL);\n    p5 = symbol(NIL);\n    p6 = symbol(NIL);\n    p7 = symbol(NIL);\n    p8 = symbol(NIL);\n    p9 = symbol(NIL);\n    std_symbol(\"abs\", ABS);\n    std_symbol(\"add\", ADD);\n    std_symbol(\"adj\", ADJ);\n    std_symbol(\"and\", AND);\n    std_symbol(\"approxratio\", APPROXRATIO);\n    std_symbol(\"arccos\", ARCCOS);\n    std_symbol(\"arccosh\", ARCCOSH);\n    std_symbol(\"arcsin\", ARCSIN);\n    std_symbol(\"arcsinh\", ARCSINH);\n    std_symbol(\"arctan\", ARCTAN);\n    std_symbol(\"arctanh\", ARCTANH);\n    std_symbol(\"arg\", ARG);\n    std_symbol(\"atomize\", ATOMIZE);\n    std_symbol(\"besselj\", BESSELJ);\n    std_symbol(\"bessely\", BESSELY);\n    std_symbol(\"binding\", BINDING);\n    std_symbol(\"binomial\", BINOMIAL);\n    std_symbol(\"ceiling\", CEILING);\n    std_symbol(\"check\", CHECK);\n    std_symbol(\"choose\", CHOOSE);\n    std_symbol(\"circexp\", CIRCEXP);\n    std_symbol(\"clear\", CLEAR);\n    std_symbol(\"clearall\", CLEARALL);\n    std_symbol(\"clearpatterns\", CLEARPATTERNS);\n    std_symbol(\"clock\", CLOCK);\n    std_symbol(\"coeff\", COEFF);\n    std_symbol(\"cofactor\", COFACTOR);\n    std_symbol(\"condense\", CONDENSE);\n    std_symbol(\"conj\", CONJ);\n    std_symbol(\"contract\", CONTRACT);\n    std_symbol(\"cos\", COS);\n    std_symbol(\"cosh\", COSH);\n    std_symbol(\"decomp\", DECOMP);\n    std_symbol(\"defint\", DEFINT);\n    std_symbol(\"deg\", DEGREE);\n    std_symbol(\"denominator\", DENOMINATOR);\n    std_symbol(\"det\", DET);\n    std_symbol(\"derivative\", DERIVATIVE);\n    std_symbol(\"dim\", DIM);\n    std_symbol(\"dirac\", DIRAC);\n    std_symbol(\"divisors\", DIVISORS);\n    std_symbol(\"do\", DO);\n    std_symbol(\"dot\", DOT);\n    std_symbol(\"draw\", DRAW);\n    std_symbol(\"dsolve\", DSOLVE);\n    std_symbol(\"erf\", ERF);\n    std_symbol(\"erfc\", ERFC);\n    std_symbol(\"eigen\", EIGEN);\n    std_symbol(\"eigenval\", EIGENVAL);\n    std_symbol(\"eigenvec\", EIGENVEC);\n    std_symbol(\"eval\", EVAL);\n    std_symbol(\"exp\", EXP);\n    std_symbol(\"expand\", EXPAND);\n    std_symbol(\"expcos\", EXPCOS);\n    std_symbol(\"expsin\", EXPSIN);\n    std_symbol(\"factor\", FACTOR);\n    std_symbol(\"factorial\", FACTORIAL);\n    std_symbol(\"factorpoly\", FACTORPOLY);\n    std_symbol(\"filter\", FILTER);\n    std_symbol(\"float\", FLOATF);\n    std_symbol(\"floor\", FLOOR);\n    std_symbol(\"for\", FOR);\n    std_symbol(\"function\", FUNCTION);\n    std_symbol(\"Gamma\", GAMMA);\n    std_symbol(\"gcd\", GCD);\n    std_symbol(\"hermite\", HERMITE);\n    std_symbol(\"hilbert\", HILBERT);\n    std_symbol(\"imag\", IMAG);\n    std_symbol(\"component\", INDEX);\n    std_symbol(\"inner\", INNER);\n    std_symbol(\"integral\", INTEGRAL);\n    std_symbol(\"inv\", INV);\n    std_symbol(\"invg\", INVG);\n    std_symbol(\"isinteger\", ISINTEGER);\n    std_symbol(\"isprime\", ISPRIME);\n    std_symbol(\"laguerre\", LAGUERRE);\n    //  std_symbol(\"laplace\", LAPLACE)\n    std_symbol(\"lcm\", LCM);\n    std_symbol(\"leading\", LEADING);\n    std_symbol(\"legendre\", LEGENDRE);\n    std_symbol(\"log\", LOG);\n    std_symbol(\"lookup\", LOOKUP);\n    std_symbol(\"mod\", MOD);\n    std_symbol(\"multiply\", MULTIPLY);\n    std_symbol(\"not\", NOT);\n    std_symbol(\"nroots\", NROOTS);\n    std_symbol(\"number\", NUMBER);\n    std_symbol(\"numerator\", NUMERATOR);\n    std_symbol(\"operator\", OPERATOR);\n    std_symbol(\"or\", OR);\n    std_symbol(\"outer\", OUTER);\n    std_symbol(\"pattern\", PATTERN);\n    std_symbol(\"patternsinfo\", PATTERNSINFO);\n    std_symbol(\"polar\", POLAR);\n    std_symbol(\"power\", POWER);\n    std_symbol(\"prime\", PRIME);\n    std_symbol(\"print\", PRINT);\n    std_symbol(\"print2dascii\", PRINT2DASCII);\n    std_symbol(\"printcomputer\", PRINTFULL);\n    std_symbol(\"printlatex\", PRINTLATEX);\n    std_symbol(\"printlist\", PRINTLIST);\n    std_symbol(\"printhuman\", PRINTPLAIN);\n    std_symbol(\"printLeaveEAlone\", PRINT_LEAVE_E_ALONE);\n    std_symbol(\"printLeaveXAlone\", PRINT_LEAVE_X_ALONE);\n    std_symbol(\"product\", PRODUCT);\n    std_symbol(\"quote\", QUOTE);\n    std_symbol(\"quotient\", QUOTIENT);\n    std_symbol(\"rank\", RANK);\n    std_symbol(\"rationalize\", RATIONALIZE);\n    std_symbol(\"real\", REAL);\n    std_symbol(\"rect\", YYRECT);\n    std_symbol(\"roots\", ROOTS);\n    std_symbol(\"round\", ROUND);\n    std_symbol(\"equals\", SETQ);\n    std_symbol(\"sgn\", SGN);\n    std_symbol(\"silentpattern\", SILENTPATTERN);\n    std_symbol(\"simplify\", SIMPLIFY);\n    std_symbol(\"sin\", SIN);\n    std_symbol(\"sinh\", SINH);\n    std_symbol(\"shape\", SHAPE);\n    std_symbol(\"sqrt\", SQRT);\n    std_symbol(\"stop\", STOP);\n    std_symbol(\"subst\", SUBST);\n    std_symbol(\"sum\", SUM);\n    std_symbol(\"symbolsinfo\", SYMBOLSINFO);\n    std_symbol(\"tan\", TAN);\n    std_symbol(\"tanh\", TANH);\n    std_symbol(\"taylor\", TAYLOR);\n    std_symbol(\"test\", TEST);\n    std_symbol(\"testeq\", TESTEQ);\n    std_symbol(\"testge\", TESTGE);\n    std_symbol(\"testgt\", TESTGT);\n    std_symbol(\"testle\", TESTLE);\n    std_symbol(\"testlt\", TESTLT);\n    std_symbol(\"transpose\", TRANSPOSE);\n    std_symbol(\"unit\", UNIT);\n    std_symbol(\"zero\", ZERO);\n    std_symbol(\"nil\", NIL);\n    std_symbol(\"autoexpand\", AUTOEXPAND);\n    std_symbol(\"bake\", BAKE);\n    std_symbol(\"assumeRealVariables\", ASSUME_REAL_VARIABLES);\n    std_symbol(\"last\", LAST);\n    std_symbol(\"lastprint\", LAST_PRINT);\n    std_symbol(\"last2dasciiprint\", LAST_2DASCII_PRINT);\n    std_symbol(\"lastfullprint\", LAST_FULL_PRINT);\n    std_symbol(\"lastlatexprint\", LAST_LATEX_PRINT);\n    std_symbol(\"lastlistprint\", LAST_LIST_PRINT);\n    std_symbol(\"lastplainprint\", LAST_PLAIN_PRINT);\n    std_symbol(\"trace\", TRACE);\n    std_symbol(\"forceFixedPrintout\", FORCE_FIXED_PRINTOUT);\n    std_symbol(\"maxFixedPrintoutDigits\", MAX_FIXED_PRINTOUT_DIGITS);\n    std_symbol(\"~\", YYE); // tilde so sort puts it after other symbols\n    std_symbol(\"$DRAWX\", DRAWX); // special purpose internal symbols\n    std_symbol(\"$METAA\", METAA);\n    std_symbol(\"$METAB\", METAB);\n    std_symbol(\"$METAX\", METAX);\n    std_symbol(\"$SECRETX\", SECRETX);\n    std_symbol(\"version\", VERSION);\n    std_symbol(\"pi\", PI);\n    std_symbol(\"a\", SYMBOL_A);\n    std_symbol(\"b\", SYMBOL_B);\n    std_symbol(\"c\", SYMBOL_C);\n    std_symbol(\"d\", SYMBOL_D);\n    std_symbol(\"i\", SYMBOL_I);\n    std_symbol(\"j\", SYMBOL_J);\n    std_symbol(\"n\", SYMBOL_N);\n    std_symbol(\"r\", SYMBOL_R);\n    std_symbol(\"s\", SYMBOL_S);\n    std_symbol(\"t\", SYMBOL_T);\n    std_symbol(\"x\", SYMBOL_X);\n    std_symbol(\"y\", SYMBOL_Y);\n    std_symbol(\"z\", SYMBOL_Z);\n    std_symbol(\"I\", SYMBOL_IDENTITY_MATRIX);\n    std_symbol(\"a_\", SYMBOL_A_UNDERSCORE);\n    std_symbol(\"b_\", SYMBOL_B_UNDERSCORE);\n    std_symbol(\"x_\", SYMBOL_X_UNDERSCORE);\n    std_symbol(\"$C1\", C1);\n    std_symbol(\"$C2\", C2);\n    std_symbol(\"$C3\", C3);\n    std_symbol(\"$C4\", C4);\n    std_symbol(\"$C5\", C5);\n    std_symbol(\"$C6\", C6);\n    defineSomeHandyConstants();\n    // don't add all these functions to the\n    // symbolsDependencies, clone the original\n    originalCodeGen = codeGen;\n    codeGen = false;\n    for (defn_i = l1 = 0, ref2 = defn_str.length; (0 <= ref2 ? l1 < ref2 : l1 > ref2); defn_i = 0 <= ref2 ? ++l1 : --l1) {\n      definitionOfInterest = defn_str[defn_i];\n      scan(definitionOfInterest);\n      if (DEBUG) {\n        console.log(\"... evaling \" + definitionOfInterest);\n        console.log(\"top of stack:\");\n        console.log(print_list(stack[tos - 1]));\n      }\n      Eval();\n      pop();\n    }\n    // restore the symbol dependencies as they were before.\n    return codeGen = originalCodeGen;\n  };\n\n  defineSomeHandyConstants = function() {\n    zero = new_integer(0);\n    one = new_integer(1);\n    push_double(1.0);\n    one_as_double = pop();\n    // i is the square root of -1 i.e. -1 ^ 1/2\n    push_symbol(POWER);\n    if (DEBUG) {\n      console.log(print_list(stack[tos - 1]));\n    }\n    push_integer(-1);\n    if (DEBUG) {\n      console.log(print_list(stack[tos - 1]));\n    }\n    push_rational(1, 2);\n    if (DEBUG) {\n      console.log(print_list(stack[tos - 1]));\n    }\n    list(3);\n    if (DEBUG) {\n      console.log(print_list(stack[tos - 1]));\n    }\n    return imaginaryunit = pop(); // must be untagged in gc\n  };\n\n  // Bignum compare\n\n  //  returns\n\n  //  -1    a < b\n\n  //  0    a = b\n\n  //  1    a > b\n  mcmp = function(a, b) {\n    return a.compare(b);\n  };\n\n  // a is a bigint, n is a normal int\n  mcmpint = function(a, n) {\n    var b, t;\n    b = bigInt(n);\n    t = mcmp(a, b);\n    return t;\n  };\n\n  strcmp = function(str1, str2) {\n    if (str1 === str2) {\n      return 0;\n    } else if (str1 > str2) {\n      return 1;\n    } else {\n      return -1;\n    }\n  };\n\n  doubleToReasonableString = function(d) {\n    var maxFixedPrintoutDigits, stringRepresentation;\n    // when generating code, print out\n    // the standard JS Number printout\n    if (codeGen) {\n      return \"\" + d;\n    }\n    if (isZeroAtomOrTensor(get_binding(symbol(FORCE_FIXED_PRINTOUT)))) {\n      stringRepresentation = \"\" + d;\n      // manipulate the string so that it can be parsed by\n      // Algebrite (something like 1.23e-123 wouldn't cut it because\n      // that would be parsed as 1.23*e - 123)\n      if (printMode === PRINTMODE_LATEX) {\n        // 1.0\\mathrm{e}{-10} looks much better than the plain 1.0e-10\n        if (/\\d*\\.\\d*e.*/gm.test(stringRepresentation)) {\n          stringRepresentation = stringRepresentation.replace(/e(.*)/gm, \"\\\\mathrm{e}{$1}\");\n        } else {\n          // if there is no dot in the mantissa, add it so we see it's\n          // a double and not a perfect number\n          // e.g. 1e-10 becomes 1.0\\mathrm{e}{-10}\n          stringRepresentation = stringRepresentation.replace(/(\\d+)e(.*)/gm, \"$1.0\\\\mathrm{e}{$2}\");\n        }\n      } else {\n        if (/\\d*\\.\\d*e.*/gm.test(stringRepresentation)) {\n          stringRepresentation = stringRepresentation.replace(/e(.*)/gm, \"*10^($1)\");\n        } else {\n          // if there is no dot in the mantissa, add it so we see it's\n          // a double and not a perfect number\n          // e.g. 1e-10 becomes 1.0e-10\n          stringRepresentation = stringRepresentation.replace(/(\\d+)e(.*)/gm, \"$1.0*10^($2)\");\n        }\n      }\n    } else {\n      push(get_binding(symbol(MAX_FIXED_PRINTOUT_DIGITS)));\n      maxFixedPrintoutDigits = pop_integer();\n      //console.log \"maxFixedPrintoutDigits: \" + maxFixedPrintoutDigits\n      //console.log \"type: \" + typeof(maxFixedPrintoutDigits)\n      //console.log \"toFixed: \" + d.toFixed(maxFixedPrintoutDigits)\n      stringRepresentation = \"\" + d.toFixed(maxFixedPrintoutDigits);\n      // remove any trailing zeroes after the dot\n      // see https://stackoverflow.com/questions/26299160/using-regex-how-do-i-remove-the-trailing-zeros-from-a-decimal-number\n      stringRepresentation = stringRepresentation.replace(/(\\.\\d*?[1-9])0+$/gm, \"$1\");\n      // in case there are only zeroes after the dot, removes the dot too\n      stringRepresentation = stringRepresentation.replace(/\\.0+$/gm, \"\");\n      // we actually want to give a hint to user that\n      // it's a double, so add a trailing \".0\" if there\n      // is no decimal point\n      if (stringRepresentation.indexOf(\".\") === -1) {\n        stringRepresentation += \".0\";\n      }\n      if (parseFloat(stringRepresentation) !== d) {\n        stringRepresentation = d.toFixed(maxFixedPrintoutDigits) + \"...\";\n      }\n    }\n    return stringRepresentation;\n  };\n\n  // does nothing\n  clear_term = function() {};\n\n  // s is a string here anyways\n  isspace = function(s) {\n    if (s == null) {\n      return false;\n    }\n    return s === ' ' || s === '\\t' || s === '\\n' || s === '\\v' || s === '\\f' || s === '\\r';\n  };\n\n  isdigit = function(str) {\n    if (str == null) {\n      return false;\n    }\n    return /^\\d+$/.test(str);\n  };\n\n  isalpha = function(str) {\n    if (str == null) {\n      return false;\n    }\n    //Check for non-alphabetic characters and space\n    return str.search(/[^A-Za-z]/) === -1;\n  };\n\n  isalphaOrUnderscore = function(str) {\n    if (str == null) {\n      return false;\n    }\n    //Check for non-alphabetic characters and space\n    return str.search(/[^A-Za-z_]/) === -1;\n  };\n\n  isunderscore = function(str) {\n    if (str == null) {\n      return false;\n    }\n    return str.search(/_/) === -1;\n  };\n\n  isalnumorunderscore = function(str) {\n    if (str == null) {\n      return false;\n    }\n    return isalphaOrUnderscore(str) || isdigit(str);\n  };\n\n  count = function(p) {\n    var n;\n    if (iscons(p)) {\n      n = 0;\n      while (iscons(p)) {\n        n += count(car(p)) + 1;\n        p = cdr(p);\n      }\n    } else {\n      n = 1;\n    }\n    return n;\n  };\n\n  // this probably works out to be\n  // more general than just counting symbols, it can\n  // probably count instances of anything you pass as\n  // first argument but didn't try it.\n  countOccurrencesOfSymbol = function(needle, p) {\n    var n;\n    n = 0;\n    if (iscons(p)) {\n      while (iscons(p)) {\n        n += countOccurrencesOfSymbol(needle, car(p));\n        p = cdr(p);\n      }\n    } else {\n      if (equal(needle, p)) {\n        n = 1;\n      }\n    }\n    return n;\n  };\n\n  // returns the total number of elements\n  // in an expression\n  countsize = function(p) {\n    var i, l1, n, ref2;\n    n = 0;\n    if (istensor(p)) {\n      for (i = l1 = 0, ref2 = p.tensor.nelem; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n        n += p.tensor.elem[i];\n      }\n    } else if (iscons(p)) {\n      while (iscons(p)) {\n        n += count(car(p)) + 1;\n        p = cdr(p);\n      }\n    } else {\n      n = 1;\n    }\n    return n;\n  };\n\n  //jmp_buf stop_return, draw_stop_return\n\n  // s is a string here\n  stop = function(s) {\n    var message;\n    //if (draw_flag == 2)\n    //  longjmp(draw_stop_return, 1)\n    //else\n    errorMessage += \"Stop: \";\n    errorMessage += s;\n    //debugger\n    message = errorMessage;\n    errorMessage = '';\n    moveTos(0);\n    throw new Error(message);\n  };\n\n  \n  //longjmp(stop_return, 1)\n\n  // Figuring out dependencies is key to automatically\n  // generating a method signature when generating JS code\n  // from algebrite scripts.\n  // This is important because the user can keep using normal Algebrite\n  // scripting without special notations.\n  // Basically the process consists of figuring out\n  // the \"ground variables\" that are needed to compute each variable.\n  // Now there are two ways of doing this:\n  //   * at parse time\n  //   * after running the scripts\n  // Doing it at parse time means that we can't track simplifications\n  // canceling-out some variables for example. But on the other side\n  // it's very quick and the user can somehow see what the signature is\n  // going to look like (assuming tha code is rather simple), or anyways\n  // is going to easily make sense of the generated signature.\n  // Doing it after execution on the other hand would allow us to see\n  // if some variable cancel-out. But if variables cancel out then\n  // they might do so according to some run-time behaviour that the user\n  // might struggle to keep track of.\n  // So the effort for the user to make sense of the signature in the first case\n  // is similar to the effort of keeping tab of types in a typed language.\n  // While in the second case the effort is similar to running the\n  // code and simplifications in her head.\n\n  // If we just want to compute the dependencies, we don't need to do\n  // anything costly, we don't \"run\" the code and we don't simplify\n  // the code. Just finding the plain dependencies\n  // TODO change the name of this function, as it doesn't just find the\n  // dependencies. It also runs it and generates the JS code.\n  findDependenciesInScript = function(stringToBeParsed, dontGenerateCode) {\n    var allReturnedLatexStrings, allReturnedPlainStrings, bodyForReadableSummaryOfGeneratedCode, cyclesDescriptions, deQuotedDep, dependencyInfo, eachDependency, error, generatedBody, generatedCode, i, indexOfEachReplacement, indexOfPartRemainingToBeParsed, inited, key, l1, len, len1, len2, len3, len4, len5, len6, len7, m1, n, n1, newUserSymbol, o1, origPrintMode, originalUserSymbol, parameters, q1, r1, readableSummaryOfGeneratedCode, recursedDependencies, ref2, replacementsFrom, replacementsTo, s1, scriptEvaluation, stringToBeRun, t1, testableString, timeStartFromAlgebra, toBePrinted, u1, userVariablesMentioned, value, variablesWithCycles;\n    if (DEBUG) {\n      console.log(\"stringToBeParsed: \" + stringToBeParsed);\n    }\n    timeStartFromAlgebra = new Date().getTime();\n    inited = true;\n    codeGen = true;\n    symbolsDependencies = {};\n    symbolsHavingReassignments = [];\n    symbolsInExpressionsWithoutAssignments = [];\n    patternHasBeenFound = false;\n    indexOfPartRemainingToBeParsed = 0;\n    allReturnedPlainStrings = \"\";\n    allReturnedLatexStrings = \"\";\n    n = 0;\n    // we are going to store the dependencies _of the block as a whole_\n    // so all affected variables in the whole block are lumped\n    // together, and same for the variable that affect those, we\n    // lump them all together.\n    dependencyInfo = {\n      affectsVariables: [],\n      affectedBy: []\n    };\n    stringToBeRun = stringToBeParsed;\n    // parse the input. This collects the\n    // dependency information\n    while (1) {\n      try {\n        errorMessage = \"\";\n        check_stack();\n        if (DEBUG) {\n          console.log(\"findDependenciesInScript: scanning\");\n        }\n        n = scan(stringToBeParsed.substring(indexOfPartRemainingToBeParsed));\n        if (DEBUG) {\n          console.log(\"scanned\");\n        }\n        pop();\n        check_stack();\n      } catch (error1) {\n        error = error1;\n        if (PRINTOUTRESULT) {\n          console.log(error);\n        }\n        errorMessage = error + \"\";\n        //debugger\n        reset_after_error();\n        break;\n      }\n      if (n === 0) {\n        break;\n      }\n      indexOfPartRemainingToBeParsed += n;\n    }\n    testableString = \"\";\n    // print out all local dependencies as collected by this\n    // parsing pass\n    if (DEBUG) {\n      console.log(\"all local dependencies ----------------\");\n    }\n    testableString += \"All local dependencies: \";\n    for (key in symbolsDependencies) {\n      value = symbolsDependencies[key];\n      if (DEBUG) {\n        console.log(\"variable \" + key + \" depends on: \");\n      }\n      dependencyInfo.affectsVariables.push(key);\n      testableString += \" variable \" + key + \" depends on: \";\n      for (l1 = 0, len = value.length; l1 < len; l1++) {\n        i = value[l1];\n        if (DEBUG) {\n          console.log(\"    \" + i);\n        }\n        if (i[0] !== \"'\") {\n          dependencyInfo.affectedBy.push(i);\n        }\n        testableString += i + \", \";\n      }\n      testableString += \"; \";\n    }\n    testableString += \". \";\n    // print out the symbols with re-assignments:\n    if (DEBUG) {\n      console.log(\"Symbols with reassignments ----------------\");\n    }\n    testableString += \"Symbols with reassignments: \";\n    for (m1 = 0, len1 = symbolsHavingReassignments.length; m1 < len1; m1++) {\n      key = symbolsHavingReassignments[m1];\n      if (dependencyInfo.affectedBy.indexOf(key) === -1) {\n        dependencyInfo.affectedBy.push(key);\n        testableString += key + \", \";\n      }\n    }\n    testableString += \". \";\n    // print out the symbols that appear in expressions without assignments\n    if (DEBUG) {\n      console.log(\"Symbols in expressions without assignments ----------------\");\n    }\n    testableString += \"Symbols in expressions without assignments: \";\n    for (n1 = 0, len2 = symbolsInExpressionsWithoutAssignments.length; n1 < len2; n1++) {\n      key = symbolsInExpressionsWithoutAssignments[n1];\n      if (dependencyInfo.affectedBy.indexOf(key) === -1) {\n        dependencyInfo.affectedBy.push(key);\n        testableString += key + \", \";\n      }\n    }\n    testableString += \". \";\n    // ALL Algebrite code is affected by any pattern changing\n    dependencyInfo.affectedBy.push(\"PATTERN_DEPENDENCY\");\n    if (patternHasBeenFound) {\n      dependencyInfo.affectsVariables.push(\"PATTERN_DEPENDENCY\");\n      testableString += \" - PATTERN_DEPENDENCY inserted - \";\n    }\n    // print out all global dependencies as collected by this\n    // parsing pass\n    if (DEBUG) {\n      console.log(\"All dependencies recursively ----------------\");\n    }\n    testableString += \"All dependencies recursively: \";\n    scriptEvaluation = [\"\", \"\"];\n    generatedCode = \"\";\n    readableSummaryOfGeneratedCode = \"\";\n    if (errorMessage === \"\" && !dontGenerateCode) {\n      try {\n        allReturnedPlainStrings = \"\";\n        allReturnedLatexStrings = \"\";\n        scriptEvaluation = run(stringToBeParsed, true);\n        allReturnedPlainStrings = \"\";\n        allReturnedLatexStrings = \"\";\n      } catch (error1) {\n        error = error1;\n        if (PRINTOUTRESULT) {\n          console.log(error);\n        }\n        errorMessage = error + \"\";\n        //debugger\n        init();\n      }\n      if (errorMessage === \"\") {\n        for (key in symbolsDependencies) {\n          codeGen = true;\n          if (DEBUG) {\n            console.log(\"  variable \" + key + \" is: \" + get_binding(usr_symbol(key)).toString());\n          }\n          codeGen = false;\n          if (DEBUG) {\n            console.log(\"  variable \" + key + \" depends on: \");\n          }\n          testableString += \" variable \" + key + \" depends on: \";\n          recursedDependencies = [];\n          variablesWithCycles = [];\n          cyclesDescriptions = [];\n          recursiveDependencies(key, recursedDependencies, [], variablesWithCycles, [], cyclesDescriptions);\n          for (o1 = 0, len3 = variablesWithCycles.length; o1 < len3; o1++) {\n            i = variablesWithCycles[o1];\n            if (DEBUG) {\n              console.log(\"    --> cycle through \" + i);\n            }\n          }\n          for (q1 = 0, len4 = recursedDependencies.length; q1 < len4; q1++) {\n            i = recursedDependencies[q1];\n            if (DEBUG) {\n              console.log(\"    \" + i);\n            }\n            testableString += i + \", \";\n          }\n          testableString += \"; \";\n          for (r1 = 0, len5 = cyclesDescriptions.length; r1 < len5; r1++) {\n            i = cyclesDescriptions[r1];\n            testableString += \" \" + i + \", \";\n          }\n          if (DEBUG) {\n            console.log(\"  code generation:\" + key + \" is: \" + get_binding(usr_symbol(key)).toString());\n          }\n          // we really want to make an extra effort\n          // to generate simplified code, so\n          // run a \"simplify\" on the content of each\n          // variable that we are generating code for.\n          // Note that the variable\n          // will still point to un-simplified structures,\n          // we only simplify the generated code.\n          push(get_binding(usr_symbol(key)));\n          // Since we go and simplify all variables we meet,\n          // we have to replace each variable passed as a parameter\n          // with something entirely new, so that there is no chance\n          // that it might evoke previous values in the external scope\n          // as in this case:\n          //  a = 2\n          //  f(a) = a+1+b\n          // we don't want 'a' in the body of f to be simplified to 2\n          // There are two cases: 1) the variable actually was already in\n          // the symbol table, in which case there is going to be this new\n          // one prepended with AVOID_BINDING_TO_EXTERNAL_SCOPE_VALUE, and\n          // we'll have to remove up this variable later.\n          // OR 2) the variable wasn't already in the symbol table, in which\n          // case we directly create this one, which means that we'll have\n          // to rename it later to the correct name without the prepended\n          // part.\n          replacementsFrom = [];\n          replacementsTo = [];\n          for (s1 = 0, len6 = recursedDependencies.length; s1 < len6; s1++) {\n            eachDependency = recursedDependencies[s1];\n            if (eachDependency[0] === \"'\") {\n              deQuotedDep = eachDependency.substring(1);\n              originalUserSymbol = usr_symbol(deQuotedDep);\n              newUserSymbol = usr_symbol(\"AVOID_BINDING_TO_EXTERNAL_SCOPE_VALUE\" + deQuotedDep);\n              replacementsFrom.push(originalUserSymbol);\n              replacementsTo.push(newUserSymbol);\n              push(originalUserSymbol);\n              push(newUserSymbol);\n              subst();\n              if (DEBUG) {\n                console.log(\"after substitution: \" + stack[tos - 1]);\n              }\n            }\n          }\n          try {\n            simplifyForCodeGeneration();\n          } catch (error1) {\n            error = error1;\n            if (PRINTOUTRESULT) {\n              console.log(error);\n            }\n            errorMessage = error + \"\";\n            //debugger\n            init();\n          }\n          for (indexOfEachReplacement = t1 = 0, ref2 = replacementsFrom.length; (0 <= ref2 ? t1 < ref2 : t1 > ref2); indexOfEachReplacement = 0 <= ref2 ? ++t1 : --t1) {\n            //console.log \"replacing back \" + replacementsTo[indexOfEachReplacement] + \" into: \" + replacementsFrom[indexOfEachReplacement]\n            push(replacementsTo[indexOfEachReplacement]);\n            push(replacementsFrom[indexOfEachReplacement]);\n            subst();\n          }\n          clearRenamedVariablesToAvoidBindingToExternalScope();\n          if (errorMessage === \"\") {\n            toBePrinted = pop();\n            // we have to get all the variables used on the right side\n            // here. I.e. to print the arguments it's better to look at the\n            // actual method body after simplification.\n            userVariablesMentioned = [];\n            collectUserSymbols(toBePrinted, userVariablesMentioned);\n            allReturnedPlainStrings = \"\";\n            allReturnedLatexStrings = \"\";\n            codeGen = true;\n            generatedBody = toBePrinted.toString();\n            codeGen = false;\n            origPrintMode = printMode;\n            printMode = PRINTMODE_LATEX;\n            bodyForReadableSummaryOfGeneratedCode = toBePrinted.toString();\n            printMode = origPrintMode;\n            if (variablesWithCycles.indexOf(key) !== -1) {\n              generatedCode += \"// \" + key + \" is part of a cyclic dependency, no code generated.\";\n              readableSummaryOfGeneratedCode += \"#\" + key + \" is part of a cyclic dependency, no code generated.\";\n            } else {\n              /*\n               * using this paragraph instead of the following one\n               * creates methods signatures that\n               * are slightly less efficient\n               * i.e. variables compare even if they are\n               * simplified away.\n               * In theory these signatures are more stable, but\n               * in practice signatures vary quite a bit anyways\n               * depending on previous assignments for example,\n               * so it's unclear whether going for stability\n               * is sensible at all..\n              if recursedDependencies.length != 0\n                parameters = \"(\"\n                for i in recursedDependencies\n                  if i.indexOf(\"'\") != 0\n                    parameters += i + \", \"\n                  else\n                    if recursedDependencies.indexOf(i.substring(1)) == -1\n                      parameters += i.substring(1) + \", \"\n               */\n              // remove all native functions from the\n              // parameters as well.\n              userVariablesMentioned = userVariablesMentioned.filter(function(x) {\n                return predefinedSymbolsInGlobalScope_doNotTrackInDependencies.indexOf(x + \"\") === -1;\n              });\n              // remove the variable that are not in the dependency list\n              // i.e. only allow the variables that are in the dependency list\n              userVariablesMentioned = userVariablesMentioned.filter(function(x) {\n                return recursedDependencies.indexOf(x + \"\") !== -1 || recursedDependencies.indexOf(\"\\'\" + x + \"\") !== -1;\n              });\n              if (userVariablesMentioned.length !== 0) {\n                parameters = \"(\";\n                for (u1 = 0, len7 = userVariablesMentioned.length; u1 < len7; u1++) {\n                  i = userVariablesMentioned[u1];\n                  if (i.printname !== key) {\n                    parameters += i.printname + \", \";\n                  }\n                }\n                // eliminate the last \", \" for printout clarity\n                parameters = parameters.replace(/, $/gm, \"\");\n                parameters += \")\";\n                generatedCode += key + \" = function \" + parameters + \" { return ( \" + generatedBody + \" ); }\";\n                readableSummaryOfGeneratedCode += key + parameters + \" = \" + bodyForReadableSummaryOfGeneratedCode;\n              } else {\n                generatedCode += key + \" = \" + generatedBody + \";\";\n                readableSummaryOfGeneratedCode += key + \" = \" + bodyForReadableSummaryOfGeneratedCode;\n              }\n            }\n            generatedCode += \"\\n\";\n            readableSummaryOfGeneratedCode += \"\\n\";\n            if (DEBUG) {\n              console.log(\"    \" + generatedCode);\n            }\n          }\n        }\n      }\n    }\n    // eliminate the last new line\n    generatedCode = generatedCode.replace(/\\n$/gm, \"\");\n    readableSummaryOfGeneratedCode = readableSummaryOfGeneratedCode.replace(/\\n$/gm, \"\");\n    // cleanup\n    symbolsDependencies = {};\n    symbolsHavingReassignments = [];\n    patternHasBeenFound = false;\n    symbolsInExpressionsWithoutAssignments = [];\n    if (DEBUG) {\n      console.log(\"testable string: \" + testableString);\n    }\n    if (TIMING_DEBUGS) {\n      console.log(\"findDependenciesInScript time for: \" + stringToBeRun + \" : \" + ((new Date().getTime()) - timeStartFromAlgebra) + \"ms\");\n    }\n    return [testableString, scriptEvaluation[0], generatedCode, readableSummaryOfGeneratedCode, scriptEvaluation[1], errorMessage, dependencyInfo];\n  };\n\n  recursiveDependencies = function(variableToBeChecked, arrayWhereDependenciesWillBeAdded, variablesAlreadyFleshedOut, variablesWithCycles, chainBeingChecked, cyclesDescriptions) {\n    var cyclesDescription, i, k, l1, len, len1, m1, ref2;\n    variablesAlreadyFleshedOut.push(variableToBeChecked);\n    // recursive dependencies can only be descended if the variable is not bound to a parameter\n    if (symbolsDependencies[chainBeingChecked[chainBeingChecked.length - 1]] != null) {\n      if (symbolsDependencies[chainBeingChecked[chainBeingChecked.length - 1]].indexOf(\"'\" + variableToBeChecked) !== -1) {\n        if (DEBUG) {\n          console.log(\"can't keep following the chain of \" + variableToBeChecked + \" because it's actually a variable bound to a parameter\");\n        }\n        if (arrayWhereDependenciesWillBeAdded.indexOf(\"'\" + variableToBeChecked) === -1 && arrayWhereDependenciesWillBeAdded.indexOf(variableToBeChecked) === -1) {\n          arrayWhereDependenciesWillBeAdded.push(variableToBeChecked);\n        }\n        return arrayWhereDependenciesWillBeAdded;\n      }\n    }\n    chainBeingChecked.push(variableToBeChecked);\n    if (symbolsDependencies[variableToBeChecked] == null) {\n      // end case: the passed variable has no dependencies\n      // so there is nothing else to do\n      if (arrayWhereDependenciesWillBeAdded.indexOf(variableToBeChecked) === -1) {\n        arrayWhereDependenciesWillBeAdded.push(variableToBeChecked);\n      }\n      return arrayWhereDependenciesWillBeAdded;\n    } else {\n      ref2 = symbolsDependencies[variableToBeChecked];\n      // recursion case: we have to dig deeper\n      for (l1 = 0, len = ref2.length; l1 < len; l1++) {\n        i = ref2[l1];\n        // check that there is no recursion in dependencies\n        // we do that by keeping a list of variables that\n        // have already been \"fleshed-out\". If we encounter\n        // any of those \"fleshed-out\" variables while\n        // fleshing out, then there is a cycle \n        if (chainBeingChecked.indexOf(i) !== -1) {\n          if (DEBUG) {\n            console.log(\"  found cycle:\");\n          }\n          cyclesDescription = \"\";\n          for (m1 = 0, len1 = chainBeingChecked.length; m1 < len1; m1++) {\n            k = chainBeingChecked[m1];\n            if (variablesWithCycles.indexOf(k) === -1) {\n              variablesWithCycles.push(k);\n            }\n            if (DEBUG) {\n              console.log(k + \" --> \");\n            }\n            cyclesDescription += k + \" --> \";\n          }\n          if (DEBUG) {\n            console.log(\" ... then \" + i + \" again\");\n          }\n          cyclesDescription += \" ... then \" + i + \" again\";\n          cyclesDescriptions.push(cyclesDescription);\n          //if DEBUG then console.log \"    --> cycle through \" + i\n          // we want to flesh-out i but it's already been\n          // fleshed-out, just add it to the variables\n          // with cycles and move on\n          // todo refactor this, there are two copies of these two lines\n          if (variablesWithCycles.indexOf(i) === -1) {\n            variablesWithCycles.push(i);\n          }\n        } else {\n          // flesh-out i recursively\n          recursiveDependencies(i, arrayWhereDependenciesWillBeAdded, variablesAlreadyFleshedOut, variablesWithCycles, chainBeingChecked, cyclesDescriptions);\n          chainBeingChecked.pop();\n        }\n      }\n      //variablesAlreadyFleshedOut.pop()\n      return arrayWhereDependenciesWillBeAdded;\n    }\n  };\n\n  // parses and runs one statement/expression at a time\n  inited = false;\n\n  latexErrorSign = \"\\\\rlap{\\\\large\\\\color{red}\\\\bigtriangleup}{\\\\ \\\\ \\\\tiny\\\\color{red}!}\";\n\n  turnErrorMessageToLatex = function(theErrorMessage) {\n    theErrorMessage = theErrorMessage.replace(/\\n/g, \"\");\n    theErrorMessage = theErrorMessage.replace(/_/g, \"} \\\\_ \\\\text{\");\n    theErrorMessage = theErrorMessage.replace(new RegExp(String.fromCharCode(transpose_unicode), 'g'), \"}{}^{T}\\\\text{\");\n    theErrorMessage = theErrorMessage.replace(new RegExp(String.fromCharCode(dotprod_unicode), 'g'), \"}\\\\cdot \\\\text{\");\n    theErrorMessage = theErrorMessage.replace(\"Stop:\", \"}  \\\\quad \\\\text{Stop:\");\n    theErrorMessage = theErrorMessage.replace(\"->\", \"}  \\\\rightarrow \\\\text{\");\n    theErrorMessage = theErrorMessage.replace(\"?\", \"}\\\\enspace \" + latexErrorSign + \" \\\\enspace  \\\\text{\");\n    theErrorMessage = \"$$\\\\text{\" + theErrorMessage.replace(/\\n/g, \"\") + \"}$$\";\n    //console.log \"theErrorMessage: \" + theErrorMessage\n    return theErrorMessage;\n  };\n\n  // there are around a dozen different unicodes that\n  // represent some sort of middle dot, let's catch the most\n  // common and turn them into what we can process\n  normaliseDots = function(stringToNormalise) {\n    stringToNormalise = stringToNormalise.replace(new RegExp(String.fromCharCode(8901), 'g'), String.fromCharCode(dotprod_unicode));\n    stringToNormalise = stringToNormalise.replace(new RegExp(String.fromCharCode(8226), 'g'), String.fromCharCode(dotprod_unicode));\n    stringToNormalise = stringToNormalise.replace(new RegExp(String.fromCharCode(12539), 'g'), String.fromCharCode(dotprod_unicode));\n    stringToNormalise = stringToNormalise.replace(new RegExp(String.fromCharCode(55296), 'g'), String.fromCharCode(dotprod_unicode));\n    stringToNormalise = stringToNormalise.replace(new RegExp(String.fromCharCode(65381), 'g'), String.fromCharCode(dotprod_unicode));\n    return stringToNormalise;\n  };\n\n  TIMING_DEBUGS = false;\n\n  run = function(stringToBeRun, generateLatex = false) {\n    var allReturnedLatexStrings, allReturnedPlainStrings, collectedLatexResult, collectedPlainResult, error, errorWhileExecution, i, indexOfPartRemainingToBeParsed, n, stringToBeReturned, theErrorMessage, timeStart, timingDebugWrite;\n    timeStart = new Date().getTime();\n    //stringToBeRun = stringToBeRun + \"\\n\"\n    stringToBeRun = normaliseDots(stringToBeRun);\n    //console.log \"run running: \" + stringToBeRun\n    if (stringToBeRun === \"selftest\") {\n      selftest();\n      return;\n    }\n    if (!inited) {\n      inited = true;\n      init();\n    }\n    i = 0;\n    n = 0;\n    indexOfPartRemainingToBeParsed = 0;\n    allReturnedPlainStrings = \"\";\n    allReturnedLatexStrings = \"\";\n    while (1) {\n      try {\n        // while we can keep scanning commands out of the\n        // passed input AND we can execute them...\n        errorMessage = \"\";\n        check_stack();\n        n = scan(stringToBeRun.substring(indexOfPartRemainingToBeParsed));\n        p1 = pop();\n        check_stack();\n      } catch (error1) {\n        error = error1;\n        if (PRINTOUTRESULT) {\n          console.log(error);\n        }\n        //debugger\n        allReturnedPlainStrings += error.message;\n        if (generateLatex) {\n          //debugger\n          theErrorMessage = turnErrorMessageToLatex(error.message);\n          allReturnedLatexStrings += theErrorMessage;\n        }\n        reset_after_error();\n        break;\n      }\n      if (n === 0) {\n        break;\n      }\n      // if debug mode then print the source text\n\n      //if (equaln(get_binding(symbol(TRACE)), 1)) {\n      //  for (i = 0 i < n i++)\n      //    if (s[i] != '\\r')\n      //      printchar(s[i])\n      //  if (s[n - 1] != '\\n') # n is not zero, see above\n      //    printchar('\\n')\n      //}\n      indexOfPartRemainingToBeParsed += n;\n      push(p1);\n      //debugger\n      errorWhileExecution = false;\n      try {\n        stringsEmittedByUserPrintouts = \"\";\n        top_level_eval();\n        //console.log \"emitted string after top_level_eval(): >\" + stringsEmittedByUserPrintouts + \"<\"\n        //console.log \"allReturnedPlainStrings string after top_level_eval(): >\" + allReturnedPlainStrings + \"<\"\n        p2 = pop();\n        check_stack();\n        if (isstr(p2)) {\n          if (DEBUG) {\n            console.log(p2.str);\n          }\n          if (DEBUG) {\n            console.log(\"\\n\");\n          }\n        }\n        // if the return value is nil there isn't much point\n        // in adding \"nil\" to the printout\n        if (p2 === symbol(NIL)) {\n          //collectedPlainResult = stringsEmittedByUserPrintouts\n          collectedPlainResult = stringsEmittedByUserPrintouts;\n          if (generateLatex) {\n            collectedLatexResult = \"$$\" + stringsEmittedByUserPrintouts + \"$$\";\n          }\n        } else {\n          //console.log \"emitted string before collectPlainStringFromReturnValue: >\" + stringsEmittedByUserPrintouts + \"<\"\n          //console.log \"allReturnedPlainStrings string before collectPlainStringFromReturnValue: >\" + allReturnedPlainStrings + \"<\"\n          collectedPlainResult = print_expr(p2);\n          collectedPlainResult += \"\\n\";\n          //console.log \"collectedPlainResult: >\" + collectedPlainResult + \"<\"\n          if (generateLatex) {\n            collectedLatexResult = \"$$\" + collectLatexStringFromReturnValue(p2) + \"$$\";\n            if (DEBUG) {\n              console.log(\"collectedLatexResult: \" + collectedLatexResult);\n            }\n          }\n        }\n        allReturnedPlainStrings += collectedPlainResult;\n        if (generateLatex) {\n          allReturnedLatexStrings += collectedLatexResult;\n        }\n        if (PRINTOUTRESULT) {\n          if (DEBUG) {\n            console.log(\"printline\");\n          }\n          if (DEBUG) {\n            console.log(collectedPlainResult);\n          }\n        }\n        //alert collectedPlainResult\n        if (PRINTOUTRESULT) {\n          if (DEBUG) {\n            console.log(\"display:\");\n          }\n          print2dascii(p2);\n        }\n        if (generateLatex) {\n          allReturnedLatexStrings += \"\\n\";\n        }\n      } catch (error1) {\n        error = error1;\n        errorWhileExecution = true;\n        collectedPlainResult = error.message;\n        if (generateLatex) {\n          collectedLatexResult = turnErrorMessageToLatex(error.message);\n        }\n        if (PRINTOUTRESULT) {\n          console.log(collectedPlainResult);\n        }\n        allReturnedPlainStrings += collectedPlainResult;\n        if (collectedPlainResult !== \"\") {\n          allReturnedPlainStrings += \"\\n\";\n        }\n        if (generateLatex) {\n          allReturnedLatexStrings += collectedLatexResult;\n          allReturnedLatexStrings += \"\\n\";\n        }\n        init();\n      }\n    }\n    if (allReturnedPlainStrings[allReturnedPlainStrings.length - 1] === \"\\n\") {\n      allReturnedPlainStrings = allReturnedPlainStrings.substring(0, allReturnedPlainStrings.length - 1);\n    }\n    if (generateLatex) {\n      if (allReturnedLatexStrings[allReturnedLatexStrings.length - 1] === \"\\n\") {\n        allReturnedLatexStrings = allReturnedLatexStrings.substring(0, allReturnedLatexStrings.length - 1);\n      }\n    }\n    if (generateLatex) {\n      if (DEBUG) {\n        console.log(\"allReturnedLatexStrings: \" + allReturnedLatexStrings);\n      }\n      stringToBeReturned = [allReturnedPlainStrings, allReturnedLatexStrings];\n    } else {\n      stringToBeReturned = allReturnedPlainStrings;\n    }\n    if (TIMING_DEBUGS) {\n      timingDebugWrite = \"run time on: \" + stringToBeRun + \" : \" + (new Date().getTime() - timeStart) + \"ms\";\n      console.log(timingDebugWrite);\n    }\n    allReturnedPlainStrings = \"\";\n    allReturnedLatexStrings = \"\";\n    return stringToBeReturned;\n  };\n\n  check_stack = function() {\n    if (tos !== 0) {\n      debugger;\n      stop(\"stack error\");\n    }\n    if (frame !== TOS) {\n      debugger;\n      stop(\"frame error\");\n    }\n    if (chainOfUserSymbolsNotFunctionsBeingEvaluated.length !== 0) {\n      debugger;\n      stop(\"symbols evaluation still ongoing?\");\n    }\n    if (evaluatingAsFloats !== 0) {\n      debugger;\n      stop(\"numeric evaluation still ongoing?\");\n    }\n    if (evaluatingPolar !== 0) {\n      debugger;\n      return stop(\"evaluation of polar still ongoing?\");\n    }\n  };\n\n  // cannot reference symbols yet\n\n  // returns nil on stack if no result to print\n  top_level_eval = function() {\n    var evalledArgument, originalArgument, shouldAutoexpand;\n    if (DEBUG) {\n      console.log(\"#### top level eval\");\n    }\n    trigmode = 0;\n    shouldAutoexpand = symbol(AUTOEXPAND);\n    if (isZeroAtomOrTensor(get_binding(shouldAutoexpand))) {\n      expanding = 0;\n    } else {\n      expanding = 1;\n    }\n    originalArgument = top();\n    Eval();\n    evalledArgument = top();\n    // \"draw\", \"for\" and \"setq\" return \"nil\", there is no result to print\n    if (evalledArgument === symbol(NIL)) {\n      return;\n    }\n    // update \"last\" to contain the last result\n    set_binding(symbol(LAST), evalledArgument);\n    if (!isZeroAtomOrTensor(get_binding(symbol(BAKE)))) {\n      bake();\n      evalledArgument = top();\n    }\n    // If user asked explicitly asked to evaluate \"i\" or \"j\" and\n    // they represent the imaginary unit (-1)^(1/2), then \n    // show (-1)^(1/2).\n    if ((originalArgument === symbol(SYMBOL_I) || originalArgument === symbol(SYMBOL_J)) && isimaginaryunit(evalledArgument)) {\n\n    // In all other cases, replace all instances of (-1)^(1/2) in the result\n    // with the symbol \"i\" or \"j\" depending on which one\n    // represents the imaginary unit\n    } else if (isimaginaryunit(get_binding(symbol(SYMBOL_J)))) {\n      push(imaginaryunit);\n      push_symbol(SYMBOL_J);\n      return subst();\n    } else if (isimaginaryunit(get_binding(symbol(SYMBOL_I)))) {\n      push(imaginaryunit);\n      push_symbol(SYMBOL_I);\n      return subst();\n    }\n  };\n\n  check_esc_flag = function() {\n    if (esc_flag) {\n      return stop(\"esc key\");\n    }\n  };\n\n  // this is called when the whole notebook is re-run\n  // so we get the chance of clearing the whole state from\n  // scratch.\n  // In practice, the state we need to clear that persists\n  // across blocks are only the patterns, so\n  // just eject those.\n  clearAlgebraEnvironment = function() {\n    //console.log \"CLEARING clearAlgebraEnvironment =============================================================\"\n    return do_clearall();\n  };\n\n  computeDependenciesFromAlgebra = function(codeFromAlgebraBlock) {\n    var i, keepState, l1, len, len1, m1, originalcodeFromAlgebraBlock, userSimplificationsInProgramForm;\n    if (DEBUG) {\n      console.log(\"computeDependenciesFromAlgebra!!!\");\n    }\n    // return findDependenciesInScript(codeFromAlgebraBlock, true)[6]\n\n    // TODO this part below is duplicated from computeResultsAndJavaScriptFromAlgebra\n    //      ...should refactor.\n    originalcodeFromAlgebraBlock = codeFromAlgebraBlock;\n    keepState = true;\n    called_from_Algebra_block = true;\n    //console.log \"codeFromAlgebraBlock: \" + codeFromAlgebraBlock\n    codeFromAlgebraBlock = normaliseDots(codeFromAlgebraBlock);\n    if (!keepState) {\n      userSimplificationsInListForm = [];\n      userSimplificationsInProgramForm = \"\";\n      for (l1 = 0, len = userSimplificationsInListForm.length; l1 < len; l1++) {\n        i = userSimplificationsInListForm[l1];\n        //console.log \"silentpattern(\" + car(i) + \",\"+cdr(i)+\")\"\n        userSimplificationsInProgramForm += \"silentpattern(\" + car(i) + \",\" + car(cdr(i)) + \",\" + car(cdr(cdr(i))) + \")\\n\";\n      }\n      do_clearall();\n      codeFromAlgebraBlock = userSimplificationsInProgramForm + codeFromAlgebraBlock;\n      if (DEBUG) {\n        console.log(\"codeFromAlgebraBlock including patterns: \" + codeFromAlgebraBlock);\n      }\n    }\n    if (DEBUG) {\n      console.log(\"computeDependenciesFromAlgebra: patterns in the list --------------- \");\n      for (m1 = 0, len1 = userSimplificationsInListForm.length; m1 < len1; m1++) {\n        i = userSimplificationsInListForm[m1];\n        console.log(car(i) + \",\" + cdr(i) + \")\");\n      }\n      console.log(\"...end of list --------------- \");\n    }\n    called_from_Algebra_block = false;\n    return findDependenciesInScript(codeFromAlgebraBlock, true)[6];\n  };\n\n  computeResultsAndJavaScriptFromAlgebra = function(codeFromAlgebraBlock) {\n    var code, dependencyInfo, i, keepState, l1, latexResult, len, len1, m1, originalcodeFromAlgebraBlock, readableSummaryOfCode, result, stringToBeRun, testableStringIsIgnoredHere, timeStartFromAlgebra, userSimplificationsInProgramForm;\n    originalcodeFromAlgebraBlock = codeFromAlgebraBlock;\n    keepState = true;\n    called_from_Algebra_block = true;\n    timeStartFromAlgebra = new Date().getTime();\n    if (TIMING_DEBUGS) {\n      console.log(\" --------- computeResultsAndJavaScriptFromAlgebra input: \" + codeFromAlgebraBlock + \" at: \" + (new Date()));\n    }\n    // we start \"clean\" each time:\n    // clear all the symbols and then re-define\n    // the \"starting\" symbols.\n\n    //console.log \"codeFromAlgebraBlock: \" + codeFromAlgebraBlock\n    codeFromAlgebraBlock = normaliseDots(codeFromAlgebraBlock);\n    stringToBeRun = codeFromAlgebraBlock;\n    if (DEBUG) {\n      console.log(\"computeResultsAndJavaScriptFromAlgebra: patterns in the list --------------- \");\n      for (l1 = 0, len = userSimplificationsInListForm.length; l1 < len; l1++) {\n        i = userSimplificationsInListForm[l1];\n        console.log(car(i) + \",\" + cdr(i) + \")\");\n      }\n      console.log(\"...end of list --------------- \");\n    }\n    if (!keepState) {\n      userSimplificationsInListForm = [];\n      userSimplificationsInProgramForm = \"\";\n      for (m1 = 0, len1 = userSimplificationsInListForm.length; m1 < len1; m1++) {\n        i = userSimplificationsInListForm[m1];\n        //console.log \"silentpattern(\" + car(i) + \",\"+cdr(i)+\")\"\n        userSimplificationsInProgramForm += \"silentpattern(\" + car(i) + \",\" + car(cdr(i)) + \",\" + car(cdr(cdr(i))) + \")\\n\";\n      }\n      do_clearall();\n      codeFromAlgebraBlock = userSimplificationsInProgramForm + codeFromAlgebraBlock;\n      if (DEBUG) {\n        console.log(\"codeFromAlgebraBlock including patterns: \" + codeFromAlgebraBlock);\n      }\n    }\n    //debugger\n    [testableStringIsIgnoredHere, result, code, readableSummaryOfCode, latexResult, errorMessage, dependencyInfo] = findDependenciesInScript(codeFromAlgebraBlock);\n    called_from_Algebra_block = false;\n    if (readableSummaryOfCode !== \"\" || errorMessage !== \"\") {\n      result += \"\\n\" + readableSummaryOfCode;\n      if (errorMessage !== \"\") {\n        result += \"\\n\" + errorMessage;\n      }\n      result = result.replace(/\\n/g, \"\\n\\n\");\n      latexResult += \"\\n\" + \"$$\" + readableSummaryOfCode + \"$$\";\n      if (errorMessage !== \"\") {\n        latexResult += turnErrorMessageToLatex(errorMessage);\n      }\n      latexResult = latexResult.replace(/\\n/g, \"\\n\\n\");\n    }\n    // remove empty results altogether from latex output, which happens\n    // for example for assignments to variables or\n    // functions definitions\n    latexResult = latexResult.replace(/\\n*/, \"\");\n    latexResult = latexResult.replace(/\\$\\$\\$\\$\\n*/g, \"\");\n    code = code.replace(/Math\\./g, \"\");\n    code = code.replace(/\\n/g, \"\\n\\n\");\n    //console.log \"code: \" + code\n    //console.log \"result: \" + result\n    //console.log \"latexResult: \" + latexResult\n    if (TIMING_DEBUGS) {\n      console.log(\"computeResultsAndJavaScriptFromAlgebra time (total time from notebook and back) for: \" + stringToBeRun + \" : \" + ((new Date().getTime()) - timeStartFromAlgebra) + \"ms\");\n    }\n    return {\n      //code: \"// no code generated yet\\n//try again later\"\n      //code: \"console.log('some passed code is run'); window.something = 1;\"\n      code: code,\n      // TODO temporarily pass latex in place of standard result too\n      result: latexResult,\n      latexResult: latexResult,\n      dependencyInfo: dependencyInfo\n    };\n  };\n\n  (typeof exports !== \"undefined\" && exports !== null ? exports : this).run = run;\n\n  (typeof exports !== \"undefined\" && exports !== null ? exports : this).findDependenciesInScript = findDependenciesInScript;\n\n  (typeof exports !== \"undefined\" && exports !== null ? exports : this).computeDependenciesFromAlgebra = computeDependenciesFromAlgebra;\n\n  (typeof exports !== \"undefined\" && exports !== null ? exports : this).computeResultsAndJavaScriptFromAlgebra = computeResultsAndJavaScriptFromAlgebra;\n\n  (typeof exports !== \"undefined\" && exports !== null ? exports : this).clearAlgebraEnvironment = clearAlgebraEnvironment;\n\n  //   _______\n  //  |  | <- stack\n  //  |  |\n  //  |_______|\n  //  |  | <- stack + tos\n  //  |  |\n  //  |  |\n  //  |_______|\n  //  |  | <- frame\n  //  |_______|\n  //      <- stack + TOS\n\n  //  The stack grows from low memory towards high memory. This is so that\n  //  multiple expressions can be pushed on the stack and then accessed as an\n  //  array.\n\n  //  The frame area holds local variables and grows from high memory towards\n  //  low memory. The frame area makes local variables visible to the garbage\n  //  collector.\n  tos = 0;\n\n  // p is a U\n  nil_symbols = 0;\n\n  push = function(p) {\n    if (p == null) {\n      debugger;\n    }\n    if (p.isZero != null) {\n      debugger;\n    }\n    //console.log \"pushing \"\n    //console.log print_list(p)\n    if (p === symbol(NIL)) {\n      nil_symbols++;\n      if (DEBUG) {\n        console.log(\"pushing symbol(NIL) #\" + nil_symbols);\n      }\n    }\n    //if nil_symbols == 111\n    //  debugger\n    if (tos >= frame) {\n      stop(\"stack overflow\");\n    }\n    return stack[tos++] = p;\n  };\n\n  // returns a U\n  moveTos = function(stackPos) {\n    if (tos <= stackPos) {\n      // we are moving the stack pointer\n      // \"up\" the stack (as if we were doing a push)\n      tos = stackPos;\n      return;\n    }\n    // we are moving the stack pointer\n    // \"down\" the stack i.e. as if we were\n    // doing a pop, we can zero-\n    // out all the elements that we pass\n    // so we can reclaim the memory\n    while (tos > stackPos) {\n      stack[tos] = null;\n      tos--;\n    }\n  };\n\n  top = function() {\n    return stack[tos - 1];\n  };\n\n  pop = function() {\n    var elementToBeReturned;\n    //popsNum++\n    //console.log \"pop #\" + popsNum\n    if (tos === 0) {\n      debugger;\n      stop(\"stack underflow\");\n    }\n    if (stack[tos - 1] == null) {\n      debugger;\n    }\n    elementToBeReturned = stack[--tos];\n    \n    // give a chance to the garbage\n    // collection to reclaim space\n    // This is JS-specific, it would\n    // actually make the C garbage\n    // collector useless.\n    stack[tos] = null;\n    return elementToBeReturned;\n  };\n\n  // n is an integer\n  push_frame = function(n) {\n    var i, l1, ref2, results;\n    i = 0;\n    frame -= n;\n    if (frame < tos) {\n      debugger;\n      stop(\"frame overflow, circular reference?\");\n    }\n    results = [];\n    for (i = l1 = 0, ref2 = n; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      results.push(stack[frame + i] = symbol(NIL));\n    }\n    return results;\n  };\n\n  // n is an integer\n  pop_frame = function(n) {\n    frame += n;\n    if (frame > TOS) {\n      return stop(\"frame underflow\");\n    }\n  };\n\n  save = function() {\n    frame -= 10;\n    if (frame < tos) {\n      debugger;\n      stop(\"frame overflow, circular reference?\");\n    }\n    stack[frame + 0] = p0;\n    stack[frame + 1] = p1;\n    stack[frame + 2] = p2;\n    stack[frame + 3] = p3;\n    stack[frame + 4] = p4;\n    stack[frame + 5] = p5;\n    stack[frame + 6] = p6;\n    stack[frame + 7] = p7;\n    stack[frame + 8] = p8;\n    return stack[frame + 9] = p9;\n  };\n\n  restore = function() {\n    if (frame > TOS - 10) {\n      stop(\"frame underflow\");\n    }\n    p0 = stack[frame + 0];\n    p1 = stack[frame + 1];\n    p2 = stack[frame + 2];\n    p3 = stack[frame + 3];\n    p4 = stack[frame + 4];\n    p5 = stack[frame + 5];\n    p6 = stack[frame + 6];\n    p7 = stack[frame + 7];\n    p8 = stack[frame + 8];\n    p9 = stack[frame + 9];\n    return frame += 10;\n  };\n\n  // Local U * is OK here because there is no functional path to the garbage collector.\n  swap = function() {\n    var p, q;\n    //U *p, *q\n    // p and q are both Us\n    p = pop();\n    q = pop();\n    push(p);\n    return push(q);\n  };\n\n  // Local U * is OK here because there is no functional path to the garbage collector.\n  dupl = function() {\n    var p;\n    //U *p\n    p = pop();\n    push(p);\n    return push(p);\n  };\n\n  $.dupl = dupl;\n\n  $.swap = swap;\n\n  $.restore = restore;\n\n  $.save = save;\n\n  $.push = push;\n\n  $.pop = pop;\n\n  // The symbol table is a simple array of struct U.\n\n  // put symbol at index n\n  Eval_symbolsinfo = function() {\n    var symbolsinfoToBePrinted;\n    symbolsinfoToBePrinted = symbolsinfo();\n    if (symbolsinfoToBePrinted !== \"\") {\n      return push(new_string(symbolsinfoToBePrinted));\n    } else {\n      return push_symbol(NIL);\n    }\n  };\n\n  symbolsinfo = function() {\n    var bindingi, i, l1, ref2, ref3, symbolsinfoToBePrinted, symtabi;\n    symbolsinfoToBePrinted = \"\";\n    for (i = l1 = ref2 = NIL + 1, ref3 = symtab.length; (ref2 <= ref3 ? l1 < ref3 : l1 > ref3); i = ref2 <= ref3 ? ++l1 : --l1) {\n      if (symtab[i].printname === \"\") {\n        if (isSymbolReclaimable[i] === false) {\n          break;\n        } else {\n          continue;\n        }\n      }\n      symtabi = symtab[i] + \"\";\n      bindingi = (binding[i] + \"\").substring(0, 4);\n      symbolsinfoToBePrinted += \"symbol: \" + symtabi + \" size: \" + countsize(binding[i]) + \" value: \" + bindingi + \"...\\n\";\n    }\n    return symbolsinfoToBePrinted;\n  };\n\n  // s is a string, n is an int\n  // TODO: elsewhere when we create a symbol we\n  // rather prefer to create a new entry. Here we just\n  // reuse the existing one. If that can never be a problem\n  // then explain why, otherwise do create a new entry.\n  std_symbol = function(s, n, latexPrint) {\n    var p;\n    p = symtab[n];\n    if (p == null) {\n      debugger;\n    }\n    p.printname = s;\n    if (latexPrint != null) {\n      return p.latexPrint = latexPrint;\n    } else {\n      return p.latexPrint = s;\n    }\n  };\n\n  // symbol lookup, or symbol creation if symbol doesn't exist yet\n  // this happens often from the scanner. When the scanner sees something\n  // like myVar = 2, it create a tree (SETQ (\"myVar\" symbol as created/looked up here (2)))\n  // user-defined functions also have a usr symbol.\n\n  // Note that some symbols like, say, \"abs\",\n  // are picked up by the scanner directly as keywords,\n  // so they are not looked up via this.\n  // So in fact you could redefine abs to be abs(x) = x\n  // but still abs would be picked up by the scanner as a particular\n  // node type and calls to abs() will be always to the \"native\" abs\n\n  // Also note that some symbols such as \"zero\" are (strangely) not picked up by\n  // the scanner as special nodes, rather they are identified as keywords\n  // (e.g. not redefinable) at time of symbol lookup (in Eval_sym) and\n  // evalled, where eval has a case for ZERO.\n\n  // Also note that there are a number of symbols, such as a,b,c,x,y,z,...\n  // that are actually created by std_symbols.\n  // They are not special node types (like abs), they are normal symbols\n  // that are looked up, but the advantage is that since they are often\n  // used internally by algebrite, we create the symbol in advance and\n  // we can reference the symbol entry in a clean way\n  // (e.g. symbol(SYMBOL_X)) rather than\n  // by looking up a string.\n\n  // s is a string\n  usr_symbol = function(s) {\n    var i, l1, ref2;\n    //console.log \"usr_symbol of \" + s\n    //if s == \"aaa\"\n    //  debugger\n\n    // find either the existing symbol, or if we\n    // reach an empty symbol (printname == \"\") then\n    // re-use that location.\n    i = 0;\n    for (i = l1 = 0, ref2 = NSYM; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      if (s === symtab[i].printname) {\n        // found the symbol\n        return symtab[i];\n      }\n      if (symtab[i].printname === \"\") {\n        // found an entry in the symbol table\n        // with no printname, exit the loop\n        // and re-use this location\n        break;\n      }\n    }\n    if (i === NSYM) {\n      stop(\"symbol table overflow\");\n    }\n    symtab[i] = new U();\n    symtab[i].k = SYM;\n    symtab[i].printname = s;\n    // say that we just created the symbol\n    // then, binding[the new symbol entry]\n    // by default points to the symbol.\n    // So the value of an unassigned symbol will\n    // be just its name.\n    binding[i] = symtab[i];\n    isSymbolReclaimable[i] = false;\n    return symtab[i];\n  };\n\n  // get the symbol's printname\n\n  // p is a U\n  get_printname = function(p) {\n    if (p.k !== SYM) {\n      stop(\"symbol error\");\n    }\n    return p.printname;\n  };\n\n  // p and q are both U\n  // there are two Us at play here. One belongs to the\n  // symtab array and is the variable name.\n  // The other one is the U with the content, and that\n  // one will go in the corresponding \"binding\" array entry.\n  set_binding = function(p, q) {\n    var indexFound;\n    if (p.k !== SYM) {\n      stop(\"symbol error\");\n    }\n    //console.log \"setting binding of \" + p.toString() + \" to: \" + q.toString()\n    //if p.toString() == \"aaa\"\n    //  debugger\n    indexFound = symtab.indexOf(p);\n    /*\n    if indexFound == -1\n      debugger\n      for i in [0...symtab.length]\n        if p.printname == symtab[i].printname\n          indexFound = i\n          console.log \"remedied an index not found!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\"\n          break\n    */\n    if (symtab.indexOf(p, indexFound + 1) !== -1) {\n      console.log(\"ops, more than one element!\");\n      debugger;\n    }\n    if (DEBUG) {\n      console.log(\"lookup >> set_binding lookup \" + indexFound);\n    }\n    isSymbolReclaimable[indexFound] = false;\n    return binding[indexFound] = q;\n  };\n\n  // p is a U\n  get_binding = function(p) {\n    var indexFound;\n    if (p.k !== SYM) {\n      stop(\"symbol error\");\n    }\n    //console.log \"getting binding of \" + p.toString()\n    //if p.toString() == \"aaa\"\n    //  debugger\n    indexFound = symtab.indexOf(p);\n    /*\n    if indexFound == -1\n      debugger\n      for i in [0...symtab.length]\n        if p.printname == symtab[i].printname\n          indexFound = i\n          console.log \"remedied an index not found!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\"\n          break\n    */\n    if (symtab.indexOf(p, indexFound + 1) !== -1) {\n      console.log(\"ops, more than one element!\");\n      debugger;\n    }\n    if (DEBUG) {\n      console.log(\"lookup >> get_binding lookup \" + indexFound);\n    }\n    //if indexFound == 139\n    //  debugger\n    //if indexFound == 137\n    //  debugger\n    return binding[indexFound];\n  };\n\n  // the concept of user symbol is a little fuzzy\n  // beucase mathematics is full of symbols that actually\n  // have a special meaning, e.g. e,i,I in some cases j...\n  is_usr_symbol = function(p) {\n    var theSymnum;\n    if (p.k !== SYM) {\n      return false;\n    }\n    theSymnum = symnum(p);\n    // see \"defs\" file for the naming of the symbols\n    if (theSymnum > PI && theSymnum !== SYMBOL_I && theSymnum !== SYMBOL_IDENTITY_MATRIX) {\n      return true;\n    }\n    return false;\n  };\n\n  // get symbol's number from ptr\n  // p is U\n  lookupsTotal = 0;\n\n  symnum = function(p) {\n    var indexFound;\n    lookupsTotal++;\n    if (p.k !== SYM) {\n      stop(\"symbol error\");\n    }\n    indexFound = symtab.indexOf(p);\n    if (symtab.indexOf(p, indexFound + 1) !== -1) {\n      console.log(\"ops, more than one element!\");\n      debugger;\n    }\n    if (DEBUG) {\n      console.log(\"lookup >> symnum lookup \" + indexFound + \" lookup # \" + lookupsTotal);\n    }\n    //if lookupsTotal == 21\n    //  debugger\n    //if indexFound == 79\n    //  debugger\n    return indexFound;\n  };\n\n  // push indexed symbol\n\n  // k is an int\n  push_symbol = function(k) {\n    return push(symtab[k]);\n  };\n\n  clear_symbols = function() {\n    var i, l1, ref2, ref3, results;\n// we can clear just what's assignable.\n// everything before NIL is not assignable,\n// so there is no need to clear it.\n    results = [];\n    for (i = l1 = ref2 = NIL + 1, ref3 = NSYM; (ref2 <= ref3 ? l1 < ref3 : l1 > ref3); i = ref2 <= ref3 ? ++l1 : --l1) {\n      // stop at the first empty\n      // entry that is not reclaimable\n      if (symtab[i].printname === \"\") {\n        if (isSymbolReclaimable[i] === false) {\n          break;\n        } else {\n          continue;\n        }\n      }\n      symtab[i] = new U();\n      symtab[i].k = SYM;\n      binding[i] = symtab[i];\n      results.push(isSymbolReclaimable[i] = false);\n    }\n    return results;\n  };\n\n  //symtab[i].printname = \"\"\n  //binding[i] = symtab[i]\n\n  // collect all the variables in a tree\n  collectUserSymbols = function(p, accumulator = []) {\n    var i, l1, ref2;\n    if (is_usr_symbol(p)) {\n      if (accumulator.indexOf(p) === -1) {\n        accumulator.push(p);\n        return;\n      }\n    }\n    if (istensor(p)) {\n      for (i = l1 = 0, ref2 = p.tensor.nelem; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n        collectUserSymbols(p.tensor.elem[i], accumulator);\n      }\n      return;\n    }\n    while (iscons(p)) {\n      collectUserSymbols(car(p), accumulator);\n      p = cdr(p);\n    }\n  };\n\n  $.get_binding = get_binding;\n\n  $.set_binding = set_binding;\n\n  $.usr_symbol = usr_symbol;\n\n  $.symbolsinfo = symbolsinfo;\n\n  $.collectUserSymbols = collectUserSymbols;\n\n  if (!inited) {\n    inited = true;\n    init();\n  }\n\n  $.init = init;\n\n  parse_internal = function(argu) {\n    if (typeof argu === 'string') {\n      return scan(argu);\n    // now its in the stack\n    } else if (typeof argu === 'number') {\n      if (argu % 1 === 0) {\n        return push_integer(argu);\n      } else {\n        return push_double(argu);\n      }\n    } else if (argu instanceof U) {\n      // hey look its a U\n      return push(argu);\n    } else {\n      console.warn('unknown argument type', argu);\n      return push(symbol(NIL));\n    }\n  };\n\n  parse = function(argu) {\n    var data, error;\n    try {\n      parse_internal(argu);\n      data = pop();\n      check_stack();\n    } catch (error1) {\n      error = error1;\n      reset_after_error();\n      throw error;\n    }\n    return data;\n  };\n\n  // exec handles the running ia JS of all the algebrite\n  // functions. The function name is passed in \"name\" and\n  // the corresponding function is pushed at the top of the stack\n  exec = function(name, ...argus) {\n    var argu, error, fn, l1, len, result;\n    fn = get_binding(usr_symbol(name));\n    check_stack();\n    push(fn);\n    for (l1 = 0, len = argus.length; l1 < len; l1++) {\n      argu = argus[l1];\n      parse_internal(argu);\n    }\n    list(1 + argus.length);\n    p1 = pop();\n    push(p1);\n    try {\n      top_level_eval();\n      result = pop();\n      check_stack();\n    } catch (error1) {\n      error = error1;\n      reset_after_error();\n      throw error;\n    }\n    return result;\n  };\n\n  $.exec = exec;\n\n  $.parse = parse;\n\n  (function() {\n    var builtin_fns, fn, l1, len, results;\n    builtin_fns = [\"abs\", \"add\", \"adj\", \"and\", \"approxratio\", \"arccos\", \"arccosh\", \"arcsin\", \"arcsinh\", \"arctan\", \"arctanh\", \"arg\", \"atomize\", \"besselj\", \"bessely\", \"binding\", \"binomial\", \"ceiling\", \"check\", \"choose\", \"circexp\", \"clear\", \"clearall\", \"clearpatterns\", \"clock\", \"coeff\", \"cofactor\", \"condense\", \"conj\", \"contract\", \"cos\", \"cosh\", \"decomp\", \"defint\", \"deg\", \"denominator\", \"det\", \"derivative\", \"dim\", \"dirac\", \"divisors\", \"do\", \"dot\", \"draw\", \"dsolve\", \"eigen\", \"eigenval\", \"eigenvec\", \"erf\", \"erfc\", \"eval\", \"exp\", \"expand\", \"expcos\", \"expsin\", \"factor\", \"factorial\", \"factorpoly\", \"filter\", \"float\", \"floor\", \"for\", \"Gamma\", \"gcd\", \"hermite\", \"hilbert\", \"imag\", \"component\", \"inner\", \"integral\", \"inv\", \"invg\", \"isinteger\", \"isprime\", \"laguerre\", \"lcm\", \"leading\", \"legendre\", \"log\", \"mod\", \"multiply\", \"not\", \"nroots\", \"number\", \"numerator\", \"operator\", \"or\", \"outer\", \"pattern\", \"patternsinfo\", \"polar\", \"power\", \"prime\", \"print\", \"print2dascii\", \"printcomputer\", \"printlatex\", \"printlist\", \"printhuman\", \"product\", \"quote\", \"quotient\", \"rank\", \"rationalize\", \"real\", \"rect\", \"roots\", \"round\", \"equals\", \"shape\", \"sgn\", \"silentpattern\", \"simplify\", \"sin\", \"sinh\", \"sqrt\", \"stop\", \"subst\", \"sum\", \"symbolsinfo\", \"tan\", \"tanh\", \"taylor\", \"test\", \"testeq\", \"testge\", \"testgt\", \"testle\", \"testlt\", \"transpose\", \"unit\", \"zero\"];\n    results = [];\n    for (l1 = 0, len = builtin_fns.length; l1 < len; l1++) {\n      fn = builtin_fns[l1];\n      results.push($[fn] = exec.bind(this, fn));\n    }\n    return results;\n  })();\n\n  freeze = function() {\n    var frozenContents, frozenHash, frozenPatterns, frozenSymbols, i, l1, ref2;\n    frozenSymbols = [];\n    frozenContents = [];\n    frozenPatterns = [];\n    frozenHash = \"\";\n    for (i = l1 = 0, ref2 = symtab.length; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      //if symtab[i].printname == \"\"\n      //  if isSymbolReclaimable[i] == false\n      //    break\n      //  else\n      //    continue\n      if (isSymbolReclaimable[i] === false) {\n        frozenSymbols.push(symtab[i]);\n        frozenContents.push(binding[i]);\n      }\n    }\n    // just clone them\n    frozenPatterns = userSimplificationsInListForm.slice(0);\n    return [frozenSymbols, frozenContents, frozenPatterns, zero, one, imaginaryunit, getStateHash()];\n  };\n\n  unfreeze = function(frozen) {\n    var frozenContents, frozenPatterns, frozenSymbols, i, l1, ref2;\n    [frozenSymbols, frozenContents, frozenPatterns, zero, one, imaginaryunit] = frozen;\n//clear_symbols()\n    for (i = l1 = 0, ref2 = frozenSymbols.length; (0 <= ref2 ? l1 < ref2 : l1 > ref2); i = 0 <= ref2 ? ++l1 : --l1) {\n      symtab[i] = frozenSymbols[i];\n      binding[i] = frozenContents[i];\n    }\n    return userSimplificationsInListForm = frozenPatterns.slice(0);\n  };\n\n  compareState = function(previousHash) {\n    var frozenHash;\n    frozenHash = getStateHash();\n    if (frozenHash === previousHash) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  getStateHash = function() {\n    var bindingi, frozenHash, i, l1, len, m1, ref2, ref3, symtabi;\n    frozenHash = \"\";\n    for (i = l1 = ref2 = NIL + 1, ref3 = symtab.length; (ref2 <= ref3 ? l1 < ref3 : l1 > ref3); i = ref2 <= ref3 ? ++l1 : --l1) {\n      if (symtab[i].printname === \"\") {\n        if (isSymbolReclaimable[i] === false) {\n          break;\n        } else {\n          continue;\n        }\n      }\n      symtabi = print_list(symtab[i]);\n      bindingi = print_list(binding[i]);\n      frozenHash += \" //\" + symtabi + \" : \" + bindingi;\n    }\n    for (m1 = 0, len = userSimplificationsInListForm.length; m1 < len; m1++) {\n      i = userSimplificationsInListForm[m1];\n      frozenHash += \" pattern: \" + i;\n    }\n    if (DEBUG) {\n      console.log(\"frozenHash: \" + frozenHash);\n    }\n    return frozenHash;\n  };\n\n}).call(this);\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        if (exp.isNegative()) {\r\n            exp = exp.multiply(Integer[-1]);\r\n            base = base.modInv(mod);\r\n        }\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations, rng) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2), rng));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b, rng) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var usedRNG = rng || Math.random;\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(usedRNG() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] + (i + 1 < digits.length ? digits[i + 1] / BASE : 0) : BASE;\r\n            var digit = truncate(usedRNG() * top);\r\n            result.push(digit);\r\n            if (digit < digits[i]) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define( function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","/*\r\n * Author : Martin Donk\r\n * Website : http://www.nerdamer.com\r\n * Email : martin.r.donk@gmail.com\r\n * License : MIT\r\n * Source : https://github.com/jiggzson/nerdamer\r\n */\r\n\r\n/* global module, Function */\r\n\r\nif((typeof module) !== 'undefined') {\r\n    var nerdamer = require('./nerdamer.core.js');\r\n    require('./Calculus.js');\r\n}\r\n\r\n(function () {\r\n    \"use strict\";\r\n\r\n    /*shortcuts*/\r\n    var core = nerdamer.getCore(),\r\n            _ = core.PARSER,\r\n            N = core.groups.N,\r\n            P = core.groups.P,\r\n            S = core.groups.S,\r\n            EX = core.groups.EX,\r\n            FN = core.groups.FN,\r\n            PL = core.groups.PL,\r\n            CP = core.groups.CP,\r\n            CB = core.groups.CB,\r\n            keys = core.Utils.keys,\r\n            even = core.Utils.even,\r\n            variables = core.Utils.variables,\r\n            format = core.Utils.format,\r\n            round = core.Utils.round,\r\n            Frac = core.Frac,\r\n            isInt = core.Utils.isInt,\r\n            Symbol = core.Symbol,\r\n            CONST_HASH = core.Settings.CONST_HASH,\r\n            math = core.Utils.importFunctions(),\r\n            evaluate = core.Utils.evaluate;\r\n    //*************** CLASSES ***************//\r\n    /**\r\n     * Converts a symbol into an equivalent polynomial arrays of \r\n     * the form [[coefficient_1, power_1],[coefficient_2, power_2], ... ]\r\n     * Univariate polymials only. \r\n     * @param {Symbol|Number} symbol\r\n     * @param {String} variable The variable name of the polynomial\r\n     * @param {int} order\r\n     */\r\n    function Polynomial(symbol, variable, order) {\r\n        if(core.Utils.isSymbol(symbol)) {\r\n            this.parse(symbol);\r\n            this.variable = this.variable || variable;\r\n        }\r\n        else if(!isNaN(symbol)) {\r\n            order = order || 0;\r\n            if(variable === undefined)\r\n                throw new core.exceptions.InvalidVariableNameError('Polynomial expects a variable name when creating using order');\r\n            this.coeffs = [];\r\n            this.coeffs[order] = symbol;\r\n            this.fill(symbol);\r\n        }\r\n        else if(typeof symbol === 'string') {\r\n            this.parse(_.parse(symbol));\r\n        }\r\n    }\r\n    /**\r\n     * Creates a Polynomial given an array of coefficients\r\n     * @param {int[]} arr\r\n     * @param {String} variable\r\n     * @returns {Polynomial}\r\n     */\r\n    Polynomial.fromArray = function (arr, variable) {\r\n        if(typeof variable === 'undefined')\r\n            throw new core.exceptions.InvalidVariableNameError('A variable name must be specified when creating polynomial from array');\r\n        var p = new Polynomial();\r\n        p.coeffs = arr;\r\n        p.variable = variable;\r\n        return p;\r\n    };\r\n\r\n    Polynomial.fit = function (c1, c2, n, base, p, variable) {\r\n        //after having looped through and mod 10 the number to get the matching factor\r\n        var terms = new Array(p + 1),\r\n                t = n - c2;\r\n        terms[0] = c2; //the constants is assumed to be correct\r\n        //constant for x^p is also assumed know so add\r\n        terms[p] = c1;\r\n        t -= c1 * Math.pow(base, p);\r\n        //start fitting\r\n        for(var i = p - 1; i > 0; i--) {\r\n            var b = Math.pow(base, i), //we want as many wholes as possible\r\n                    q = t / b,\r\n                    sign = Math.sign(q);\r\n            var c = sign * Math.floor(Math.abs(q));\r\n            t -= c * b;\r\n            terms[i] = c;\r\n        }\r\n        if(t !== 0)\r\n            return null;\r\n        for(var i = 0; i < terms.length; i++)\r\n            terms[i] = new Frac(terms[i]);\r\n\r\n        return Polynomial.fromArray(terms, variable);\r\n    };\r\n\r\n    Polynomial.prototype = {\r\n        /**\r\n         * Converts Symbol to Polynomial\r\n         * @param {Symbol} symbol\r\n         * @param {Array} c - a collector array\r\n         * @returns {Polynomial}\r\n         */\r\n        parse: function (symbol, c) {\r\n            this.variable = variables(symbol)[0];\r\n            if(!symbol.isPoly())\r\n                throw core.exceptions.NerdamerTypeError('Polynomial Expected! Received ' + core.Utils.text(symbol));\r\n            c = c || [];\r\n            if(!symbol.power.absEquals(1))\r\n                symbol = _.expand(symbol);\r\n\r\n            if(symbol.group === core.groups.N) {\r\n                c[0] = symbol.multiplier;\r\n            }\r\n            else if(symbol.group === core.groups.S) {\r\n                c[symbol.power.toDecimal()] = symbol.multiplier;\r\n            }\r\n            else {\r\n                for(var x in symbol.symbols) {\r\n                    var sub = symbol.symbols[x],\r\n                            p = sub.power;\r\n                    if(core.Utils.isSymbol(p))\r\n                        throw new core.exceptions.NerdamerTypeError('power cannot be a Symbol');\r\n\r\n                    p = sub.group === N ? 0 : p.toDecimal();\r\n                    if(sub.symbols) {\r\n                        this.parse(sub, c);\r\n                    }\r\n                    else {\r\n                        c[p] = sub.multiplier;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.coeffs = c;\r\n\r\n            this.fill();\r\n        },\r\n        /**\r\n         * Fills in the holes in a polynomial with zeroes\r\n         * @param {Number} x - The number to fill the holes with\r\n         */\r\n        fill: function (x) {\r\n            x = Number(x) || 0;\r\n            var l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                if(this.coeffs[i] === undefined) {\r\n                    this.coeffs[i] = new Frac(x);\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * Removes higher order zeros or a specific coefficient\r\n         * @returns {Array}\r\n         */\r\n        trim: function () {\r\n            var l = this.coeffs.length;\r\n            while(l--) {\r\n                var c = this.coeffs[l];\r\n                var equalsZero = c.equals(0);\r\n                if(c && equalsZero) {\r\n                    if(l === 0)\r\n                        break;\r\n                    this.coeffs.pop();\r\n                }\r\n                else\r\n                    break;\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /*\r\n         * Returns polynomial mod p **currently fails**\r\n         * @param {Number} p\r\n         * @returns {Polynomial}\r\n         */\r\n        modP: function (p) {\r\n            var l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var c = this.coeffs[i];\r\n                if(c < 0) { //go borrow\r\n                    var b; //a coefficient > 0\r\n                    for(var j = i; j < l; j++) {//starting from where we left off\r\n                        if(this.coeffs[j] > 0) {\r\n                            b = this.coeffs[j];\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if(b) { //if such a coefficient exists\r\n                        for(j; j > i; j--) { //go down the line and adjust using p\r\n                            this.coeffs[j] = this.coeffs[j].subtract(new Frac(1));\r\n                            this.coeffs[j - 1] = this.coeffs[j - 1].add(new Frac(p));\r\n                        }\r\n                        c = this.coeffs[i]; //reset c\r\n                    }\r\n                }\r\n\r\n                var d = c.mod(p);\r\n                var w = c.subtract(d).divide(p);\r\n                if(!w.equals(0)) {\r\n                    var up_one = i + 1;\r\n                    var next = this.coeffs[up_one] || new Frac(0);\r\n                    next = next.add(w);\r\n                    this.coeffs[up_one] = new Frac(next);\r\n                    this.coeffs[i] = new Frac(d);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /**\r\n         * Adds together 2 polynomials\r\n         * @param {Polynomial} poly\r\n         */\r\n        add: function (poly) {\r\n            var l = Math.max(this.coeffs.length, poly.coeffs.length);\r\n            for(var i = 0; i < l; i++) {\r\n                var a = (this.coeffs[i] || new Frac(0)),\r\n                        b = (poly.coeffs[i] || new Frac(0));\r\n                this.coeffs[i] = a.add(b);\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * Adds together 2 polynomials\r\n         * @param {Polynomial} poly\r\n         */\r\n        subtract: function (poly) {\r\n            var l = Math.max(this.coeffs.length, poly.coeffs.length);\r\n            for(var i = 0; i < l; i++) {\r\n                var a = (this.coeffs[i] || new Frac(0)),\r\n                        b = (poly.coeffs[i] || new Frac(0));\r\n                this.coeffs[i] = a.subtract(b);\r\n            }\r\n            return this;\r\n        },\r\n        divide: function (poly) {\r\n            var variable = this.variable,\r\n                    dividend = core.Utils.arrayClone(this.coeffs),\r\n                    divisor = core.Utils.arrayClone(poly.coeffs),\r\n                    n = dividend.length,\r\n                    mp = divisor.length - 1,\r\n                    quotient = [];\r\n\r\n            //loop through the dividend\r\n            for(var i = 0; i < n; i++) {\r\n                var p = n - (i + 1);\r\n                //get the difference of the powers\r\n                var d = p - mp;\r\n                //get the quotient of the coefficients\r\n                var q = dividend[p].divide(divisor[mp]);\r\n\r\n                if(d < 0)\r\n                    break;//the divisor is not greater than the dividend\r\n                //place it in the quotient\r\n                quotient[d] = q;\r\n\r\n                for(var j = 0; j <= mp; j++) {\r\n                    //reduce the dividend\r\n                    dividend[j + d] = dividend[j + d].subtract((divisor[j].multiply(q)));\r\n                }\r\n            }\r\n\r\n            //clean up\r\n            var p1 = Polynomial.fromArray(dividend, variable || 'x').trim(), //pass in x for safety\r\n                    p2 = Polynomial.fromArray(quotient, variable || 'x');\r\n            return [p2, p1];\r\n        },\r\n        multiply: function (poly) {\r\n            var l1 = this.coeffs.length, l2 = poly.coeffs.length,\r\n                    c = []; //array to be returned\r\n            for(var i = 0; i < l1; i++) {\r\n                var x1 = this.coeffs[i];\r\n                for(var j = 0; j < l2; j++) {\r\n                    var k = i + j, //add the powers together\r\n                            x2 = poly.coeffs[j],\r\n                            e = c[k] || new Frac(0); //get the existing term from the new array\r\n                    c[k] = e.add(x1.multiply(x2)); //multiply the coefficients and add to new polynomial array\r\n                }\r\n            }\r\n            this.coeffs = c;\r\n            return this;\r\n        },\r\n        /**\r\n         * Checks if a polynomial is zero\r\n         * @returns {Boolean}\r\n         */\r\n        isZero: function () {\r\n            var l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var e = this.coeffs[i];\r\n                if(!e.equals(0))\r\n                    return false;\r\n            }\r\n            return true;\r\n        },\r\n        /** \r\n         * Substitutes in a number n into the polynomial p(n)\r\n         * @param {Number} n\r\n         * @returns {Frac}\r\n         */\r\n        sub: function (n) {\r\n            var sum = new Frac(0), l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var t = this.coeffs[i];\r\n                if(!t.equals(0))\r\n                    sum = sum.add(t.multiply(new Frac(Math.pow(n, i))));\r\n            }\r\n            return sum;\r\n        },\r\n        /**\r\n         * Returns a clone of the polynomial\r\n         * @returns {Polynomial}\r\n         */\r\n        clone: function () {\r\n            var p = new Polynomial();\r\n            p.coeffs = this.coeffs;\r\n            p.variable = this.variable;\r\n            return p;\r\n        },\r\n        /**\r\n         * Gets the degree of the polynomial\r\n         * @returns {Number}\r\n         */\r\n        deg: function () {\r\n            this.trim();\r\n            return this.coeffs.length - 1;\r\n        },\r\n        /**\r\n         * Returns a lead coefficient\r\n         * @returns {Frac}\r\n         */\r\n        lc: function () {\r\n            return this.coeffs[this.deg()].clone();\r\n        },\r\n        /**\r\n         * Converts polynomial into a monic polynomial\r\n         * @returns {Polynomial}\r\n         */\r\n        monic: function () {\r\n            var lc = this.lc(), l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++)\r\n                this.coeffs[i] = this.coeffs[i].divide(lc);\r\n            return this;\r\n        },\r\n        /**\r\n         * Returns the GCD of two polynomials\r\n         * @param {Polynomial} poly\r\n         * @returns {Polynomial}\r\n         */\r\n        gcd: function (poly) {\r\n            //get the maximum power of each\r\n            var mp1 = this.coeffs.length - 1,\r\n                    mp2 = poly.coeffs.length - 1,\r\n                    T;\r\n            //swap so we always have the greater power first\r\n            if(mp1 < mp2) {\r\n                return poly.gcd(this);\r\n            }\r\n            var a = this;\r\n\r\n            while(!poly.isZero()) {\r\n                var t = poly.clone();\r\n                a = a.clone();\r\n                T = a.divide(t);\r\n                poly = T[1];\r\n                a = t;\r\n            }\r\n\r\n            var gcd = core.Math2.QGCD.apply(null, a.coeffs);\r\n            if(!gcd.equals(1)) {\r\n                var l = a.coeffs.length;\r\n                for(var i = 0; i < l; i++) {\r\n                    a.coeffs[i] = a.coeffs[i].divide(gcd);\r\n                }\r\n            }\r\n            return a;\r\n        },\r\n        /**\r\n         * Differentiates the polynomial\r\n         * @returns {Polynomial}\r\n         */\r\n        diff: function () {\r\n            var new_array = [], l = this.coeffs.length;\r\n            for(var i = 1; i < l; i++)\r\n                new_array.push(this.coeffs[i].multiply(new Frac(i)));\r\n            this.coeffs = new_array;\r\n            return this;\r\n        },\r\n        /**\r\n         * Integrates the polynomial\r\n         * @returns {Polynomial} \r\n         */\r\n        integrate: function () {\r\n            var new_array = [0], l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var c = new Frac(i + 1);\r\n                new_array[c] = this.coeffs[i].divide(c);\r\n            }\r\n            this.coeffs = new_array;\r\n            return this;\r\n        },\r\n        /**\r\n         * Returns the Greatest common factor of the polynomial\r\n         * @param {bool} toPolynomial - true if a polynomial is wanted\r\n         * @returns {Frac|Polynomial}\r\n         */\r\n        gcf: function (toPolynomial) {\r\n            //get the first nozero coefficient and returns its power\r\n            var fnz = function (a) {\r\n                for(var i = 0; i < a.length; i++)\r\n                    if(!a[i].equals(0))\r\n                        return i;\r\n            },\r\n                    ca = [];\r\n            for(var i = 0; i < this.coeffs.length; i++) {\r\n                var c = this.coeffs[i];\r\n                if(!c.equals(0) && ca.indexOf(c) === -1)\r\n                    ca.push(c);\r\n            }\r\n            var p = [core.Math2.QGCD.apply(undefined, ca), fnz(this.coeffs)].toDecimal();\r\n\r\n            if(toPolynomial) {\r\n                var parr = [];\r\n                parr[p[1] - 1] = p[0];\r\n                p = Polynomial.fromArray(parr, this.variable).fill();\r\n            }\r\n\r\n            return p;\r\n        },\r\n        /**\r\n         * Raises a polynomial P to a power p -> P^p. e.g. (x+1)^2\r\n         * @param {bool} incl_img - Include imaginary numbers \r\n         */\r\n        quad: function (incl_img) {\r\n            var roots = [];\r\n            if(this.coeffs.length > 3)\r\n                throw new Error('Cannot calculate quadratic order of ' + (this.coeffs.length - 1));\r\n            if(this.coeffs.length === 0)\r\n                throw new Error('Polynomial array has no terms');\r\n            var a = this.coeffs[2] || 0, b = this.coeffs[1] || 0, c = this.coeffs[0];\r\n            var dsc = b * b - 4 * a * c;\r\n            if(dsc < 0 && !incl_img)\r\n                return roots;\r\n            else {\r\n                roots[0] = (-b + Math.sqrt(dsc)) / (2 * a);\r\n                roots[1] = (-b - Math.sqrt(dsc)) / (2 * a);\r\n            }\r\n            return roots;\r\n        },\r\n        /**\r\n         * Makes polynomial square free\r\n         * @returns {Array}\r\n         */\r\n        squareFree: function () {\r\n\r\n            var a = this.clone(),\r\n                    i = 1,\r\n                    b = a.clone().diff(),\r\n                    c = a.clone().gcd(b),\r\n                    w = a.divide(c)[0];\r\n            var output = Polynomial.fromArray([new Frac(1)], a.variable);\r\n            while(!c.equalsNumber(1)) {\r\n                var y = w.gcd(c);\r\n                var z = w.divide(y)[0];\r\n                //one of the factors may have shown up since it's square but smaller than the \r\n                //one where finding\r\n                if(!z.equalsNumber(1) && i > 1) {\r\n                    var t = z.clone();\r\n                    for(var j = 1; j < i; j++)\r\n                        t.multiply(z.clone());\r\n                    z = t;\r\n                }\r\n                output = output.multiply(z);\r\n                i++;\r\n                w = y;\r\n                c = c.divide(y)[0];\r\n            }\r\n\r\n            return [output, w, i];\r\n        },\r\n        /**\r\n         * Converts polynomial to Symbol\r\n         * @returns {Symbol}\r\n         */\r\n        toSymbol: function () {\r\n            var l = this.coeffs.length,\r\n                    variable = this.variable;\r\n            if(l === 0)\r\n                return new core.Symbol(0);\r\n            var end = l - 1, str = '';\r\n\r\n            for(var i = 0; i < l; i++) {\r\n                //place the plus sign for all but the last one\r\n                var plus = i === end ? '' : '+',\r\n                        e = this.coeffs[i];\r\n                if(!e.equals(0))\r\n                    str += (e + '*' + variable + '^' + i + plus);\r\n            }\r\n            return _.parse(str);\r\n        },\r\n        /**\r\n         * Checks if polynomial is equal to a number\r\n         * @param {Number} x\r\n         * @returns {Boolean}\r\n         */\r\n        equalsNumber: function (x) {\r\n            this.trim();\r\n            return this.coeffs.length === 1 && this.coeffs[0].toDecimal() === String(x);\r\n        },\r\n        toString: function () {\r\n            return this.toSymbol().toString();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * TODO\r\n     * ===================================================================================\r\n     * THIS METHOD HAS A NASTY HIDDEN BUG. IT HAS INCONSISTENT RETURN TYPES PRIMARILY DUE TO \r\n     * WRONG ASSUMPTIONS AT THE BEGINNING. THE ASSUMPTION WAS THAT COEFFS WERE ALWAYS GOING BE NUMBERS\r\n     * NOT TAKING INTO ACCOUNT THAT IMAGINARY NUMBERS. FIXING THIS BREAKS WAY TOO MANY TESTS \r\n     * AT THEM MOMENT WHICH I DON'T HAVE TO FIX\r\n     * ===================================================================================\r\n     * If the symbols is of group PL or CP it will return the multipliers of each symbol\r\n     * as these are polynomial coefficients. CB symbols are glued together by multiplication\r\n     * so the symbol multiplier carries the coefficients for all contained symbols.\r\n     * For S it just returns it's own multiplier. This function doesn't care if it's a polynomial or not\r\n     * @param {Array} c The coefficient array\r\n     * @param {boolean} with_order \r\n     * @return {Array}\r\n     */\r\n    Symbol.prototype.coeffs = function (c, with_order) {\r\n        if(with_order && !this.isPoly(true))\r\n            _.error('Polynomial expected when requesting coefficients with order');\r\n        c = c || [];\r\n        var s = this.clone().distributeMultiplier();\r\n        if(s.isComposite()) {\r\n            for(var x in s.symbols) {\r\n                var sub = s.symbols[x];\r\n                if(sub.isComposite()) {\r\n                    sub.clone().distributeMultiplier().coeffs(c, with_order);\r\n                }\r\n                else {\r\n                    if(with_order)\r\n                        c[sub.isConstant() ? 0 : sub.power.toDecimal()] = sub.multiplier;\r\n                    else {\r\n                        c.push(sub.multiplier);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if(with_order)\r\n                c[s.isConstant(true) ? 0 : s.power.toDecimal()] = s.multiplier;\r\n            else {\r\n                if(s.group === CB && s.isImaginary()) {\r\n                    var m = new Symbol(s.multiplier);\r\n                    s.each(function (x) {\r\n                        //add the imaginary part\r\n                        if(x.isConstant(true) || x.imaginary)\r\n                            m = _.multiply(m, x);\r\n                    });\r\n                    c.push(m);\r\n                }\r\n                else\r\n                    c.push(s.multiplier);\r\n            }\r\n        }\r\n        //fill the holes\r\n        if(with_order) {\r\n            for(var i = 0; i < c.length; i++)\r\n                if(c[i] === undefined)\r\n                    c[i] = new Symbol(0);\r\n        }\r\n        return c;\r\n    };\r\n    Symbol.prototype.tBase = function (map) {\r\n        if(typeof map === 'undefined')\r\n            throw new Error('Symbol.tBase requires a map object!');\r\n        var terms = [];\r\n        var symbols = this.collectSymbols(null, null, null, true),\r\n                l = symbols.length;\r\n        for(var i = 0; i < l; i++) {\r\n            var symbol = symbols[i],\r\n                    g = symbol.group,\r\n                    nterm = new MVTerm(symbol.multiplier, [], map);\r\n            if(g === CB) {\r\n                for(var x in symbol.symbols) {\r\n                    var sym = symbol.symbols[x];\r\n                    nterm.terms[map[x]] = sym.power;\r\n                }\r\n            }\r\n            else {\r\n                nterm.terms[map[symbol.value]] = symbol.power;\r\n            }\r\n\r\n            terms.push(nterm.fill());\r\n            nterm.updateCount();\r\n        }\r\n        return terms;\r\n    };\r\n    Symbol.prototype.altVar = function (x) {\r\n        var m = this.multiplier.toString(), p = this.power.toString();\r\n        return (m === '1' ? '' : m + '*') + x + (p === '1' ? '' : '^' + p);\r\n    };\r\n    /**\r\n     * Checks to see if the symbols contain the same variables\r\n     * @param {Symbol} symbol\r\n     * @returns {Boolean}\r\n     */\r\n    Symbol.prototype.sameVars = function (symbol) {\r\n        if(!(this.symbols || this.group === symbol.group))\r\n            return false;\r\n        for(var x in this.symbols) {\r\n            var a = this.symbols[x], b = symbol.symbols[x];\r\n            if(!b)\r\n                return false;\r\n            if(a.value !== b.value)\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Groups the terms in a symbol with respect to a variable\r\n     * For instance the symbol {a*b^2*x^2+a*b*x^2+x+6} returns [6,1,a*b+a*b^2]\r\n     * @returns {Factors}\r\n     */\r\n    Symbol.prototype.groupTerms = function (x) {\r\n        x = String(x);\r\n        var f, p, egrouped;\r\n        var grouped = [];\r\n        this.each(function (e) {\r\n            if(e.group === PL) {\r\n                egrouped = e.groupTerms(x);\r\n                for(var i = 0; i < egrouped.length; i++) {\r\n                    var el = egrouped[i];\r\n                    if(el)\r\n                        grouped[i] = el;\r\n                }\r\n            }\r\n            else {\r\n                f = core.Utils.decompose_fn(e, x, true);\r\n                p = f.x.value === x ? Number(f.x.power) : 0;\r\n                //check if there's an existing value\r\n                grouped[p] = _.add(grouped[p] || new Symbol(0), f.a);\r\n            }\r\n        });\r\n        return grouped;\r\n    };\r\n    /**\r\n     * Use this to collect Factors\r\n     * @returns {Symbol[]}\r\n     */\r\n    Symbol.prototype.collectFactors = function () {\r\n        var factors = [];\r\n        if(this.group === CB)\r\n            this.each(function (x) {\r\n                factors.push(x.clone());\r\n            });\r\n        else\r\n            factors.push(this.clone());\r\n        return factors;\r\n    };\r\n    /**\r\n     * A container class for factors\r\n     * @returns {Factors}\r\n     */\r\n    function Factors() {\r\n        this.factors = {};\r\n        this.length = 0;\r\n    }\r\n    ;\r\n    Factors.prototype.getNumberSymbolics = function () {\r\n        var n = 0;\r\n        this.each(function (x) {\r\n            if(!x.isConstant(true))\r\n                n++;\r\n        });\r\n        return n;\r\n    };\r\n    /**\r\n     * Adds the factors to the factor object\r\n     * @param {Symbo} s\r\n     * @returns {Factors}\r\n     */\r\n    Factors.prototype.add = function (s) {\r\n        if(s.equals(0))\r\n            return this; //nothing to add\r\n\r\n        //we don't want to carry -1 as a factor. If a factor already exists,\r\n        //then add the minus one to that factor and return.\r\n        if(s.equals(-1) && this.length > 0) {\r\n            var fo = core.Utils.firstObject(this.factors, null, true);\r\n            this.add(_.symfunction(core.Settings.PARENTHESIS, [fo.obj]).negate());\r\n            delete this.factors[fo.key];\r\n            this.length--;\r\n            return this;\r\n        }\r\n\r\n        if(s.group === CB) {\r\n            var factors = this;\r\n            if(!s.multiplier.equals(1))\r\n                factors.add(new Symbol(s.multiplier));\r\n            s.each(function (x) {\r\n                factors.add(x);\r\n            });\r\n        }\r\n        else {\r\n            if(this.preAdd) //if a preAdd function was defined call it to do prep\r\n                s = this.preAdd(s);\r\n            if(this.pFactor) //if the symbol isn't linear add back the power\r\n                s = _.pow(s, new Symbol(this.pFactor));\r\n\r\n            var is_constant = s.isConstant();\r\n            if(is_constant && s.equals(1))\r\n                return this; //don't add 1\r\n            var v = is_constant ? s.value : s.text();\r\n            if(v in this.factors) {\r\n                this.factors[v] = _.multiply(this.factors[v], s);\r\n                //did the addition cancel out the existing factor? If so remove it and decrement the length\r\n                if(this.factors[v].equals(1)) {\r\n                    delete this.factors[v];\r\n                    this.length--;\r\n                }\r\n            }\r\n            else {\r\n                this.factors[v] = s;\r\n                this.length++;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Converts the factor object to a Symbol\r\n     * @returns {Symbol}\r\n     */\r\n    Factors.prototype.toSymbol = function () {\r\n        var factored = new Symbol(1);\r\n        var factors = Object.values(this.factors).sort(function (a, b) {\r\n            return a.group > b.group;\r\n        });\r\n\r\n        for(var i = 0, l = factors.length; i < l; i++) {\r\n            var f = factors[i];\r\n\r\n            //don't wrap group S or FN\r\n            var factor = f.power.equals(1) && f.fname !== '' /* don't wrap it twice */ ?\r\n                    _.symfunction(core.PARENTHESIS, [f]) : f;\r\n\r\n            factored = _.multiply(factored, factor);\r\n        }\r\n        if(factored.fname === '')\r\n            factored = Symbol.unwrapPARENS(factored);\r\n        return factored;\r\n    };\r\n    /**\r\n     * Merges 2 factor objects into one\r\n     * @param {Factor} o\r\n     * @returns {Factors}\r\n     */\r\n    Factors.prototype.merge = function (o) {\r\n        for(var x in o) {\r\n            if(x in this.factors)\r\n                this.factors[x] = _.multiply(this.factors[x], o[x]);\r\n            else\r\n                this.factors[x] = o[x];\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * The iterator for the factor object\r\n     * @param {Function} f - callback\r\n     * @returns {Factor}\r\n     */\r\n    Factors.prototype.each = function (f) {\r\n        for(var x in this.factors) {\r\n            var factor = this.factors[x];\r\n            if(factor.fname === core.PARENTHESIS && factor.isLinear())\r\n                factor = factor.args[0];\r\n            f.call(this, factor, x);\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Return the number of factors contained in the factor object\r\n     * @returns {int}\r\n     */\r\n    Factors.prototype.count = function () {\r\n        return keys(this.factors).length;\r\n    };\r\n    /**\r\n     * Cleans up factors from -1\r\n     * @returns {undefined}\r\n     */\r\n    Factors.prototype.clean = function () {\r\n        try {\r\n            var h = core.Settings.CONST_HASH;\r\n            if(this.factors[h].lessThan(0)) {\r\n                if(this.factors[h].equals(-1))\r\n                    delete this.factors[h];\r\n                else\r\n                    this.factors[h].negate();\r\n                this.each(function (x) {\r\n                    x.negate();\r\n                });\r\n            }\r\n        }\r\n        catch(e) {\r\n        }\r\n        ;\r\n    };\r\n    Factors.prototype.toString = function () {\r\n        return this.toSymbol().toString();\r\n    };\r\n\r\n    //a wrapper for performing multivariate division\r\n    function MVTerm(coeff, terms, map) {\r\n        this.terms = terms || [];\r\n        this.coeff = coeff;\r\n        this.map = map; //careful! all maps are the same object\r\n        this.sum = new core.Frac(0);\r\n        this.image = undefined;\r\n    }\r\n    ;\r\n    MVTerm.prototype.updateCount = function () {\r\n        this.count = this.count || 0;\r\n        for(var i = 0; i < this.terms.length; i++) {\r\n            if(!this.terms[i].equals(0))\r\n                this.count++;\r\n        }\r\n        return this;\r\n    };\r\n    MVTerm.prototype.getVars = function () {\r\n        var vars = [];\r\n        for(var i = 0; i < this.terms.length; i++) {\r\n            var term = this.terms[i],\r\n                    rev_map = this.getRevMap();\r\n            if(!term.equals(0))\r\n                vars.push(this.rev_map[i]);\r\n        }\r\n        return vars.join(' ');\r\n    };\r\n    MVTerm.prototype.len = function () {\r\n        if(typeof this.count === 'undefined') {\r\n            this.updateCount();\r\n        }\r\n        return this.count;\r\n    };\r\n    MVTerm.prototype.toSymbol = function (rev_map) {\r\n        rev_map = rev_map || this.getRevMap();\r\n        var symbol = new Symbol(this.coeff);\r\n        for(var i = 0; i < this.terms.length; i++) {\r\n            var v = rev_map[i],\r\n                    t = this.terms[i];\r\n            if(t.equals(0) || v === CONST_HASH)\r\n                continue;\r\n            var mapped = new Symbol(v);\r\n            mapped.power = t;\r\n            symbol = _.multiply(symbol, mapped);\r\n        }\r\n        return symbol;\r\n    };\r\n    MVTerm.prototype.getRevMap = function () {\r\n        if(this.rev_map)\r\n            return this.rev_map;\r\n        var o = {};\r\n        for(var x in this.map)\r\n            o[this.map[x]] = x;\r\n        this.rev_map = o;\r\n        return o;\r\n    };\r\n    MVTerm.prototype.generateImage = function () {\r\n        this.image = this.terms.join(' ');\r\n        return this;\r\n    },\r\n            MVTerm.prototype.getImg = function () {\r\n                if(!this.image)\r\n                    this.generateImage();\r\n                return this.image;\r\n            },\r\n            MVTerm.prototype.fill = function () {\r\n                var l = this.map.length;\r\n                for(var i = 0; i < l; i++) {\r\n                    if(typeof this.terms[i] === 'undefined')\r\n                        this.terms[i] = new core.Frac(0);\r\n                    else {\r\n                        this.sum = this.sum.add(this.terms[i]);\r\n                    }\r\n                }\r\n                return this;\r\n            };\r\n    MVTerm.prototype.divide = function (mvterm) {\r\n        var c = this.coeff.divide(mvterm.coeff),\r\n                l = this.terms.length,\r\n                new_mvterm = new MVTerm(c, [], this.map);\r\n        for(var i = 0; i < l; i++) {\r\n            new_mvterm.terms[i] = this.terms[i].subtract(mvterm.terms[i]);\r\n            new_mvterm.sum = new_mvterm.sum.add(new_mvterm.terms[i]);\r\n        }\r\n        return new_mvterm;\r\n    };\r\n    MVTerm.prototype.multiply = function (mvterm) {\r\n        var c = this.coeff.multiply(mvterm.coeff),\r\n                l = this.terms.length,\r\n                new_mvterm = new MVTerm(c, [], this.map);\r\n        for(var i = 0; i < l; i++) {\r\n            new_mvterm.terms[i] = this.terms[i].add(mvterm.terms[i]);\r\n            new_mvterm.sum = new_mvterm.sum.add(new_mvterm.terms[i]);\r\n        }\r\n        return new_mvterm;\r\n    };\r\n    MVTerm.prototype.isZero = function () {\r\n        return this.coeff.equals(0);\r\n    };\r\n    MVTerm.prototype.toString = function () {\r\n        return '{ coeff: ' + this.coeff.toString() + ', terms: [' +\r\n                this.terms.join(',') + ']: sum: ' + this.sum.toString() + ', count: ' + this.count + '}';\r\n    };\r\n\r\n    core.Utils.toMapObj = function (arr) {\r\n        var c = 0, o = {};\r\n        for(var i = 0; i < arr.length; i++) {\r\n            var v = arr[i];\r\n            if(typeof o[v] === 'undefined') {\r\n                o[v] = c;\r\n                c++;\r\n            }\r\n        }\r\n        o.length = c;\r\n        return o;\r\n    };\r\n    core.Utils.filledArray = function (v, n, clss) {\r\n        var a = [];\r\n        while(n--) {\r\n            a[n] = clss ? new clss(v) : v;\r\n        }\r\n        return a;\r\n    };\r\n    core.Utils.arrSum = function (arr) {\r\n        var sum = 0, l = arr.length;\r\n        for(var i = 0; i < l; i++)\r\n            sum += arr[i];\r\n        return sum;\r\n    };\r\n    /**\r\n     * Determines if 2 arrays have intersecting elements.\r\n     * @param {Array} a\r\n     * @param {Array} b\r\n     * @returns {Boolean} True if a and b have intersecting elements.\r\n     */\r\n    core.Utils.haveIntersection = function (a, b) {\r\n        var t;\r\n        if(b.length > a.length)\r\n            t = b, b = a, a = t; // indexOf to loop over shorter\r\n        return a.some(function (e) {\r\n            return b.indexOf(e) > -1;\r\n        });\r\n    };\r\n    /**\r\n     * Substitutes out functions as variables so they can be used in regular algorithms\r\n     * @param {Symbol} symbol\r\n     * @param {Object} map\r\n     * @returns {String} The expression string\r\n     */\r\n    core.Utils.subFunctions = function (symbol, map) {\r\n        map = map || {};\r\n        var subbed = [];\r\n        symbol.each(function (x) {\r\n            if(x.group === FN || x.previousGroup === FN) {\r\n                //we need a new variable name so why not use one of the existing\r\n                var val = core.Utils.text(x, 'hash'), tvar = map[val];\r\n                if(!tvar) {\r\n                    //generate a unique enough name\r\n                    var t = x.fname + keys(map).length;\r\n                    map[val] = t;\r\n                    subbed.push(x.altVar(t));\r\n                }\r\n                else\r\n                    subbed.push(x.altVar(tvar));\r\n            }\r\n            else if(x.group === CB || x.group === PL || x.group === CP) {\r\n                subbed.push(core.Utils.subFunctions(x, map));\r\n            }\r\n            else\r\n                subbed.push(x.text());\r\n        });\r\n        if(symbol.group === CP || symbol.group === PL)\r\n            return symbol.altVar(core.Utils.inBrackets(subbed.join('+')));\r\n        ;\r\n        if(symbol.group === CB)\r\n            return symbol.altVar(core.Utils.inBrackets(subbed.join('*')));\r\n        return symbol.text();\r\n    };\r\n    core.Utils.getFunctionsSubs = function (map) {\r\n        var subs = {};\r\n        //prepare substitutions\r\n        for(var x in map)\r\n            subs[map[x]] = _.parse(x);\r\n        return subs;\r\n    };\r\n\r\n    var __ = core.Algebra = {\r\n        version: '1.4.6',\r\n        proots: function (symbol, decp) {\r\n            //the roots will be rounded up to 7 decimal places.\r\n            //if this causes trouble you can explicitly pass in a different number of places\r\n            //rarr for polynomial of power n is of format [n, coeff x^n, coeff x^(n-1), ..., coeff x^0]\r\n            decp = decp || 7;\r\n            var zeros = 0;\r\n            var known_roots = [];\r\n            var get_roots = function (rarr, powers, max) {\r\n                var roots = calcroots(rarr, powers, max).concat(known_roots);\r\n                for(var i = 0; i < zeros; i++)\r\n                    roots.unshift(0);\r\n                return roots;\r\n            };\r\n\r\n            if(symbol instanceof Symbol && symbol.isPoly()) {\r\n                symbol.distributeMultiplier();\r\n                //make it so the symbol has a constants as the lowest term\r\n                if(symbol.group === PL) {\r\n                    var lowest_pow = core.Utils.arrayMin(keys(symbol.symbols));\r\n                    var lowest_symbol = symbol.symbols[lowest_pow].clone().toUnitMultiplier();\r\n                    symbol = _.expand(_.divide(symbol, lowest_symbol));\r\n                    known_roots.push(0); //add zero since this is a known root\r\n                }\r\n                if(symbol.group === core.groups.S) {\r\n                    return [0];\r\n                }\r\n                else if(symbol.group === core.groups.PL) {\r\n                    var powers = keys(symbol.symbols),\r\n                            minpower = core.Utils.arrayMin(powers),\r\n                            symbol = core.PARSER.divide(symbol, core.PARSER.parse(symbol.value + '^' + minpower));\r\n                }\r\n\r\n                var variable = keys(symbol.symbols).sort().pop(),\r\n                        sym = symbol.group === core.groups.PL ? symbol.symbols : symbol.symbols[variable],\r\n                        g = sym.group,\r\n                        powers = g === S ? [sym.power.toDecimal()] : keys(sym.symbols),\r\n                        rarr = [],\r\n                        max = core.Utils.arrayMax(powers); //maximum power and degree of polynomial to be solved\r\n\r\n                // Prepare the data\r\n                for(var i = 1; i <= max; i++) {\r\n                    var c = 0; //if there is no power then the hole must be filled with a zero\r\n                    if(powers.indexOf(i + '') !== -1) {\r\n                        if(g === S) {\r\n                            c = sym.multiplier;\r\n                        }\r\n                        else {\r\n                            c = sym.symbols[i].multiplier;\r\n                        }\r\n                    }\r\n                    // Insert the coeffient but from the front\r\n                    rarr.unshift(c);\r\n                }\r\n\r\n                rarr.push(symbol.symbols[CONST_HASH].multiplier);\r\n\r\n                if(sym.group === S)\r\n                    rarr[0] = sym.multiplier;//the symbol maybe of group CP with one variable\r\n\r\n                return get_roots(rarr, powers, max);\r\n            }\r\n            else if(core.Utils.isArray(symbol)) {\r\n                var parr = symbol;\r\n                var rarr = [],\r\n                        powers = [],\r\n                        last_power = 0;\r\n                for(var i = 0; i < parr.length; i++) {\r\n\r\n                    var coeff = parr[i][0],\r\n                            pow = parr[i][1],\r\n                            d = pow - last_power - 1;\r\n                    //insert the zeros\r\n                    for(var j = 0; j < d; j++)\r\n                        rarr.unshift(0);\r\n\r\n                    rarr.unshift(coeff);\r\n                    if(pow !== 0)\r\n                        powers.push(pow);\r\n                    last_power = pow;\r\n                }\r\n                var max = Math.max.apply(undefined, powers);\r\n\r\n                return get_roots(rarr, powers, max);\r\n            }\r\n            else {\r\n                throw new core.exceptions.NerdamerTypeError('Cannot calculate roots. Symbol must be a polynomial!');\r\n            }\r\n\r\n            function calcroots(rarr, powers, max) {\r\n                var MAXDEGREE = 100; // Degree of largest polynomial accepted by this script.\r\n\r\n                // Make a clone of the coefficients before appending the max power\r\n                var p = rarr.slice(0);\r\n\r\n                // Divide the string up into its individual entries, which--presumably--are separated by whitespace\r\n                rarr.unshift(max);\r\n\r\n                if(max > MAXDEGREE) {\r\n                    throw new core.exceptions.ValueLimitExceededError(\"This utility accepts polynomials of degree up to \" + MAXDEGREE + \". \");\r\n                }\r\n\r\n                var zeroi = [], // Vector of imaginary components of roots\r\n                        degreePar = {};    // degreePar is a dummy variable for passing the parameter POLYDEGREE by reference\r\n                degreePar.Degree = max;\r\n\r\n                for(i = 0; i < max; i++) {\r\n                    zeroi.push(0);\r\n                }\r\n                var zeror = zeroi.slice(0); // Vector of real components of roots\r\n\r\n                // Find the roots\r\n                //--> Begin Jenkins-Traub\r\n\r\n                /*\r\n                 * A verbatim copy of Mr. David Binner's Jenkins-Traub port\r\n                 */\r\n                function QuadSD_ak1(NN, u, v, p, q, iPar) {\r\n                    // Divides p by the quadratic 1, u, v placing the quotient in q and the remainder in a, b\r\n                    // iPar is a dummy variable for passing in the two parameters--a and b--by reference\r\n                    q[0] = iPar.b = p[0];\r\n                    q[1] = iPar.a = -(u * iPar.b) + p[1];\r\n\r\n                    for(var i = 2; i < NN; i++) {\r\n                        q[i] = -(u * iPar.a + v * iPar.b) + p[i];\r\n                        iPar.b = iPar.a;\r\n                        iPar.a = q[i];\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function calcSC_ak1(DBL_EPSILON, N, a, b, iPar, K, u, v, qk) {\r\n                    // This routine calculates scalar quantities used to compute the next K polynomial and\r\n                    // new estimates of the quadratic coefficients.\r\n                    // calcSC -\tinteger variable set here indicating how the calculations are normalized\r\n                    // to avoid overflow.\r\n                    // iPar is a dummy variable for passing in the nine parameters--a1, a3, a7, c, d, e, f, g, and h --by reference\r\n\r\n                    // sdPar is a dummy variable for passing the two parameters--c and d--into QuadSD_ak1 by reference\r\n                    var sdPar = new Object(),\r\n                            // TYPE = 3 indicates the quadratic is almost a factor of K\r\n                            dumFlag = 3;\r\n\r\n                    // Synthetic division of K by the quadratic 1, u, v\r\n                    sdPar.b = sdPar.a = 0.0;\r\n                    QuadSD_ak1(N, u, v, K, qk, sdPar);\r\n                    iPar.c = sdPar.a;\r\n                    iPar.d = sdPar.b;\r\n\r\n                    if(Math.abs(iPar.c) <= (100.0 * DBL_EPSILON * Math.abs(K[N - 1]))) {\r\n                        if(Math.abs(iPar.d) <= (100.0 * DBL_EPSILON * Math.abs(K[N - 2])))\r\n                            return dumFlag;\r\n                    }\r\n\r\n                    iPar.h = v * b;\r\n                    if(Math.abs(iPar.d) >= Math.abs(iPar.c)) {\r\n                        // TYPE = 2 indicates that all formulas are divided by d\r\n                        dumFlag = 2;\r\n                        iPar.e = a / (iPar.d);\r\n                        iPar.f = (iPar.c) / (iPar.d);\r\n                        iPar.g = u * b;\r\n                        iPar.a3 = (iPar.e) * ((iPar.g) + a) + (iPar.h) * (b / (iPar.d));\r\n                        iPar.a1 = -a + (iPar.f) * b;\r\n                        iPar.a7 = (iPar.h) + ((iPar.f) + u) * a;\r\n                    }\r\n                    else {\r\n                        // TYPE = 1 indicates that all formulas are divided by c;\r\n                        dumFlag = 1;\r\n                        iPar.e = a / (iPar.c);\r\n                        iPar.f = (iPar.d) / (iPar.c);\r\n                        iPar.g = (iPar.e) * u;\r\n                        iPar.a3 = (iPar.e) * a + ((iPar.g) + (iPar.h) / (iPar.c)) * b;\r\n                        iPar.a1 = -(a * ((iPar.d) / (iPar.c))) + b;\r\n                        iPar.a7 = (iPar.g) * (iPar.d) + (iPar.h) * (iPar.f) + a;\r\n                    }\r\n                    return dumFlag;\r\n                }\r\n\r\n                function nextK_ak1(DBL_EPSILON, N, tFlag, a, b, iPar, K, qk, qp) {\r\n                    // Computes the next K polynomials using the scalars computed in calcSC_ak1\r\n                    // iPar is a dummy variable for passing in three parameters--a1, a3, and a7\r\n                    var temp;\r\n                    if(tFlag == 3) {\t// Use unscaled form of the recurrence\r\n                        K[1] = K[0] = 0.0;\r\n                        for(var i = 2; i < N; i++) {\r\n                            K[i] = qk[i - 2];\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    temp = ((tFlag == 1) ? b : a);\r\n                    if(Math.abs(iPar.a1) > (10.0 * DBL_EPSILON * Math.abs(temp))) {\r\n                        // Use scaled form of the recurrence\r\n                        iPar.a7 /= iPar.a1;\r\n                        iPar.a3 /= iPar.a1;\r\n                        K[0] = qp[0];\r\n                        K[1] = -(qp[0] * iPar.a7) + qp[1];\r\n                        for(var i = 2; i < N; i++)\r\n                            K[i] = -(qp[i - 1] * iPar.a7) + qk[i - 2] * iPar.a3 + qp[i];\r\n                    }\r\n                    else {\r\n                        // If a1 is nearly zero, then use a special form of the recurrence\r\n                        K[0] = 0.0;\r\n                        K[1] = -(qp[0] * iPar.a7);\r\n                        for(var i = 2; i < N; i++) {\r\n                            K[i] = -(qp[i - 1] * iPar.a7) + qk[i - 2] * iPar.a3;\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function newest_ak1(tFlag, iPar, a, a1, a3, a7, b, c, d, f, g, h, u, v, K, N, p) {\r\n                    // Compute new estimates of the quadratic coefficients using the scalars computed in calcSC_ak1\r\n                    // iPar is a dummy variable for passing in the two parameters--uu and vv--by reference\r\n                    // iPar.a = uu, iPar.b = vv\r\n\r\n                    var a4, a5, b1, b2, c1, c2, c3, c4, temp;\r\n                    iPar.b = iPar.a = 0.0;// The quadratic is zeroed\r\n\r\n                    if(tFlag != 3) {\r\n                        if(tFlag != 2) {\r\n                            a4 = a + u * b + h * f;\r\n                            a5 = c + (u + v * f) * d;\r\n                        }\r\n                        else {\r\n                            a4 = (a + g) * f + h;\r\n                            a5 = (f + u) * c + v * d;\r\n                        }\r\n\r\n                        // Evaluate new quadratic coefficients\r\n                        b1 = -(K[N - 1] / p[N]);\r\n                        b2 = -(K[N - 2] + b1 * p[N - 1]) / p[N];\r\n                        c1 = v * b2 * a1;\r\n                        c2 = b1 * a7;\r\n                        c3 = b1 * b1 * a3;\r\n                        c4 = -(c2 + c3) + c1;\r\n                        temp = -c4 + a5 + b1 * a4;\r\n                        if(temp != 0.0) {\r\n                            iPar.a = -((u * (c3 + c2) + v * (b1 * a1 + b2 * a7)) / temp) + u;\r\n                            iPar.b = v * (1.0 + c4 / temp);\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function Quad_ak1(a, b1, c, iPar) {\r\n                    // Calculates the zeros of the quadratic a*Z^2 + b1*Z + c\r\n                    // The quadratic formula, modified to avoid overflow, is used to find the larger zero if the\r\n                    // zeros are real and both zeros are complex. The smaller real zero is found directly from\r\n                    // the product of the zeros c/a.\r\n\r\n                    // iPar is a dummy variable for passing in the four parameters--sr, si, lr, and li--by reference\r\n\r\n                    var b, d, e;\r\n                    iPar.sr = iPar.si = iPar.lr = iPar.li = 0.0;\r\n\r\n                    if(a == 0) {\r\n                        iPar.sr = ((b1 != 0) ? -(c / b1) : iPar.sr);\r\n                        return;\r\n                    }\r\n                    if(c == 0) {\r\n                        iPar.lr = -(b1 / a);\r\n                        return;\r\n                    }\r\n\r\n                    // Compute discriminant avoiding overflow\r\n                    b = b1 / 2.0;\r\n                    if(Math.abs(b) < Math.abs(c)) {\r\n                        e = ((c >= 0) ? a : -a);\r\n                        e = -e + b * (b / Math.abs(c));\r\n                        d = Math.sqrt(Math.abs(e)) * Math.sqrt(Math.abs(c));\r\n                    }\r\n                    else {\r\n                        e = -((a / b) * (c / b)) + 1.0;\r\n                        d = Math.sqrt(Math.abs(e)) * (Math.abs(b));\r\n                    }\r\n\r\n                    if(e >= 0) {\r\n                        // Real zeros\r\n                        d = ((b >= 0) ? -d : d);\r\n                        iPar.lr = (-b + d) / a;\r\n                        iPar.sr = ((iPar.lr != 0) ? (c / (iPar.lr)) / a : iPar.sr);\r\n                    }\r\n                    else {\r\n                        // Complex conjugate zeros\r\n                        iPar.lr = iPar.sr = -(b / a);\r\n                        iPar.si = Math.abs(d / a);\r\n                        iPar.li = -(iPar.si);\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function QuadIT_ak1(DBL_EPSILON, N, iPar, uu, vv, qp, NN, sdPar, p, qk, calcPar, K) {\r\n                    // Variable-shift K-polynomial iteration for a quadratic factor converges only if the\r\n                    // zeros are equimodular or nearly so.\r\n                    // iPar is a dummy variable for passing in the five parameters--NZ, lzi, lzr, szi, and szr--by reference\r\n                    // sdPar is a dummy variable for passing the two parameters--a and b--in by reference\r\n                    // calcPar is a dummy variable for passing the nine parameters--a1, a3, a7, c, d, e, f, g, and h --in by reference\r\n\r\n                    // qPar is a dummy variable for passing the four parameters--szr, szi, lzr, and lzi--into Quad_ak1 by reference\r\n                    var qPar = new Object(),\r\n                            ee, mp, omp, relstp, t, u, ui, v, vi, zm,\r\n                            i, j = 0, tFlag, triedFlag = 0;   // Integer variables\r\n\r\n                    iPar.NZ = 0;// Number of zeros found\r\n                    u = uu; // uu and vv are coefficients of the starting quadratic\r\n                    v = vv;\r\n\r\n                    do {\r\n                        qPar.li = qPar.lr = qPar.si = qPar.sr = 0.0;\r\n                        Quad_ak1(1.0, u, v, qPar);\r\n                        iPar.szr = qPar.sr;\r\n                        iPar.szi = qPar.si;\r\n                        iPar.lzr = qPar.lr;\r\n                        iPar.lzi = qPar.li;\r\n\r\n                        // Return if roots of the quadratic are real and not close to multiple or nearly\r\n                        // equal and of opposite sign.\r\n                        if(Math.abs(Math.abs(iPar.szr) - Math.abs(iPar.lzr)) > 0.01 * Math.abs(iPar.lzr))\r\n                            break;\r\n\r\n                        // Evaluate polynomial by quadratic synthetic division\r\n\r\n                        QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n\r\n                        mp = Math.abs(-((iPar.szr) * (sdPar.b)) + (sdPar.a)) + Math.abs((iPar.szi) * (sdPar.b));\r\n\r\n                        // Compute a rigorous bound on the rounding error in evaluating p\r\n\r\n                        zm = Math.sqrt(Math.abs(v));\r\n                        ee = 2.0 * Math.abs(qp[0]);\r\n                        t = -((iPar.szr) * (sdPar.b));\r\n\r\n                        for(i = 1; i < N; i++) {\r\n                            ee = ee * zm + Math.abs(qp[i]);\r\n                        }\r\n\r\n                        ee = ee * zm + Math.abs(t + sdPar.a);\r\n                        ee = (9.0 * ee + 2.0 * Math.abs(t) - 7.0 * (Math.abs((sdPar.a) + t) + zm * Math.abs((sdPar.b)))) * DBL_EPSILON;\r\n\r\n                        // Iteration has converged sufficiently if the polynomial value is less than 20 times this bound\r\n                        if(mp <= 20.0 * ee) {\r\n                            iPar.NZ = 2;\r\n                            break;\r\n                        }\r\n\r\n                        j++;\r\n                        // Stop iteration after 20 steps\r\n                        if(j > 20)\r\n                            break;\r\n                        if(j >= 2) {\r\n                            if((relstp <= 0.01) && (mp >= omp) && (!triedFlag)) {\r\n                                // A cluster appears to be stalling the convergence. Five fixed shift\r\n                                // steps are taken with a u, v close to the cluster.\r\n                                relstp = ((relstp < DBL_EPSILON) ? Math.sqrt(DBL_EPSILON) : Math.sqrt(relstp));\r\n                                u -= u * relstp;\r\n                                v += v * relstp;\r\n\r\n                                QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n                                for(i = 0; i < 5; i++) {\r\n                                    tFlag = calcSC_ak1(DBL_EPSILON, N, sdPar.a, sdPar.b, calcPar, K, u, v, qk);\r\n                                    nextK_ak1(DBL_EPSILON, N, tFlag, sdPar.a, sdPar.b, calcPar, K, qk, qp);\r\n                                }\r\n\r\n                                triedFlag = 1;\r\n                                j = 0;\r\n\r\n                            }\r\n                        }\r\n                        omp = mp;\r\n\r\n                        // Calculate next K polynomial and new u and v\r\n                        tFlag = calcSC_ak1(DBL_EPSILON, N, sdPar.a, sdPar.b, calcPar, K, u, v, qk);\r\n                        nextK_ak1(DBL_EPSILON, N, tFlag, sdPar.a, sdPar.b, calcPar, K, qk, qp);\r\n                        tFlag = calcSC_ak1(DBL_EPSILON, N, sdPar.a, sdPar.b, calcPar, K, u, v, qk);\r\n                        newest_ak1(tFlag, sdPar, sdPar.a, calcPar.a1, calcPar.a3, calcPar.a7, sdPar.b, calcPar.c, calcPar.d, calcPar.f, calcPar.g, calcPar.h, u, v, K, N, p);\r\n                        ui = sdPar.a;\r\n                        vi = sdPar.b;\r\n\r\n                        // If vi is zero, the iteration is not converging\r\n                        if(vi != 0) {\r\n                            relstp = Math.abs((-v + vi) / vi);\r\n                            u = ui;\r\n                            v = vi;\r\n                        }\r\n                    }\r\n                    while(vi != 0);\r\n                    return;\r\n                }\r\n\r\n                function RealIT_ak1(DBL_EPSILON, iPar, sdPar, N, p, NN, qp, K, qk) {\r\n                    // Variable-shift H-polynomial iteration for a real zero\r\n                    // sss\t- starting iterate = sdPar.a\r\n                    // NZ\t\t- number of zeros found = iPar.NZ\r\n                    // dumFlag\t- flag to indicate a pair of zeros near real axis, returned to iFlag\r\n\r\n                    var ee, kv, mp, ms, omp, pv, s, t,\r\n                            dumFlag, i, j, nm1 = N - 1;   // Integer variables\r\n\r\n                    iPar.NZ = j = dumFlag = 0;\r\n                    s = sdPar.a;\r\n\r\n                    for(; ; ) {\r\n                        pv = p[0];\r\n\r\n                        // Evaluate p at s\r\n                        qp[0] = pv;\r\n                        for(i = 1; i < NN; i++) {\r\n                            qp[i] = pv = pv * s + p[i];\r\n                        }\r\n                        mp = Math.abs(pv);\r\n\r\n                        // Compute a rigorous bound on the error in evaluating p\r\n                        ms = Math.abs(s);\r\n                        ee = 0.5 * Math.abs(qp[0]);\r\n                        for(i = 1; i < NN; i++) {\r\n                            ee = ee * ms + Math.abs(qp[i]);\r\n                        }\r\n\r\n                        // Iteration has converged sufficiently if the polynomial value is less than\r\n                        // 20 times this bound\r\n                        if(mp <= 20.0 * DBL_EPSILON * (2.0 * ee - mp)) {\r\n                            iPar.NZ = 1;\r\n                            iPar.szr = s;\r\n                            iPar.szi = 0.0;\r\n                            break;\r\n                        }\r\n                        j++;\r\n                        // Stop iteration after 10 steps\r\n                        if(j > 10)\r\n                            break;\r\n\r\n                        if(j >= 2) {\r\n                            if((Math.abs(t) <= 0.001 * Math.abs(-t + s)) && (mp > omp)) {\r\n                                // A cluster of zeros near the real axis has been encountered.\r\n                                // Return with iFlag set to initiate a quadratic iteration.\r\n                                dumFlag = 1;\r\n                                iPar.a = s;\r\n                                break;\r\n                            } // End if ((fabs(t) <= 0.001*fabs(s - t)) && (mp > omp))\r\n                        } //End if (j >= 2)\r\n\r\n                        // Return if the polynomial value has increased significantly\r\n                        omp = mp;\r\n\r\n                        // Compute t, the next polynomial and the new iterate\r\n                        qk[0] = kv = K[0];\r\n                        for(i = 1; i < N; i++) {\r\n                            qk[i] = kv = kv * s + K[i];\r\n                        }\r\n\r\n                        if(Math.abs(kv) > Math.abs(K[nm1]) * 10.0 * DBL_EPSILON) {\r\n                            // Use the scaled form of the recurrence if the value of K at s is non-zero\r\n                            t = -(pv / kv);\r\n                            K[0] = qp[0];\r\n                            for(i = 1; i < N; i++) {\r\n                                K[i] = t * qk[i - 1] + qp[i];\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Use unscaled form\r\n                            K[0] = 0.0;\r\n                            for(i = 1; i < N; i++)\r\n                                K[i] = qk[i - 1];\r\n                        }\r\n\r\n                        kv = K[0];\r\n                        for(i = 1; i < N; i++) {\r\n                            kv = kv * s + K[i];\r\n                        }\r\n                        t = ((Math.abs(kv) > (Math.abs(K[nm1]) * 10.0 * DBL_EPSILON)) ? -(pv / kv) : 0.0);\r\n                        s += t;\r\n                    }\r\n                    return dumFlag;\r\n                }\r\n\r\n                function Fxshfr_ak1(DBL_EPSILON, MDP1, L2, sr, v, K, N, p, NN, qp, u, iPar) {\r\n\r\n                    // Computes up to L2 fixed shift K-polynomials, testing for convergence in the linear or\r\n                    // quadratic case. Initiates one of the variable shift iterations and returns with the\r\n                    // number of zeros found.\r\n                    // L2\tlimit of fixed shift steps\r\n                    // iPar is a dummy variable for passing in the five parameters--NZ, lzi, lzr, szi, and szr--by reference\r\n                    // NZ\tnumber of zeros found\r\n                    var sdPar = new Object(), // sdPar is a dummy variable for passing the two parameters--a and b--into QuadSD_ak1 by reference\r\n                            calcPar = new Object(),\r\n                            // calcPar is a dummy variable for passing the nine parameters--a1, a3, a7, c, d, e, f, g, and h --into calcSC_ak1 by reference\r\n\r\n                            qk = new Array(MDP1),\r\n                            svk = new Array(MDP1),\r\n                            a, b, betas, betav, oss, ots, otv, ovv, s, ss, ts, tss, tv, tvv, ui, vi, vv,\r\n                            fflag, i, iFlag = 1, j, spass, stry, tFlag, vpass, vtry;     // Integer variables\r\n\r\n                    iPar.NZ = 0;\r\n                    betav = betas = 0.25;\r\n                    oss = sr;\r\n                    ovv = v;\r\n\r\n                    //Evaluate polynomial by synthetic division\r\n                    sdPar.b = sdPar.a = 0.0;\r\n                    QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n                    a = sdPar.a;\r\n                    b = sdPar.b;\r\n                    calcPar.h = calcPar.g = calcPar.f = calcPar.e = calcPar.d = calcPar.c = calcPar.a7 = calcPar.a3 = calcPar.a1 = 0.0;\r\n                    tFlag = calcSC_ak1(DBL_EPSILON, N, a, b, calcPar, K, u, v, qk);\r\n\r\n                    for(j = 0; j < L2; j++) {\r\n                        fflag = 1;\r\n\r\n                        // Calculate next K polynomial and estimate v\r\n                        nextK_ak1(DBL_EPSILON, N, tFlag, a, b, calcPar, K, qk, qp);\r\n                        tFlag = calcSC_ak1(DBL_EPSILON, N, a, b, calcPar, K, u, v, qk);\r\n\r\n                        // Use sdPar for passing in uu and vv instead of defining a brand-new variable.\r\n                        // sdPar.a = ui, sdPar.b = vi\r\n                        newest_ak1(tFlag, sdPar, a, calcPar.a1, calcPar.a3, calcPar.a7, b, calcPar.c, calcPar.d, calcPar.f, calcPar.g, calcPar.h, u, v, K, N, p);\r\n                        ui = sdPar.a;\r\n                        vv = vi = sdPar.b;\r\n\r\n                        // Estimate s\r\n                        ss = ((K[N - 1] != 0.0) ? -(p[N] / K[N - 1]) : 0.0);\r\n                        ts = tv = 1.0;\r\n\r\n                        if((j != 0) && (tFlag != 3)) {\r\n                            // Compute relative measures of convergence of s and v sequences\r\n                            tv = ((vv != 0.0) ? Math.abs((vv - ovv) / vv) : tv);\r\n                            ts = ((ss != 0.0) ? Math.abs((ss - oss) / ss) : ts);\r\n\r\n                            // If decreasing, multiply the two most recent convergence measures\r\n                            tvv = ((tv < otv) ? tv * otv : 1.0);\r\n                            tss = ((ts < ots) ? ts * ots : 1.0);\r\n\r\n                            // Compare with convergence criteria\r\n                            vpass = ((tvv < betav) ? 1 : 0);\r\n                            spass = ((tss < betas) ? 1 : 0);\r\n\r\n                            if((spass) || (vpass)) {\r\n\r\n                                // At least one sequence has passed the convergence test.\r\n                                // Store variables before iterating\r\n\r\n                                for(i = 0; i < N; i++) {\r\n                                    svk[i] = K[i];\r\n                                }\r\n                                s = ss;\r\n\r\n                                // Choose iteration according to the fastest converging sequence\r\n\r\n                                stry = vtry = 0;\r\n\r\n                                for(; ; ) {\r\n                                    if((fflag && ((fflag = 0) == 0)) && ((spass) && (!vpass || (tss < tvv)))) {\r\n                                        ;// Do nothing. Provides a quick \"short circuit\".\r\n                                    }\r\n                                    else {\r\n                                        QuadIT_ak1(DBL_EPSILON, N, iPar, ui, vi, qp, NN, sdPar, p, qk, calcPar, K);\r\n                                        a = sdPar.a;\r\n                                        b = sdPar.b;\r\n\r\n                                        if((iPar.NZ) > 0)\r\n                                            return;\r\n\r\n                                        // Quadratic iteration has failed. Flag that it has been tried and decrease the\r\n                                        // convergence criterion\r\n                                        iFlag = vtry = 1;\r\n                                        betav *= 0.25;\r\n\r\n                                        // Try linear iteration if it has not been tried and the s sequence is converging\r\n                                        if(stry || (!spass)) {\r\n                                            iFlag = 0;\r\n                                        }\r\n                                        else {\r\n                                            for(i = 0; i < N; i++)\r\n                                                K[i] = svk[i];\r\n                                        }\r\n                                    }\r\n                                    //fflag = 0;\r\n                                    if(iFlag != 0) {\r\n                                        // Use sdPar for passing in s instead of defining a brand-new variable.\r\n                                        // sdPar.a = s\r\n                                        sdPar.a = s;\r\n                                        iFlag = RealIT_ak1(DBL_EPSILON, iPar, sdPar, N, p, NN, qp, K, qk);\r\n                                        s = sdPar.a;\r\n\r\n                                        if((iPar.NZ) > 0)\r\n                                            return;\r\n\r\n                                        // Linear iteration has failed. Flag that it has been tried and decrease the\r\n                                        // convergence criterion\r\n                                        stry = 1;\r\n                                        betas *= 0.25;\r\n\r\n                                        if(iFlag != 0) {\r\n                                            // If linear iteration signals an almost double real zero, attempt quadratic iteration\r\n                                            ui = -(s + s);\r\n                                            vi = s * s;\r\n                                            continue;\r\n\r\n                                        }\r\n                                    }\r\n\r\n                                    // Restore variables\r\n                                    for(i = 0; i < N; i++)\r\n                                        K[i] = svk[i];\r\n\r\n                                    // Try quadratic iteration if it has not been tried and the v sequence is converging\r\n                                    if(!vpass || vtry)\r\n                                        break;\t\t// Break out of infinite for loop\r\n\r\n                                }\r\n\r\n                                // Re-compute qp and scalar values to continue the second stage\r\n\r\n                                QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n                                a = sdPar.a;\r\n                                b = sdPar.b;\r\n\r\n                                tFlag = calcSC_ak1(DBL_EPSILON, N, a, b, calcPar, K, u, v, qk);\r\n                            }\r\n                        }\r\n                        ovv = vv;\r\n                        oss = ss;\r\n                        otv = tv;\r\n                        ots = ts;\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function rpSolve(degPar, p, zeror, zeroi) {\r\n                    var N = degPar.Degree,\r\n                            RADFAC = 3.14159265358979323846 / 180, // Degrees-to-radians conversion factor = PI/180\r\n                            LB2 = Math.LN2, // Dummy variable to avoid re-calculating this value in loop below\r\n                            MDP1 = degPar.Degree + 1,\r\n                            K = new Array(MDP1),\r\n                            pt = new Array(MDP1),\r\n                            qp = new Array(MDP1),\r\n                            temp = new Array(MDP1),\r\n                            // qPar is a dummy variable for passing the four parameters--sr, si, lr, and li--by reference\r\n                            qPar = new Object(),\r\n                            // Fxshfr_Par is a dummy variable for passing parameters by reference : NZ, lzi, lzr, szi, szr);\r\n                            Fxshfr_Par = new Object(),\r\n                            bnd, DBL_EPSILON, df, dx, factor, ff, moduli_max, moduli_min, sc, x, xm,\r\n                            aa, bb, cc, sr, t, u, xxx,\r\n                            j, jj, l, NM1, NN, zerok;// Integer variables\r\n\r\n                    // Calculate the machine epsilon and store in the variable DBL_EPSILON.\r\n                    // To calculate this value, just use existing variables rather than create new ones that will be used only for this code block\r\n                    aa = 1.0;\r\n                    do {\r\n                        DBL_EPSILON = aa;\r\n                        aa /= 2;\r\n                        bb = 1.0 + aa;\r\n                    }\r\n                    while(bb > 1.0);\r\n\r\n                    var LO = Number.MIN_VALUE / DBL_EPSILON,\r\n                            cosr = Math.cos(94.0 * RADFAC), // = -0.069756474\r\n                            sinr = Math.sin(94.0 * RADFAC), // = 0.99756405\r\n                            xx = Math.sqrt(0.5), // = 0.70710678\r\n                            yy = -xx;\r\n\r\n                    Fxshfr_Par.NZ = j = 0;\r\n                    Fxshfr_Par.szr = Fxshfr_Par.szi = Fxshfr_Par.lzr = Fxshfr_Par.lzi = 0.0;\r\n\r\n                    // Remove zeros at the origin, if any\r\n                    while(p[N] == 0) {\r\n                        zeror[j] = zeroi[j] = 0;\r\n                        N--;\r\n                        j++;\r\n                    }\r\n                    NN = N + 1;\r\n\r\n                    // >>>>> Begin Main Loop <<<<<\r\n                    while(N >= 1) { // Main loop\r\n                        // Start the algorithm for one zero\r\n                        if(N <= 2) {\r\n                            // Calculate the final zero or pair of zeros\r\n                            if(N < 2) {\r\n                                zeror[degPar.Degree - 1] = -(p[1] / p[0]);\r\n                                zeroi[degPar.Degree - 1] = 0;\r\n                            }\r\n                            else {\r\n                                qPar.li = qPar.lr = qPar.si = qPar.sr = 0.0;\r\n                                Quad_ak1(p[0], p[1], p[2], qPar);\r\n                                zeror[degPar.Degree - 2] = qPar.sr;\r\n                                zeroi[degPar.Degree - 2] = qPar.si;\r\n                                zeror[degPar.Degree - 1] = qPar.lr;\r\n                                zeroi[degPar.Degree - 1] = qPar.li;\r\n                            }\r\n                            break;\r\n                        }\r\n\r\n                        // Find the largest and smallest moduli of the coefficients\r\n                        moduli_max = 0.0;\r\n                        moduli_min = Number.MAX_VALUE;\r\n\r\n                        for(i = 0; i < NN; i++) {\r\n                            x = Math.abs(p[i]);\r\n                            if(x > moduli_max)\r\n                                moduli_max = x;\r\n                            if((x != 0) && (x < moduli_min))\r\n                                moduli_min = x;\r\n                        }\r\n\r\n                        // Scale if there are large or very small coefficients\r\n                        // Computes a scale factor to multiply the coefficients of the polynomial. The scaling\r\n                        // is done to avoid overflow and to avoid undetected underflow interfering with the\r\n                        // convergence criterion.\r\n                        // The factor is a power of the base.\r\n                        sc = LO / moduli_min;\r\n\r\n                        if(((sc <= 1.0) && (moduli_max >= 10)) || ((sc > 1.0) && (Number.MAX_VALUE / sc >= moduli_max))) {\r\n                            sc = ((sc == 0) ? Number.MIN_VALUE : sc);\r\n                            l = Math.floor(Math.log(sc) / LB2 + 0.5);\r\n                            factor = Math.pow(2.0, l);\r\n                            if(factor != 1.0) {\r\n                                for(i = 0; i < NN; i++)\r\n                                    p[i] *= factor;\r\n                            }\r\n                        }\r\n\r\n                        // Compute lower bound on moduli of zeros\r\n                        for(var i = 0; i < NN; i++)\r\n                            pt[i] = Math.abs(p[i]);\r\n                        pt[N] = -(pt[N]);\r\n                        NM1 = N - 1;\r\n\r\n                        // Compute upper estimate of bound\r\n                        x = Math.exp((Math.log(-pt[N]) - Math.log(pt[0])) / N);\r\n\r\n                        if(pt[NM1] != 0) {\r\n                            // If Newton step at the origin is better, use it\r\n                            xm = -pt[N] / pt[NM1];\r\n                            x = ((xm < x) ? xm : x);\r\n                        }\r\n\r\n                        // Chop the interval (0, x) until ff <= 0\r\n                        xm = x;\r\n                        do {\r\n                            x = xm;\r\n                            xm = 0.1 * x;\r\n                            ff = pt[0];\r\n                            for(var i = 1; i < NN; i++) {\r\n                                ff = ff * xm + pt[i];\r\n                            }\r\n                        }\r\n                        while(ff > 0); // End do-while loop\r\n\r\n                        dx = x;\r\n                        // Do Newton iteration until x converges to two decimal places\r\n\r\n                        do {\r\n                            df = ff = pt[0];\r\n                            for(var i = 1; i < N; i++) {\r\n                                ff = x * ff + pt[i];\r\n                                df = x * df + ff;\r\n                            } // End for i\r\n                            ff = x * ff + pt[N];\r\n                            dx = ff / df;\r\n                            x -= dx;\r\n                        }\r\n                        while(Math.abs(dx / x) > 0.005); // End do-while loop\r\n\r\n                        bnd = x;\r\n\r\n                        // Compute the derivative as the initial K polynomial and do 5 steps with no shift\r\n                        for(var i = 1; i < N; i++)\r\n                            K[i] = (N - i) * p[i] / N;\r\n                        K[0] = p[0];\r\n                        aa = p[N];\r\n                        bb = p[NM1];\r\n                        zerok = ((K[NM1] == 0) ? 1 : 0);\r\n\r\n                        for(jj = 0; jj < 5; jj++) {\r\n                            cc = K[NM1];\r\n                            if(zerok) {\r\n                                // Use unscaled form of recurrence\r\n                                for(var i = 0; i < NM1; i++) {\r\n                                    j = NM1 - i;\r\n                                    K[j] = K[j - 1];\r\n                                } // End for i\r\n                                K[0] = 0;\r\n                                zerok = ((K[NM1] == 0) ? 1 : 0);\r\n                            }\r\n                            else {\r\n                                // Used scaled form of recurrence if value of K at 0 is nonzero\r\n                                t = -aa / cc;\r\n                                for(var i = 0; i < NM1; i++) {\r\n                                    j = NM1 - i;\r\n                                    K[j] = t * K[j - 1] + p[j];\r\n                                } // End for i\r\n                                K[0] = p[0];\r\n                                zerok = ((Math.abs(K[NM1]) <= Math.abs(bb) * DBL_EPSILON * 10.0) ? 1 : 0);\r\n                            }\r\n                        }\r\n\r\n                        // Save K for restarts with new shifts\r\n                        for(var i = 0; i < N; i++)\r\n                            temp[i] = K[i];\r\n\r\n                        // Loop to select the quadratic corresponding to each new shift\r\n                        for(jj = 1; jj <= 20; jj++) {\r\n\r\n                            // Quadratic corresponds to a double shift to a non-real point and its\r\n                            // complex conjugate. The point has modulus BND and amplitude rotated\r\n                            // by 94 degrees from the previous shift.\r\n\r\n                            xxx = -(sinr * yy) + cosr * xx;\r\n                            yy = sinr * xx + cosr * yy;\r\n                            xx = xxx;\r\n                            sr = bnd * xx;\r\n                            u = -(2.0 * sr);\r\n\r\n                            // Second stage calculation, fixed quadratic\r\n                            Fxshfr_ak1(DBL_EPSILON, MDP1, 20 * jj, sr, bnd, K, N, p, NN, qp, u, Fxshfr_Par);\r\n\r\n                            if(Fxshfr_Par.NZ != 0) {\r\n                                // The second stage jumps directly to one of the third stage iterations and\r\n                                // returns here if successful. Deflate the polynomial, store the zero or\r\n                                // zeros, and return to the main algorithm.\r\n                                j = degPar.Degree - N;\r\n                                zeror[j] = Fxshfr_Par.szr;\r\n                                zeroi[j] = Fxshfr_Par.szi;\r\n                                NN = NN - Fxshfr_Par.NZ;\r\n                                N = NN - 1;\r\n                                for(var i = 0; i < NN; i++)\r\n                                    p[i] = qp[i];\r\n                                if(Fxshfr_Par.NZ != 1) {\r\n                                    zeror[j + 1] = Fxshfr_Par.lzr;\r\n                                    zeroi[j + 1] = Fxshfr_Par.lzi;\r\n                                }\r\n                                break;\r\n                            }\r\n                            else {\r\n                                // If the iteration is unsuccessful, another quadratic is chosen after restoring K\r\n                                for(var i = 0; i < N; i++) {\r\n                                    K[i] = temp[i];\r\n                                }\r\n                            }\r\n                        }\r\n                        // Return with failure if no convergence with 20 shifts\r\n                        if(jj > 20) {\r\n                            degPar.Degree -= N;\r\n                            break;\r\n                        }\r\n                    }\r\n                    // >>>>> End Main Loop <<<<<\r\n                    return;\r\n                }\r\n                //--> End Jenkins-Traub\r\n                rpSolve(degreePar, p, zeror, zeroi);\r\n\r\n                var l = zeroi.length;\r\n                //format the output\r\n                for(i = 0; i < l; i++) {\r\n                    // We round the imaginary part to avoid having something crazy like 5.67e-16.\r\n                    var img = round(zeroi[i], decp + 8),\r\n                            real = round(zeror[i], decp + 8);\r\n                    // Did the rounding pay off? If the rounding did nothing more than chop off a few digits then no.\r\n                    // If the rounding results in a a number at least 3 digits shorter we'll keep it else we'll keep \r\n                    // the original otherwise the rounding was worth it.\r\n                    real = decp - String(real).length > 2 ? real : zeror[i];\r\n                    var sign = img < 0 ? '-' : '';\r\n\r\n                    // Remove the zeroes\r\n                    if(real === 0) {\r\n                        real = '';\r\n                    }\r\n                    if(img === 0) {\r\n                        img = '';\r\n                    }\r\n\r\n                    // Remove 1 as the multiplier and discard imaginary part if there isn't one.\r\n                    img = Math.abs(img) === 1 ? sign + 'i' : (img ? img + '*i' : '');\r\n\r\n                    var num = (real && img) ? real + '+' + img : real + img;\r\n                    zeror[i] = num.replace(/\\+\\-/g, '-');\r\n                }\r\n                return zeror;\r\n            }\r\n        },\r\n        roots: function (symbol) {\r\n\r\n            if(symbol.isConstant(true, true)) {\r\n                return core.Utils.nroots(symbol);\r\n            }\r\n            var roots = __.proots(symbol).map(function (x) {\r\n                return _.parse(x);\r\n            });\r\n            return core.Vector.fromArray(roots);\r\n        },\r\n        froot: function (f, guess, dx) {\r\n            var newtonraph = function (xn) {\r\n                var mesh = 1e-12,\r\n                        // If the derivative was already provided then don't recalculate.\r\n                        df = dx ? dx : core.Utils.build(core.Calculus.diff(f.clone())),\r\n                        // If the function was passed in as a function then don't recalculate.\r\n                        fn = f instanceof Function ? f : core.Utils.build(f),\r\n                        max = 10000,\r\n                        done = false,\r\n                        safety = 0;\r\n                while(!done) {\r\n                    var x = xn - (fn(xn) / df(xn));\r\n                    //absolute values for both x & xn ensures that we indeed have the radius    \r\n                    var r = Math.abs(x) - Math.abs(xn),\r\n                            delta = Math.abs(r);\r\n                    xn = x;\r\n\r\n                    if(delta < mesh)\r\n                        done = true;\r\n                    else if(safety > max) {\r\n                        xn = null;\r\n                        done = true;\r\n                    }\r\n\r\n                    safety++;\r\n                }\r\n                return xn;\r\n            };\r\n            return newtonraph(Number(guess));\r\n        },\r\n        quad: function (a, b, c) {\r\n            var q = function (a, b, c, sign) {\r\n                return _.parse('-(' + b + '+' + sign + '*sqrt((' + b + ')^2-4*(' + a + ')*(' + c + ')))/(2*' + a + ')');\r\n            };\r\n            return [q(a, b, c, 1), q(a, b, c, -1)];\r\n        },\r\n        sumProd: function (a, b) {\r\n            return __.quad(-b, a, -1).map(function (x) {\r\n                return x.invert();\r\n            });\r\n        },\r\n        coeffs: function (symbol, wrt, coeffs) {\r\n            wrt = String(wrt);\r\n            symbol = _.expand(symbol);\r\n            coeffs = coeffs || [new Symbol(0)];\r\n            //we cannot get coeffs for group EX\r\n            if(symbol.group === EX && symbol.contains(wrt, true))\r\n                _.error('Unable to get coefficients using expression ' + symbol.toString());\r\n            var vars = variables(symbol);\r\n            if(vars.length === 1 && vars[0] === wrt && !symbol.isImaginary()) {\r\n                var a = new Polynomial(symbol).coeffs.map(function (x) {\r\n                    return new Symbol(x);\r\n                });\r\n\r\n                for(var i = 0, l = a.length; i < l; i++) {\r\n                    var coeff = a[i],\r\n                            e = coeffs[i];\r\n                    if(e)\r\n                        coeff = _.add(e, coeff);\r\n                    coeffs[i] = coeff; //transfer it all over\r\n                }\r\n            }\r\n            else {\r\n                if(!wrt)\r\n                    _.error('Polynomial contains more than one variable. Please specify which variable is to be used!');\r\n                //if the variable isn't part of this polynomial then we're looking at x^0\r\n\r\n                if(vars.indexOf(wrt) === -1) {\r\n                    coeffs[0] = _.add(symbol, coeffs[0]);\r\n                }\r\n                else {\r\n                    coeffs = coeffs || [new Symbol(0)];\r\n                    if(symbol.group === CB) {\r\n                        var s = symbol.symbols[wrt];\r\n                        if(!s)\r\n                            _.error('Expression is not a polynomial!');\r\n                        var p = Number(s.power);\r\n                        coeff = _.divide(symbol.clone(), s.clone());\r\n                        if(coeff.contains(wrt, true) || p < 0 || !isInt(p))\r\n                            _.error('Expression is not a polynomial!');\r\n                        var e = coeffs[p];\r\n                        if(e)\r\n                            coeff = _.add(e, coeff);\r\n                        coeffs[p] = coeff;\r\n                    }\r\n                    else if(symbol.group === CP) {\r\n                        symbol.each(function (x) {\r\n                            __.coeffs(x.clone(), wrt, coeffs);\r\n                        }, true);\r\n                    }\r\n                }\r\n            }\r\n            //fill holes\r\n            for(var i = 0, l = coeffs.length; i < l; i++)\r\n                if(typeof coeffs[i] === 'undefined')\r\n                    coeffs[i] = new Symbol(0);\r\n\r\n            return coeffs;\r\n        },\r\n        /**\r\n         * Get's all the powers of a particular polynomial including the denominators. The denominators powers\r\n         * are returned as negative. All remaining polynomials are returned as zero order polynomials.\r\n         * for example polyPowers(x^2+1/x+y+t) will return [ '-1', 0, '2' ]\r\n         * @param {Symbol} e\r\n         * @param {String} for_variable\r\n         * @param {Array} powers\r\n         * @returns {Array} An array of the powers\r\n         */\r\n        //assumes you've already verified that it's a polynomial\r\n        polyPowers: function (e, for_variable, powers) {\r\n            powers = powers || [];\r\n            var g = g = e.group;\r\n            if(g === PL && for_variable === e.value) {\r\n                powers = powers.concat(keys(e.symbols));\r\n            }\r\n            else if(g === CP) {\r\n                for(var s in e.symbols) {\r\n                    var symbol = e.symbols[s];\r\n                    var g = symbol.group, v = symbol.value;\r\n                    if(g === S && for_variable === v)\r\n                        powers.push(symbol.power);\r\n                    else if(g === PL || g === CP)\r\n                        powers = __.polyPowers(symbol, for_variable, powers);\r\n                    else if(g === CB && symbol.contains(for_variable)) {\r\n                        var t = symbol.symbols[for_variable];\r\n                        if(t)\r\n                            powers.push((t.power));\r\n                    }\r\n                    else if(g === N || for_variable !== v)\r\n                        powers.push(0);\r\n                }\r\n            }\r\n            else if(g === CB && e.contains(for_variable)) {\r\n                powers.push(core.Utils.decompose_fn(e, for_variable, true).x.power);\r\n            }\r\n            return core.Utils.arrayUnique(powers).sort();\r\n        },\r\n        //The factor object\r\n        Factor: {\r\n            //splits the symbol in symbol and constant\r\n            split: function (symbol) {\r\n                var c = new Symbol(1); //the constants part\r\n                var s = new Symbol(1); //the symbolic part\r\n                __.Factor.factor(symbol, new Factors()).each(function (x) {\r\n                    var t = _.parse(x);\r\n                    if(x.isConstant(true)) {\r\n                        c = _.multiply(c, t);\r\n                    }\r\n                    else {\r\n                        s = _.multiply(s, t);\r\n                    }\r\n                });\r\n                return [c, s];\r\n            },\r\n            mix: function (o, include_negatives) {\r\n                var factors = keys(o);\r\n                var l = factors.length;\r\n                var m = [];//create a row which we'r going to be mixing\r\n                for(var i = 0; i < l; i++) {\r\n                    var factor = factors[i],\r\n                            p = o[factor];\r\n                    var ll = m.length;\r\n                    for(var j = 0; j < ll; j++) {\r\n                        var t = m[j] * factor;\r\n                        m.push(t);\r\n                        if(include_negatives)\r\n                            m.push(-t);\r\n                    }\r\n\r\n                    for(var j = 1; j <= p; j++)\r\n                        m.push(Math.pow(factor, j));\r\n                }\r\n                return m;\r\n            },\r\n            //TODO: this method is to replace common factoring\r\n            common: function (symbol, factors) {\r\n                try {\r\n                    if(symbol.group === CP) {\r\n                        //this may have the unfortunate side effect of expanding and factoring again\r\n                        //to only end up with the same result. \r\n                        //TODO: try to avoid this\r\n                        //collect the symbols and sort to have the longest first. Thinking is that the longest terms \r\n                        //has to contain the variable in order for it to be factorable\r\n                        var symbols = _.expand(symbol.clone(), true).collectSymbols(null, null, function (a, b) {\r\n                            return (b.length || 1) - (a.length || 1);\r\n                        });\r\n\r\n                        var map = {}; //create a map of common factors\r\n                        var coeffs = [];\r\n                        for(var i = 0; i < symbols.length; i++) {\r\n                            var sym = symbols[i];\r\n                            coeffs.push(sym.multiplier.clone());\r\n                            sym.each(function (x) {\r\n                                var p = Number(x.power);\r\n                                //This check exits since we have a symbolic power.\r\n                                //For the future... think about removing this check and modify for symbolic powers\r\n                                if(isNaN(p))\r\n                                    throw new Error('exiting');\r\n                                //loop through the symbols and lump together common terms\r\n                                if(x.value in map) {\r\n                                    if(p < map[x.value][0])\r\n                                        map[x.value][0] = p;\r\n                                    map[x.value][1].push(x);\r\n                                }\r\n                                else\r\n                                    map[x.value] = [p, [x]];\r\n                            });\r\n                        }\r\n                        //the factor\r\n                        var factor = new Symbol(1);\r\n                        for(var x in map) {\r\n                            //if this factor is found in all terms since the length of \r\n                            //matching variable terms matches the number of original terms\r\n                            if(map[x][1].length === symbols.length) {\r\n                                //generate a symbol and multiply into the factor\r\n                                factor = _.multiply(factor, _.pow(new Symbol(x), new Symbol(map[x][0])));\r\n                            }\r\n                        }\r\n                        //get coefficient factor\r\n                        var c = core.Math2.QGCD.apply(null, coeffs);\r\n\r\n                        if(!c.equals(1)) {\r\n                            factors.add(new Symbol(c));\r\n                            for(var i = 0; i < symbols.length; i++) {\r\n                                symbols[i].multiplier = symbols[i].multiplier.divide(c);\r\n                            }\r\n                        }\r\n\r\n                        //if we actuall found any factors\r\n                        if(!factor.equals(1)) {\r\n                            factors.add(factor);\r\n                            symbol = new Symbol(0);\r\n                            for(var i = 0; i < symbols.length; i++) {\r\n                                symbol = _.add(symbol, _.divide(symbols[i], factor.clone()));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                catch(e) {\r\n                    ;\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            zeroes: function (symbol, factors) {\r\n                var exit = function () {\r\n                    throw new core.exceptions.ValueLimitExceededError('Exiting');\r\n                };\r\n                try {\r\n                    var vars, term, sum, p, e;\r\n                    symbol = _.expand(symbol.clone());\r\n                    e = symbol.toString();\r\n                    vars = variables(symbol);\r\n\r\n                    sum = new Symbol(0);\r\n\r\n                    var terms = [];\r\n                    var powers = [];\r\n\r\n                    //start setting each variable to zero\r\n                    for(var i = 0, l = vars.length; i < vars.length; i++) {\r\n                        var subs = {};\r\n                        //we want to create a subs object with all but the current variable set to zero\r\n                        for(var j = 0; j < l; j++)\r\n                            if(i !== j) //make sure we're not looking at the same variable\r\n                                subs[vars[j]] = 0;\r\n                        term = _.parse(e, subs);\r\n                        var tp = term.power;\r\n                        //the temporary power has to be an integer as well\r\n                        if(!isInt(tp))\r\n                            exit();\r\n                        terms.push(term);\r\n                        powers.push(term.power);\r\n                    }\r\n\r\n                    //get the gcd. This will be the p in (a^n+b^m)^p\r\n                    //if the gcd equals 1 meaning n = m then we need a tie breakder\r\n                    if(core.Utils.allSame(powers)) {\r\n                        //get p given x number of terms\r\n                        var n_terms = symbol.length;\r\n                        //the number of zeroes determines\r\n                        var n_zeroes = terms.length;\r\n                        if(n_zeroes === 2) {\r\n                            p = new Frac(powers[0] / (n_terms - 1));\r\n                        }\r\n                        if(n_zeroes === 3) {\r\n                            p = new Frac(powers[0] / Math.round((Math.sqrt(8 * n_terms - 1) - 3) / 2));\r\n                        }\r\n                        /*\r\n                         //get the lowest possible power\r\n                         //e.g. given b^4+2*a^2*b^2+a^4, the power we're looking for would be 2\r\n                         symbol.each(function(x) {\r\n                         if(x.group === CB)\r\n                         x.each(function(y) {\r\n                         if(!p || y.power.lessThan(p))\r\n                         //p = Number(y.power);\r\n                         p = y.power;\r\n                         });\r\n                         else if(!p || x.power.lessThan(p))\r\n                         //p = Number(x.power);\r\n                         p = x.power;\r\n                         });\r\n                         */\r\n                    }\r\n                    else\r\n                        //p is just the gcd of the powers\r\n                        p = core.Math2.QGCD.apply(null, powers);\r\n\r\n                    //if we don't have an integer then exit\r\n                    if(!isInt(p))\r\n                        exit();\r\n\r\n                    //build the factor\r\n                    for(var i = 0; i < terms.length; i++) {\r\n                        var t = terms[i];\r\n                        var n = t.power.clone().divide(p);\r\n                        t.multiplier = new Frac(Math.pow(t.multiplier, 1 / n));\r\n                        t.power = p.clone();\r\n                        sum = _.add(sum, t);\r\n                    }\r\n\r\n                    //by now we have the factor of zeroes. We'll know if we got it right because \r\n                    //we'll get a remainder of zero each time we divide by it\r\n                    if(sum.group !== CP)\r\n                        return symbol; //nothing to do\r\n\r\n                    while(true) {\r\n                        var d = __.div(symbol.clone(), sum.clone());\r\n                        if(d[1].equals(0)) {\r\n                            symbol = d[0];\r\n                            factors.add(sum.clone());\r\n                            if(symbol.equals(1)) //we've reached 1 so done.\r\n                                break;\r\n                        }\r\n                        else\r\n                            break;\r\n                    }\r\n                }\r\n                catch(e) {\r\n                }\r\n                ;\r\n\r\n                return symbol;\r\n            },\r\n            factor: function (symbol, factors) {\r\n                // Don't try to factor constants\r\n                if(symbol.isConstant()) {\r\n                    return core.Math2.factor(symbol);\r\n                }\r\n\r\n                var _symbol = _.parse(symbol);\r\n                var retval = __.Factor._factor(_symbol, factors);\r\n                if(retval.equals(symbol)) {\r\n                    return retval;\r\n                }\r\n\r\n                if(retval.group === CB) {\r\n                    var t = new Symbol(1);\r\n                    var p = _.parse(retval.power);\r\n                    //store the multiplier and strip it\r\n                    var m = _.parse(retval.multiplier);\r\n\r\n                    retval.toUnitMultiplier();\r\n\r\n                    /* \r\n                     * NOTE: for sign issues with factor START DEBUGGING HERE\r\n                     */\r\n                    //move the sign to t\r\n                    if(retval.multiplier.lessThan(0)) {\r\n                        t.negate();\r\n                        retval.negate();\r\n                    }\r\n\r\n                    retval.each(function (x) {\r\n                        // Related to #566. Since the symbol's group may not have been properly\r\n                        // updated, it's easier to just parse the symbol and have the parser \r\n                        // do the update for us.\r\n                        var factored = _.parse(__.Factor._factor(x));\r\n\r\n                        if(factored.group === CB) {\r\n                            // Include the multiplier\r\n                            m = _.multiply(m, Symbol.create(factored.multiplier));\r\n                            factored.each(function (y) {\r\n                                var _factored = _.parse(__.Factor._factor(y));\r\n                                t = _.multiply(t, _factored);\r\n                                if(_factored.group === CB) {\r\n                                    m = _.multiply(m, Symbol.create(_factored.multiplier));\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            t = _.multiply(t, factored);\r\n                        }\r\n                    });\r\n\r\n                    //put back the multiplier and power\r\n                    retval = _.pow(_.multiply(m, t), p);\r\n                }\r\n\r\n                return retval;\r\n            },\r\n            quadFactor: function (symbol, factors) {\r\n                if(symbol.isPoly() && __.degree(symbol.equals(2))) {\r\n                    //We've  already checked that we're dealing with a polynomial\r\n                    var v = core.Utils.variables(symbol)[0]; //get the variable\r\n                    var coeffs = __.coeffs(symbol, v);\r\n                    //factor the lead coefficient\r\n                    var cf = __.Factor._factor(coeffs[2].clone());\r\n                    //check if we have factors\r\n                    if(cf.group === CB) {\r\n                        var symbols = cf.collectSymbols();\r\n                        //if the factors are greater than 2 we're done so exit\r\n                        if(symbols.length > 2)\r\n                            return symbol;\r\n                        //if we have two factors then attempt to factor the polynomial\r\n                        //let the factors be f1 and f1\r\n                        //let the factors be (ax+b)(cx+d)\r\n                        //let the coefficients be c1x^2+c2x+c3\r\n                        //then a(x1)+c(x2)=c2 and x1*x2=c3\r\n                        //we can solve for x1 and x2\r\n                        var c = _.multiply(_.parse(coeffs[0]), _.parse(symbols[0]));\r\n                        var b = _.parse(coeffs[1]).negate();\r\n                        var a = _.parse(symbols[1]);\r\n                        //solve the system\r\n                        var root = __.quad(a, b, c).filter(function (x) {\r\n                            if(core.Utils.isInt(x))\r\n                                return x;\r\n                        });\r\n                        //if we have one root then find the other one by dividing the constant\r\n                        if(root.length === 1) {\r\n                            var root1 = root[0];\r\n                            var root2 = _.divide(coeffs[0], _.parse(root1));\r\n                            if(core.Utils.isInt(root2)) {\r\n                                //we found them both\r\n                                factors.add(_.parse(format('({0})*({1})+({2})', symbols[1], v, root2)));\r\n                                factors.add(_.parse(format('({0})*({1})+({2})', symbols[0], v, root1)));\r\n                                symbol = new Symbol(1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return symbol;\r\n            },\r\n            cubeFactor: function (symbol, factors) {\r\n                if(symbol.isComposite()) {\r\n                    var symbols = symbol.collectSymbols();\r\n                    // The symbol should be in the form of a^3+-b^3. The length\r\n                    // should therefore only be two. If it's any different from this\r\n                    // then we're done\r\n                    if(symbols.length === 2) {\r\n                        // Store the signs and then strip them from the symbols\r\n                        var sign_a = symbols[0].sign();\r\n                        var a = symbols[0].clone().abs();\r\n                        var sign_b = symbols[1].sign();\r\n                        var b = symbols[1].clone().abs();\r\n                        // Check if they're cube\r\n                        if(a.isCube() && b.isCube()) {\r\n                            // Keep the negative sign on the right, meaning b is always negative.\r\n                            if(sign_a < sign_b) {\r\n                                // Swap the signs and then the values\r\n                                [sign_a, sign_b] = [sign_b, sign_a];\r\n                                [a, b] = [b, a];\r\n                            }\r\n\r\n                            // Get teh roots\r\n                            var m_root_a = _.parse(a.getNth(3));\r\n                            var m_root_b = _.parse(b.getNth(3));\r\n\r\n                            // Remove the cube for both\r\n                            var x = _.multiply(_.expand(_.pow(a.clone().toUnitMultiplier(), _.parse('1/3'))), m_root_a);\r\n                            var y = _.multiply(_.expand(_.pow(b.clone().toUnitMultiplier(), _.parse('1/3'))), m_root_b);\r\n\r\n                            if(sign_a === 1 && sign_b === -1) {\r\n                                // Apply difference of cubes rule\r\n                                factors.add(_.parse(format('(({0})-({1}))', x, y)));\r\n                                factors.add(_.parse(format('(({0})^2+({0})*({1})+({1})^2)', x, y)));\r\n                                symbol = Symbol(1);\r\n                            }\r\n                            else if(sign_a === 1 && sign_b === 1) {\r\n                                // Apply sum of cubes rule\r\n                                factors.add(_.parse(format('(({0})+({1}))', x, y)));\r\n                                factors.add(_.parse(format('(({0})^2-({0})*({1})+({1})^2)', x, y)));\r\n                                symbol = Symbol(1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            _factor: function (symbol, factors) {\r\n                var g = symbol.group;\r\n                //some items cannot be factored any further so return those right away\r\n                if(symbol.group === FN) {\r\n                    var arg = symbol.args[0];\r\n                    if(arg.group === S && arg.isSimple()) {\r\n                        return symbol;\r\n                    }\r\n                }\r\n                else if(symbol.group === S && symbol.isSimple()) {\r\n                    return symbol;\r\n                }\r\n\r\n                // Expand the symbol to get it in a predictable form. If this step\r\n                // is skipped some factors are missed.\r\n                //if(symbol.group === CP && !(even(symbol.power) && symbol.multiplier.lessThan(0))) {\r\n                if(symbol.group === CP) {\r\n                    symbol.distributeMultiplier(true);\r\n                    var t = new Symbol(0);\r\n                    symbol.each(function (x) {\r\n                        if((x.group === CP && x.power.greaterThan(1) || x.group === CB))\r\n                            x = _.expand(x);\r\n                        t = _.add(t, x);\r\n                    });\r\n                    t.power = symbol.power;\r\n\r\n                    symbol = t;\r\n                }\r\n\r\n                if(symbol.group === FN && symbol.fname !== 'sqrt') {\r\n                    symbol = core.Utils.evaluate(symbol);\r\n                }\r\n\r\n                //make a copy of the symbol to return if something goes wrong\r\n                var untouched = symbol.clone();\r\n                try {\r\n                    if(symbol.group === CB) {\r\n                        var p = _.parse(symbol.power);\r\n\r\n                        var den_array, num_array, den, num, dfact, nfact;\r\n                        //grab the denominator and strip the multiplier and power. Store them in an array\r\n                        den_array = __.Simplify.strip(symbol.getDenom());\r\n                        num_array = __.Simplify.strip(symbol.getNum());\r\n\r\n                        den = den_array.pop();\r\n                        num = num_array.pop();\r\n\r\n                        //if the numerator equals the symbol then we've hit the simplest form and then we're done\r\n                        if(num.equals(symbol)) {\r\n                            return symbol;\r\n                        }\r\n                        nfact = __.Factor.factor(num);\r\n                        dfact = __.Factor.factor(den);\r\n\r\n                        var n = __.Simplify.unstrip(num_array, nfact);\r\n                        var d = __.Simplify.unstrip(den_array, dfact);\r\n\r\n                        var retval = _.divide(n, d);\r\n\r\n                        return retval;\r\n                    }\r\n                    if(symbol.group === S) {\r\n                        return symbol; //absolutely nothing to do\r\n                    }\r\n\r\n                    if(symbol.isConstant()) {\r\n                        if(symbol.equals(1))\r\n                            return symbol.clone();\r\n                        var ret = core.Math2.factor(symbol);\r\n                        return ret;\r\n                    }\r\n\r\n                    var p = symbol.power.clone();\r\n\r\n                    if(isInt(p) && !(p.lessThan(0) && symbol.group === FN)) {\r\n                        var sign = p.sign();\r\n                        symbol.toLinear();\r\n                        factors = factors || new Factors();\r\n                        var map = {};\r\n                        symbol = _.parse(core.Utils.subFunctions(symbol, map));\r\n                        if(keys(map).length > 0) { //it might have functions\r\n                            factors.preAdd = function (factor) {\r\n                                var ret = _.parse(factor, core.Utils.getFunctionsSubs(map));\r\n                                return ret;\r\n                            };\r\n                        }\r\n\r\n                        //strip the power\r\n                        if(!symbol.isLinear()) {\r\n                            factors.pFactor = symbol.power.toString();\r\n                            symbol.toLinear();\r\n                        }\r\n\r\n                        var vars = variables(symbol);\r\n                        //bypass for imaginary. TODO: find a better solution\r\n                        if(symbol.isImaginary()) {\r\n                            vars.push(core.Settings.IMAGINARY);\r\n                        }\r\n                        var multiVar = vars.length > 1;\r\n\r\n                        //minor optimization. Seems to cut factor time by half in some cases.\r\n                        if(multiVar) {\r\n                            var all_S = true, all_unit = true;\r\n                            symbol.each(function (x) {\r\n                                if(x.group !== S)\r\n                                    all_S = false;\r\n                                if(!x.multiplier.equals(1))\r\n                                    all_unit = false;\r\n                            });\r\n\r\n                            if(all_S && all_unit) {\r\n                                return _.pow(_.parse(symbol, core.Utils.getFunctionsSubs(map)), _.parse(p));\r\n                            }\r\n                        }\r\n\r\n                        //factor the coefficients\r\n                        var coeff_factors = new Factors();\r\n\r\n                        symbol = __.Factor.coeffFactor(symbol, coeff_factors);\r\n\r\n                        coeff_factors.each(function (x) {\r\n                            // If the factor was negative but was within a square then it becomes positive\r\n                            if(even(p) && x.lessThan(0)) {\r\n                                x.negate();\r\n                            }\r\n\r\n                            if(sign < 0)\r\n                                x.invert();\r\n                            factors.add(x);\r\n                        });\r\n\r\n                        //factor the power\r\n                        var power_factors = new Factors();\r\n                        symbol = __.Factor.powerFactor(symbol, power_factors);\r\n                        power_factors.each(function (x) {\r\n                            if(sign < 0)\r\n                                x.invert();\r\n                            factors.add(x);\r\n                        });\r\n\r\n                        if(!multiVar) {\r\n                            //pass in vars[0] for safety\r\n                            var v = vars[0];\r\n\r\n                            symbol = __.Factor.squareFree(symbol, factors, v);\r\n\r\n                            var t_factors = new Factors();\r\n\r\n                            symbol = __.Factor.trialAndError(symbol, t_factors, v);\r\n\r\n                            //generate a symbol based off the last factors\r\n                            var tf_symbol = t_factors.toSymbol();\r\n                            //if nothing was factored then return the factors\r\n                            if(tf_symbol.equals(untouched)) {\r\n                                return tf_symbol;\r\n                            }\r\n\r\n                            for(var x in t_factors.factors) {\r\n                                //store the current factor in t_factor\r\n                                var t_factor = t_factors.factors[x];\r\n                                factors.add(_.pow(t_factor, _.parse(p)));\r\n                            }\r\n                            //if we still don't have a factor and it's quadratic then let's just do a quad factor\r\n                            if(symbol.equals(untouched)) {\r\n                                symbol = __.Factor.quadFactor(symbol, factors);\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            // Try sum and difference of cubes\r\n                            symbol = __.Factor.cubeFactor(symbol, factors);\r\n\r\n                            symbol = __.Factor.mfactor(symbol, factors);\r\n\r\n                            //put back the sign of power\r\n                            factors.each(function (x) {\r\n                                if(sign < 0)\r\n                                    x.power.negate();\r\n                            });\r\n                        }\r\n\r\n                        //last minute clean up\r\n                        symbol = _.parse(symbol, core.Utils.getFunctionsSubs(map));\r\n                        \r\n                        var addPower = factors.length === 1;\r\n                        \r\n                        factors.add(_.pow(symbol, _.parse(p)));\r\n\r\n                        var retval = factors.toSymbol();\r\n                        \r\n                        // We may have only factored out the symbol itself so we end up with a factor of one \r\n                        // where the power needs to be placed back\r\n                        // e.g. factor((2*y+p)^2). Here we end up having a factor of 1 remaining and a p of 2.\r\n                        if(addPower && symbol.equals(1) && retval.isLinear()) {\r\n                            retval = _.pow(retval, _.parse(p));\r\n                        }\r\n                        \r\n                        return retval;\r\n                    }\r\n\r\n                    return symbol;\r\n                }\r\n                catch(e) {\r\n                    //no need to stop the show because something went wrong :). Just return the unfactored.\r\n                    return untouched;\r\n                }\r\n            },\r\n            reduce: function (symbol, factors) {\r\n                if(symbol.group === CP && symbol.length === 2) {\r\n                    var symbols = symbol.collectSymbols().sort(function (a, b) {\r\n                        return b.multiplier - a.multiplier;\r\n                    });\r\n                    if(symbols[0].power.equals(symbols[1].power)) {\r\n                        //x^n-a^n\r\n                        var n = _.parse(symbols[0].power),\r\n                                a = symbols[0].clone().toLinear(),\r\n                                b = symbols[1].clone().toLinear();\r\n\r\n                        //apply rule: (a-b)*sum(a^(n-i)*b^(i-1),1,n)\r\n                        factors.add(_.add(a.clone(), b.clone()));\r\n                        //flip the sign\r\n                        b.negate();\r\n                        //turn n into a number\r\n                        var nn = Number(n);\r\n                        //the remainder\r\n                        var result = new Symbol(0);\r\n                        for(var i = 1; i <= nn; i++) {\r\n                            var aa = _.pow(a.clone(), _.subtract(n.clone(), new Symbol(i))),\r\n                                    bb = _.pow(b.clone(), _.subtract(new Symbol(i), new Symbol(1)));\r\n                            result = _.add(result, _.multiply(aa, bb));\r\n                        }\r\n                        return result;\r\n                    }\r\n                }\r\n                return symbol;\r\n            },\r\n            /**\r\n             * Makes Symbol square free\r\n             * @param {Symbol} symbol\r\n             * @param {Factors} factors\r\n             * @@param {String} variable The variable which is being factored \r\n             * @returns {[Symbol, Factor]}\r\n             */\r\n            squareFree: function (symbol, factors, variable) {\r\n                if(symbol.isConstant() || symbol.group === S)\r\n                    return symbol;\r\n\r\n                var poly = new Polynomial(symbol, variable);\r\n                var sqfr = poly.squareFree();\r\n                var p = sqfr[2];\r\n                //if we found a square then the p entry in the array will be non-unit\r\n                if(p !== 1) {\r\n                    //make sure the remainder doesn't have factors\r\n                    var t = sqfr[1].toSymbol();\r\n                    t.power = t.power.multiply(new Frac(p));\r\n                    //send the factor to be fatored to be sure it's completely factored\r\n                    factors.add(__.Factor.factor(t));\r\n\r\n                    var retval = __.Factor.squareFree(sqfr[0].toSymbol(), factors);\r\n\r\n                    return retval;\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            /**\r\n             * Factors the powers such that the lowest power is a constant\r\n             * @param {Symbol} symbol\r\n             * @param {Factors} factors\r\n             * @returns {[Symbol, Factor]}\r\n             */\r\n            powerFactor: function (symbol, factors) {\r\n                //only PL need apply\r\n                if(symbol.group !== PL || symbol.previousGroup === EX)\r\n                    return symbol;\r\n                var k = keys(symbol.symbols);\r\n                //we expect only numeric powers so return all else\r\n                if(!core.Utils.allNumeric(k))\r\n                    return symbol;\r\n\r\n                var d = core.Utils.arrayMin(k);\r\n                var retval = new Symbol(0);\r\n                var q = _.parse(symbol.value + '^' + d);\r\n                symbol.each(function (x) {\r\n                    x = _.divide(x, q.clone());\r\n                    retval = _.add(retval, x);\r\n                });\r\n\r\n                factors.add(q);\r\n                return retval;\r\n            },\r\n            /**\r\n             * Removes GCD from coefficients\r\n             * @param {Symbol} symbol\r\n             * @param {Factor} factors\r\n             * @returns {Symbol}\r\n             */\r\n            coeffFactor: function (symbol, factors) {\r\n                if(symbol.isComposite()) {\r\n                    var gcd = core.Math2.QGCD.apply(null, symbol.coeffs());\r\n\r\n                    if(!gcd.equals(1)) {\r\n                        symbol.each(function (x) {\r\n                            if(x.isComposite()) {\r\n                                x.each(function (y) {\r\n                                    y.multiplier = y.multiplier.divide(gcd);\r\n                                });\r\n                            }\r\n                            else\r\n                                x.multiplier = x.multiplier.divide(gcd);\r\n                        });\r\n                        symbol.updateHash();\r\n                    }\r\n                    else {\r\n                        // TODO: This should probably go to the prototype\r\n                        var power = function (symbol) {\r\n                            var p;\r\n                            if(symbol.group === CB) {\r\n                                p = 0;\r\n                                symbol.each(function (x) {\r\n                                    p += x.power;\r\n                                });\r\n                            }\r\n                            else {\r\n                                p = Number(symbol.power);\r\n                            }\r\n                            return p;\r\n                        };\r\n                        // Factor out negatives from the lead term\r\n                        var terms = symbol.collectSymbols(null, null, null, true).sort(function (a, b) {\r\n                            // Push constants to the back\r\n                            if(a.isConstant(true))\r\n                                return 1;\r\n                            return b.power - a.power;\r\n                        });\r\n\r\n                        var LT = terms[0];\r\n\r\n                        // Check if the LT is indeed the greatest\r\n                        if(power(LT) > power(terms[1]) || terms[1].isConstant(true)) {\r\n                            if(LT.multiplier.lessThan(0)) {\r\n                                // Although the symbol should always be linear at this point, remove the negative for squares\r\n                                // to be safe.\r\n                                factors.add(new Symbol(-1));\r\n\r\n                                symbol.each(function (x) {\r\n                                    x.negate();\r\n                                }, true);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n                    if(factors) {\r\n                        factors.add(new Symbol(gcd));\r\n                    }\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            /**\r\n             * The name says it all :)\r\n             * @param {Symbol} symbol\r\n             * @param {Factor} factors\r\n             * @@param {String} variable \r\n             * @returns {Symbol}\r\n             */\r\n            trialAndError: function (symbol, factors, variable) {\r\n                var untouched = symbol.clone();\r\n                try {\r\n                    // At temp holder for the factors. If all goes well then\r\n                    // they'll be moved to the actual factors.\r\n                    var factor_array = [];\r\n\r\n                    if(symbol.isConstant() || symbol.group === S)\r\n                        return symbol;\r\n                    var poly = new Polynomial(symbol, variable),\r\n                            cnst = poly.coeffs[0],\r\n                            cfactors = core.Math2.ifactor(cnst),\r\n                            roots = __.proots(symbol);\r\n                    for(var i = 0; i < roots.length; i++) {\r\n                        var r = roots[i],\r\n                                p = 1;\r\n                        if(!isNaN(r)) { //if it's a number\r\n                            for(var x in cfactors) {\r\n                                //check it's raised to a power\r\n                                var n = core.Utils.round(Math.log(x) / Math.log(Math.abs(r)), 8);\r\n                                if(isInt(n)) {\r\n                                    r = x; //x must be the root since n gave us a whole\r\n                                    p = n;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            var root = new Frac(r),\r\n                                    terms = [new Frac(root.num).negate()];\r\n                            terms[p] = new Frac(root.den);\r\n                            //convert to Frac. The den is coeff of LT and the num is coeff of constant\r\n                            var div = Polynomial.fromArray(terms, poly.variable).fill(),\r\n                                    t = poly.divide(div);\r\n                            if(t[1].equalsNumber(0)) { //if it's zero we have a root and divide it out\r\n                                poly = t[0];\r\n                                // factors.add(div.toSymbol());\r\n                                factor_array.push(div.toSymbol());\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if(!poly.equalsNumber(1)) {\r\n                        poly = __.Factor.search(poly, factors);\r\n                    }\r\n\r\n                    // Move the factors over since all went well.\r\n                    factor_array.forEach(function (x) {\r\n                        factors.add(x);\r\n                    });\r\n\r\n                    return poly.toSymbol();\r\n                }\r\n                catch(e) {\r\n                    return untouched;\r\n                }\r\n            },\r\n            search: function (poly, factors, base) {\r\n                base = base || 10; //I like 10 because numbers exhibit similar behaviours at 10\r\n                var v = poly.variable; //the polynmial variable name\r\n                /**\r\n                 * Attempt to remove a root by division given a number by first creating\r\n                 * a polynomial fromt he given information\r\n                 * @param {int} c1 - coeffient for the constant\r\n                 * @param {int} c2 - coefficient for the LT\r\n                 * @param {int} n - the number to be used to construct the polynomial\r\n                 * @param {int} p - the power at which to create the polynomial\r\n                 * @returns {null|Polynomial} - returns polynomial if successful otherwise null\r\n                 */\r\n                var check = function (c1, c2, n, p) {\r\n                    var candidate = Polynomial.fit(c1, c2, n, base, p, v);\r\n                    if(candidate && candidate.coeffs.length > 1) {\r\n                        var t = poly.divide(candidate);\r\n                        if(t[1].equalsNumber(0)) {\r\n                            factors.add(candidate.toSymbol());\r\n                            return [t[0], candidate];\r\n                        }\r\n                    }\r\n                    return null;\r\n                };\r\n                var cnst = poly.coeffs[0];\r\n                var cfactors = core.Math2.ifactor(cnst);\r\n                var lc = poly.lc();\r\n                var ltfactors = core.Math2.ifactor(lc);\r\n                var subbed = poly.sub(base);\r\n                var isubbed = core.Math2.ifactor(subbed);\r\n                var nfactors = __.Factor.mix(isubbed, subbed < 0);\r\n                var cp = Math.ceil(poly.coeffs.length / 2);\r\n                var lc_is_neg = lc.lessThan(0);\r\n                var cnst_is_neg = cnst.lessThan(0);\r\n                ltfactors['1'] = 1;\r\n                cfactors['1'] = 1;\r\n                while(cp--) {\r\n                    for(var x in ltfactors) {\r\n                        for(var y in cfactors) {\r\n                            for(var i = 0; i < nfactors.length; i++) {\r\n                                var factor_found = check(x, y, nfactors[i], cp);\r\n                                if(factor_found) {\r\n                                    poly = factor_found[0];\r\n                                    if(!core.Utils.isPrime(poly.sub(base)))\r\n                                        poly = __.Factor.search(poly, factors);\r\n                                    return poly;\r\n                                }\r\n                                else if(!factor_found) {\r\n                                    if(lc_is_neg && cnst_is_neg)\r\n                                        factor_found = check(-x, -y, nfactors[i], cp);\r\n                                    else if(lc_is_neg)\r\n                                        factor_found = check(-x, y, nfactors[i], cp); //check a negative lc\r\n                                    else if(cnst_is_neg)\r\n                                        factor_found = check(x, -y, nfactors[i], cp); //check a negative constant\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return poly;\r\n            },\r\n            /**\r\n             * Equivalent of square free factor for multivariate polynomials\r\n             * @param {type} symbol\r\n             * @param {type} factors\r\n             * @returns {AlgebraL#18.Factor.mSqfrFactor.symbol|Array|AlgebraL#18.__.Factor.mSqfrFactor.d}\r\n             */\r\n            mSqfrFactor: function (symbol, factors) {\r\n                if(symbol.group !== FN) {\r\n                    var vars = variables(symbol).reverse();\r\n\r\n                    // Loop through all the variable and remove the partial derivatives\r\n                    for(var i = 0; i < vars.length; i++) {\r\n                        do {\r\n                            if(vars[i] === symbol.value) {\r\n                                //the derivative tells us nothing since this symbol is already the factor\r\n                                factors.add(symbol);\r\n                                symbol = new Symbol(1);\r\n                                continue;\r\n                            }\r\n\r\n                            var diff = core.Calculus.diff(symbol, vars[i]);\r\n\r\n                            var d = __.Factor.coeffFactor(diff);\r\n\r\n                            if(d.equals(0))\r\n                                break;\r\n\r\n                            //trial division to see if factors have whole numbers. \r\n                            //This can be optimized by stopping as soon as can_divide is false\r\n                            //this will also need utilize big number at some point\r\n                            var can_divide = true;\r\n                            if(d.isConstant() && symbol.isComposite()) {\r\n                                //check the coefficients\r\n\r\n                                symbol.each(function (x) {\r\n                                    if(x.multiplier % d !== 0)\r\n                                        can_divide = false;\r\n                                }, true);\r\n                            }\r\n\r\n                            //if we can divide then do so\r\n                            if(can_divide) {\r\n\r\n                                var div = __.div(symbol, d.clone()),\r\n                                        is_factor = div[1].equals(0);\r\n                                \r\n                                // Break infinite loop for factoring e^t*x-1\r\n                                if((symbol.equals(div[0]) && div[1].equals(0))) {\r\n                                    break;\r\n                                }\r\n                                \r\n                                if(div[0].isConstant()) {\r\n                                    factors.add(div[0]);\r\n                                    break;\r\n                                }\r\n                                \r\n                            }\r\n                            else\r\n                                is_factor = false;\r\n\r\n                            if(is_factor) {\r\n                                factors.add(div[0]);\r\n                                symbol = d;\r\n                            }\r\n                        }\r\n                        while(is_factor)\r\n                    }\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            //difference of squares factorization\r\n            sqdiff: function (symbol, factors) {\r\n                if(symbol.isConstant('all')) {\r\n                    // Nothing to do\r\n                    return symbol;\r\n                }\r\n\r\n                try {\r\n                    var remove_square = function (x) {\r\n                        return core.Utils.block('POSITIVE_MULTIPLIERS', function () {\r\n                            return Symbol.unwrapPARENS(math.sqrt(math.abs(x)));\r\n                        }, true);\r\n                    };\r\n                    var separated = core.Utils.separate(symbol.clone());\r\n\r\n                    var obj_array = [];\r\n\r\n                    //get the unique variables\r\n                    for(var x in separated) {\r\n                        if(x !== 'constants') {\r\n                            obj_array.push(separated[x]);\r\n                        }\r\n                    }\r\n                    obj_array.sort(function (a, b) {\r\n                        return b.power - a.power;\r\n                    });\r\n\r\n                    //if we have the same number of variables as unique variables then we can apply the difference of squares\r\n                    if(obj_array.length === 2) {\r\n                        var a, b;\r\n                        a = obj_array.pop();\r\n                        b = obj_array.pop();\r\n\r\n                        if(even(a.power) && even(b.power)\r\n                                && a.sign() === b.sign()\r\n                                && a.group === S && b.group === S) {\r\n                            throw new Error('Unable to factor');\r\n                        }\r\n                        ;\r\n\r\n                        if(a.isComposite() && b.power.equals(2)) {\r\n                            //remove the square from b\r\n                            b = remove_square(b);\r\n                            var f = __.Factor.factor(_.add(a, separated.constants));\r\n                            if(f.power.equals(2)) {\r\n                                f.toLinear();\r\n                                factors.add(_.subtract(f.clone(), b.clone()));\r\n                                factors.add(_.add(f, b));\r\n                                symbol = new Symbol(1);\r\n                            }\r\n                        }\r\n                        else {\r\n                            a = a.powSimp();\r\n                            b = b.powSimp();\r\n\r\n                            if((a.group === S || a.fname === '') && a.power.equals(2) && (b.group === S || b.fname === '') && b.power.equals(2) && !separated.constants) {\r\n                                if(a.multiplier.lessThan(0)) {\r\n                                    var t = b;\r\n                                    b = a;\r\n                                    a = t;\r\n                                }\r\n                                if(a.multiplier.greaterThan(0)) {\r\n                                    a = remove_square(a);\r\n                                    b = remove_square(b);\r\n                                }\r\n\r\n                                factors.add(_.subtract(a.clone(), b.clone()));\r\n                                factors.add(_.add(a, b));\r\n                                symbol = new Symbol(1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                catch(e) {\r\n                    ;\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            //factoring for multivariate\r\n            mfactor: function (symbol, factors) {\r\n\r\n                if(symbol.group === FN) {\r\n                    if(symbol.fname === 'sqrt') {\r\n                        var factors2 = new Factors(),\r\n                                arg = __.Factor.common(symbol.args[0].clone(), factors2);\r\n                        arg = __.Factor.coeffFactor(arg, factors2);\r\n                        symbol = _.multiply(_.symfunction('sqrt', [arg]), _.parse(symbol.multiplier));\r\n                        factors2.each(function (x) {\r\n                            symbol = _.multiply(symbol, _.parse(core.Utils.format('sqrt({0})', x)));\r\n                        });\r\n                    }\r\n                    else\r\n                        factors.add(symbol);\r\n                }\r\n                else {\r\n\r\n                    //square free factorization\r\n                    symbol = __.Factor.mSqfrFactor(symbol, factors);\r\n\r\n                    //try factor out common factors\r\n                    //symbol = __.Factor.common(symbol, factors);\r\n\r\n                    var vars = variables(symbol),\r\n                            symbols = symbol.collectSymbols().map(function (x) {\r\n                        return Symbol.unwrapSQRT(x);\r\n                    }),\r\n                            sorted = {},\r\n                            maxes = {},\r\n                            l = vars.length, n = symbols.length;\r\n                    //take all the variables in the symbol and organize by variable name\r\n                    //e.g. a^2+a^2+b*a -> {a: {a^3, a^2, b*a}, b: {b*a}}\r\n\r\n                    for(var i = 0; i < l; i++) {\r\n                        var v = vars[i];\r\n                        sorted[v] = new Symbol(0);\r\n                        for(var j = 0; j < n; j++) {\r\n                            var s = symbols[j];\r\n                            if(s.contains(v)) {\r\n                                var p = s.value === v ? s.power.toDecimal() : s.symbols[v].power.toDecimal();\r\n                                if(!maxes[v] || p < maxes[v])\r\n                                    maxes[v] = p;\r\n                                sorted[v] = _.add(sorted[v], s.clone());\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    for(var x in sorted) {\r\n                        var r = _.parse(x + '^' + maxes[x]);\r\n                        var div = _.divide(sorted[x], r);\r\n                        var new_factor = _.expand(div);\r\n\r\n                        if(new_factor.equals(1))\r\n                            break; //why divide by one. Just move \r\n                        var divided = __.div(symbol.clone(), new_factor);\r\n\r\n                        if(divided[0].equals(0)) {\r\n                            //cant factor anymore\r\n                            break;\r\n                        }\r\n\r\n                        // We potentially ended up with fractional coefficients when the\r\n                        // trial division was performed. We need to remove \r\n                        // This check will more then likely become superfluous with improvements\r\n                        // to polynomial division\r\n                        if(divided[1].equals(0)) {\r\n                            var has_fractions = false;\r\n\r\n                            divided[0].each(function (x) {\r\n                                if(!isInt(x.multiplier)) {\r\n                                    has_fractions = true;\r\n                                }\r\n                            });\r\n\r\n                            // The factor isn't really a factor and needs to be put back\r\n                            if(has_fractions) {\r\n                                divided[1] = _.expand(_.multiply(divided[1], new_factor));\r\n                                // Since the new factor is not just one, we exit.\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        var neg_numeric_factor = isInt(new_factor) && new_factor.lessThan(0);\r\n\r\n                        if(divided[1].equals(0) && !neg_numeric_factor) { //we found at least one factor\r\n\r\n                            //factors.add(new_factor);\r\n                            var d = __.div(symbol.clone(), divided[0].clone());\r\n                            var r = d[0];\r\n\r\n                            // Nothing left to do since we didn't get a reduction\r\n                            if(r.equals(0)) {\r\n                                return symbol;\r\n                            }\r\n\r\n                            symbol = d[1];\r\n                            //we don't want to just flip the sign. If the remainder is -1 then we accomplished nothing\r\n                            //and we just return the symbol;\r\n                            //If r equals zero then there's nothing left to do so we're done\r\n\r\n                            if(r.equals(-1) && !symbol.equals(0))\r\n                                return symbol;\r\n\r\n                            var factor = divided[0];\r\n\r\n                            if(symbol.equals(factor)) {\r\n                                var rem = __.Factor.reduce(factor, factors);\r\n\r\n                                if(!symbol.equals(rem))\r\n                                    return __.Factor.mfactor(rem, factors);\r\n\r\n                                return rem;\r\n                            }\r\n                            else {\r\n                                factors.add(factor);\r\n                                //if the remainder of the symbol is zero then we're done. TODO: Rethink this logic a bit.\r\n                                if(symbol.equals(0))\r\n                                    return r;\r\n                            }\r\n\r\n                            if(r.isConstant('all')) {\r\n                                factors.add(r);\r\n                                return r;\r\n                            }\r\n\r\n                            return __.Factor.mfactor(r, factors);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                //difference of squares factorization\r\n                symbol = __.Factor.sqdiff(symbol, factors);\r\n\r\n                //factors by fishing for zeroes\r\n                symbol = __.Factor.zeroes(symbol, factors);\r\n\r\n                return symbol;\r\n            }\r\n        },\r\n        /**\r\n         * Checks to see if a set of \"equations\" is linear. \r\n         * @param {type} set\r\n         * @returns {Boolean}\r\n         */\r\n        allLinear: function (set) {\r\n            var l = set.length;\r\n            for(var i = 0; i < l; i++) {\r\n                if(!__.isLinear(set[i]))\r\n                    return false;\r\n            }\r\n            return true;\r\n        },\r\n        /*\r\n         * Checks to see if the \"equation\" is linear\r\n         * @param {Symbol} e\r\n         * @returns {boolean}\r\n         */\r\n        isLinear: function (e) {\r\n            var status = false, g = e.group;\r\n            if(g === PL || g === CP) {\r\n                status = true;\r\n                for(var s in e.symbols) {\r\n                    var symbol = e.symbols[s], sg = symbol.group;\r\n                    if(sg === FN || sg === EX) {\r\n                        status = false;\r\n                    }\r\n                    if(sg === CB) {\r\n                        //needs further checking since it might be imaginary\r\n                        status = variables(symbol).length === 1;\r\n                    }\r\n                    else {\r\n                        if(sg === PL || sg === CP)\r\n                            status = __.isLinear(symbol);\r\n                        else {\r\n                            if(symbol.group !== N && symbol.power.toString() !== '1') {\r\n                                status = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if(g === S && e.power === 1)\r\n                status = true;\r\n            return status;\r\n        },\r\n        gcd: function () {\r\n            var args;\r\n            if(arguments.length === 1 && arguments[0] instanceof core.Vector)\r\n                args = arguments[0].elements;\r\n            else\r\n                args = core.Utils.arguments2Array(arguments);\r\n\r\n            //short-circuit early\r\n            if(args.length === 0)\r\n                return new Symbol(1);\r\n            else if(args.length === 1)\r\n                return args[0];\r\n\r\n            var appeared = [], evaluate = false;\r\n            for(var i = 0; i < args.length; i++) {\r\n                if(args[i].group === FN && args[i].fname === 'gcd')\r\n                {\r\n                    //compress gcd(a,gcd(b,c)) into gcd(a,b,c)\r\n                    args = args.concat(arguments[i].args);\r\n                    //do not keep gcd in args\r\n                    args.splice(i, 1);\r\n                }\r\n                else\r\n                {\r\n                    //Look if there are any common variables such that\r\n                    //gcd(a,b) => gcd(a,b); gcd(a,a) => a\r\n                    var vars = variables(args[i]);\r\n                    if(core.Utils.haveIntersection(vars, appeared))\r\n                    {\r\n                        //Ok, there are common variables\r\n                        evaluate = true;\r\n                        break;\r\n                    }\r\n                    else\r\n                        appeared = appeared.concat(vars);\r\n                }\r\n            }\r\n\r\n            //appeared.length is 0 when all arguments are group N\r\n            if(evaluate || appeared.length === 0) {\r\n                //TODO: distribute exponent so that (a^-1*b^-1)^-1 => a*b\r\n                if(args.every(function (symbol) {\r\n                    return symbol.getDenom().equals(1)\r\n                })) {\r\n                    var aggregate = args[0];\r\n\r\n                    for(var i = 1; i < args.length; i++) {\r\n                        aggregate = __.gcd_(args[i], aggregate);\r\n                    }\r\n                    return aggregate;\r\n                }\r\n                else {\r\n                    //gcd_ cannot handle denominators correctly\r\n                    return _.divide(__.gcd.apply(null, args.map(function (symbol) {\r\n                        return symbol.getNum();\r\n                    })),\r\n                            __.lcm.apply(null, args.map(function (symbol) {\r\n                                return symbol.getDenom();\r\n                            })));\r\n                }\r\n            }\r\n            else\r\n                return _.symfunction('gcd', args);\r\n        },\r\n        gcd_: function (a, b) {\r\n            if(a.group === FN || a.group === P)\r\n                a = core.Utils.block('PARSE2NUMBER', function () {\r\n                    return _.parse(a);\r\n                });\r\n\r\n            if(b.group === FN)\r\n                b = core.Utils.block('PARSE2NUMBER', function () {\r\n                    return _.parse(b);\r\n                });\r\n\r\n            if(a.isConstant() && b.isConstant()) {\r\n                // return core.Math2.QGCD(new Frac(+a), new Frac(+b));\r\n                return new Symbol(core.Math2.QGCD(new Frac(+a), new Frac(+b)));\r\n            }\r\n\r\n            var den = _.multiply(a.getDenom() || new Symbol(1), b.getDenom() || new Symbol(1)).invert();\r\n            a = _.multiply(a.clone(), den.clone());\r\n            b = _.multiply(b.clone(), den.clone());\r\n\r\n            //feels counter intuitive but it works. Issue #123 (nerdamer(\"gcd(x+y,(x+y)^2)\"))\r\n            a = _.expand(a);\r\n            b = _.expand(b);\r\n\r\n            if(a.group === CB || b.group === CB) {\r\n                var q = _.divide(a.clone(), b.clone()); //get the quotient\r\n                var t = _.multiply(b.clone(), q.getDenom().invert());//multiply by the denominator\r\n                //if they have a common factor then the result will not equal one \r\n                if(!t.equals(1))\r\n                    return t;\r\n            }\r\n\r\n            //just take the gcd of each component when either of them is in group EX\r\n            if(a.group === EX || b.group === EX)\r\n            {\r\n                var gcd_m = new Symbol(core.Math2.GCD(a.multiplier, b.multiplier));\r\n                var gcd_v = __.gcd_(a.value === CONST_HASH ? new Symbol(1) : _.parse(a.value), b.value === CONST_HASH ? new Symbol(1) : _.parse(b.value));\r\n                var gcd_p = __.gcd_(_.parse(a.power), _.parse(b.power));\r\n                return _.multiply(gcd_m, _.pow(gcd_v, gcd_p));\r\n            }\r\n\r\n            if(a.length < b.length) { //swap'm\r\n                var t = a;\r\n                a = b;\r\n                b = t;\r\n            }\r\n            var vars_a = variables(a), vars_b = variables(b);\r\n            if((vars_a.length === vars_b.length && vars_a.length === 1 && vars_a[0] === vars_b[0])\r\n                    || vars_a.length === 1 && vars_b.length === 0\r\n                    || vars_a.length === 0 && vars_b.length === 1) {\r\n                a = new Polynomial(a);\r\n                b = new Polynomial(b);\r\n                return _.divide(a.gcd(b).toSymbol(), den);\r\n            }\r\n            else {\r\n                //get the gcd of the multipiers\r\n                //get rid of gcd in coeffs\r\n                var multipliers = [];\r\n                a.each(function (x) {\r\n                    multipliers.push(x.multiplier);\r\n                });\r\n                b.each(function (x) {\r\n                    multipliers.push(x.multiplier);\r\n                });\r\n\r\n                var T;\r\n                while(!b.equals(0)) {\r\n                    var t = b.clone();\r\n                    a = a.clone();\r\n                    T = __.div(a, t);\r\n\r\n                    b = T[1];\r\n                    if(T[0].equals(0)) {\r\n                        //return _.multiply(new Symbol(core.Math2.QGCD(a.multiplier, b.multiplier)), b);\r\n                        return _.divide(new Symbol(core.Math2.QGCD(a.multiplier, b.multiplier)), den);\r\n                    }\r\n                    a = t;\r\n                }\r\n\r\n                var gcd = core.Math2.QGCD.apply(undefined, multipliers);\r\n\r\n                if(!gcd.equals(1)) {\r\n                    a.each(function (x) {\r\n                        x.multiplier = x.multiplier.divide(gcd);\r\n                    });\r\n                }\r\n\r\n                //return symbolic function for gcd in indeterminate form\r\n                if(a.equals(1) && !a.isConstant() && !b.isConstant())\r\n                    return _.divide(_.symfunction('gcd', arguments), den);\r\n\r\n                return _.divide(a, den);\r\n            }\r\n        },\r\n        lcm: function () {\r\n            //https://math.stackexchange.com/a/319310\r\n            //generalization of the 2-variable formula of lcm\r\n\r\n            var args;\r\n            if(arguments.length === 1)\r\n                if(arguments[0] instanceof core.Vector)\r\n                    args = arguments[0].elements;\r\n                else\r\n                    _.error('lcm expects either 1 vector or 2 or more arguments');\r\n            else\r\n                args = core.Utils.arguments2Array(arguments);\r\n\r\n            //product of all arguments\r\n            //start with new Symbol(1) so that prev.clone() which makes unnessesary clones can be avoided\r\n            var numer = args.reduce(function (prev, curr) {\r\n                return _.multiply(prev, curr.clone())\r\n            }, new Symbol(1));\r\n\r\n            //gcd of complementary terms\r\n            var denom_args =\r\n                    //https://stackoverflow.com/a/18223072\r\n                //take all complementary terms, e.g.\r\n                //[a,b,c] => [a*b, b*c, a*c]\r\n                //[a,b,c,d] => [a*b*c, a*b*d, a*c*d, b*c*d]\r\n                (function (input, size) {\r\n                        size = Number(size);\r\n                        var results = [], result, mask, i, total = Math.pow(2, input.length);\r\n                        for(mask = size; mask < total; mask++) {\r\n                            result = [];\r\n                            i = input.length - 1;\r\n\r\n                            do {\r\n                                if((mask & (1 << i)) !== 0) {\r\n                                    result.push(input[i]);\r\n                                }\r\n                            }\r\n                            while(i--);\r\n\r\n                            if(result.length === size) {\r\n                                results.push(result);\r\n                            }\r\n                        }\r\n                        return results;\r\n                        //start with new Symbol(1) so that prev.clone() which makes unnessesary clones can be avoided\r\n                    })(arguments, arguments.length - 1).map(function (x) {\r\n                return x.reduce(function (prev, curr) {\r\n                    return _.multiply(prev, curr.clone())\r\n                }, new Symbol(1))\r\n            });\r\n\r\n            var denom;\r\n            //don't eat the gcd term if all arguments are symbols\r\n            if(args.every(function (x) {\r\n                return core.Utils.isVariableSymbol(x)\r\n            }))\r\n                denom = _.symfunction('gcd', core.Utils.arrayUnique(denom_args));\r\n            else\r\n                denom = __.gcd.apply(null, denom_args);\r\n            //divide product of all arguments by gcd of complementary terms\r\n            var div = _.divide(numer, denom);\r\n            return div;\r\n        },\r\n        /**\r\n         * Divides one expression by another\r\n         * @param {Symbol} symbol1\r\n         * @param {Symbol} symbol2\r\n         * @returns {Array}\r\n         */\r\n        divide: function (symbol1, symbol2) {\r\n            var result, remainder, factored, den;\r\n            factored = core.Algebra.Factor.factor(symbol1.clone());\r\n            den = factored.getDenom();\r\n            if(!den.isConstant('all')) {\r\n                symbol1 = _.expand(Symbol.unwrapPARENS(_.multiply(factored, den.clone())));\r\n            }\r\n            else\r\n                //reset the denominator since we're not dividing by it anymore\r\n                den = new Symbol(1);\r\n            result = __.div(symbol1, symbol2);\r\n            remainder = _.divide(result[1], symbol2);\r\n            return _.divide(_.add(result[0], remainder), den);\r\n        },\r\n        div: function (symbol1, symbol2) {\r\n            // If all else fails then assume that division failed with\r\n            // a remainder of zero and the original quotient\r\n            var fail = [new Symbol(0), symbol1.clone()];\r\n\r\n            try {\r\n\r\n                // Division by constants\r\n                if(symbol2.isConstant('all')) {\r\n                    symbol1.each(function (x) {\r\n                        x.multiplier = x.multiplier.divide(symbol2.multiplier);\r\n                    });\r\n                    return [symbol1, new Symbol(0)];\r\n                }\r\n                // So that factorized symbols don't affect the result\r\n                symbol1 = _.expand(symbol1);\r\n                symbol2 = _.expand(symbol2);\r\n                // Special case. May need revisiting\r\n                if(symbol1.group === S && symbol2.group === CP) {\r\n                    var x = symbol1.value;\r\n                    var f = core.Utils.decompose_fn(symbol2.clone(), x, true);\r\n                    if(symbol1.isLinear() && f.x && f.x.isLinear() && symbol2.isLinear()) {\r\n                        var k = Symbol.create(symbol1.multiplier);\r\n                        return [_.divide(k.clone(), f.a.clone()), _.divide(_.multiply(k, f.b), f.a).negate()];\r\n                    }\r\n                }\r\n                if(symbol1.group === S && symbol2.group === S) {\r\n                    var r = _.divide(symbol1.clone(), symbol2.clone());\r\n                    if(r.isConstant()) //we have a whole\r\n                        return [r, new Symbol(0)];\r\n                    return [new Symbol(0), symbol1.clone()];\r\n                }\r\n                var symbol1_has_func = symbol1.hasFunc(),\r\n                        symbol2_has_func = symbol2.hasFunc(),\r\n                        parse_funcs = false;\r\n\r\n                //substitute out functions so we can treat them as regular variables\r\n                if(symbol1_has_func || symbol2_has_func) {\r\n                    parse_funcs = true;\r\n                    var map = {},\r\n                            symbol1 = _.parse(core.Utils.subFunctions(symbol1, map)),\r\n                            symbol2 = _.parse(core.Utils.subFunctions(symbol2, map)),\r\n                            subs = core.Utils.getFunctionsSubs(map);\r\n                }\r\n                //get a list of the variables\r\n                var vars = core.Utils.arrayUnique(variables(symbol1).concat(variables(symbol2))),\r\n                        quot, rem;\r\n\r\n                //treat imaginary numbers as variables\r\n                if(symbol1.isImaginary() || symbol2.isImaginary()) {\r\n                    vars.push(core.Settings.IMAGINARY);\r\n                }\r\n\r\n                if(vars.length === 1) {\r\n                    var q = new Polynomial(symbol1).divide(new Polynomial(symbol2));\r\n                    quot = q[0].toSymbol();\r\n                    rem = q[1].toSymbol();\r\n                }\r\n                else {\r\n                    vars.push(CONST_HASH); //this is for the numbers\r\n                    var reconvert = function (arr) {\r\n                        var symbol = new Symbol(0);\r\n                        for(var i = 0; i < arr.length; i++) {\r\n                            var x = arr[i].toSymbol();\r\n                            symbol = _.add(symbol, x);\r\n                        }\r\n                        return symbol;\r\n                    };\r\n\r\n                    // Silly Martin. This is why you document. I don't remember now\r\n                    var get_unique_max = function (term, any) {\r\n                        var max = Math.max.apply(null, term.terms),\r\n                                count = 0, idx;\r\n\r\n                        if(!any) {\r\n                            for(var i = 0; i < term.terms.length; i++) {\r\n                                if(term.terms[i].equals(max)) {\r\n                                    idx = i;\r\n                                    count++;\r\n                                }\r\n                                if(count > 1)\r\n                                    return;\r\n                            }\r\n                        }\r\n                        if(any) {\r\n                            for(i = 0; i < term.terms.length; i++)\r\n                                if(term.terms[i].equals(max)) {\r\n                                    idx = i;\r\n                                    break;\r\n                                }\r\n                        }\r\n                        return [max, idx, term];\r\n                    };\r\n\r\n                    // Tries to find an LT in the dividend that will satisfy division\r\n                    var get_det = function (s, lookat) {\r\n                        lookat = lookat || 0;\r\n                        var det = s[lookat], l = s.length;\r\n                        if(!det)\r\n                            return;\r\n                        //eliminate the first term if it doesn't apply\r\n                        var umax = get_unique_max(det);\r\n                        for(var i = lookat + 1; i < l; i++) {\r\n                            var term = s[i],\r\n                                    is_equal = det.sum.equals(term.sum);\r\n                            if(!is_equal && umax) {\r\n                                break;\r\n                            }\r\n                            if(is_equal) {\r\n                                // Check the differences of their maxes. The one with the biggest difference governs\r\n                                // e.g. x^2*y^3 vs x^2*y^3 is unclear but this isn't the case in x*y and x^2\r\n                                var max1, max2, idx1, idx2, l2 = det.terms.length;\r\n                                for(var j = 0; j < l2; j++) {\r\n                                    var item1 = det.terms[j], item2 = term.terms[j];\r\n                                    if(typeof max1 === 'undefined' || item1.greaterThan(max1)) {\r\n                                        max1 = item1;\r\n                                        idx1 = j;\r\n                                    }\r\n                                    if(typeof max2 === 'undefined' || item2.greaterThan(max2)) {\r\n                                        max2 = item2;\r\n                                        idx2 = j;\r\n                                    }\r\n                                }\r\n                                //check their differences\r\n                                var d1 = max1.subtract(term.terms[idx1]),\r\n                                        d2 = max2.subtract(det.terms[idx2]);\r\n                                if(d2 > d1) {\r\n                                    umax = [max2, idx2, term];\r\n                                    break;\r\n                                }\r\n                                if(d1 > d2) {\r\n                                    umax = [max1, idx1, det];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            else {\r\n                                //check if it's a suitable pick to determine the order\r\n                                umax = get_unique_max(term);\r\n                                //if(umax) return umax;\r\n                                if(umax)\r\n                                    break;\r\n                            }\r\n                            umax = get_unique_max(term); //calculate a new unique max\r\n                        }\r\n\r\n                        //if still no umax then any will do since we have a tie\r\n                        if(!umax)\r\n                            return get_unique_max(s[0], true);\r\n                        var e, idx;\r\n                        for(var i = 0; i < s2.length; i++) {\r\n                            var cterm = s2[i].terms;\r\n                            //confirm that this is a good match for the denominator\r\n                            idx = umax[1];\r\n                            if(idx === cterm.length - 1)\r\n                                return;\r\n                            e = cterm[idx];\r\n                            if(!e.equals(0))\r\n                                break;\r\n                        }\r\n                        if(e.equals(0))\r\n                            return get_det(s, ++lookat); //look at the next term\r\n\r\n                        return umax;\r\n                    };\r\n\r\n                    var t_map = core.Utils.toMapObj(vars);\r\n                    var init_sort = function (a, b) {\r\n                        return b.sum.subtract(a.sum);\r\n                    };\r\n                    var is_larger = function (a, b) {\r\n                        if(!a || !b)\r\n                            return false; //it's empty so...\r\n                        for(var i = 0; i < a.terms.length; i++) {\r\n                            if(a.terms[i].lessThan(b.terms[i]))\r\n                                return false;\r\n                        }\r\n                        return true;\r\n                    };\r\n\r\n                    var s1 = symbol1.tBase(t_map).sort(init_sort),\r\n                            s2 = symbol2.tBase(t_map).sort(init_sort);\r\n                    var target = is_larger(s1[0], s2[0]) && s1[0].count > s2[0].count ? s2 : s1; //since the num is already larger than we can get the det from denom\r\n                    var det = get_det(target);//we'll begin by assuming that this will let us know which term \r\n                    var quotient = [];\r\n                    if(det) {\r\n                        var lead_var = det[1];\r\n                        var can_divide = function (a, b) {\r\n                            if(a[0].sum.equals(b[0].sum))\r\n                                return a.length >= b.length;\r\n                            return true;\r\n                        };\r\n\r\n                        var try_better_lead_var = function (s1, s2, lead_var) {\r\n                            var checked = [];\r\n                            for(var i = 0; i < s1.length; i++) {\r\n                                var t = s1[i];\r\n                                for(var j = 0; j < t.terms.length; j++) {\r\n                                    var cf = checked[j], tt = t.terms[j];\r\n                                    if(i === 0)\r\n                                        checked[j] = tt; //add the terms for the first one\r\n                                    else if(cf && !cf.equals(tt))\r\n                                        checked[j] = undefined;\r\n                                }\r\n                            }\r\n                            for(var i = 0; i < checked.length; i++) {\r\n                                var t = checked[i];\r\n                                if(t && !t.equals(0))\r\n                                    return i;\r\n                            }\r\n                            return lead_var;\r\n                        };\r\n                        var sf = function (a, b) {\r\n                            var l1 = a.len(), l2 = b.len();\r\n                            var blv = b.terms[lead_var], alv = a.terms[lead_var];\r\n                            if(l2 > l1 && blv.greaterThan(alv))\r\n                                return l2 - l1;\r\n                            return blv.subtract(alv);\r\n                        };\r\n\r\n                        //check to see if there's a better lead_var\r\n                        lead_var = try_better_lead_var(s1, s2, lead_var);\r\n                        //reorder both according to the max power\r\n                        s1.sort(sf); //sort them both according to the leading variable power\r\n                        s2.sort(sf);\r\n\r\n                        //try to adjust if den is larger\r\n                        var fdt = s2[0], fnt = s1[0];\r\n\r\n                        var den = new MVTerm(new Frac(1), [], fnt.map);\r\n                        if(fdt.sum.greaterThan(fnt.sum) && fnt.len() > 1) {\r\n                            for(var i = 0; i < fnt.terms.length; i++) {\r\n                                var d = fdt.terms[i].subtract(fnt.terms[i]);\r\n                                if(!d.equals(0)) {\r\n                                    var nd = d.add(new Frac(1));\r\n                                    den.terms[i] = d;\r\n                                    for(var j = 0; j < s1.length; j++) {\r\n                                        s1[j].terms[i] = s1[j].terms[i].add(nd);\r\n                                    }\r\n                                }\r\n                                else\r\n                                    den.terms[i] = new Frac(0);\r\n                            }\r\n                        }\r\n\r\n                        var dividend_larger = is_larger(s1[0], s2[0]);\r\n\r\n                        var safety = 0;\r\n                        var max = 200;\r\n\r\n                        while(dividend_larger && can_divide(s1, s2)) {\r\n                            if(safety++ > max) {\r\n                                throw new core.exceptions.InfiniteLoopError('Unable to compute!');\r\n                            }\r\n\r\n                            var q = s1[0].divide(s2[0]);\r\n\r\n                            quotient.push(q); //add what's divided to the quotient\r\n                            s1.shift();//the first one is guaranteed to be gone so remove from dividend\r\n                            for(var i = 1; i < s2.length; i++) { //loop through the denominator\r\n                                var t = s2[i].multiply(q).generateImage(),\r\n                                        l2 = s1.length;\r\n                                //if we're subtracting from 0\r\n                                if(l2 === 0) {\r\n                                    t.coeff = t.coeff.neg();\r\n                                    s1.push(t);\r\n                                    s1.sort(sf);\r\n                                }\r\n\r\n                                for(var j = 0; j < l2; j++) {\r\n                                    var cur = s1[j];\r\n                                    if(cur.getImg() === t.getImg()) {\r\n                                        cur.coeff = cur.coeff.subtract(t.coeff);\r\n                                        if(cur.coeff.equals(0)) {\r\n                                            core.Utils.remove(s1, j);\r\n                                            j--; //adjust the iterator\r\n                                        }\r\n                                        break;\r\n                                    }\r\n                                    if(j === l2 - 1) {\r\n                                        t.coeff = t.coeff.neg();\r\n                                        s1.push(t);\r\n                                        s1.sort(sf);\r\n                                    }\r\n                                }\r\n                            }\r\n                            dividend_larger = is_larger(s1[0], s2[0]);\r\n\r\n                            if(!dividend_larger && s1.length >= s2.length) {\r\n                                //One more try since there might be a terms that is larger than the LT of the divisor\r\n                                for(var i = 1; i < s1.length; i++) {\r\n                                    dividend_larger = is_larger(s1[i], s2[0]);\r\n                                    if(dividend_larger) {\r\n                                        //take it from its current position and move it to the front\r\n                                        s1.unshift(core.Utils.remove(s1, i));\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    quot = reconvert(quotient);\r\n                    rem = reconvert(s1);\r\n\r\n                    if(typeof den !== 'undefined') {\r\n                        den = den.toSymbol();\r\n                        quot = _.divide(quot, den.clone());\r\n                        rem = _.divide(rem, den);\r\n                    }\r\n                }\r\n\r\n                //put back the functions\r\n                if(parse_funcs) {\r\n                    quot = _.parse(quot.text(), subs);\r\n                    rem = _.parse(rem.text(), subs);\r\n                }\r\n\r\n                return [quot, rem];\r\n            }\r\n            catch(e) {\r\n                return fail;\r\n            }\r\n\r\n        },\r\n        line: function (v1, v2, x) {\r\n            if(core.Utils.isArray(v1))\r\n                v1 = core.Utils.convertToVector(v1);\r\n            if(core.Utils.isArray(v2))\r\n                v2 = core.Utils.convertToVector(v2);\r\n            x = _.parse(x || 'x');\r\n            if(!core.Utils.isVector(v1) || !core.Utils.isVector(v2))\r\n                _.error('Line expects a vector! Received \"' + v1 + '\" & \"' + v2 + '\"');\r\n            var dx = _.subtract(v2.e(1).clone(), v1.e(1).clone()),\r\n                    dy = _.subtract(v2.e(2).clone(), v1.e(2).clone()),\r\n                    m = _.divide(dy, dx),\r\n                    a = _.multiply(x, m.clone()),\r\n                    b = _.multiply(v1.e(1).clone(), m);\r\n            return _.add(_.subtract(a, b), v1.e(2).clone());\r\n        },\r\n        PartFrac: {\r\n            createTemplate: function (den, denom_factors, f_array, v) {\r\n                //clean up the denominator function by factors so it reduces nicely\r\n                den = __.Factor.factor(den);\r\n\r\n                //clean up factors. This is so inefficient but factors are wrapped in parens for safety\r\n                den.each(function (x, key) {\r\n                    if(x.group === FN && x.fname === '' && x.args[0].group === S) {\r\n                        var y = x.args[0];\r\n                        if(this.symbols) {\r\n                            delete this.symbols[key];\r\n                            this.symbols[y.value] = y;\r\n                        }\r\n                        else {\r\n                            den = x.args[0];\r\n                        }\r\n                    }\r\n                });\r\n\r\n                var factors, factors_vec, f, p, deg, degrees, m;\r\n                factors = denom_factors.collectFactors();\r\n                factors_vec = []; //a vector for the template\r\n                degrees = [];\r\n                m = new Symbol(1);\r\n\r\n                for(var i = 0; i < factors.length; i++) { //loop through the factors\r\n                    var factor = Symbol.unwrapPARENS(factors[i]);\r\n                    //if in he for P^n where P is polynomial and n = integer\r\n                    if(factor.power.greaterThan(1)) {\r\n                        p = Number(factor.power);\r\n                        f = factor.clone().toLinear(); //remove the power so we have only the function\r\n                        deg = Number(__.degree(f, v)); //get the degree of f\r\n                        //expand the factor\r\n                        for(var j = 0; j < p; j++) {\r\n                            var efactor = _.pow(f.clone(), new Symbol(j + 1));\r\n                            f_array.push(efactor.clone());\r\n                            var d = _.divide(den.clone(), efactor.clone());\r\n                            degrees.push(deg);\r\n                            factors_vec.push(d);\r\n                        }\r\n                    }\r\n                    /*\r\n                     Possible bug.\r\n                     Removed: causes 1/(20+24*x+4*x^2) to result in (-1/64)*(5+x)^(-1)+(1/64)*(1+x)^(-1)\r\n                     else if(factor.isConstant('all')) {\r\n                     m = _.multiply(m, factor);\r\n                     }\r\n                     */\r\n                    else {\r\n                        //get the degree of the factor so we tack it on tot he factor. This should probably be an array\r\n                        //but for now we note it on the symbol\r\n                        deg = Number(__.degree(factor, v));\r\n                        f_array.push(factor);\r\n                        var d = _.divide(den.clone(), factor.clone());\r\n                        d = _.expand(Symbol.unwrapPARENS(d));\r\n                        degrees.push(deg);\r\n                        factors_vec.push(d);\r\n                    }\r\n                }\r\n                //put back the constant\r\n                f_array = f_array.map(function (x) {\r\n                    return _.multiply(x, m.clone());\r\n                });\r\n                return [f_array, factors_vec, degrees];\r\n            },\r\n            partfrac: function (symbol, v, as_array) {\r\n\r\n                var vars = variables(symbol);\r\n\r\n                v = v || _.parse(vars[0]); //make wrt optional and assume first variable\r\n                try {\r\n                    var num, den, factors, tfactors, ofactors, nterms, degrees,\r\n                            dterms, max, M, c, powers, div, r, factors_vec, ks,\r\n                            template, tfactors;\r\n                    num = _.expand(symbol.getNum());\r\n                    den = _.expand(symbol.getDenom().toUnitMultiplier());\r\n                    //move the entire multipier to the numerator\r\n                    num.multiplier = symbol.multiplier;\r\n                    //we only have a meaningful change if n factors > 1. This means that\r\n                    //the returned group will be a CB\r\n                    //collect the terms wrt the x\r\n                    nterms = num.groupTerms(v);\r\n                    //divide out wholes if top is larger\r\n                    if(Number(__.degree(num, v)) >= Number(__.degree(den, v))) {\r\n                        div = __.div(num.clone(), _.expand(den.clone()));\r\n                        r = div[0]; //remove the wholes\r\n                        num = div[1]; //work with the remainder\r\n                        nterms = num.groupTerms(v); //recalculate the nterms\r\n                    }\r\n                    else\r\n                        r = new Symbol(0);\r\n\r\n                    if(Number(__.degree(den, v)) === 1) {\r\n                        var q = _.divide(num, den);\r\n                        if(as_array)\r\n                            return [r, q];\r\n                        return _.add(r, q);\r\n                    }\r\n                    //first factor the denominator. This means that the strength of this\r\n                    //algorithm depends on how well we can factor the denominator. \r\n                    ofactors = __.Factor.factor(den);\r\n                    //create the template. This method will create the template for solving \r\n                    //the partial fractions. So given x/(x-1)^2 the template creates A/(x-1)+B/(x-1)^2\r\n                    template = __.PartFrac.createTemplate(den.clone(), ofactors, [], v);\r\n                    tfactors = template[0]; //grab the factors\r\n                    factors_vec = template[1]; //grab the factor vectors\r\n                    degrees = template[2]; //grab the degrees\r\n                    //make note of the powers of each term\r\n                    powers = [nterms.length];\r\n                    //create the dterms vector\r\n                    dterms = [];\r\n                    factors = [];\r\n                    ks = [];\r\n                    var factor, deg;\r\n                    factors_vec.map(function (x, idx) {\r\n                        factor = tfactors[idx];\r\n                        deg = degrees[idx];\r\n                        for(var i = 0; i < deg; i++) {\r\n                            factors.push(factor.clone());\r\n                            var k = Symbol.create(v, i);\r\n                            var t = _.expand(_.multiply(x, k.clone())).groupTerms(v);\r\n                            //make a note of the power which corresponds to the length of the array\r\n                            var p = t.length;\r\n                            powers.push(p);\r\n                            dterms.push(t);\r\n                            ks.push(k.clone());\r\n                        }\r\n                    });\r\n                    //get the max power\r\n                    max = core.Utils.arrayMax(powers);\r\n\r\n                    //fill the holes and create a matrix\r\n                    c = new core.Matrix(core.Utils.fillHoles(nterms, max)).transpose();\r\n                    //for each of the factors we do the same\r\n                    M = new core.Matrix();\r\n                    for(var i = 0; i < dterms.length; i++) {\r\n                        M.elements.push(core.Utils.fillHoles(dterms[i], max));\r\n                    }\r\n\r\n                    //solve the system of equations\r\n                    var partials = _.multiply(M.transpose().invert(), c);\r\n                    //the results are backwards to reverse it\r\n                    //partials.elements.reverse();\r\n                    //convert it all back\r\n                    var retval = as_array ? [r] : r;\r\n                    partials.each(function (e, i) {\r\n                        var term = _.multiply(ks[i], _.divide(e, factors[i]));\r\n                        if(as_array)\r\n                            retval.push(term);\r\n                        else\r\n                            retval = _.add(retval, term);\r\n                    });\r\n\r\n                    //done\r\n                    return retval;\r\n                }\r\n                catch(e) {\r\n                    //try to group symbols\r\n                    try {\r\n                        if(symbol.isComposite()) {\r\n                            //group denominators\r\n                            var denominators = {};\r\n\r\n                            symbol.each(function (x) {\r\n                                var d = x.getDenom();\r\n                                var n = x.getNum();\r\n                                var e = denominators[d];\r\n                                denominators[d] = e ? _.add(e, n) : n;\r\n                            });\r\n\r\n                            var t = new Symbol(0);\r\n\r\n                            for(var x in denominators) {\r\n                                t = _.add(t, _.divide(denominators[x], _.parse(x)));\r\n                            }\r\n\r\n                            symbol = t;\r\n                        }\r\n                    }\r\n                    catch(e2) {\r\n                    }\r\n                    ;\r\n                }\r\n                ;\r\n\r\n                return symbol;\r\n            }\r\n        },\r\n        degree: function (symbol, v, o) {\r\n            o = o || {\r\n                nd: [], //numeric\r\n                sd: [], //symbolic\r\n                depth: 0 //call depth\r\n            };\r\n\r\n            if(!v) {\r\n                var vars = variables(symbol);\r\n                //The user must specify the variable for multivariate\r\n                if(vars.length > 1)\r\n                    throw new Error('You must specify the variable for multivariate polynomials!');\r\n                //if it's empty then we're dealing with a constant\r\n                if(vars.length === 0)\r\n                    return new Symbol(0);\r\n                //assume the variable for univariate\r\n                v = _.parse(vars[0]);\r\n            }\r\n\r\n            //store the group\r\n            var g = symbol.group;\r\n            //we're going to trust the user and assume no EX. Calling isPoly \r\n            //would eliminate this but no sense in checking twice. \r\n            if(symbol.isComposite()) {\r\n                symbol = symbol.clone();\r\n                symbol.distributeExponent();\r\n                symbol.each(function (x) {\r\n                    o.depth++; //mark a depth increase\r\n                    __.degree(x, v, o);\r\n                    o.depth--; //we're back\r\n                });\r\n            }\r\n            else if(symbol.group === CB) {\r\n                symbol.each(function (x) {\r\n                    o.depth++;\r\n                    __.degree(x, v, o);\r\n                    o.depth++;\r\n                });\r\n            }\r\n            else if(g === EX && symbol.value === v.value) {\r\n                o.sd.push(symbol.power.clone());\r\n            }\r\n            else if(g === S && symbol.value === v.value) {\r\n                o.nd.push(_.parse(symbol.power));\r\n            }\r\n            else\r\n                o.nd.push(new Symbol(0));\r\n\r\n            //get the max out of the array\r\n            var deg = o.nd.length > 0 ? core.Utils.arrayMax(o.nd) : undefined;\r\n\r\n            if(o.depth === 0 && o.sd.length > 0) {\r\n                if(deg !== undefined)\r\n                    o.sd.unshift(deg);\r\n                return _.symfunction('max', o.sd);\r\n            }\r\n            if(!core.Utils.isSymbol(deg))\r\n                deg = _.parse(deg);\r\n            //return the degree\r\n            return deg;\r\n        },\r\n        /**\r\n         * Attempts to complete the square of a polynomial\r\n         * @param {type} symbol\r\n         * @param {type} v\r\n         * @param {type} raw\r\n         * @throws {Error} \r\n         * @returns {Object|Symbol[]}\r\n         */\r\n        sqComplete: function (symbol, v, raw) {\r\n            if(!core.Utils.isSymbol(v))\r\n                v = _.parse(v);\r\n            var stop = function (msg) {\r\n                msg = msg || 'Stopping';\r\n                throw new core.exceptions.ValueLimitExceededError(msg);\r\n            };\r\n            //if not CP then nothing to do\r\n            if(!symbol.isPoly(true))\r\n                stop('Must be a polynomial!');\r\n\r\n            //declare vars\r\n            var deg, a, b, c, d, e, coeffs, sign, br, sym, sqrt_a;\r\n\r\n            br = core.Utils.inBrackets;\r\n            //make a copy\r\n            symbol = symbol.clone();\r\n            deg = core.Algebra.degree(symbol, v); //get the degree of polynomial\r\n            //must be in form ax^2 +/- bx +/- c\r\n            if(!deg.equals(2))\r\n                stop('Cannot complete square for degree ' + deg);\r\n            //get the coeffs\r\n            coeffs = core.Algebra.coeffs(symbol, v);\r\n            a = coeffs[2];\r\n            //store the sign\r\n            sign = coeffs[1].sign();\r\n            //divide the linear term by two and square it\r\n            b = _.divide(coeffs[1], new Symbol(2));\r\n            //add the difference to the constant\r\n            c = _.pow(b.clone(), new Symbol(2));\r\n            if(raw)\r\n                return [a, b, d];\r\n            sqrt_a = math.sqrt(a);\r\n            e = _.divide(math.sqrt(c), sqrt_a.clone());\r\n            //calculate d which is the constant\r\n            d = _.subtract(coeffs[0], _.pow(e.clone(), new Symbol(2)));\r\n            //compute the square part\r\n            sym = _.parse(br(sqrt_a.clone() + '*' + v + (sign < 0 ? '-' : '+') + e));\r\n            return {\r\n                a: sym,\r\n                c: d,\r\n                f: _.add(_.pow(sym.clone(), new Symbol(2)), d.clone())\r\n            };\r\n        },\r\n        Simplify: {\r\n            strip: function (symbol) {\r\n                var c = _.parse(symbol.multiplier);\r\n                symbol.toUnitMultiplier();\r\n                var p = _.parse(symbol.power);\r\n                symbol.toLinear();\r\n                return [c, p, symbol];\r\n            },\r\n            unstrip: function (cp, symbol) {\r\n                var c = cp[0];\r\n                var p = cp[1];\r\n                return _.multiply(c, _.pow(symbol, p));\r\n            },\r\n            complexSimp: function (num, den) {\r\n                var ac, bd, bc, ad, cd, r1, r2, i1, i2;\r\n                r1 = num.realpart();\r\n                i1 = num.imagpart();\r\n                r2 = den.realpart();\r\n                i2 = den.imagpart();\r\n                //apply complex arithmatic rule\r\n                ac = _.multiply(r1.clone(), r2.clone());\r\n                bd = _.multiply(i1.clone(), i2.clone());\r\n                bc = _.multiply(r2.clone(), i1);\r\n                ad = _.multiply(r1, i2.clone());\r\n                cd = _.add(_.pow(r2, new Symbol(2)), _.pow(i2, new Symbol(2)));\r\n\r\n                return _.divide(_.add(_.add(ac, bd), _.multiply(_.subtract(bc, ad), Symbol.imaginary())), cd);\r\n            },\r\n            trigSimp: function (symbol) {\r\n                if(symbol.containsFunction(['cos', 'sin', 'tan'])) {\r\n                    symbol = symbol.clone();\r\n                    //remove power and multiplier\r\n                    var sym_array = __.Simplify.strip(symbol);\r\n                    symbol = sym_array.pop();\r\n                    //the default return value is the symbol\r\n                    var retval = symbol.clone();\r\n\r\n                    //rewrite the symbol\r\n                    if(symbol.group === CP) {\r\n                        var sym = new Symbol(0);\r\n                        symbol.each(function (x) {\r\n                            //rewrite the function\r\n                            var tr = __.Simplify.trigSimp(x.fnTransform());\r\n                            sym = _.add(sym, tr);\r\n                        }, true);\r\n\r\n                        //put back the power and multiplier and return\r\n                        retval = _.pow(_.multiply(new Symbol(symbol.multiplier), sym), new Symbol(symbol.power));\r\n                    }\r\n                    else if(symbol.group === CB) {\r\n\r\n                        var n = symbol.getNum();\r\n                        var d = symbol.getDenom();\r\n\r\n                        //try for tangent\r\n                        if(n.fname === 'sin' && d.fname === 'cos' && n.args[0].equals(d.args[0]) && n.power.equals(d.power)) {\r\n                            retval = _.parse(core.Utils.format('({0})*({1})*tan({2})^({3})', d.multiplier, n.multiplier, n.args[0], n.power));\r\n                        }\r\n                        if(retval.group === CB) {\r\n                            var t = new Symbol(1);\r\n                            retval.each(function (x) {\r\n                                if(x.fname === 'tan') {\r\n                                    x = _.parse(core.Utils.format('({0})*sin({1})^({2})/cos({1})^({2})', x.multiplier, __.Simplify.simplify(x.args[0]), x.power));\r\n                                }\r\n                                t = _.multiply(t, x);\r\n                            });\r\n                            retval = t;\r\n                        }\r\n                    }\r\n\r\n\r\n                    retval = __.Simplify.unstrip(sym_array, retval).distributeMultiplier();\r\n\r\n                    symbol = retval;\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            fracSimp: function (symbol) {\r\n                //try a quick simplify of imaginary numbers\r\n                var den = symbol.getDenom();\r\n                var num = symbol.getNum();\r\n\r\n                if(num.isImaginary() && den.isImaginary())\r\n                    symbol = __.Simplify.complexSimp(num, den);\r\n\r\n                if(symbol.isComposite()) {\r\n                    if(symbol.power > 1) {\r\n                        symbol = _.expand(symbol);\r\n                    }\r\n\r\n                    var symbols = symbol.collectSymbols();\r\n                    //assumption 1.\r\n                    //since it's a composite, it has a length of at least 1\r\n                    var retval, a, b, d1, d2, n1, n2, s, x, y, c, den, num;\r\n                    a = symbols.pop(); //grab the first symbol\r\n                    //loop through each term and make denominator common\r\n                    while(symbols.length) {\r\n                        b = symbols.pop(); //grab the second symbol\r\n                        d1 = _.parse(a.getDenom());\r\n                        d2 = _.parse(b.getDenom());\r\n                        n1 = a.getNum();\r\n                        n2 = b.getNum();\r\n                        c = _.multiply(d1.clone(), d2.clone());\r\n                        x = _.multiply(n1, d2);\r\n                        y = _.multiply(n2, d1);\r\n                        s = _.add(x, y);\r\n                        a = _.divide(s, c);\r\n                    }\r\n                    den = _.expand(a.getDenom());\r\n                    num = _.expand(a.getNum());\r\n                    //simplify imaginary\r\n                    if(num.isImaginary() && den.isImaginary()) {\r\n                        retval = __.Simplify.complexSimp(num, den);\r\n                    }\r\n                    else {\r\n                        retval = _.divide(num, den);\r\n                    }\r\n\r\n                    //we've already hit the simplest form so return that\r\n                    if(retval.equals(symbol)) {\r\n                        return symbol;\r\n                    }\r\n\r\n                    //otherwise simplify it some more\r\n                    return __.Simplify.simplify(retval);\r\n                }\r\n                return symbol;\r\n            },\r\n            ratSimp: function (symbol) {\r\n                if(symbol.group === CB) {\r\n                    var den = symbol.getDenom();\r\n                    var num = symbol.getNum().distributeMultiplier();\r\n                    var d = __.Simplify.fracSimp(den);\r\n                    var n = __.Simplify.fracSimp(num);\r\n                    symbol = _.divide(n, d);\r\n                }\r\n                return symbol;\r\n            },\r\n            sqrtSimp: function (symbol, sym_array) {\r\n                var retval;\r\n                if(symbol.isSQRT()) {\r\n                    var factored = __.Factor.factor(symbol.args[0].clone());\r\n                    var m = _.parse(factored.multiplier);\r\n                    var sign = m.sign();\r\n\r\n                    var retval = _.sqrt(m.abs());\r\n                    var arg;\r\n\r\n                    if(isInt(retval)) {\r\n\r\n                        if(factored.group === CB) {\r\n                            var rem = new Symbol(1);\r\n\r\n                            factored.each(function (x) {\r\n                                if(x.group === N) {\r\n                                    var trial = _.sqrt(x.clone());\r\n\r\n                                    // Multiply back sqrt if it's an integer otherwise just put back the number\r\n                                    if(isInt(trial)) {\r\n                                        retval = _.multiply(retval, trial);\r\n                                    }\r\n                                    else {\r\n                                        rem = _.multiply(rem, x);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    rem = _.multiply(rem, x);\r\n                                }\r\n\r\n                            });\r\n                            var t = _.multiply(rem, _.parse(sign));\r\n                            arg = _.sqrt(t.clone());\r\n\r\n                            // Expand if it's imaginary\r\n                            if(arg.isImaginary) {\r\n                                arg = _.sqrt(_.expand(t.clone()));\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Strip the multiplier\r\n                            arg = _.sqrt(factored.clone().toUnitMultiplier());\r\n                        }\r\n                        return _.multiply(retval, arg);\r\n\r\n                    }\r\n\r\n                }\r\n                else if(symbol.isComposite() && symbol.isLinear()) {\r\n                    retval = new Symbol(0);\r\n                    symbol.each(function (x) {\r\n                        retval = _.add(retval, __.Simplify.sqrtSimp(x));\r\n                    }, true);\r\n                    // Put back the multiplier\r\n                    retval = _.multiply(retval, _.parse(symbol.multiplier));\r\n                }\r\n                else if(symbol.group === CB) {\r\n                    retval = _.parse(symbol.multiplier);\r\n                    symbol.each(function (x) {\r\n                        var simp = __.Simplify.sqrtSimp(x);\r\n                        retval = _.multiply(retval, simp);\r\n\r\n                    }, true);\r\n                    // Put back the power\r\n                    retval = _.pow(retval, _.parse(symbol.power));\r\n                }\r\n\r\n                return retval ? retval : _.parse(symbol);\r\n            },\r\n            /**\r\n             * Unused. The goal is to substitute out patterns but it currently doesn't work.\r\n             * @param {Symbol} symbol\r\n             * @return {Array} The symbol and the matched patterns\r\n             */\r\n            patternSub: function (symbol) {\r\n                var patterns = {};\r\n\r\n                var has_CP = function (symbol) {\r\n                    var found = false;\r\n                    symbol.each(function (x) {\r\n                        if(x.group === CP) {\r\n                            found = true;\r\n                        }\r\n                        else if(x.symbols) {\r\n                            found = has_CP(x);\r\n                        }\r\n                    });\r\n\r\n                    return found;\r\n                };\r\n\r\n                var collect = function (sym) {\r\n                    // We loop through each symbol looking for anything in the simplest\r\n                    // form of ax+byz+...\r\n                    sym.each(function (x) {\r\n                        // Items of group N,P,S, need to apply\r\n                        if(!x.symbols && x.group !== FN) {\r\n                            return;\r\n                        }\r\n\r\n                        // Check to see if it has any symbols of group CP\r\n                        // Get the patterns in that symbol instead if it has anything of group CP\r\n                        if(has_CP(x)) {\r\n                            collect(x);\r\n                        }\r\n                        else {\r\n                            if(!patterns[x.value]) {\r\n                                var u = core.Utils.getU(symbol);\r\n                                // Get a u value and mark it for subsitution\r\n                                patterns[x.value] = u;\r\n                                symbol = symbol.sub(x.value, u);\r\n                            }\r\n                        }\r\n                    }, true);\r\n                };\r\n\r\n                // Collect a list of patterns\r\n                collect(symbol);\r\n\r\n                return [symbol, patterns];\r\n            },\r\n            simplify: function (symbol) {\r\n                //remove the multiplier to make calculation easier;\r\n                var sym_array = __.Simplify.strip(symbol);\r\n                symbol = sym_array.pop();\r\n                //remove gcd from denominator\r\n                symbol = __.Simplify.fracSimp(symbol);\r\n                //nothing more to do\r\n                if(symbol.isConstant() || symbol.group === core.groups.S) {\r\n                    sym_array.push(symbol);\r\n                    var ret = __.Simplify.unstrip(sym_array, symbol);\r\n                    return ret;\r\n                }\r\n\r\n                //var patterns;\r\n\r\n                var simplified = symbol.clone(); //make a copy\r\n\r\n                //[simplified, patterns] = __.Simplify.patternSub(symbol);\r\n\r\n                // Simplify sqrt within the symbol\r\n//                simplified = __.Simplify.sqrtSimp(simplified, sym_array);\r\n\r\n                // Try trig simplificatons e.g. cos(x)^2+sin(x)^2\r\n                simplified = __.Simplify.trigSimp(simplified);\r\n\r\n                // Simplify common denominators\r\n                simplified = __.Simplify.ratSimp(simplified);\r\n\r\n                // First go for the \"cheapest\" simplification which may eliminate \r\n                // your problems right away. factor -> evaluate. Remember\r\n                // that there's no need to expand since factor already does that\r\n\r\n                simplified = __.Factor.factor(simplified);\r\n\r\n                //If the simplfied is a sum then we can make a few more simplifications\r\n                //e.g. simplify(1/(x-1)+1/(1-x)) as per issue #431\r\n                if(simplified.group === core.groups.CP && simplified.isLinear()) {\r\n                    var m = simplified.multiplier.clone();\r\n                    simplified.toUnitMultiplier(); //strip the multiplier\r\n                    var r = new Symbol(0);\r\n                    //return the sum of simplifications\r\n                    simplified.each(function (x) {\r\n                        var s = __.Simplify.simplify(x);\r\n                        r = _.add(r, s);\r\n                    });\r\n                    simplified = r;\r\n                    //put back the multiplier\r\n                    r.multiplier = r.multiplier.multiply(m);\r\n                }\r\n\r\n                //place back multiplier and return\r\n                var retval = __.Simplify.unstrip(sym_array, simplified);\r\n\r\n                // Back substitute\r\n                /*\r\n                 for(var x in patterns) {\r\n                 retval = retval.sub(patterns[x], x);\r\n                 }\r\n                 */\r\n\r\n                return retval;\r\n            }\r\n        },\r\n\r\n        Classes: {\r\n            Polynomial: Polynomial,\r\n            Factors: Factors,\r\n            MVTerm: MVTerm\r\n        }\r\n    };\r\n\r\n    // Add a link to simplify\r\n    core.Expression.prototype.simplify = function () {\r\n        return __.Simplify.simplify(this.symbol);\r\n    };\r\n\r\n    nerdamer.useAlgebraDiv = function () {\r\n        var divide = __.divideFn = _.divide;\r\n        var calls = 0; //keep track of how many calls were made\r\n        _.divide = function (a, b) {\r\n            calls++;\r\n            var ans;\r\n            if(calls === 1) //check if this is the first call. If it is use algebra divide\r\n                ans = core.Algebra.divide(a, b);\r\n            else //otherwise use parser divide\r\n                ans = divide(a, b);\r\n            calls = 0; //reset the number of calls back to none\r\n            return ans;\r\n        };\r\n    };\r\n\r\n    nerdamer.useParserDiv = function () {\r\n        if(__.divideFn)\r\n            _.divide = __.divideFn;\r\n        delete __.divideFn;\r\n    };\r\n\r\n    nerdamer.register([\r\n        {\r\n            name: 'factor',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function () {\r\n                return __.Factor.factor;\r\n            }\r\n        },\r\n        {\r\n            name: 'simplify',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function () {\r\n                return __.Simplify.simplify;\r\n            }\r\n        },\r\n        {\r\n            name: 'gcd',\r\n            visible: true,\r\n            numargs: [1, ],\r\n            build: function () {\r\n                return __.gcd;\r\n            }\r\n        },\r\n        {\r\n            name: 'lcm',\r\n            visible: true,\r\n            numargs: [1, ],\r\n            build: function () {\r\n                return __.lcm;\r\n            }\r\n        },\r\n        {\r\n            name: 'roots',\r\n            visible: true,\r\n            numargs: -1,\r\n            build: function () {\r\n                return __.roots;\r\n            }\r\n        },\r\n        {\r\n            name: 'divide',\r\n            visible: true,\r\n            numargs: 2,\r\n            build: function () {\r\n                return __.divide;\r\n            }\r\n        },\r\n        {\r\n            name: 'div',\r\n            visible: true,\r\n            numargs: 2,\r\n            build: function () {\r\n                return __.div;\r\n            }\r\n        },\r\n        {\r\n            name: 'partfrac',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                return __.PartFrac.partfrac;\r\n            }\r\n        },\r\n        {\r\n            name: 'deg',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                return __.degree;\r\n            }\r\n        },\r\n        {\r\n            name: 'coeffs',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                var f = function () {\r\n                    var coeffs = __.coeffs.apply(__, arguments);\r\n                    return new core.Vector(coeffs);\r\n                };\r\n                return f;\r\n            }\r\n        },\r\n        {\r\n            name: 'line',\r\n            visible: true,\r\n            numargs: [2, 3],\r\n            build: function () {\r\n                return __.line;\r\n            }\r\n        },\r\n        {\r\n            name: 'sqcomp',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                var f = function (x, v) {\r\n                    try {\r\n                        v = v || variables(x)[0];\r\n                        var sq = __.sqComplete(x.clone(), v);\r\n                        return sq.f;\r\n                    }\r\n                    catch(e) {\r\n                        return x;\r\n                    }\r\n                };\r\n                return f;\r\n            }\r\n        }\r\n    ]);\r\n    nerdamer.updateAPI();\r\n})();","/* global module */\r\n\r\n/*\r\n * Author : Martin Donk\r\n * Website : http://www.nerdamer.com\r\n * Email : martin.r.donk@gmail.com\r\n * Source : https://github.com/jiggzson/nerdamer\r\n */\r\n\r\nif((typeof module) !== 'undefined' && typeof nerdamer === 'undefined') {\r\n    var nerdamer = require('./nerdamer.core.js');\r\n    require('./Algebra.js');\r\n}\r\n\r\n(function () {\r\n    \"use strict\";\r\n\r\n    var core = nerdamer.getCore(),\r\n            _ = core.PARSER,\r\n            Frac = core.Frac,\r\n            Settings = core.Settings,\r\n            isSymbol = core.Utils.isSymbol,\r\n            FN = core.groups.FN,\r\n            Symbol = core.Symbol,\r\n            text = core.Utils.text,\r\n            inBrackets = core.Utils.inBrackets,\r\n            isInt = core.Utils.isInt,\r\n            format = core.Utils.format,\r\n            even = core.Utils.even,\r\n            evaluate = core.Utils.evaluate,\r\n            N = core.groups.N,\r\n            S = core.groups.S,\r\n            FN = core.groups.FN,\r\n            PL = core.groups.PL,\r\n            CP = core.groups.CP,\r\n            CB = core.groups.CB,\r\n            EX = core.groups.EX,\r\n            P = core.groups.P,\r\n            LOG = Settings.LOG,\r\n            EXP = 'exp',\r\n            ABS = 'abs',\r\n            SQRT = 'sqrt',\r\n            SIN = 'sin',\r\n            COS = 'cos',\r\n            TAN = 'tan',\r\n            SEC = 'sec',\r\n            CSC = 'csc',\r\n            COT = 'cot',\r\n            ASIN = 'asin',\r\n            ACOS = 'acos',\r\n            ATAN = 'atan',\r\n            ASEC = 'asec',\r\n            ACSC = 'acsc',\r\n            ACOT = 'acot',\r\n            SINH = 'sinh',\r\n            COSH = 'cosh',\r\n            TANH = 'tanh',\r\n            CSCH = 'csch',\r\n            SECH = 'sech',\r\n            COTH = 'coth',\r\n            ASECH = 'asech',\r\n            ACSCH = 'acsch',\r\n            ACOTH = 'acoth';\r\n\r\n    //custom errors\r\n    function NoIntegralFound(msg) {\r\n        this.message = msg || \"\";\r\n    }\r\n    NoIntegralFound.prototype = new Error();\r\n\r\n    //Preparations\r\n    Symbol.prototype.hasIntegral = function () {\r\n        return this.containsFunction('integrate');\r\n    };\r\n    //transforms a function\r\n    Symbol.prototype.fnTransform = function () {\r\n        if(this.group !== FN)\r\n            return this;\r\n        var retval, a = this.args[0];\r\n        var m = new Symbol(this.multiplier);\r\n        var sym = this.clone().toUnitMultiplier();\r\n        if(this.isLinear()) {\r\n            switch(this.fname) {\r\n                case SINH:\r\n                    retval = _.parse(format('(e^({0})-e^(-({0})))/2', a));\r\n                    break;\r\n                case COSH:\r\n                    retval = _.parse(format('(e^({0})+e^(-({0})))/2', a));\r\n                    break;\r\n                case TANH:\r\n                    retval = _.parse(format('(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))', a));\r\n                    break;\r\n                case TAN:\r\n                    retval = _.parse(format('sin({0})/cos({0})', a));\r\n                    break;\r\n                case CSC:\r\n                    retval = _.parse(format('1/sin({0})', a));\r\n                    break;\r\n                case SEC:\r\n                    retval = _.parse(format('1/cos({0})', a));\r\n                    break;\r\n                default:\r\n                    retval = sym;\r\n            }\r\n        }\r\n        else if(this.power.equals(2)) {\r\n            switch(this.fname) {\r\n                case SIN:\r\n                    retval = _.parse(format('1/2-cos(2*({0}))/2', a));\r\n                    break;\r\n                case COS:\r\n                    retval = _.parse(format('1/2+cos(2*({0}))/2', a));\r\n                    break;\r\n                case TAN:\r\n                    //retval = _.parse(format('(1-cos(2*({0})))/(1+cos(2*({0})))', a));\r\n                    retval = _.parse(format('sin({0})^2/cos({0})^2', a));\r\n                    break;\r\n                case COSH:\r\n                    retval = _.parse(format('1/2+cosh(2*({0}))/2', a));\r\n                    break;\r\n                case SINH:\r\n                    retval = _.parse(format('-1/2+cosh(2*({0}))/2', a));\r\n                    break;\r\n                case TANH:\r\n                    retval = _.parse(format('(1+cosh(2*({0})))/(-1+cosh(2*({0})))', a));\r\n                    break;\r\n                case SEC:\r\n                    retval = _.parse(format('(1-cos(2*({0})))/(1+cos(2*({0})))+1', a));\r\n                    break;\r\n                default:\r\n                    retval = sym;\r\n            }\r\n        }\r\n        else if(this.fname === SEC) {\r\n            retval = _.parse(format('1/cos({0})^({1})', this.args[0], this.power));\r\n        }\r\n        else if(this.fname === CSC) {\r\n            retval = _.parse(format('1/sin({0})^({1})', this.args[0], this.power));\r\n        }\r\n        else if(this.fname === TAN) {\r\n            if(this.power.lessThan(0)) {\r\n                retval = _.parse(format('cos({0})^(-({1}))/sin({0})^({1})', this.args[0], this.power.negate()));\r\n            }\r\n            else {\r\n                retval = _.parse(format('sin({0})^({1})/cos({0})^({1})', this.args[0], this.power));\r\n            }\r\n        }\r\n        else if(this.fname === SIN && this.power.lessThan(0)) {\r\n            retval = _.parse(format('csc({0})^(-({1}))', this.args[0], this.power.negate()));\r\n        }\r\n        else if(this.fname === COS && this.power.lessThan(0)) {\r\n            retval = _.parse(format('sec({0})^(-({1}))', this.args[0], this.power.negate()));\r\n        }\r\n        else if(this.fname === SIN && this.power.equals(3)) {\r\n            retval = _.parse(format('(3*sin({0})-sin(3*({0})))/4', this.args[0]));\r\n        }\r\n        else if(this.fname === COS && this.power.equals(3)) {\r\n            retval = _.parse(format('(cos(3*({0}))+3*cos({0}))/4', this.args[0]));\r\n        }\r\n        //cos(a*x)^(2*n) or sin(a*x)^(2*n)\r\n        else if((this.fname === COS || this.fname === SIN) && even(this.power)) {\r\n            var n = this.power / 2;\r\n            //convert to a double angle\r\n            var double_angle = _.pow(this.clone().toLinear(), _.parse(2)).fnTransform();\r\n            //raise to the n and expand\r\n            var transformed = _.expand(_.pow(double_angle, _.parse(n)));\r\n\r\n            retval = new Symbol(0);\r\n\r\n            transformed.each(function (s) {\r\n                var t = s.fnTransform();\r\n                retval = _.add(retval, t);\r\n            }, true);\r\n        }\r\n        else\r\n            retval = sym;\r\n\r\n        return _.multiply(retval, m);\r\n    };\r\n\r\n    Symbol.prototype.hasTrig = function () {\r\n        if(this.isConstant(true) || this.group === S)\r\n            return false;\r\n        if(this.fname && (core.Utils.in_trig(this.fname) || core.Utils.in_inverse_trig(this.fname)))\r\n            return true;\r\n        if(this.symbols) {\r\n            for(var x in this.symbols)\r\n                if(this.symbols[x].hasTrig())\r\n                    return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    core.Expression.prototype.hasIntegral = function () {\r\n        return this.symbol.hasIntegral();\r\n    };\r\n    /**\r\n     * Attempts to rewrite a symbol under one common denominator\r\n     * @param {Symbol} symbol \r\n     */\r\n    core.Utils.toCommonDenominator = function (symbol) {\r\n        //transform x/a+x -> (ax+x)/a\r\n        if(symbol.isComposite() && symbol.isLinear()) {\r\n            var m = new Symbol(symbol.multiplier);\r\n            var denominator = new Symbol(1);\r\n            var numerator = new Symbol(0);\r\n            symbol.each(function (x) {\r\n                denominator = _.multiply(denominator, x.getDenom());\r\n            }, true);\r\n\r\n            //remove the denomitor in each term\r\n            symbol.each(function (x) {\r\n                var num = x.getNum();\r\n                var den = x.getDenom();\r\n                var factor = _.multiply(num, _.divide(denominator.clone(), den));\r\n                numerator = _.add(numerator, factor);\r\n            });\r\n            var retval = _.multiply(m, core.Algebra.divide(_.expand(numerator), _.expand(denominator)));\r\n            return retval;\r\n        }\r\n        return symbol;\r\n    };\r\n    //A function to check if a function name is an inverse trig function\r\n    core.Utils.in_inverse_trig = function (x) {\r\n        var inv_trig_fns = [ASIN, ACOS, ATAN, ACSC, ASEC, ACOT];\r\n        return inv_trig_fns.indexOf(x) !== -1;\r\n    };\r\n    //A function to check if a function name is a trig function\r\n    core.Utils.in_trig = function (x) {\r\n        var trig_fns = [COS, SIN, TAN, SEC, CSC, COT];\r\n        return trig_fns.indexOf(x) !== -1;\r\n    };\r\n\r\n    core.Utils.in_htrig = function (x) {\r\n        var trig_fns = [SINH, COSH, TANH, ACSCH, ASECH, ACOTH];\r\n        return trig_fns.indexOf(x) !== -1;\r\n    };\r\n\r\n    // Matrix functions\r\n    core.Matrix.jacobian = function (eqns, vars) {\r\n        var jacobian = new core.Matrix();\r\n        //get the variables if not supplied\r\n        if(!vars) {\r\n            vars = core.Utils.arrayGetVariables(eqns);\r\n        }\r\n\r\n        vars.forEach(function (v, i) {\r\n            eqns.forEach(function (eq, j) {\r\n                var e = core.Calculus.diff(eq.clone(), v);\r\n                jacobian.set(j, i, e);\r\n            });\r\n        });\r\n\r\n        return jacobian;\r\n    };\r\n\r\n    core.Matrix.prototype.max = function () {\r\n        var max = new Symbol(0);\r\n        this.each(function (x) {\r\n            var e = x.abs();\r\n            if(e.gt(max))\r\n                max = e;\r\n        });\r\n        return max;\r\n    };\r\n\r\n    core.Matrix.cMatrix = function (value, vars) {\r\n        var m = new core.Matrix();\r\n        //make an initial guess\r\n        vars.forEach(function (v, i) {\r\n            m.set(i, 0, _.parse(value));\r\n        });\r\n        return m;\r\n    };\r\n\r\n    var all_functions = core.Utils.all_functions = function (arr) {\r\n        for(var i = 0, l = arr.length; i < l; i++)\r\n            if(arr[i].group !== FN)\r\n                return false;\r\n        return true;\r\n    },\r\n            cosAsinBtransform = core.Utils.cosAsinBtranform = function (symbol1, symbol2) {\r\n                var a, b;\r\n                a = symbol1.args[0];\r\n                b = symbol2.args[0];\r\n                return _.parse(format('(sin(({0})+({1}))-sin(({0})-({1})))/2', a, b));\r\n            },\r\n            cosAsinAtransform = core.Utils.cosAsinAtranform = function (symbol1, symbol2) {\r\n                //TODO: temporary fix for integrate(e^x*sin(x)*cos(x)^2).\r\n                //we technically know how to do this transform but more is needed for correct output\r\n                if(Number(symbol2.power) !== 1)\r\n                    return _.multiply(symbol1, symbol2);\r\n                var a;\r\n                a = symbol1.args[0];\r\n                return _.parse(format('(sin(2*({0})))/2', a));\r\n            },\r\n            sinAsinBtransform = core.Utils.cosAsinBtranform = function (symbol1, symbol2) {\r\n                var a, b;\r\n                a = symbol1.args[0];\r\n                b = symbol2.args[0];\r\n                return _.parse(format('(cos(({0})+({1}))-cos(({0})-({1})))/2', a, b));\r\n            },\r\n            trigTransform = core.Utils.trigTransform = function (arr) {\r\n                var map = {}, symbol, t,\r\n                        retval = new Symbol(1);\r\n                for(var i = 0, l = arr.length; i < l; i++) {\r\n                    symbol = arr[i];\r\n\r\n                    if(symbol.group === FN) {\r\n                        var fname = symbol.fname;\r\n\r\n                        if(fname === COS && map[SIN]) {\r\n\r\n                            if(map[SIN].args[0].toString() !== symbol.args[0].toString()) {\r\n                                t = cosAsinBtransform(symbol, map[SIN]);\r\n                            }\r\n                            else {\r\n                                t = cosAsinAtransform(symbol, map[SIN]);\r\n                            }\r\n                            delete map[SIN];\r\n\r\n                            retval = _.multiply(retval, t);\r\n                        }\r\n                        else if(fname === SIN && map[COS]) {\r\n                            if(map[COS].args[0].toString() !== symbol.args[0].toString()) {\r\n                                t = cosAsinBtransform(symbol, map[COS]);\r\n                            }\r\n                            else {\r\n                                t = cosAsinAtransform(symbol, map[COS]);\r\n                            }\r\n                            delete map[COS];\r\n\r\n                            retval = _.multiply(retval, t);\r\n                        }\r\n                        else if(fname === SIN && map[SIN]) {\r\n                            if(map[SIN].args[0].toString() !== symbol.args[0].toString()) {\r\n                                t = sinAsinBtransform(symbol, map[SIN]);\r\n                                delete map[SIN];\r\n                            }\r\n                            else {\r\n                                //This should actually be redundant code but let's put just in case\r\n                                t = _.multiply(symbol, map[SIN]);\r\n                                delete map[SIN];\r\n                            }\r\n\r\n                            retval = t;\r\n                        }\r\n                        else {\r\n                            map[fname] = symbol;\r\n                        }\r\n                    }\r\n                    else\r\n                        retval = _.multiply(retval, symbol);\r\n                }\r\n\r\n                //put back the remaining functions\r\n                for(var x in map)\r\n                    retval = _.multiply(retval, map[x]);\r\n\r\n                return retval;\r\n\r\n            };\r\n\r\n    core.Settings.integration_depth = 10;\r\n\r\n    core.Settings.max_lim_depth = 10;\r\n\r\n    var __ = core.Calculus = {\r\n\r\n        version: '1.4.6',\r\n\r\n        sum: function (fn, index, start, end) {\r\n            if(!(index.group === core.groups.S))\r\n                throw new core.exceptions.NerdamerTypeError('Index must be symbol. ' + text(index) + ' provided');\r\n            index = index.value;\r\n            var retval;\r\n            if(core.Utils.isNumericSymbol(start) && core.Utils.isNumericSymbol(end)) {\r\n                var modifier = end - start < 200 ? '' : 'PARSE2NUMBER';\r\n                start = Number(start);\r\n                end = Number(end);\r\n                retval = core.Utils.block(modifier, function () {\r\n                    var f = fn.text(),\r\n                            subs = {'~': true}, //lock subs. Is this even being used?\r\n                            retval = new core.Symbol(0);\r\n\r\n                    for(var i = start; i <= end; i++) {\r\n                        subs[index] = new Symbol(i);\r\n                        var ans = _.parse(f, subs);\r\n                        retval = _.add(retval, ans);\r\n                    }\r\n                    return retval;\r\n                });\r\n            }\r\n            else {\r\n                retval = _.symfunction('sum', arguments);\r\n            }\r\n\r\n            return retval;\r\n        },\r\n        product: function (fn, index, start, end) {\r\n            if(!(index.group === core.groups.S))\r\n                throw new core.exceptions.NerdamerTypeError('Index must be symbol. ' + text(index) + ' provided');\r\n            index = index.value;\r\n            var retval;\r\n            if(core.Utils.isNumericSymbol(start) && core.Utils.isNumericSymbol(end)) {\r\n                var modifier = end - start < 200 ? '' : 'PARSE2NUMBER';\r\n                retval = core.Utils.block(modifier, function () {\r\n                    start = Number(start);\r\n                    end = Number(end.multiplier);\r\n\r\n                    var f = fn.text(),\r\n                            subs = {},\r\n                            retval = new core.Symbol(1);\r\n\r\n                    for(var i = start; i <= end; i++) {\r\n                        subs[index] = new Symbol(i);\r\n                        retval = _.multiply(retval, _.parse(f, subs));\r\n                    }\r\n                    return retval;\r\n                });\r\n            }\r\n            else {\r\n                retval = _.symfunction('product', arguments);\r\n            }\r\n\r\n            return retval;\r\n        },\r\n        diff: function (symbol, wrt, nth) {\r\n            if(core.Utils.isVector(symbol)) {\r\n                var vector = new core.Vector([]);\r\n                symbol.each(function (x) {\r\n                    vector.elements.push(__.diff(x, wrt, nth));\r\n                });\r\n                return vector;\r\n            }\r\n            else if(core.Utils.isMatrix(symbol)) {\r\n                var matrix = new core.Matrix();\r\n                symbol.each(function (x, i, j) {\r\n                    matrix.set(i, j, __.diff(x, wrt, nth));\r\n                });\r\n                return matrix;\r\n            }\r\n\r\n            var d = isSymbol(wrt) ? wrt.text() : wrt;\r\n            //the nth derivative\r\n            nth = isSymbol(nth) ? nth.multiplier : nth || 1;\r\n\r\n            if(d === undefined)\r\n                d = core.Utils.variables(symbol)[0];\r\n\r\n            //unwrap sqrt\r\n            if(symbol.group === FN && symbol.fname === SQRT) {\r\n                var s = symbol.args[0],\r\n                        sp = symbol.power.clone();\r\n                //these groups go to zero anyway so why waste time?\r\n                if(s.group !== N || s.group !== P) {\r\n                    s.power = isSymbol(s.power) ? _.multiply(s.power, _.multiply(new Symbol(1 / 2)), sp) : s.power.multiply(new Frac(0.5)).multiply(sp);\r\n                    s.multiplier = s.multiplier.multiply(symbol.multiplier);\r\n                }\r\n\r\n                symbol = s;\r\n            }\r\n\r\n            if(symbol.group === FN && !isSymbol(symbol.power)) {\r\n                var a = derive(_.parse(symbol));\r\n                var b = __.diff(symbol.args[0].clone(), d);\r\n                symbol = _.multiply(a, b);//chain rule\r\n            }\r\n            else {\r\n                symbol = derive(symbol);\r\n            }\r\n\r\n            if(nth > 1) {\r\n                nth--;\r\n                symbol = __.diff(symbol, wrt, nth);\r\n            }\r\n\r\n            return symbol;\r\n\r\n            // Equivalent to \"derivative of the outside\".\r\n            function polydiff(symbol) {\r\n                if(symbol.value === d || symbol.contains(d, true)) {\r\n                    symbol.multiplier = symbol.multiplier.multiply(symbol.power);\r\n                    symbol.power = symbol.power.subtract(new Frac(1));\r\n                    if(symbol.power.equals(0)) {\r\n                        symbol = Symbol(symbol.multiplier);\r\n                    }\r\n                }\r\n\r\n                return symbol;\r\n            }\r\n            \r\n            function derive(symbol) {\r\n                var g = symbol.group, a, b, cp;\r\n\r\n                if(g === N || g === S && symbol.value !== d || g === P) {\r\n                    symbol = Symbol(0);\r\n                }\r\n                else if(g === S) {\r\n                    symbol = polydiff(symbol);\r\n                }\r\n                else if(g === CB) {\r\n                    var m = symbol.multiplier.clone();\r\n                    symbol.toUnitMultiplier();\r\n                    var retval = _.multiply(product_rule(symbol), polydiff(symbol));\r\n                    retval.multiplier = retval.multiplier.multiply(m);\r\n                    return retval;\r\n                }\r\n                else if(g === FN && symbol.power.equals(1)) {\r\n                    // Table of known derivatives\r\n                    switch(symbol.fname) {\r\n                        case LOG:\r\n                            cp = symbol.clone();\r\n                            symbol = symbol.args[0].clone();//get the arguments\r\n                            symbol.power = symbol.power.negate();\r\n                            symbol.multiplier = cp.multiplier.divide(symbol.multiplier);\r\n                            break;\r\n                        case COS:\r\n                            //cos -> -sin\r\n                            symbol.fname = SIN;\r\n                            symbol.multiplier.negate();\r\n                            break;\r\n                        case SIN:\r\n                            //sin -> cos\r\n                            symbol.fname = COS;\r\n                            break;\r\n                        case TAN:\r\n                            //tan -> sec^2\r\n                            symbol.fname = SEC;\r\n                            symbol.power = new Frac(2);\r\n                            break;\r\n                        case SEC:\r\n                            // Use a clone if this gives errors\r\n                            symbol = qdiff(symbol, TAN);\r\n                            break;\r\n                        case CSC:\r\n                            symbol = qdiff(symbol, '-cot');\r\n                            break;\r\n                        case COT:\r\n                            symbol.fname = CSC;\r\n                            symbol.multiplier.negate();\r\n                            symbol.power = new Frac(2);\r\n                            break;\r\n                        case ASIN:\r\n                            symbol = _.parse('(sqrt(1-(' + text(symbol.args[0]) + ')^2))^(-1)');\r\n                            break;\r\n                        case ACOS:\r\n                            symbol = _.parse('-(sqrt(1-(' + text(symbol.args[0]) + ')^2))^(-1)');\r\n                            break;\r\n                        case ATAN:\r\n                            symbol = _.parse('(1+(' + text(symbol.args[0]) + ')^2)^(-1)');\r\n                            break;\r\n                        case ABS:\r\n                            m = symbol.multiplier.clone();\r\n                            symbol.toUnitMultiplier();\r\n                            //depending on the complexity of the symbol it's easier to just parse it into a new symbol\r\n                            //this should really be readdressed soon\r\n                            b = symbol.args[0].clone();\r\n                            b.toUnitMultiplier();\r\n                            symbol = _.parse(inBrackets(text(symbol.args[0])) + '/abs' + inBrackets(text(b)));\r\n                            symbol.multiplier = m;\r\n                            break;\r\n                        case 'parens':\r\n                            //see product rule: f'.g goes to zero since f' will return zero. This way we only get back\r\n                            //1*g'\r\n                            symbol = Symbol(1);\r\n                            break;\r\n                        case 'cosh':\r\n                            //cosh -> -sinh\r\n                            symbol.fname = 'sinh';\r\n                            break;\r\n                        case 'sinh':\r\n                            //sinh -> cosh\r\n                            symbol.fname = 'cosh';\r\n                            break;\r\n                        case TANH:\r\n                            //tanh -> sech^2\r\n                            symbol.fname = SECH;\r\n                            symbol.power = new Frac(2);\r\n                            break;\r\n                        case SECH:\r\n                            // Use a clone if this gives errors\r\n                            symbol = qdiff(symbol, '-tanh');\r\n                            break;\r\n                        case CSCH:\r\n                            var arg = String(symbol.args[0]);\r\n                            return _.parse('-coth(' + arg + ')*csch(' + arg + ')');\r\n                            break;\r\n                        case COTH:\r\n                            var arg = String(symbol.args[0]);\r\n                            return _.parse('-csch(' + arg + ')^2');\r\n                            break;\r\n                        case 'asinh':\r\n                            symbol = _.parse('(sqrt(1+(' + text(symbol.args[0]) + ')^2))^(-1)');\r\n                            break;\r\n                        case 'acosh':\r\n                            symbol = _.parse('(sqrt(-1+(' + text(symbol.args[0]) + ')^2))^(-1)');\r\n                            break;\r\n                        case 'atanh':\r\n                            symbol = _.parse('(1-(' + text(symbol.args[0]) + ')^2)^(-1)');\r\n                            break;\r\n                        case ASECH:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('-1/(sqrt(1/(' + arg + ')^2-1)*(' + arg + ')^2)');\r\n                            break;\r\n                        case ACOTH:\r\n                            symbol = _.parse('-1/((' + symbol.args[0] + ')^2-1)');\r\n                            break;\r\n                        case ACSCH:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('-1/(sqrt(1/(' + arg + ')^2+1)*(' + arg + ')^2)');\r\n                            break;\r\n                        case ASEC:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('1/(sqrt(1-1/(' + arg + ')^2)*(' + arg + ')^2)');\r\n                            break;\r\n                        case ACSC:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('-1/(sqrt(1-1/(' + arg + ')^2)*(' + arg + ')^2)');\r\n                            break;\r\n                        case ACOT:\r\n                            symbol = _.parse('-1/((' + symbol.args[0] + ')^2+1)');\r\n                            break;\r\n                        case 'S':\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('sin((pi*(' + arg + ')^2)/2)');\r\n                            break;\r\n                        case 'C':\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('cos((pi*(' + arg + ')^2)/2)');\r\n                            break;\r\n                        case 'Si':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('sin(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Shi':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('sinh(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Ci':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('cos(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Chi':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('cosh(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Ei':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('e^(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Li':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('1/' + Settings.LOG + '(' + arg + ')');\r\n                            break;\r\n                        case 'erf':\r\n                            symbol = _.parse('(2*e^(-(' + symbol.args[0] + ')^2))/sqrt(pi)');\r\n                            break;\r\n                        case 'atan2':\r\n                            var x_ = String(symbol.args[0]),\r\n                                    y_ = String(symbol.args[1]);\r\n                            symbol = _.parse('(' + y_ + ')/((' + y_ + ')^2+(' + x_ + ')^2)');\r\n                            break;\r\n                        case 'sign':\r\n                            symbol = new Symbol(0);\r\n                            break;\r\n                        case 'sinc':\r\n                            symbol = _.parse(format('(({0})*cos({0})-sin({0}))*({0})^(-2)', symbol.args[0]));\r\n                            break;\r\n                        case Settings.LOG10:\r\n                            symbol = _.parse('1/((' + symbol.args[0] + ')*' + Settings.LOG + '(10))');\r\n                            break;\r\n                        default:\r\n                            symbol = _.symfunction('diff', [symbol, wrt]);\r\n                    }\r\n                }\r\n                else if(g === EX || g === FN && isSymbol(symbol.power)) {\r\n                    var value;\r\n                    if(g === EX) {\r\n                        value = symbol.value;\r\n                    }\r\n                    else if(g === FN && symbol.contains(d)) {\r\n                        value = symbol.fname + inBrackets(text(symbol.args[0]));\r\n                    }\r\n                    else {\r\n                        value = symbol.value + inBrackets(text(symbol.args[0]));\r\n                    }\r\n                    a = _.multiply(_.parse(LOG + inBrackets(value)), symbol.power.clone());\r\n                    b = __.diff(_.multiply(_.parse(LOG + inBrackets(value)), symbol.power.clone()), d);\r\n                    symbol = _.multiply(symbol, b);\r\n                }\r\n                else if(g === FN && !symbol.power.equals(1)) {\r\n                    b = symbol.clone();\r\n                    b.toLinear();\r\n                    b.toUnitMultiplier();\r\n                    symbol = _.multiply(polydiff(symbol.clone()), derive(b));\r\n                }\r\n                else if(g === CP || g === PL) {\r\n                    // Note: Do not use `parse` since this puts back the sqrt and causes a bug as in #610. Use clone.\r\n                    var c = symbol.clone();\r\n                    var result = new Symbol(0);\r\n                    for(var x in symbol.symbols) {\r\n                        result = _.add(result, __.diff(symbol.symbols[x].clone(), d));\r\n                    }\r\n                    symbol = _.multiply(polydiff(c), result);\r\n                }\r\n\r\n                symbol.updateHash();\r\n\r\n                return symbol;\r\n            }\r\n            ;\r\n\r\n            function qdiff(symbol, val, altVal) {\r\n                return _.multiply(symbol, _.parse(val + inBrackets(altVal || text(symbol.args[0]))));\r\n            }\r\n            ;\r\n\r\n            function product_rule(symbol) {\r\n                //grab all the symbols within the CB symbol\r\n                var symbols = symbol.collectSymbols(),\r\n                        result = new Symbol(0),\r\n                        l = symbols.length;\r\n                //loop over all the symbols\r\n                for(var i = 0; i < l; i++) {\r\n                    var df = __.diff(symbols[i].clone(), d);\r\n                    for(var j = 0; j < l; j++) {\r\n                        //skip the symbol of which we just pulled the derivative\r\n                        if(i !== j) {\r\n                            //multiply out the remaining symbols\r\n                            df = _.multiply(df, symbols[j].clone());\r\n                        }\r\n                    }\r\n                    //add the derivative to the result\r\n                    result = _.add(result, df);\r\n                }\r\n                return result; //done\r\n            }\r\n            ;\r\n        },\r\n        integration: {\r\n            u_substitution: function (symbols, dx) {\r\n                function try_combo(a, b, f) {\r\n                    var d = __.diff(b, dx);\r\n                    var q = f ? f(a, b) : _.divide(a.clone(), d);\r\n                    if(!q.contains(dx, true))\r\n                        return q;\r\n                    return null;\r\n                }\r\n                function do_fn_sub(fname, arg) {\r\n                    var subbed = __.integrate(_.symfunction(fname, [new Symbol(u)]), u, 0);\r\n                    subbed = subbed.sub(new Symbol(u), arg);\r\n                    subbed.updateHash();\r\n                    return subbed;\r\n                }\r\n\r\n                var a = symbols[0].clone(),\r\n                        b = symbols[1].clone(),\r\n                        g1 = a.group,\r\n                        g2 = b.group,\r\n                        //may cause problems if person is using this already. Will need\r\n                        //to find algorithm for detecting conflict\r\n                        u = '__u__',\r\n                        Q;\r\n                if(g1 === FN && g2 !== FN) {\r\n                    //e.g. 2*x*cos(x^2)\r\n                    var arg = a.args[0];\r\n                    Q = try_combo(b, arg.clone());\r\n                    if(Q)\r\n                        return _.multiply(Q, do_fn_sub(a.fname, arg));\r\n                    Q = try_combo(b, a);\r\n                    if(Q) {\r\n                        return __.integration.poly_integrate(a);\r\n                    }\r\n                }\r\n                else if(g2 === FN && g1 !== FN) {\r\n                    //e.g. 2*(x+1)*cos((x+1)^2\r\n                    var arg = b.args[0];\r\n                    Q = try_combo(a, arg.clone());\r\n                    if(Q)\r\n                        return _.multiply(Q, do_fn_sub(b.fname, arg));\r\n                }\r\n                else if(g1 === FN && g2 === FN) {\r\n                    Q = try_combo(a.clone(), b.clone());\r\n                    if(Q)\r\n                        return _.multiply(__.integration.poly_integrate(b), Q);\r\n                    Q = try_combo(b.clone(), a.clone());\r\n                    if(Q)\r\n                        return _.multiply(__.integration.poly_integrate(b), Q);\r\n                }\r\n                else if(g1 === EX && g2 !== EX) {\r\n                    var p = a.power;\r\n                    Q = try_combo(b, p.clone());\r\n                    if(!Q) {\r\n                        //one more try\r\n                        var dc = __.integration.decompose_arg(p.clone(), dx);\r\n                        //consider the possibility of a^x^(n-1)*x^n dx\r\n                        var xp = __.diff(dc[2].clone(), dx);\r\n                        var dc2 = __.integration.decompose_arg(xp.clone(), dx);\r\n                        //if their powers equal, so if dx*p == b\r\n                        if(_.multiply(dc[1], dc2[1]).power.equals(b.power)) {\r\n                            var m = _.divide(dc[0].clone(), dc2[0].clone());\r\n\r\n                            var new_val = _.multiply(m.clone(), _.pow(new Symbol(a.value), _.multiply(dc[0], new Symbol(u))));\r\n                            new_val = _.multiply(new_val, new Symbol(u));\r\n                            return __.integration.by_parts(new_val, u, 0, {}).sub(u, dc[1].clone());\r\n                        }\r\n\r\n                    }\r\n                    var integrated = __.integrate(a.sub(p.clone(), new Symbol(u)), u, 0),\r\n                            retval = _.multiply(integrated.sub(new Symbol(u), p), Q);\r\n\r\n\r\n                    return retval;\r\n                }\r\n                else if(g2 === EX && g1 !== EX) {\r\n                    var p = b.power;\r\n                    Q = try_combo(a, p.clone());\r\n                    var integrated = __.integrate(b.sub(p, new Symbol(u)), u, 0);\r\n                    return _.multiply(integrated.sub(new Symbol(u), p), Q);\r\n                }\r\n                else if(a.isComposite() || b.isComposite()) {\r\n                    var f = function (a, b) {\r\n                        var d = __.diff(b, dx);\r\n                        var A = core.Algebra.Factor.factor(a),\r\n                                B = core.Algebra.Factor.factor(d);\r\n                        var q = _.divide(A, B);\r\n                        return q;\r\n                    };\r\n                    var f1 = a.isComposite() ? a.clone().toLinear() : a.clone(),\r\n                            f2 = b.isComposite() ? b.clone().toLinear() : b.clone();\r\n                    Q = try_combo(f1.clone(), f2.clone(), f);\r\n                    if(Q)\r\n                        return _.multiply(__.integration.poly_integrate(b), Q);\r\n                    Q = try_combo(f2.clone(), f1.clone(), f);\r\n                    if(Q)\r\n                        return _.multiply(__.integration.poly_integrate(a), Q);\r\n                }\r\n            },\r\n            //simple integration of a single polynomial x^(n+1)/(n+1)\r\n            poly_integrate: function (x) {\r\n                var p = x.power.toString(),\r\n                        m = x.multiplier.toDecimal(),\r\n                        s = x.toUnitMultiplier().toLinear();\r\n                if(Number(p) === -1) {\r\n                    return _.multiply(new Symbol(m), _.symfunction(LOG, [s]));\r\n                }\r\n                return _.parse(format('({0})*({1})^(({2})+1)/(({2})+1)', m, s, p));\r\n            },\r\n            //If we're just spinning wheels we want to stop. This is why we \r\n            //wrap integration in a try catch block and call this to stop.\r\n            stop: function (msg) {\r\n                msg = msg || 'Unable to compute integral!';\r\n                core.Utils.warn(msg);\r\n                throw new NoIntegralFound(msg);\r\n            },\r\n            partial_fraction: function (input, dx, depth, opt) {\r\n                //TODO: This whole thing needs to be rolled into one but for now I'll leave it as two separate parts\r\n                if(!isSymbol(dx))\r\n                    dx = _.parse(dx);\r\n\r\n                var result, partial_fractions;\r\n                result = new Symbol(0);\r\n                partial_fractions = core.Algebra.PartFrac.partfrac(input, dx);\r\n\r\n                if(partial_fractions.group === CB && partial_fractions.isLinear()) {\r\n                    //perform a quick check to make sure that all partial fractions are linear\r\n                    partial_fractions.each(function (x) {\r\n                        if(!x.isLinear())\r\n                            __.integration.stop();\r\n                    });\r\n                    partial_fractions.each(function (x) {\r\n                        result = _.add(result, __.integrate(x, dx, depth, opt));\r\n                    });\r\n                }\r\n                else {\r\n                    result = _.add(result, __.integrate(partial_fractions, dx, depth, opt));\r\n                }\r\n                return result;\r\n            },\r\n            get_udv: function (symbol) {\r\n                var parts = [[/*L*/], [/*I*/], [/*A*/], [/*T*/], [/*E*/]];\r\n                //first we sort them \r\n                var setSymbol = function (x) {\r\n                    var g = x.group;\r\n                    if(g === FN) {\r\n                        var fname = x.fname;\r\n                        if(core.Utils.in_trig(fname) || core.Utils.in_htrig(fname))\r\n                            parts[3].push(x);\r\n                        else if(core.Utils.in_inverse_trig(fname))\r\n                            parts[1].push(x);\r\n                        else if(fname === LOG)\r\n                            parts[0].push(x);\r\n                        else {\r\n                            __.integration.stop();\r\n                        }\r\n                    }\r\n                    else if(g === S || x.isComposite() && x.isLinear() || g === CB && x.isLinear()) {\r\n                        parts[2].push(x);\r\n                    }\r\n                    else if(g === EX || x.isComposite() && !x.isLinear())\r\n                        parts[4].push(x);\r\n                    else\r\n                        __.integration.stop();\r\n                };\r\n\r\n                if(symbol.group === CB)\r\n                    symbol.each(function (x) {\r\n                        setSymbol(Symbol.unwrapSQRT(x, true));\r\n                    });\r\n                else\r\n                    setSymbol(symbol);\r\n                var u, dv = new Symbol(1);\r\n                //compile u and dv\r\n                for(var i = 0; i < 5; i++) {\r\n                    var part = parts[i], t,\r\n                            l = part.length;\r\n                    if(l > 0) {\r\n                        if(l > 1) {\r\n                            t = new Symbol(1);\r\n                            for(var j = 0; j < l; j++)\r\n                                t = _.multiply(t, part[j].clone());\r\n                        }\r\n                        else\r\n                            t = part[0].clone();\r\n\r\n                        if(!u) {\r\n                            u = t;//the first u encountered gets chosen\r\n                            u.multiplier = u.multiplier.multiply(symbol.multiplier); //the first one gets the mutliplier\r\n                        }\r\n                        else\r\n                            dv = _.multiply(dv, t); //everything else belongs to dv\r\n                    }\r\n                }\r\n\r\n                return [u, dv];\r\n            },\r\n\r\n            trig_sub: function (symbol, dx, depth, opt, parts, symbols) {\r\n                parts = parts || __.integration.decompose_arg(symbol.clone().toLinear(), dx);\r\n                var b = parts[3],\r\n                        ax = parts[2],\r\n                        a = parts[0],\r\n                        x = parts[1];\r\n                if(x.power.equals(2) && a.greaterThan(0)) {\r\n                    //use tan(x)\r\n                    var t = core.Utils.getU(symbol), //get an appropriate u\r\n                            u = _.parse(TAN + inBrackets(t)), //u\r\n                            du = _.parse(SEC + inBrackets(t) + '^2'), //du\r\n                            f = _.multiply(symbol.sub(x, u), du);\r\n                    var integral = __.integrate(f, t, depth, opt).sub(u, x);\r\n                    core.Utils.clearU(u);\r\n                    return integral;\r\n                }\r\n            },\r\n\r\n            by_parts: function (symbol, dx, depth, o) {\r\n                o.previous = o.previous || [];\r\n                var udv, u, dv, du, v, vdu, uv, retval, integral_vdu, m, c, vdu_s;\r\n                //first LIATE\r\n                udv = __.integration.get_udv(symbol);\r\n                u = udv[0];\r\n                dv = udv[1];\r\n                du = Symbol.unwrapSQRT(_.expand(__.diff(u.clone(), dx)), true);\r\n                c = du.clone().stripVar(dx);\r\n                //strip any coefficients\r\n                du = _.divide(du, c.clone());\r\n                v = __.integrate(dv.clone(), dx, depth || 0);\r\n                vdu = _.multiply(v.clone(), du);\r\n                vdu_s = vdu.toString();\r\n                //currently only supports e^x*(some trig)\r\n                if(o.previous.indexOf(vdu_s) !== -1 && (core.Utils.in_trig(u.fname)) && dv.isE()) {\r\n                    //We're going to exploit the fact that vdu can never be constant\r\n                    //to work out way out of this cycle. We'll return the length of\r\n                    //the this.previous array until we're back at level one\r\n                    o.is_cyclic = true;\r\n                    //return the integral. \r\n                    return new Symbol(1);\r\n                }\r\n                else\r\n                    o.previous.push(vdu_s);\r\n\r\n                uv = _.multiply(u, v);\r\n                //clear the multiplier so we're dealing with a bare integral\r\n                m = vdu.multiplier.clone();\r\n                vdu.toUnitMultiplier();\r\n                integral_vdu = _.multiply(__.integrate(vdu.clone(), dx, depth, o), c);\r\n                integral_vdu.multiplier = integral_vdu.multiplier.multiply(m);\r\n                retval = _.subtract(uv, integral_vdu);\r\n                //we know that there cannot be constants so they're a holdover from a cyclic integral\r\n                if(o.is_cyclic) {\r\n                    //start popping the previous stack so we know how deep in we are\r\n                    o.previous.pop();\r\n                    if(o.previous.length === 0) {\r\n                        retval = _.expand(retval);\r\n                        var rem = new Symbol(0);\r\n                        retval.each(function (x) {\r\n                            if(!x.contains(dx))\r\n                                rem = _.add(rem, x.clone());\r\n                        });\r\n                        //get the actual uv\r\n                        retval = _.divide(_.subtract(retval, rem.clone()), _.subtract(new Symbol(1), rem));\r\n                    }\r\n                }\r\n\r\n                return retval;\r\n            },\r\n            /*\r\n             * dependents: [Solve, integrate]\r\n             */\r\n            decompose_arg: core.Utils.decompose_fn\r\n        },\r\n        //TODO: nerdamer.integrate('-e^(-a*t)*sin(t)', 't') -> gives incorrect output\r\n        integrate: function (original_symbol, dt, depth, opt) {\r\n            //assume integration wrt independent variable if expression only has one variable\r\n            if(!dt) {\r\n                var vars = core.Utils.variables(original_symbol);\r\n                if(vars.length === 1)\r\n                    dt = vars[0];\r\n                //defaults to x\r\n                dt = dt || 'x';\r\n            }\r\n            //add support for integrating vectors\r\n            if(core.Utils.isVector(original_symbol)) {\r\n                var vector = new core.Vector([]);\r\n                original_symbol.each(function (x) {\r\n                    vector.elements.push(__.integrate(x, dt));\r\n                });\r\n                return vector;\r\n            }\r\n            if(!isNaN(dt))\r\n                _.error('variable expected but received ' + dt);\r\n            //get rid of constants right away\r\n            if(original_symbol.isConstant(true))\r\n                return _.multiply(original_symbol.clone(), _.parse(dt));\r\n\r\n            //configurations options for integral. This is needed for tracking extra options\r\n            //e.g. cyclic integrals or additional settings\r\n            opt = opt || {};\r\n            return core.Utils.block('PARSE2NUMBER', function () {\r\n                //make a note of the original symbol. Set only if undefined\r\n                depth = depth || 0;\r\n                var dx = isSymbol(dt) ? dt.toString() : dt,\r\n                        //we don't want the symbol in sqrt form. x^(1/2) is prefererred\r\n                        symbol = Symbol.unwrapSQRT(original_symbol.clone(), true),\r\n                        g = symbol.group,\r\n                        retval;\r\n\r\n                try {\r\n                    //We stop integration after x amount of recursive calls\r\n                    if(++depth > core.Settings.integration_depth)\r\n                        __.integration.stop('Maximum depth reached. Exiting!');\r\n\r\n                    //constants. We first eliminate anything that doesn't have dx. Everything after this has \r\n                    //to have dx or else it would have been taken care of below\r\n                    if(!symbol.contains(dx, true)) {\r\n                        retval = _.multiply(symbol.clone(), _.parse(dx));\r\n                    }\r\n                    //e.g. 2*x\r\n                    else if(g === S) {\r\n                        retval = __.integration.poly_integrate(symbol, dx, depth);\r\n                    }\r\n                    else if(g === EX) {\r\n                        if(symbol.previousGroup === FN && !(symbol.fname === 'sqrt' || symbol.fname === Settings.PARENTHESIS))\r\n                            __.integration.stop();\r\n                        //check the base\r\n                        if(symbol.contains(dx) && symbol.previousGroup !== FN) {\r\n                            //if the symbol also contains dx then we stop since we currently \r\n                            //don't know what to do with it e.g. x^x\r\n                            if(symbol.power.contains(dx))\r\n                                __.integration.stop();\r\n                            else {\r\n                                var t = __.diff(symbol.clone().toLinear(), dx);\r\n                                if(t.contains(dx))\r\n                                    __.integration.stop();\r\n                                //since at this point it's the base only then we do standard single poly integration\r\n                                //e.g. x^y\r\n                                retval = __.integration.poly_integrate(symbol, dx, depth);\r\n                            }\r\n                        }\r\n                        //e.g. a^x or 9^x\r\n                        else {\r\n                            var a = __.diff(symbol.power.clone(), dx);\r\n                            if(a.contains(dx)) {\r\n                                var aa = a.stripVar(dx),\r\n                                        x = _.divide(a.clone(), aa.clone());\r\n                                if(x.group === S && x.isLinear()) {\r\n                                    aa.multiplier = aa.multiplier.divide(new Frac(2));\r\n                                    return _.parse(format('({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))', aa, dx, symbol.multiplier));\r\n                                }\r\n                                else\r\n                                    __.integration.stop();\r\n                            }\r\n                            if(symbol.isE()) {\r\n                                if(a.isLinear())\r\n                                    retval = symbol;\r\n                                else {\r\n                                    if(a.isE() && a.power.group === S && a.power.power.equals(1))\r\n                                        retval = _.multiply(_.symfunction('Ei', [symbol.power.clone()]), symbol.power);\r\n                                    else\r\n                                        __.integration.stop();\r\n                                }\r\n                            }\r\n                            else {\r\n                                var d = _.symfunction(LOG, [_.parse(symbol.value)]);\r\n                                retval = _.divide(symbol, d);\r\n                            }\r\n                            retval = _.divide(retval, a);\r\n                        }\r\n                    }\r\n                    else if(symbol.isComposite() && symbol.isLinear()) {\r\n                        var m = _.parse(symbol.multiplier);\r\n                        symbol.toUnitMultiplier();\r\n                        retval = new Symbol(0);\r\n                        symbol.each(function (x) {\r\n                            retval = _.add(retval, __.integrate(x, dx, depth));\r\n                        });\r\n                        retval = _.multiply(m, retval);\r\n                    }\r\n                    else if(g === CP) {\r\n                        if(symbol.power.greaterThan(1))\r\n                            symbol = _.expand(symbol);\r\n                        if(symbol.power.equals(1)) {\r\n                            retval = new Symbol(0);\r\n                            symbol.each(function (x) {\r\n                                retval = _.add(retval, __.integrate(x, dx, depth));\r\n                            }, true);\r\n                        }\r\n                        else {\r\n                            var p = Number(symbol.power),\r\n                                    m = symbol.multiplier.clone();//temporarily remove the multiplier\r\n                            symbol.toUnitMultiplier();\r\n                            var //below we consider the form ax+b\r\n                                    fn = symbol.clone().toLinear(), //get just the pure function without the power\r\n                                    decomp = __.integration.decompose_arg(fn, dx),\r\n                                    //I have no idea why I used bx+a and not ax+b. TODO change this to something that makes sense\r\n                                    b = decomp[3],\r\n                                    ax = decomp[2],\r\n                                    a = decomp[0],\r\n                                    x = decomp[1];\r\n                            if(p === -1 && x.group !== PL && x.power.equals(2)) {\r\n                                var b_is_positive = isInt(b) ? b > 0 : true;\r\n                                //we can now check for atan\r\n                                if(x.group === S && x.power.equals(2) && b_is_positive) {\r\n                                    ////then we have atan\r\n                                    //abs is redundants since the sign appears in both denom and num.\r\n                                    var unwrapAbs = function (s) {\r\n                                        var result = new Symbol(1);\r\n                                        s.each(function (x) {\r\n                                            result = _.multiply(result, x.fname === 'abs' ? x.args[0] : x);\r\n                                        });\r\n                                        return result;\r\n                                    };\r\n                                    var A = a.clone(),\r\n                                            B = b.clone();\r\n                                    A = _.pow(A, new Symbol(1 / 2));\r\n                                    B = _.pow(B, new Symbol(1 / 2));\r\n                                    //unwrap abs\r\n\r\n                                    var d = _.multiply(unwrapAbs(B), unwrapAbs(A)),\r\n                                            f = _.symfunction(ATAN, [_.divide(_.multiply(a, x.toLinear()), d.clone())]);\r\n                                    retval = _.divide(f, d);\r\n                                }\r\n                                else if(x.group === S && x.isLinear()) {\r\n                                    retval = _.divide(__.integration.poly_integrate(symbol), a);\r\n                                }\r\n                                else {\r\n                                    //1/(x^4+1)\r\n                                    if(x.power.equals(4)) {\r\n                                        //https://www.freemathhelp.com/forum/threads/55678-difficult-integration-int-1-(1-x-4)-dx\r\n                                        var A, B, C, D, E, F, f1, f2, f3, f4, L1, L2;\r\n                                        var br = inBrackets;\r\n                                        //apply rule: ax^4+b = (√ax^2+√2∜a∜bx+√b)(√ax^2-√2∜a∜bx+√b)\r\n                                        //get quadratic factors\r\n                                        A = _.parse(SQRT + br(a) + '*' + dx + '^2');\r\n                                        B = _.parse(SQRT + br(2) + '*' + br(a) + '^' + br('1/4') + '*' + br(b) + '^' + br('1/4') + '*' + dx);\r\n                                        C = _.parse(SQRT + br(b));\r\n                                        f1 = _.add(_.add(A.clone(), B.clone()), C.clone());\r\n                                        f2 = _.add(_.subtract(A, B), C);\r\n                                        //calculate numerators: [D+E, D-E] -> [√2*b^(3/4)+√b∜ax, √2*b^(3/4)-√b∜ax]\r\n                                        D = _.parse(SQRT + br(2) + '*' + br(b) + '^' + br('3/4'));\r\n                                        E = _.parse(SQRT + br(b) + '*' + br(b) + '^' + br('1/4') + '*' + dx);\r\n                                        //let F = 2b√2∜b\r\n                                        F = _.parse(2 + '*' + br(b) + '*' + SQRT + br(2) + '*' + br(b) + '^' + br('1/4'));\r\n                                        //calculate the factors\r\n                                        L1 = _.divide(_.subtract(D.clone(), E.clone()), _.multiply(F.clone(), f2));\r\n                                        L2 = _.divide(_.add(D, E), _.multiply(F, f1.clone()));\r\n                                        retval = _.add(\r\n                                                __.integrate(L1, dx, depth, opt),\r\n                                                __.integrate(L2, dx, depth, opt)\r\n                                                );\r\n                                    }\r\n                                    else\r\n                                        //let's try partial fractions\r\n                                        retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                }\r\n                            }\r\n                            else if(p === -1 / 2) {\r\n                                //detect asin and atan\r\n                                if(x.group === S && x.power.equals(2)) {\r\n                                    if(ax.multiplier.lessThan(0) && !b.multiplier.lessThan(0)) {\r\n                                        a.negate();\r\n                                        //it's asin\r\n                                        if(b.isConstant() && a.isConstant()) {\r\n                                            var d = _.symfunction(SQRT, [a.clone()]),\r\n                                                    d2 = _.symfunction(SQRT, [_.multiply(a.clone(), b)]);\r\n                                            retval = _.divide(_.symfunction(ASIN, [_.divide(ax.toLinear(), d2)]), d);\r\n                                        }\r\n                                        //I'm not sure about this one. I'm trusting Wolfram Alpha here\r\n                                        else {\r\n                                            var sqrt_a = _.symfunction(SQRT, [a]),\r\n                                                    sqrt_ax = _.multiply(sqrt_a.clone(), x.clone().toLinear());\r\n                                            retval = _.divide(_.symfunction(ATAN, [_.divide(sqrt_ax, _.symfunction(SQRT, [fn.clone()]))]), sqrt_a);\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        /*WHAT HAPPENS HERE???? e.g. integrate(3/sqrt(-a+b*x^2),x) or integrate(3/sqrt(a+b*x^2),x)*/\r\n                                        __.integration.stop();\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    //This would be a case like 1/(sqrt(1-x^3) or 1/(1-(x+1)^2)\r\n                                    __.integration.stop();\r\n                                }\r\n                            }\r\n                            else if(p === 1/2 && x.power.equals(2) && a.greaterThan(0)) {\r\n                                // TODO: Revisit\r\n                                __.integration.stop();\r\n                            }\r\n                            else {\r\n                                if(x.isLinear() && x.group !== PL)\r\n                                    retval = _.divide(__.integration.poly_integrate(symbol), a);\r\n                                else if(x.power.equals(2) && a.greaterThan(0)) {\r\n                                    var sqa, sqb, aob, bsqi, n, integral, u, v, uv;\r\n                                    //1/(a*x^2+b^2)^n\r\n                                    //strip the value of b so b = 1\r\n                                    sqa = _.parse(SQRT + inBrackets(a)); //strip a so b = 1\r\n                                    sqb = _.parse(SQRT + inBrackets(b));\r\n                                    aob = _.multiply(sqa.clone(), sqb.clone()).invert();\r\n                                    bsqi = _.pow(b, new Symbol(symbol.power));\r\n                                    uv = core.Utils.getU(symbol);\r\n                                    u = _.multiply(aob, x.clone().toLinear());\r\n                                    v = _.parse(ATAN + inBrackets(u));\r\n                                    //the conversion will be 1+tan(x)^2 -> sec(x)^2\r\n                                    //since the denominator is now (sec(x)^2)^n and the numerator is sec(x)^2 \r\n                                    //then the remaining sec will be (n-1)*2;\r\n                                    var n = (Math.abs(symbol.power) - 1) * 2;\r\n                                    //1/sec(x)^n can now be converted to cos(x)^n and we can pull the integral of that\r\n                                    var integral = __.integrate(_.parse(COS + inBrackets(uv) + '^' + n));\r\n                                    core.Utils.clearU(uv);\r\n                                    return _.multiply(integral.sub(uv, v), bsqi);\r\n                                }\r\n                                else {\r\n                                    if(symbol.group !== CB && !symbol.power.lessThan(0)) {\r\n                                        retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                    }\r\n                                    else {\r\n                                        var f = symbol.clone().toLinear();\r\n                                        var factored = core.Algebra.Factor.factor(f);\r\n                                        var was_factored = factored.toString() !== f.toString();\r\n                                        if(core.Algebra.degree(f, _.parse(dx)).equals(2) && !was_factored) {\r\n                                            try {\r\n                                                var f1, fx, u, sq;\r\n                                                sq = core.Algebra.sqComplete(f, dx);\r\n                                                u = core.Utils.getU(f);\r\n                                                f1 = sq.f.sub(sq.a, u);\r\n                                                fx = _.pow(f1, _.parse(symbol.power));\r\n                                                retval = __.integrate(fx, u).sub(u, sq.a);\r\n                                            }\r\n                                            catch(e) {\r\n                                                __.integration.stop();\r\n                                            }\r\n                                        }\r\n                                        else\r\n                                            retval = __.integration.partial_fraction(symbol, dx, depth, opt);\r\n                                    }\r\n                                }\r\n                            }\r\n                            retval.multiplier = retval.multiplier.multiply(m);\r\n                        }\r\n                    }\r\n                    else if(g === FN) {\r\n                        var arg = symbol.args[0],\r\n                                m = symbol.multiplier.clone();\r\n                        symbol.toUnitMultiplier();\r\n                        var decomp = __.integration.decompose_arg(arg, dx);\r\n                        //easies way I can think of to get the coefficient and to make sure\r\n                        //that the symbol is linear wrt dx. I'm not actually trying to get the \r\n                        //derivative\r\n                        var a = decomp[0],\r\n                                x = decomp[1],\r\n                                fname = symbol.fname;\r\n                        //log is a special case that can be handled with integration by parts\r\n                        if(fname === LOG || (fname === ASIN || fname === ACOS || fname === ATAN && x.isLinear())) {\r\n                            /*integration by parts */\r\n                            var p = symbol.power.toString();\r\n                            if(isInt(p))\r\n                                depth = depth - p; //it needs more room to find the integral\r\n\r\n                            if(!arg.isComposite())\r\n                                retval = _.multiply(_.parse(m), __.integration.by_parts(symbol, dx, depth, opt));\r\n                            else {\r\n                                //integral u du\r\n                                var u = core.Utils.getU(symbol);\r\n                                var f = _.pow(_.parse(LOG + inBrackets(u)), new Symbol(p));\r\n                                var du = __.diff(arg, dx);\r\n                                var u_du = _.multiply(f, du);\r\n                                var integral = __.integrate(u_du, u, depth, opt);\r\n                                retval = _.multiply(_.parse(m), integral.sub(u, arg));\r\n                            }\r\n\r\n                        }\r\n                        else if(fname === TAN && symbol.power.lessThan(0)) {\r\n                            //convert to cotangent\r\n                            var sym = symbol.clone();\r\n                            sym.power.negate();\r\n                            sym.fname = COT;\r\n                            return _.multiply(_.parse(m), __.integrate(sym, dx, depth));\r\n                        }\r\n                        else {\r\n                            if(!a.contains(dx, true) && symbol.isLinear()) { //perform a deep search for safety\r\n                                //first handle the special cases \r\n                                if(fname === ABS) {\r\n                                    //REVISIT **TODO**\r\n                                    var x = _.divide(arg.clone(), a.clone());\r\n                                    if(x.group === S && !x.power.lessThan(0)) {\r\n                                        if(core.Utils.even(x.power)) {\r\n                                            retval = __.integrate(arg, dx, depth);\r\n                                        }\r\n                                        else {\r\n                                            var integrated = __.integrate(x, dx, depth);\r\n                                            integrated.power = integrated.power.subtract(new Frac(1));\r\n                                            retval = _.multiply(_.multiply(_.symfunction(ABS, [x.toLinear()]), integrated), a);\r\n                                        }\r\n                                    }\r\n                                    else\r\n                                        __.integration.stop();\r\n                                }\r\n                                else {\r\n                                    var ag = symbol.args[0].group,\r\n                                            decomposed = __.integration.decompose_arg(arg, dx);\r\n\r\n                                    if(!(ag === CP || ag === S || ag === CB) || !decomposed[1].power.equals(1) || arg.hasFunc())\r\n                                        __.integration.stop();\r\n                                    /**TODO**/ //ASIN, ACOS, ATAN\r\n                                    switch(fname) {\r\n                                        case COS:\r\n                                            retval = _.symfunction(SIN, [arg]);\r\n                                            break;\r\n                                        case SIN:\r\n                                            retval = _.symfunction(COS, [arg]);\r\n                                            retval.negate();\r\n                                            break;\r\n                                        case TAN:\r\n                                            retval = _.parse(format(Settings.LOG + '(sec({0}))', arg));\r\n                                            break;\r\n                                        case SEC:\r\n                                            retval = _.parse(format(Settings.LOG + '(tan({0})+sec({0}))', arg));\r\n                                            break;\r\n                                        case CSC:\r\n                                            retval = _.parse(format('-' + Settings.LOG + '(csc({0})+cot({0}))', arg));\r\n                                            break;\r\n                                        case COT:\r\n                                            retval = _.parse(format(Settings.LOG + '(sin({0}))', arg));\r\n                                            break;\r\n                                        case SINH:\r\n                                            retval = _.symfunction(COSH, [arg]);\r\n                                            break;\r\n                                        case COSH:\r\n                                            retval = _.symfunction(SINH, [arg]);\r\n                                            break;\r\n                                        case TANH:\r\n                                            retval = _.parse(format(Settings.LOG + '(cosh({0}))', arg));\r\n                                            break;\r\n                                        case ASEC:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACSC:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACOT:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                            //inverse htrig\r\n                                        case ASECH:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACSCH:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACOTH:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                            //end inverse htrig\r\n                                            //htrigh\r\n                                        case SECH:\r\n                                            retval = _.parse(format('atan(sinh({0}))', arg));\r\n                                            break;\r\n                                        case CSCH:\r\n                                            retval = _.parse(format(Settings.LOG + '(tanh(({0})/2))', arg));\r\n                                            break;\r\n                                        case COTH:\r\n                                            retval = _.parse(format(Settings.LOG + '(sinh({0}))', arg));\r\n                                            break;\r\n                                            //end htrig\r\n                                        case EXP:\r\n                                            retval = __.integrate(_.parse(format('e^({0})', arg)), dx, depth);\r\n                                            break;\r\n                                        case 'S':\r\n                                            var arg = symbol.args[0].clone(),\r\n                                                    dc = __.integration.decompose_arg(arg, dx),\r\n                                                    x_ = dc[1],\r\n                                                    a_ = dc[0];\r\n                                            var b_ = dc[3];\r\n                                            retval = _.parse(format('(cos((1/2)*pi*(({1})+({0})*({2}))^2)+pi*(({1})+({0})*({2}))*S(({1})+({0})*({2})))/(({0})*pi)', a_, b_, x));\r\n                                            break;\r\n                                        case 'C':\r\n                                            var arg = symbol.args[0].clone(),\r\n                                                    dc = __.integration.decompose_arg(arg, dx),\r\n                                                    x_ = dc[1],\r\n                                                    a_ = dc[0];\r\n                                            var b_ = dc[3];\r\n                                            retval = _.parse(format('(pi*(({1})+({0})*({2}))*C(({1})+({0})*({2}))-sin((1/2)*pi*(({1})+({0})*({2}))^2))/(({0})*pi)', a_, b_, x_));\r\n                                            break;\r\n                                        case 'erf':\r\n                                            var arg = symbol.args[0].clone(),\r\n                                                    dc = __.integration.decompose_arg(arg, dx),\r\n                                                    x_ = dc[1],\r\n                                                    a_ = dc[0];\r\n                                            retval = _.parse(format('e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))', a_, x_, arg));\r\n                                            break;\r\n                                        case 'sign':\r\n                                            retval = _.multiply(symbol.clone(), arg.clone());\r\n                                            break;\r\n                                        default:\r\n                                            __.integration.stop();\r\n                                    }\r\n\r\n                                    retval = _.divide(retval, a);\r\n                                }\r\n                            }\r\n                            else if(x.isLinear()) {\r\n                                if(fname === COS || fname === SIN) {\r\n                                    var p = Number(symbol.power);\r\n                                    //check to see if it's negative and then just transform it to sec or csc\r\n                                    if(p < 0) {\r\n                                        symbol.fname = fname === SIN ? CSC : SEC;\r\n                                        symbol.invert().updateHash();\r\n                                        retval = __.integrate(symbol, dx, depth);\r\n                                    }\r\n                                    else {\r\n                                        var arg = symbol.args[0],\r\n                                                rd = symbol.clone(), //cos^(n-1)\r\n                                                rd2 = symbol.clone(), //cos^(n-2)\r\n                                                q = new Symbol((p - 1) / p), //\r\n                                                na = _.multiply(a.clone(), new Symbol(p)).invert(); //1/(n*a)\r\n                                        rd.power = rd.power.subtract(new Frac(1));\r\n                                        rd2.power = rd2.power.subtract(new Frac(2));\r\n\r\n                                        var t = _.symfunction(fname === COS ? SIN : COS, [arg.clone()]);\r\n                                        if(fname === SIN)\r\n                                            t.negate();\r\n                                        retval = _.add(_.multiply(_.multiply(na, rd), t), _.multiply(q, __.integrate(_.parse(rd2), dx, depth)));\r\n                                    }\r\n                                }\r\n                                //tan(x)^n or cot(x)^n\r\n                                else if(fname === TAN || fname === COT) {\r\n                                    //http://www.sosmath.com/calculus/integration/moretrigpower/moretrigpower.html\r\n                                    if(symbol.args[0].isLinear(dx)) {\r\n                                        var n = symbol.power.subtract(new Frac(1)).toString(),\r\n                                                r = symbol.clone().toUnitMultiplier(),\r\n                                                w = _.parse(format((fname === COT ? '-' : '') + '1/({2}*{0})*{3}({1})^({0})', n, arg, a, fname));\r\n                                        r.power = r.power.subtract(new Frac(2));\r\n                                        if(r.power.equals(0))\r\n                                            r = _.parse(r);\r\n                                        retval = _.subtract(w, __.integrate(r, dx, depth));\r\n                                    }\r\n                                }\r\n                                //sec(x)^n or csc(x)^n\r\n                                else if(fname === SEC || fname === CSC) {\r\n                                    //http://www.sosmath.com/calculus/integration/moretrigpower/moretrigpower.html\r\n                                    var n1 = symbol.power.subtract(new Frac(1)).toString(),\r\n                                            n2 = symbol.power.subtract(new Frac(2)).toString(),\r\n                                            f2 = fname === SEC ? TAN : COT,\r\n                                            r = symbol.clone().toUnitMultiplier(),\r\n                                            parse_str = format((fname === CSC ? '-' : '') + '1/({0}*{1})*{4}({3})^({2})*{5}({3})', a, n1, n2, arg, fname, f2),\r\n                                            w = _.parse(parse_str);\r\n                                    r.power = r.power.subtract(new Frac(2));\r\n                                    if(r.power.equals(0))\r\n                                        r = _.parse(r);\r\n                                    retval = _.add(w, _.multiply(new Symbol(n2 / n1), __.integrate(r, dx, depth)));\r\n                                }\r\n                                else if((fname === COSH || fname === SINH) && symbol.power.equals(2)) {\r\n                                    retval = __.integrate(symbol.fnTransform(), dx, depth);\r\n                                }\r\n                                else\r\n                                    __.integration.stop();\r\n                            }\r\n                            else\r\n                                __.integration.stop();\r\n\r\n                            retval.multiplier = retval.multiplier.multiply(m);\r\n                        }\r\n                    }\r\n                    else if(g === PL) {\r\n                        retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                    }\r\n                    else if(g === CB) {\r\n                        var den = symbol.getDenom();\r\n                        if(den.group === S)\r\n                            symbol = _.expand(symbol);\r\n\r\n                        //separate the coefficient since all we care about are symbols containing dx\r\n                        var coeff = symbol.stripVar(dx);\r\n                        //now get only those that apply\r\n                        var cfsymbol = _.divide(symbol.clone(), coeff.clone()); //a coeff free symbol\r\n                        //peform a correction for stripVar. This is a serious TODO!\r\n                        if(coeff.contains(dx)) {\r\n                            cfsymbol = _.multiply(cfsymbol, coeff);\r\n                            coeff = new Symbol(1);\r\n                        }\r\n\r\n                        //if we only have one symbol left then let's not waste time. Just pull the integral\r\n                        //and let the chips fall where they may\r\n                        if(cfsymbol.group !== CB) {\r\n                            if(cfsymbol.equals(1)) {\r\n                                return __.integrate(_.expand(symbol), dx, depth);\r\n                            }\r\n\r\n                            //only factor for multivariate which are polynomials\r\n                            if(cfsymbol.clone().toLinear().isPoly(true) && core.Utils.variables(cfsymbol).length > 1) {\r\n                                cfsymbol = core.Algebra.Factor.factor(cfsymbol);\r\n                            }\r\n\r\n                            retval = __.integrate(cfsymbol, dx, depth);\r\n                        }\r\n                        else {\r\n                            //we collect the symbols and sort them descending group, descending power, descending alpabethically\r\n                            var symbols = cfsymbol.collectSymbols().sort(function (a, b) {\r\n                                if(a.group === b.group) {\r\n                                    if(Number(a.power) === Number(b.power))\r\n                                        if(a < b)\r\n                                            return 1; //I want sin first\r\n                                        else\r\n                                            return -1;\r\n                                    return b.power - a.power; //descending power\r\n                                }\r\n                                return b.group - a.group; //descending groups\r\n                            }).map(function (x) {\r\n                                var unwrapped = Symbol.unwrapSQRT(x, true);\r\n                                if(unwrapped.fname === EXP) {\r\n                                    return _.parse(format('({1})*e^({0})', unwrapped.args[0], unwrapped.multiplier));\r\n                                }\r\n                                return unwrapped;\r\n                            });\r\n                            var l = symbols.length;\r\n                            if(symbol.power < 0) {\r\n                                if(l === 2) {\r\n                                    return __.integrate(_.expand(symbol), dx, depth, opt);\r\n                                }\r\n                            }\r\n                            //otherwise the denominator is one lumped together symbol \r\n                            else {\r\n                                //generate an image for \r\n                                if(l === 2) {\r\n                                    //try u substitution\r\n                                    try {\r\n                                        retval = __.integration.u_substitution(symbols, dx);\r\n                                    }\r\n                                    catch(e) {/* failed :`(*/\r\n                                        ;\r\n                                    }\r\n\r\n                                    if(!retval) {\r\n                                        //no success with u substitution so let's try known combinations\r\n                                        //are they two functions\r\n                                        var g1 = symbols[0].group,\r\n                                                g2 = symbols[1].group,\r\n                                                sym1 = symbols[0],\r\n                                                sym2 = symbols[1],\r\n                                                fn1 = sym1.fname,\r\n                                                fn2 = sym2.fname;\r\n                                        //reset the symbol minus the coeff\r\n                                        symbol = _.multiply(sym1.clone(), sym2.clone());\r\n                                        if(g1 === FN && g2 === FN) {\r\n                                            if(fn1 === LOG || fn2 === LOG) {\r\n                                                retval = __.integration.by_parts(symbol.clone(), dx, depth, opt);\r\n                                            }\r\n                                            else {\r\n                                                symbols.sort(function (a, b) {\r\n                                                    return b.fname > a.fname;\r\n                                                });\r\n                                                var arg1 = sym1.args[0];\r\n                                                //make sure the arguments are suitable. We don't know how to integrate non-linear arguments\r\n                                                if(!arg1.isLinear() || !(arg1.group === CP || arg1.group === CB || arg1.group === S))\r\n                                                    __.integration.stop();\r\n\r\n                                                var decomp = __.integration.decompose_arg(arg1, dx);\r\n                                                x = decomp[1],\r\n                                                        a = decomp[0];\r\n                                                if(!x.isLinear()) //again... linear arguments only wrt x\r\n                                                    __.integration.stop();\r\n\r\n                                                //they have to have the same arguments and then we have cleared all the check to \r\n                                                //make sure we can integrate FN & FN\r\n                                                var arg2 = sym2.args[0];\r\n                                                //make sure that their argument matches\r\n                                                if(arg1.equals(arg2)) {\r\n                                                    if(fn1 === SIN && fn2 === COS || fn1 === COS && fn2 === SIN) {\r\n                                                        if(sym1.power.lessThan(0))\r\n                                                            __.integration.stop();//we don't know how to handle, sin(x)^n/cos(x)^m where m > n,  yet\r\n                                                        //if it's in the form sin(x)^n*cos(x)^n then we can just return tan(x)^n which we know how to integrate\r\n                                                        if(fn1 === SIN && sym1.power.add(sym2.power).equals(0)) {\r\n                                                            sym1.fname = TAN;\r\n                                                            sym1.updateHash();\r\n                                                            retval = __.integrate(sym1, dx, depth);\r\n                                                        }\r\n                                                        else {\r\n                                                            if(even(sym1.power) && fn2 === COS && sym2.power.lessThan(0)) {\r\n                                                                //transform sin^(2*n) to (1-cos^2)^n\r\n                                                                var n = Number(sym1.power) / 2,\r\n                                                                        new_sym = _.parse(format('(1-cos({0})^2)^({1})', sym1.args[0], n));\r\n                                                                retval = __.integrate(_.expand(_.multiply(new_sym, sym2.clone())), dx, depth, opt);\r\n                                                            }\r\n                                                            else if(even(sym1.power) && fn2 === SIN && sym2.power.lessThan(0)) {\r\n                                                                //transform cos^(2*n) to (1-sin^2)^n\r\n                                                                var n = Number(sym1.power) / 2,\r\n                                                                        new_sym = _.parse(format('(1-sin({0})^2)^({1})', sym1.args[0], n));\r\n                                                                retval = __.integrate(_.expand(_.multiply(new_sym, sym2.clone())), dx, depth, opt);\r\n                                                            }\r\n                                                            else {\r\n                                                                var p1_even = core.Utils.even(sym1.power),\r\n                                                                        p2_even = core.Utils.even(sym2.power);\r\n                                                                retval = new Symbol(0);\r\n                                                                if(!p1_even || !p2_even) {\r\n                                                                    var u, r, trans;\r\n                                                                    //since cos(x) is odd it carries du. If sin was odd then it would be the other way around\r\n                                                                    //know that p1 satifies the odd portion in this case. If p2 did than it would contain r\r\n                                                                    if(!p1_even) {\r\n                                                                        //u = sin(x)\r\n                                                                        u = sym2;\r\n                                                                        r = sym1;\r\n                                                                    }\r\n                                                                    else {\r\n                                                                        u = sym1;\r\n                                                                        r = sym2;\r\n                                                                    }\r\n                                                                    //get the sign of du. In this case r carries du as stated before and D(cos(x),x) = -sin(x)\r\n                                                                    var sign = u.fname === COS ? -1 : 1,\r\n                                                                            n = r.power,\r\n                                                                            //remove the du e.g. cos(x)^2*sin(x)^3 dx -> cos(x)^2*sin(x)^2*sin(x). We're left with two \r\n                                                                            //even powers afterwards which can be transformed\r\n                                                                            k = (n - 1) / 2,\r\n                                                                            //make the transformation cos(x)^2 = 1 - sin(x)^2\r\n                                                                            trans = _.parse('(1-' + u.fname + core.Utils.inBrackets(arg1) + '^2)^' + k),\r\n                                                                            sym = _.expand(_.multiply(new Symbol(sign), _.multiply(u.clone(), trans)));\r\n                                                                    //we can now just loop through and integrate each since it's now just a polynomial with functions\r\n                                                                    sym.each(function (x) {\r\n                                                                        retval = _.add(retval, __.integration.poly_integrate(x.clone()));\r\n                                                                    });\r\n                                                                }\r\n                                                                else {\r\n                                                                    //performs double angle transformation\r\n                                                                    var double_angle = function (symbol) {\r\n                                                                        var p = symbol.power,\r\n                                                                                k = p / 2, e;\r\n                                                                        if(symbol.fname === COS)\r\n                                                                            e = '((1/2)+(cos(2*(' + symbol.args[0] + '))/2))^' + k;\r\n                                                                        else\r\n                                                                            e = '((1/2)-(cos(2*(' + symbol.args[0] + '))/2))^' + k;\r\n\r\n                                                                        return _.parse(e);\r\n                                                                    };\r\n                                                                    //they're both even so transform both using double angle identities and we'll just\r\n                                                                    //be able to integrate by the sum of integrals\r\n                                                                    var a = double_angle(sym1),\r\n                                                                            b = double_angle(sym2),\r\n                                                                            t = _.multiply(a, b);\r\n                                                                    var sym = _.expand(t);\r\n                                                                    sym.each(function (x) {\r\n                                                                        retval = _.add(retval, __.integrate(x, dx, depth));\r\n                                                                    });\r\n                                                                    return _.multiply(retval, coeff);\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                    //tan(x)*sec(x)^n \r\n                                                    else if(fn1 === SEC && fn2 === TAN && x.isLinear() && sym2.isLinear()) {\r\n                                                        retval = _.parse(format('sec({0})^({1})/({1})', sym1.args[0], sym1.power));\r\n                                                    }\r\n                                                    else if(fn1 === TAN && fn2 === SEC && x.isLinear()) {\r\n                                                        //remaining: tan(x)^3*sec(x)^6\r\n                                                        if(sym1.isLinear() && sym2.isLinear()) {\r\n                                                            retval = _.divide(_.symfunction(SEC, [arg1.clone()]), a);\r\n                                                        }\r\n                                                        else if(even(sym1.power)) {\r\n                                                            var p = Number(sym1.power) / 2;\r\n                                                            //transform tangent\r\n                                                            var t = _.parse(format('(sec({0})^2-1)^({1})', sym1.args[0], p));\r\n                                                            retval = __.integrate(_.expand(_.multiply(t, sym2)), dx, depth);\r\n                                                        }\r\n                                                        else\r\n                                                            __.integration.stop();\r\n                                                    }\r\n                                                    else if(fn1 === SEC && fn2 === COS) {\r\n                                                        sym1.fname = COS;\r\n                                                        sym1.invert().updateHash();\r\n                                                        retval = __.integrate(_.multiply(sym1, sym2), dx, depth);\r\n                                                    }\r\n                                                    else if(fn1 === SIN && fn2 === CSC) {\r\n                                                        sym2.fname = SIN;\r\n                                                        sym2.invert().updateHash();\r\n                                                        retval = __.integrate(_.multiply(sym1, sym2), dx, depth);\r\n                                                    }\r\n                                                    //tan/cos\r\n                                                    else if(fn1 === TAN && (fn2 === COS || fn2 === SIN) && sym2.power.lessThan(0)) {\r\n                                                        var t = _.multiply(sym1.fnTransform(), sym2);\r\n                                                        retval = __.integrate(_.expand(t), dx, depth);\r\n                                                    }\r\n                                                    else {\r\n                                                        var t = _.multiply(sym1.fnTransform(), sym2.fnTransform());\r\n                                                        retval = __.integrate(_.expand(t), dx, depth);\r\n                                                    }\r\n                                                }\r\n                                                //TODO: In progress\r\n                                                else if((fn1 === SIN || fn1 === COS) && (fn2 === SIN || fn2 === COS)) {\r\n\r\n                                                    if(sym1.isLinear() && sym2.isLinear()) {\r\n                                                        //if in the form cos(a*x)*sin(b*x)\r\n                                                        if(sym1.args[0].isLinear() && sym2.args[0].isLinear()) {\r\n                                                            //use identity (sin(b*x+a*x)+sin(b*x-a*x))/2\r\n                                                            var ax, bx;\r\n                                                            if(fn2 === SIN) {\r\n                                                                ax = sym1.args[0];\r\n                                                                bx = sym2.args[0];\r\n                                                            }\r\n                                                            else {\r\n                                                                bx = sym1.args[0];\r\n                                                                ax = sym2.args[0];\r\n                                                            }\r\n\r\n                                                            //make the transformation\r\n                                                            f = _.parse(format('(sin(({1})+({0}))+sin(({1})-({0})))/2', ax.toString(), bx.toString()));\r\n\r\n                                                            //integrate it\r\n                                                            retval = __.integrate(f, dx, depth);\r\n                                                        }\r\n                                                        else {\r\n                                                            var transformed = trigTransform(symbols);\r\n                                                            retval = __.integrate(_.expand(transformed), dx, depth);\r\n                                                        }\r\n                                                    }\r\n                                                    else {\r\n                                                        var transformed = new Symbol(1);\r\n                                                        symbols.map(function (sym) {\r\n                                                            var s = sym.fnTransform();\r\n                                                            transformed = _.multiply(transformed, s);\r\n                                                        });\r\n                                                        var t = _.expand(transformed);\r\n\r\n                                                        retval = __.integrate(t, dx, depth);\r\n\r\n                                                        if(retval.hasIntegral()) {\r\n                                                            retval = __.integrate(trigTransform(transformed.collectSymbols()), dx, depth);\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                else {\r\n                                                    __.integration.stop();\r\n                                                }\r\n\r\n                                            }\r\n                                        }\r\n                                        else if(g1 === FN && g2 === S) {\r\n                                            var sym1_is_linear = sym1.isLinear();\r\n                                            if(sym1.fname === COS && sym1_is_linear && sym2.power.equals(-1))\r\n                                                retval = _.symfunction('Ci', [sym1.args[0]]);\r\n                                            else if(sym1.fname === COS && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === COSH && sym1_is_linear && sym2.power.equals(-1))\r\n                                                retval = _.symfunction('Chi', [sym1.args[0]]);\r\n                                            else if(sym1.fname === COSH && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === SIN && sym1_is_linear && sym2.power.equals(-1))\r\n                                                retval = _.symfunction('Si', [sym1.args[0]]);\r\n                                            else if(sym1.fname === SIN && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === SINH && sym1_is_linear && sym2.power.equals(-1))\r\n                                                retval = _.symfunction('Shi', [sym1.args[0]]);\r\n                                            else if(sym1.fname === SINH && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === LOG && sym2.power.equals(-1)) {\r\n                                                //log(x)^n/x = log(x)^(n+1)/(n+1)\r\n                                                retval = __.integration.poly_integrate(sym1, dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === 'erf') {\r\n                                                if(sym2.power.equals(1)) {\r\n                                                    var dc = __.integration.decompose_arg(sym1.args[0], dx),\r\n                                                            a_ = dc[0],\r\n                                                            x_ = dc[1],\r\n                                                            arg = sym1.args[0].toString();\r\n                                                    retval = _.parse(format('(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)', a_, x_, arg))\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                //since group S is guaranteed convergence we need not worry about tracking depth of integration\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            }\r\n                                        }\r\n                                        else if(g1 === EX && g2 === S) {\r\n                                            var x = fn1 === LOG ? __.integration.decompose_arg(sym1.args[0], dx)[1] : null;\r\n                                            if(sym1.isE() && (sym1.power.group === S || sym1.power.group === CB) && sym2.power.equals(-1)) {\r\n                                                retval = _.symfunction('Ei', [sym1.power.clone()]);\r\n                                            }\r\n                                            else if(fn1 === LOG && x.value === sym2.value) {\r\n                                                retval = __.integration.poly_integrate(sym1, dx, depth);\r\n                                            }\r\n                                            else\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                        }\r\n                                        else if(g1 === PL && g2 === S) {\r\n                                            //first try to reduce the top\r\n                                            if(sym2.value === sym1.value && sym1.power.equals(-1)) {\r\n                                                //find the lowest power in the denominator\r\n                                                var pd = Math.min.apply(null, core.Utils.keys(sym1.symbols));\r\n                                                //get the lowest common value between denominator and numerator\r\n                                                var pc = Math.min(pd, sym2.power);\r\n                                                //reduce both denominator and numerator by that factor\r\n                                                var factor = sym2.clone();\r\n                                                factor.power = new Frac(pc);\r\n                                                sym2 = _.divide(sym2, factor.clone()); //reduce the denominator\r\n                                                var t = new Symbol(0);\r\n                                                sym1.each(function (x) {\r\n                                                    t = _.add(t, _.divide(x.clone(), factor.clone()));\r\n                                                });\r\n                                                t.multiplier = sym1.multiplier;\r\n                                                symbol = _.divide(sym2, t);\r\n                                            }\r\n                                            else {\r\n                                                symbol = _.expand(symbol);\r\n                                            }\r\n                                            retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                        }\r\n                                        else if(g1 === CP && g2 === S) {\r\n                                            var f = sym1.clone().toLinear(),\r\n                                                    f_is_linear = core.Algebra.degree(f, _.parse(dx)).equals(1);\r\n                                            //handle cases x^(2*n)/sqrt(1-x^2)\r\n                                            if(sym1.power.equals(-1 / 2)) {\r\n                                                var decomp = __.integration.decompose_arg(sym1.clone().toLinear(), dx);\r\n                                                var a = decomp[0].negate(),\r\n                                                        x = decomp[1],\r\n                                                        b = decomp[3],\r\n                                                        p1 = Number(sym1.power),\r\n                                                        p2 = Number(sym2.power);\r\n                                                if(isInt(p2) && core.Utils.even(p2) && x.power.equals(2)) {\r\n                                                    //if the substitution \r\n                                                    var c = _.divide(_.multiply(_.pow(b.clone(), new Symbol(2)),\r\n                                                            _.symfunction(SQRT, [_.divide(b.clone(), a.clone())])),\r\n                                                            _.pow(a.clone(), new Symbol(2)));\r\n                                                    c = _.multiply(c, _.symfunction(SQRT, [b]).invert());\r\n                                                    var dummy = _.parse('sin(u)');\r\n                                                    dummy.power = dummy.power.multiply(sym2.power);\r\n                                                    var integral = __.integrate(dummy, 'u', depth);\r\n                                                    var bksub = _.parse(ASIN + '(' + SQRT + '(' + a + '/' + b + ')*' + dx + ')');\r\n                                                    retval = _.multiply(c, integral.sub(new Symbol('u'), bksub));\r\n                                                }\r\n                                                else if(p1 === -1 / 2) {\r\n                                                    var u_transform = function (f, u) {\r\n                                                        var integral = _.parse(__.integrate(f, dx, depth, opt).sub(dx, format(u, dx)));\r\n                                                        if(!integral.hasIntegral())\r\n                                                            return integral;\r\n                                                    }\r\n                                                    if(p2 === -1) {\r\n                                                        retval = u_transform(\r\n                                                                _.expand(_.expand(_.pow(_.multiply(sym1.invert(), sym2.invert()), new Symbol(2)))).invert(),\r\n                                                                'sqrt(1-1/({0})^2)'\r\n                                                                );\r\n                                                    }\r\n                                                    else if(p2 === -2) {\r\n                                                        //apply transformation to see if it matches asin(x)\r\n                                                        retval = u_transform(\r\n                                                                _.sqrt(_.expand(_.divide(_.pow(symbol, new Symbol(2)).invert(), _.pow(new Symbol(dx), new Symbol(2))).negate())).invert(),\r\n                                                                'sqrt(1-1/({0})^2)'\r\n                                                                );\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            else if(sym1.power.equals(-1) && sym2.isLinear() && f_is_linear) {\r\n                                                retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                            }\r\n                                            else if(!sym1.power.lessThan(0) && isInt(sym1.power)) {\r\n                                                //sum of integrals\r\n                                                var expanded = _.expand(sym1);\r\n                                                retval = new Symbol(0);\r\n                                                expanded.each(function (x) {\r\n                                                    if(x.group === PL) {\r\n                                                        x.each(function (y) {\r\n                                                            retval = _.add(retval, __.integrate(_.multiply(sym2.clone(), y), dx, depth));\r\n                                                        });\r\n                                                    }\r\n                                                    else\r\n                                                        retval = _.add(retval, __.integrate(_.multiply(sym2.clone(), x), dx, depth));\r\n                                                });\r\n                                            }\r\n                                            else if(sym1.power.lessThan(-2)) {\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            }\r\n                                            else if(sym1.power.lessThan(0) && sym2.power.greaterThan(1)) {\r\n                                                var decomp = __.integration.decompose_arg(sym1.clone().toLinear(), dx),\r\n                                                        a = decomp[0].negate(),\r\n                                                        x = decomp[1],\r\n                                                        b = decomp[3],\r\n                                                        fn = sym1.clone().toLinear();\r\n\r\n                                                if(x.group !== PL && x.isLinear()) {\r\n                                                    var p = Number(sym2.power),\r\n                                                            du = '_u_',\r\n                                                            u = new Symbol(du),\r\n                                                            //pull the integral with the subsitution\r\n                                                            U = _.expand(_.divide(_.pow(_.subtract(u.clone(), b.clone()), new Symbol(p)), u.clone())),\r\n                                                            scope = {};\r\n\r\n                                                    //generate a scope for resubbing the symbol\r\n                                                    scope[du] = fn;\r\n                                                    var U2 = _.parse(U, scope);\r\n                                                    retval = __.integrate(U2, dx, 0);\r\n                                                }\r\n                                                else if(sym2.power.greaterThan(x.power) || sym2.power.equals(x.power)) {\r\n\r\n                                                    //factor out coefficients\r\n                                                    var factors = new core.Algebra.Classes.Factors();\r\n                                                    sym1 = core.Algebra.Factor.coeffFactor(sym1.invert(), factors);\r\n                                                    var div = core.Algebra.divide(sym2, sym1);\r\n                                                    //it assumed that the result will be of group CB\r\n                                                    if(div.group !== CB) {\r\n                                                        retval = new Symbol(0);\r\n                                                        div.each(function (t) {\r\n                                                            retval = _.add(retval, __.integrate(t, dx, depth));\r\n                                                        });\r\n                                                        //put back the factors\r\n                                                        factors.each(function (factor) {\r\n                                                            retval = _.divide(retval, factor);\r\n                                                        });\r\n\r\n                                                        retval = _.expand(retval);\r\n                                                    }\r\n                                                    else {\r\n                                                        //try something else\r\n                                                        retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                                    }\r\n                                                }\r\n                                                else\r\n                                                    retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                            }\r\n                                            else {\r\n                                                //handle cases such as (1-x^2)^(n/2)*x^(m) where n is odd ___ cracking knuckles... This can get a little hairy \r\n                                                if(sym1.power.den.equals(2)) {\r\n                                                    //assume the function is in the form (a^2-b*x^n)^(m/2)\r\n                                                    var dc = __.integration.decompose_arg(sym1.clone().toLinear(), dx),\r\n                                                            //using the above definition\r\n                                                            a = dc[3], x = dc[1], b = dc[0], bx = dc[2];\r\n                                                    if(x.power.equals(2) && b.lessThan(0)) { //if n is even && b is negative\r\n                                                        //make a equal 1 so we can do a trig sub\r\n                                                        if(!a.equals(1)) { //divide a out of everything\r\n                                                            //move a to the coeff\r\n                                                            coeff = _.multiply(coeff, _.pow(a, new Symbol(2)));\r\n                                                        }\r\n                                                        var u = dx;\r\n                                                        var c = _.divide(_.pow(b.clone().negate(), new Symbol(1 / 2)), _.pow(a, new Symbol(1 / 2))),\r\n                                                                du = _.symfunction(COS, [new Symbol(u)]),\r\n                                                                cosn = _.pow(_.symfunction(COS, [new Symbol(u)]), new Symbol(sym1.power.num)),\r\n                                                                X = _.pow(_.symfunction(SIN, [new Symbol(u)]), new Symbol(sym2.power)),\r\n                                                                val = _.multiply(_.multiply(cosn, du), X),\r\n                                                                integral = __.integrate(val, u, depth);\r\n                                                        //but remember that u = asin(sqrt(b)*a*x)\r\n                                                        retval = integral.sub(u, _.symfunction(ASIN, [_.multiply(new Symbol(dx), c)]));\r\n                                                    }\r\n                                                    else {\r\n                                                        retval = __.integration.partial_fraction(symbol, dx, depth, opt);\r\n                                                    }\r\n                                                }\r\n                                                else if(f_is_linear) {\r\n                                                    retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                                }\r\n                                            }\r\n\r\n                                        }\r\n                                        else if(sym1.isComposite() && sym2.isComposite()) {\r\n                                            //sum of integrals\r\n                                            retval = new Symbol(0);\r\n                                            if(sym1.power.greaterThan(0) && sym2.power.greaterThan(0)) {\r\n                                                //combine and pull the integral of each\r\n                                                var sym = _.expand(symbol);\r\n                                                sym.each(function (x) {\r\n                                                    retval = _.add(retval, __.integrate(x, dx, depth));\r\n                                                }, true);\r\n                                            }\r\n                                            else {\r\n                                                var p1 = Number(sym1.power),\r\n                                                        p2 = Number(sym2.power);\r\n                                                if(p1 < 0 && p2 > 0) {\r\n                                                    //swap\r\n                                                    var t = sym1;\r\n                                                    sym1 = sym2;\r\n                                                    sym2 = t;\r\n                                                }\r\n                                                if(p1 === -1 && p2 === -1) {\r\n                                                    retval = __.integration.partial_fraction(symbol, dx);\r\n                                                }\r\n                                                else {\r\n                                                    sym1.each(function (x) {\r\n                                                        var k = _.multiply(x, sym2.clone());\r\n                                                        var integral = __.integrate(k, dx, depth);\r\n                                                        retval = _.add(retval, integral);\r\n                                                    });\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        else if(g1 === CP && symbols[0].power.greaterThan(0)) {\r\n                                            sym1 = _.expand(sym1);\r\n                                            retval = new Symbol(0);\r\n                                            sym1.each(function (x) {\r\n                                                retval = _.add(retval, __.integrate(_.multiply(x, sym2.clone()), dx, depth));\r\n                                            }, true);\r\n                                        }\r\n                                        else if(g1 === FN && g2 === EX && core.Utils.in_htrig(sym1.fname)) {\r\n                                            sym1 = sym1.fnTransform();\r\n                                            retval = __.integrate(_.expand(_.multiply(sym1, sym2)), dx, depth);\r\n                                        }\r\n                                        else if(g1 === FN && g2 === CP || g2 === FN && g1 === CP) {\r\n                                            if(g2 === FN && g1 === CP) {\r\n                                                var t = sym1;\r\n                                                sym1 = sym2;\r\n                                                sym2 = t; //swap\r\n                                            }\r\n                                            var du, sym2_clone, p, q, sa, sb;\r\n                                            du = Symbol.unwrapSQRT(__.diff(sym1.clone(), dx), true);\r\n                                            sym2_clone = Symbol.unwrapSQRT(sym2, true);\r\n                                            if(du.power.equals(sym2_clone.power)) {\r\n                                                p = new Symbol(sym2.power);\r\n                                                sa = du.clone().toLinear();\r\n                                                sb = sym2.clone().toLinear();\r\n                                                q = core.Algebra.divide(sa.toLinear(), sb);\r\n                                                if(q.isConstant()) {\r\n                                                    var nq = _.pow(q, p.negate());\r\n                                                    retval = _.multiply(nq, __.integration.poly_integrate(sym1.clone()));\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            var syma = sym1.clone().toLinear();\r\n                                            var symb = sym2.clone().toLinear();\r\n                                            if(g1 === EX && g2 === EX && sym1.power.contains(dx) && sym2.power.contains(dx)\r\n                                                    && !syma.contains(dx) && !symb.contains(dx)) {\r\n                                                retval = _.parse(format('(({0})^(({2})*({4}))*({1})^(({3})*({4})))/(log(({0})^({2}))+log(({1})^({3})))',\r\n                                                        syma.toString(),\r\n                                                        symb.toString(),\r\n                                                        sym1.power.multiplier.toString(),\r\n                                                        sym2.power.multiplier.toString(),\r\n                                                        dx\r\n                                                        ));\r\n                                            }\r\n                                            else\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else if(l === 3 && (symbols[2].group === S && symbols[2].power.lessThan(2) || symbols[0].group === CP)) {\r\n                                    var first = symbols[0];\r\n                                    if(first.group === CP) { //TODO {support higher powers of x in the future}\r\n                                        if(first.power.greaterThan(1))\r\n                                            first = _.expand(first);\r\n                                        var r = _.multiply(symbols[1], symbols[2]);\r\n                                        retval = new Symbol(0);\r\n                                        first.each(function (x) {\r\n                                            var t = _.multiply(x, r.clone());\r\n                                            var intg = __.integrate(t, dx, depth);\r\n                                            retval = _.add(retval, intg);\r\n                                        }, true);\r\n                                    }\r\n                                    else {\r\n                                        //try integration by parts although technically it will never work\r\n                                        retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                    }\r\n\r\n                                }\r\n                                else if(all_functions(symbols)) {\r\n                                    var t = new Symbol(1);\r\n                                    for(var i = 0, l = symbols.length; i < l; i++) {\r\n                                        t = _.multiply(t, symbols[i].fnTransform());\r\n                                    }\r\n                                    t = _.expand(t);\r\n                                    retval = __.integrate(t, dx, depth);\r\n                                }\r\n                                else {\r\n                                    //one more go\r\n                                    var transformed = trigTransform(symbols);\r\n                                    retval = __.integrate(_.expand(transformed), dx, depth);\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                        retval = _.multiply(retval, coeff);\r\n                    }\r\n                    //if an integral was found then we return it\r\n                    if(retval)\r\n                        return retval;\r\n                }\r\n\r\n                catch(error) {\r\n                    //do nothing if it's a NoIntegralFound error otherwise let it bubble\r\n                    if(!(error instanceof NoIntegralFound || error instanceof core.exceptions.DivisionByZero))\r\n                        throw error;\r\n                }\r\n\r\n                //no symbol found so we return the integral again\r\n                return _.symfunction('integrate', [original_symbol, dt]);\r\n            }, false);\r\n        },\r\n        defint: function (symbol, from, to, dx) {\r\n            dx = dx || 'x'; //make x the default variable of integration\r\n            var get_value = function (integral, vars, point) {\r\n                try {\r\n                    return _.parse(integral, vars);\r\n                }\r\n                catch(e) {\r\n                    //it failed for some reason so return the limit\r\n                    var lim = __.Limit.limit(integral, dx, point);\r\n                    return lim;\r\n                }\r\n            };\r\n\r\n            var vars = core.Utils.variables(symbol),\r\n                    hasTrig = symbol.hasTrig();\r\n            var retval, integral;\r\n\r\n            // Fix #593 - Only assume the first variable if dx is not defined.\r\n            if(vars.length === 1 && !dx)\r\n                dx = vars[0];\r\n\r\n            if(!hasTrig) {\r\n                integral = __.integrate(symbol, dx);\r\n            }\r\n\r\n            if(!hasTrig && !integral.hasIntegral()) {\r\n                var upper = {},\r\n                        lower = {},\r\n                        a, b;\r\n                upper[dx] = to;\r\n                lower[dx] = from;\r\n\r\n                a = get_value(integral, upper, to, dx);\r\n                b = get_value(integral, lower, from, dx);\r\n                retval = _.subtract(a, b);\r\n            }\r\n            else if(vars.length === 1 && from.isConstant() && to.isConstant()) {\r\n\r\n                var f = core.Utils.build(symbol);\r\n                retval = new Symbol(core.Math2.num_integrate(f, Number(from), Number(to)));\r\n            }\r\n            else\r\n                retval = _.symfunction('defint', [symbol, from, to, dx]);\r\n            return retval;\r\n        },\r\n\r\n        Limit: {\r\n            interval: function (start, end) {\r\n                return _.parse(format('[{0}, {1}]', start, end));\r\n            },\r\n            diverges: function () {\r\n                return __.Limit.interval('-Infinity', 'Infinity');\r\n            },\r\n            divide: function (f, g, x, lim, depth) {\r\n                if(depth++ > Settings.max_lim_depth) {\r\n                    return;\r\n                }\r\n\r\n                var fin = f.clone(), gin = g.clone();\r\n\r\n                //But first a little \"cheating\". x/|x| ends up in an infinite loop since the d/dx |x| -> x/|x|\r\n                //To break this loop we simply provide the answer. Keep in mind that currently limit only provides\r\n                //the two-sided limit.\r\n                //Known limit\r\n                if(g.fname === ABS) {\r\n                    var sign = f.sign();\r\n                    var lim_sign = lim.sign();\r\n\r\n                    if(lim.isInfinity)\r\n                        return _.multiply(new Symbol(sign), new Symbol(lim_sign));\r\n\r\n                    else if(lim.equals(0)) {\r\n                        var fm = _.parse(f.multiplier);\r\n                        var gm = _.parse(g.multiplier);\r\n                        return _.divide(_.multiply(fm, __.Limit.interval('-1', '1')), gm);\r\n                    }\r\n                    else {\r\n                        //TODO: Support more limits\r\n                        __.Limit.diverges();\r\n                    }\r\n                }\r\n\r\n                var isInfinity = function (L) {\r\n                    if(core.Utils.isVector(L)) {\r\n                        for(var i = 0; i < L.elements.length; i++)\r\n                            if(!L.elements[i].isInfinity)\r\n                                return false;\r\n                        return true;\r\n                    }\r\n                    return L.isInfinity;\r\n                };\r\n\r\n                var equals = function (L, v) {\r\n                    if(core.Utils.isVector(L)) {\r\n                        return false;\r\n                    }\r\n                    return L.equals(v);\r\n                };\r\n\r\n                var retval;\r\n                do {\r\n                    var lim1 = evaluate(__.Limit.limit(f.clone(), x, lim, depth));\r\n                    var lim2 = evaluate(__.Limit.limit(g.clone(), x, lim, depth));\r\n\r\n                    //if it's in indeterminate form apply L'Hospital's rule\r\n                    var indeterminate = isInfinity(lim1) && isInfinity(lim2) || equals(lim1, 0) && equals(lim2, 0);\r\n                    //pull the derivatives\r\n                    if(indeterminate) {\r\n                        var ft = __.diff(f.clone(), x);\r\n                        var gt = __.diff(g.clone(), x);\r\n\r\n                        var t_symbol = _.expand(_.divide(ft, gt));\r\n                        f = t_symbol.getNum();\r\n                        g = t_symbol.getDenom();\r\n\r\n                    }\r\n                }\r\n                while(indeterminate)\r\n\r\n                //REMEMBER: \r\n                //- 1/cos(x)\r\n                //n/0 is still possible since we only checked for 0/0\r\n                var den_is_zero = lim2.equals(0);\r\n                var p = Number(gin.power);\r\n\r\n                if(lim.isConstant(true) && den_is_zero) {\r\n                    retval = Symbol.infinity(core.Utils.even(p) && lim1.lessThan(0) ? -1 : undefined);\r\n                }\r\n                else if(den_is_zero) {\r\n                    retval = __.Limit.diverges();\r\n                }\r\n                else {\r\n                    retval = _.divide(lim1, lim2);\r\n                }\r\n\r\n                return retval;\r\n            },\r\n            rewriteToLog: function (symbol) {\r\n                var p = symbol.power.clone();\r\n                symbol.toLinear();\r\n                return _.pow(new Symbol('e'), _.multiply(p, _.symfunction(Settings.LOG + '', [symbol])));\r\n            },\r\n            getSubbed: function (f, x, lim) {\r\n                var retval;\r\n                //1. rewrite EX with base e\r\n                if(f.group === EX) {\r\n                    f = __.rewriteToLog(f);\r\n                }\r\n                //2. try simple substitution\r\n                try {\r\n                    retval = f.sub(x, lim);\r\n                }\r\n                catch(e) {\r\n                    //Nope. No go, so just return the unsubbed function so we can test the limit instead.\r\n                    retval = f;\r\n                }\r\n\r\n                return retval;\r\n            },\r\n            isInterval: function (limit) {\r\n                return core.Utils.isVector(limit);\r\n            },\r\n            isConvergent: function (limit) {\r\n                //it's not convergent if it lies on the interval -Infinity to Infinity\r\n                if(\r\n                        //It lies on the interval -Infinity to Infinity\r\n                        __.Limit.isInterval(limit) && limit.elements[0].isInfinity && limit.elements[1].isInfinity ||\r\n                        //We weren't able to calculate the limit\r\n                        limit.containsFunction('limit')\r\n                        ) {\r\n                    return false; //Then no\r\n                }\r\n                return true; //It is\r\n            },\r\n            limit: function (symbol, x, lim, depth) {\r\n                //Simplify the symbol\r\n                if(symbol.isLinear() && symbol.isComposite()) {\r\n\r\n                    //Apply sum of limits\r\n                    var limit = new Symbol(0);\r\n                    symbol.each(function (s) {\r\n                        limit = _.add(limit, __.Limit.limit(s, x, lim, depth));\r\n                    }, true);\r\n\r\n                    return limit;\r\n                }\r\n                ;\r\n\r\n                symbol = core.Algebra.Simplify.simplify(symbol);\r\n\r\n                depth = depth || 1;\r\n\r\n                if(depth++ > Settings.max_lim_depth) {\r\n                    return;\r\n                }\r\n\r\n                //store the multiplier\r\n                var m = _.parse(symbol.multiplier);\r\n                //strip the multiplier\r\n                symbol.toUnitMultiplier();\r\n                try {\r\n                    //https://en.wikipedia.org/wiki/List_of_limits\r\n                    var retval;\r\n                    //we try the simplest option first where c is some limit\r\n                    //lim a as x->c = a where c \r\n                    if(symbol.isConstant(true)) {\r\n                        retval = symbol;\r\n                    }\r\n                    else {\r\n                        var point = {};\r\n                        point[x] = lim;\r\n                        //lim x as x->c = c where c\r\n\r\n                        try {\r\n\r\n                            //evaluate the function at the given limit\r\n                            var t = _.parse(symbol.sub(x, lim), point);\r\n\r\n                            //a constant or infinity is known so we're done\r\n                            if(t.isConstant(true) || t.isInfinity)\r\n                                retval = t;\r\n\r\n                        }\r\n                        catch(e) { /*Nothing. Maybe we tried to divide by zero.*/\r\n                        }\r\n                        ;\r\n\r\n                        if(!retval) {\r\n                            //split the symbol in the numerator and the denominator\r\n                            var num = symbol.getNum();\r\n                            var den = symbol.getDenom();\r\n\r\n                            if(den.isConstant(true)) {\r\n                                //We still don't have a limit so we generate tests.\r\n                                if(symbol.group === EX) {\r\n                                    //https://en.wikipedia.org/wiki/List_of_limits\r\n                                    //Speed boost for exponentials by detecting patterns\r\n                                    var f = symbol.clone().toLinear();\r\n                                    var p = symbol.power.clone();\r\n                                    var _num = f.getNum();\r\n                                    var _den = f.getDenom();\r\n                                    var fn = core.Utils.decompose_fn(_den, x, true);\r\n                                    //start detection of pattern (x/(x+1))^x\r\n                                    if(_num.group === S && _num.multiplier.isOne() && fn.ax.group === S && fn.b.isConstant(true) && fn.a.isOne() && fn.b.isConstant(true)) {\r\n                                        retval = _.parse(format('(1/e^({0}))', fn.b));\r\n                                    }\r\n                                    else {\r\n                                        var symbol_ = __.Limit.rewriteToLog(symbol.clone());\r\n                                        //get the base\r\n                                        var pow = symbol_.power.clone();\r\n                                        var base = symbol_.clone().toLinear();\r\n                                        var lim_base = __.Limit.limit(base, x, lim, depth);\r\n                                        var lim_pow = __.Limit.limit(pow, x, lim, depth);\r\n                                        retval = _.pow(lim_base, lim_pow);\r\n                                    }\r\n                                }\r\n                                else if(symbol.group === FN && symbol.args.length === 1) {\r\n                                    var evaluates;\r\n                                    //Squeeze theorem lim f(g(x)) = lim f(lim g))\r\n                                    var arg = __.Limit.limit(symbol.args[0], x, lim, depth);\r\n                                    if(core.Utils.isVector(arg)) {\r\n                                        //get the limit over that interval\r\n                                        retval = arg.map(function (e) {\r\n                                            var clone = symbol.clone();\r\n                                            clone.args[0] = e;\r\n                                            return __.Limit.limit(_.symfunction(symbol.fname, [e]), x, lim, depth);\r\n                                        });\r\n\r\n                                        return _.multiply(m, retval);\r\n                                    }\r\n                                    //if the argument is constant then we're done\r\n                                    else if(arg.isConstant(true)) {\r\n\r\n                                        //double check that it evaluates\r\n                                        var trial = _.symfunction(symbol.fname, [arg]);\r\n                                        //trial evaluation\r\n                                        try {\r\n                                            evaluate(trial);\r\n                                            evaluates = true;\r\n                                        }\r\n                                        catch(e) {\r\n\r\n                                            evaluates = false;\r\n                                        }\r\n                                    }\r\n                                    if(evaluates) {\r\n                                        retval = trial;\r\n                                    }\r\n                                    else {\r\n                                        //if the limit converges. We'll deal with non-convergent ones later\r\n                                        if(__.Limit.isConvergent(arg)) {\r\n                                            if(symbol.fname === LOG) {\r\n                                                switch(arg.toString()) {\r\n                                                    //lim -> 0\r\n                                                    case '0':\r\n                                                        retval = Symbol.infinity().negate();\r\n                                                        break;\r\n                                                    case 'Infinity':\r\n                                                        retval = Symbol.infinity();\r\n                                                        break;\r\n                                                    case '-Infinity':\r\n                                                        retval = Symbol.infinity();\r\n                                                        break;\r\n                                                }\r\n                                            }\r\n                                            else if((symbol.fname === COS || symbol.fname === SIN) && lim.isInfinity) {\r\n                                                retval = __.Limit.interval(-1, 1);\r\n                                            }\r\n                                            else if((symbol.fname === TAN)) {\r\n                                                var s_arg = symbol.args[0];\r\n                                                var n = s_arg.getNum();\r\n                                                var d = s_arg.getDenom();\r\n                                                var pi = n.toUnitMultiplier();\r\n                                                if(lim.isInfinity || pi.equals('pi') && d.equals(2)) {\r\n                                                    retval = divergent();\r\n                                                }\r\n                                            }\r\n                                            else if(symbol.fname === Settings.FACTORIAL) {\r\n                                                if(arg.isInfinity)\r\n                                                    return Symbol.infinity();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else if(symbol.group === S) {\r\n                                    if(symbol.power > 0)\r\n                                        //these functions always converge to the limit\r\n                                        return _.parse(symbol, point);\r\n                                    else {\r\n                                        //we're dealing with 1/x^n but remember that infinity has already been dealt\r\n                                        //with by substitution\r\n                                        if(core.Utils.even(symbol.power)) {\r\n                                            //even powers converge to infinity\r\n                                            retval = Symbol.infinity();\r\n                                        }\r\n                                        else {\r\n                                            //odd ones don't\r\n                                            retval = __.Limit.diverges();\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else if(symbol.group === CB) {\r\n\r\n                                    var lim1, lim2;\r\n                                    //loop through all the symbols\r\n                                    //thus => lim f*g*h = lim (f*g)*h = (lim f*g)*(lim h)\r\n                                    //symbols of lower groups are generally easier to differentiatee so get them to the right by first sorting\r\n                                    var symbols = symbol.collectSymbols().sort(function (a, b) {\r\n                                        return a.group - b.group;\r\n                                    });\r\n\r\n                                    var f = symbols.pop();\r\n                                    //calculate the first limit so we can keep going down the list\r\n                                    lim1 = evaluate(__.Limit.limit(f, x, lim, depth));\r\n\r\n                                    //reduces all the limits one at a time\r\n                                    while(symbols.length) {\r\n                                        //get the second limit\r\n                                        var g = symbols.pop();\r\n                                        //get the limit of g\r\n                                        lim2 = evaluate(__.Limit.limit(g, x, lim, depth));\r\n\r\n                                        //if the limit is in indeterminate form aplly L'Hospital by inverting g and then f/(1/g)\r\n                                        if((lim1.isInfinity || !__.Limit.isConvergent(lim1) && lim2.equals(0) || lim1.equals(0) && __.Limit.isConvergent(lim2))) {\r\n                                            if(g.containsFunction(LOG)) {\r\n                                                //swap them\r\n                                                g = [f, f = g][0];\r\n                                            }\r\n                                            //invert the symbol\r\n                                            g.invert();\r\n\r\n                                            // Product of infinities\r\n                                            if(lim1.isInfinity && lim2.isInfinity) {\r\n                                                lim1 = Symbol.infinity()\r\n                                            }\r\n                                            else {\r\n                                                lim1 = __.Limit.divide(f, g, x, lim, depth);\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            //lim f*g = (lim f)*(lim g)\r\n                                            lim1 = _.multiply(lim1, lim2);\r\n                                            //let f*g equal f and h equal g \r\n                                            f = _.multiply(f, g);\r\n                                        }\r\n                                    }\r\n\r\n                                    //Done, lim1 is the limit we're looking for     \r\n                                    retval = lim1;\r\n                                }\r\n                                else if(symbol.isComposite()) {\r\n                                    var _lim;\r\n                                    if(!symbol.isLinear())\r\n                                        symbol = _.expand(symbol);\r\n                                    //Apply lim f+g = (lim f)+(lim g)\r\n                                    retval = new Symbol(0);\r\n\r\n                                    var symbols = symbol.collectSymbols().sort(function (a, b) {\r\n                                        return b.group - a.group;\r\n                                    });\r\n\r\n                                    var _symbols = [];\r\n                                    //Analyze the functions first\r\n                                    var fns = new Symbol(0);\r\n                                    for(var i = 0, l = symbols.length; i < l; i++) {\r\n                                        var sym = symbols[i].clone();\r\n                                        if(sym.group === FN || sym.group === CB && sym.hasFunc()) {\r\n                                            fns = _.add(fns, sym);\r\n                                        }\r\n                                        else\r\n                                            _symbols.push(sym);\r\n                                    }\r\n                                    _symbols.unshift(fns);\r\n\r\n                                    //make sure that we didn't just repackage the exact same symbol\r\n                                    if(_symbols.length !== 1) {\r\n                                        symbols = _symbols;\r\n                                    }\r\n\r\n                                    for(var i = 0, l = symbols.length; i < l; i++) {\r\n                                        var sym = symbols[i];\r\n                                        //If the addition of the limits is undefined then the limit diverges so return -infinity to infinity\r\n                                        try {\r\n                                            _lim = __.Limit.limit(sym, x, lim, depth);\r\n                                        }\r\n                                        catch(e) {\r\n                                            _lim = __.Limit.diverges();\r\n                                        }\r\n\r\n                                        try {\r\n                                            retval = _.add(retval, _lim);\r\n                                        }\r\n                                        catch(e) {\r\n                                            if(depth++ > Settings.max_lim_depth) {\r\n                                                return;\r\n                                            }\r\n                                            ;\r\n                                            retval = __.Limit.limit(__.diff(symbol, x), x, lim, depth);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                retval = __.Limit.divide(num, den, x, lim, depth);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //if we still don't have a solution\r\n                    if(!retval)\r\n                        //return it symbolically\r\n                        retval = _.symfunction('limit', [symbol, x, lim]);\r\n                }\r\n                catch(e) {\r\n                    //if all else fails return the symbolic function\r\n                    retval = _.symfunction('limit', [symbol, x, lim]);\r\n                }\r\n\r\n                return _.multiply(m, retval);\r\n            }\r\n        },\r\n        Fresnel: {\r\n            S: function (x) {\r\n                if(x.isConstant(true)) {\r\n                    return __.defint(_.parse('sin(pi*x^2/2)'), Symbol(0), x, 'x');\r\n                }\r\n                return _.symfunction('S', arguments);\r\n            },\r\n            C: function (x) {\r\n                if(x.isConstant(true)) {\r\n                    return __.defint(_.parse('cos(pi*x^2/2)'), Symbol(0), x, 'x');\r\n                }\r\n                return _.symfunction('C', arguments);\r\n            }\r\n        }\r\n    };\r\n\r\n    nerdamer.register([\r\n        {\r\n            name: 'diff',\r\n            visible: true,\r\n            numargs: [1, 3],\r\n            build: function () {\r\n                return __.diff;\r\n            }\r\n        },\r\n        {\r\n            name: 'sum',\r\n            visible: true,\r\n            numargs: 4,\r\n            build: function () {\r\n                return __.sum;\r\n            }\r\n        },\r\n        {\r\n            name: 'product',\r\n            visible: true,\r\n            numargs: 4,\r\n            build: function () {\r\n                return __.product;\r\n            }\r\n        },\r\n        {\r\n            name: 'integrate',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                return __.integrate;\r\n            }\r\n        },\r\n        {\r\n            name: 'defint',\r\n            visible: true,\r\n            numargs: [3, 4],\r\n            build: function () {\r\n                return __.defint;\r\n            }\r\n        },\r\n        {\r\n            name: 'S',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function () {\r\n                return __.Fresnel.S;\r\n            }\r\n        },\r\n        {\r\n            name: 'C',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function () {\r\n                return __.Fresnel.C;\r\n            }\r\n        },\r\n        {\r\n            name: 'limit',\r\n            visible: true,\r\n            numargs: [3, 4],\r\n            build: function () {\r\n                return __.Limit.limit;\r\n            }\r\n        }\r\n    ]);\r\n    //link registered functions externally\r\n    nerdamer.updateAPI();\r\n\r\n})();","var nerdamer=function(e){\"use strict\";var d=new P,S=e.bigInt,k=e.bigDec;k.set({precision:250});var t={},o=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083],M={},D={callPeekers:!1,init_primes:1e3,exclude:[],suppress_errors:!1,PARSE2NUMBER:!1,SAFE:!1,IMAGINARY:\"i\",FUNCTION_MODULES:[Math],ALLOW_CHARS:[\"π\"],USE_MULTICHARACTER_VARS:!0,POWER_OPERATOR:\"^\",VALIDATION_REGEX:/^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,IMPLIED_MULTIPLICATION_REGEX:/([\\+\\-\\/\\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\\+\\-\\/\\*]*)/gi,ALIASES:{\"π\":\"pi\",\"∞\":\"Infinity\"},POSITIVE_MULTIPLIERS:!1,CACHE:{},SILENCE_WARNINGS:!1,PRECISION:21,EXPRESSION_DECP:19,DEFAULT_DECP:16,VECTOR:\"vector\",PARENTHESIS:\"parens\",SQRT:\"sqrt\",ABS:\"abs\",FACTORIAL:\"factorial\",DOUBLEFACTORIAL:\"dfactorial\",LONG_PI:\"3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196\",LONG_E:\"2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901\",PI:Math.PI,E:Math.E,LOG:\"log\",LOG10:\"log10\",LOG10_LATEX:\"log_{10}\",MAX_EXP:2e5,SCIENTIFIC_MAX_DECIMAL_PLACES:14,SCIENTIFIC_IGNORE_ZERO_EXPONENTS:!0};!function(){D.CACHE.roots={};for(var e=2;e<=40;e++)for(var t=2;t<=40;t++){var n=S(e).pow(t);D.CACHE.roots[n+\"-\"+t]=e}}();function n(t){function e(e){this.name=t,this.message=void 0!==e?e:\"\",(e=new Error(this.message)).name=this.name,this.stack=e.stack}return e.prototype=Object.create(Error.prototype),e}function r(e){return-1!==f.indexOf(e)}function i(e){return e instanceof R}function A(e){return(e=ne(e)?e.multiplier:e).lessThan(0)}function c(e){return Math.min.apply(void 0,e)}function s(e,t){if(ae(e))for(var n=e.length,r=0;r<n;r++)t.call(e,r);else for(var i in e)e.hasOwnProperty(i)&&t.call(e,i)}function a(e){for(var t=e.length,n=[],r=0;r<t;r++){var i=e[r];-1===n.indexOf(i)&&n.push(i)}return n}function u(e){for(var t=o[o.length-1]||2;t<e;t++)g(t)&&o.push(t)}var F=t.N=1,B=t.P=2,G=t.S=3,V=t.EX=4,H=t.FN=5,j=t.PL=6,X=t.CB=7,$=t.CP=8,l=D.CONST_HASH=\"#\",Z=D.PARENTHESIS,z=D.SQRT,Q=D.ABS,Y=D.FACTORIAL,W=D.DOUBLEFACTORIAL,p=[],J={},f=[],h=[],K=function(e,t){if(!D.suppress_errors)throw new(t||Error)(e)},w=function(e){for(var t=e[0],n=1,r=e.length;n<r;n++)if(!e[n].equals(t))return!1;return!0},ee=function(e){h.push(e),D.SHOW_WARNINGS&&console&&console.warn&&console.warn(e)},m=function(e,t){if((t=t||\"variable\",-1===D.ALLOW_CHARS.indexOf(e))&&!D.VALIDATION_REGEX.test(e))throw new U(e+\" is not a valid \"+t+\" name\")},y=function(e){var t,n,r,i=Math.sign(e);return e=Math.abs(e),/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(e)&&(r=(r=(n=String(e).toLowerCase().split(\"e\")).pop())/(t=Math.abs(r)),n=n[0].split(\".\"),e=-1==r?(t-=n[0].length)<0?n[0].slice(0,t)+\".\"+n[0].slice(t)+(2===n.length?n[1]:\"\"):\"0.\"+new Array(t+1).join(\"0\")+n.join(\"\"):((r=n[1])&&(t-=r.length),t<0?n[0]+r.slice(0,t)+\".\"+r.slice(t):n.join(\"\")+new Array(t+1).join(\"0\"))),i<0?\"-\"+e:e},g=function(e){for(var t=Math.floor(Math.sqrt(e)),n=2;n<=t;n++)if(e%n==0)return!1;return!0},te=function(e){return/^\\d+\\.?\\d*$/.test(e)},v=function(e){return ne(e)?v(e.multiplier.toDecimal()):e%1!=0},ne=function(e){return e instanceof Fe},b=function(e,t,n){if(n=n||{c:[],add:function(e){-1===this.c.indexOf(e)&&isNaN(e)&&this.c.push(e)}},ne(e)){var r=e.group,i=e.previousGroup;if(r===V&&b(e.power,t,n),r===$||r===X||i===$||i===X)for(var s in e.symbols)b(e.symbols[s],t,n);else if(r===G||i===G)\"e\"!==e.value&&\"pi\"!==e.value&&e.value!==D.IMAGINARY&&n.add(e.value);else if(r===j||i===j)b(pe(e.symbols),t,n);else if(r===V)isNaN(e.value)||n.add(e.value),b(e.power,t,n);else if(r===H&&!t)for(var o=0;o<e.args.length;o++)b(e.args[o],t,n)}return n.c.sort()},N=function(e,n){e=d.expand(e),n=n||{};function t(e,t){n[e]||(n[e]=new Fe(0)),n[e]=d.add(n[e],t.clone())}return e.each(function(e){if(e.isConstant(\"all\"))t(\"constants\",e);else if(e.group===G)t(e.value,e);else if(e.group!==H||e.fname!==Q&&\"\"!==e.fname){if(e.group===V||e.group===H)throw new Error(\"Unable to separate. Term cannot be a function!\");t(b(e).join(\" \"),e)}else N(e.args[0])}),n},re=function(e){return e instanceof Ve},ie=function(e){return e instanceof He},se=function(e){return e instanceof je},oe=function(e){return e.group===F||e.group===B},ae=function(e){return Array.isArray(e)},ue=function(e){return/^[-+]?\\d+e?\\+?\\d*$/gim.test(e.toString())},le=function(e){return e&&String(e)},E=function(e){return\"(\"+e+\")\"},ce=function(){var n=[].slice.call(arguments);return n.shift().replace(/{(\\d+)}/g,function(e,t){t=n[t];return\"function\"==typeof t?t():t})},q=Object.keys,pe=function(e,t,n){for(var r in e)break;return t?r:n?{key:r,obj:e[r]}:e[r]},fe=function(e,t,n){return m(e),r(e)?null:(t=t||b(d.parse(n)),d.functions[e]=[d.mapped_function,t.length,{name:e,params:t,body:n}],n)},he=function(e,t,n){var r,i;return t=String(t),e.group===$?(i=d.expand(e.clone()).stripVar(t),r=d.subtract(e.clone(),i.clone()),i=i):r=e.clone(),e=r.stripVar(t),t=d.divide(r.clone(),e.clone()),i=i||new Fe(0),n?{a:e,x:t,ax:r,b:i}:[e,t,r,i]},me=function(e,t){return ue(e)?e>=Number.MAX_VALUE?e.toString():Number(e):(t=void 0===t?14:t,Math.round(e*Math.pow(10,t))/Math.pow(10,t))},ge=function(e){return e%2==0},de=function(e){return 1/(e%1)%2==0},ve=function(e,t){var n=typeof t;\"function\"==n&&\"undefined\"!=n||(t=function(e,t){return e===t});for(var r=[];e.length;){var i=e[0];if(1===e.length){r.push(i);break}var s=[];r.push(i);for(var o=1;o<e.length;o++){var a=e[o];t(i,a)||s.push(a)}e=s}return r},x=function(e){function t(e){-1===f.indexOf(e)&&f.push(e)}\"string\"==typeof e?t(e):s(e,function(e){t(e)})},we=function(e,t){var n;return ae(e)?n=e.splice(t,1)[0]:(n=e[t],delete e[t]),n},ye=function(e,t,n,r){var i=D[e];D[e]=void 0===n||!!n;r=t.call(r);return D[e]=i,r},be=function(e){return[].slice.call(e)},Se=function(e,t){return ye(\"PARSE2NUMBER\",function(){return d.parse(e,t)},!0)},C=function(e){if(ae(e)){for(var t=new Ve([]),n=0;n<e.length;n++)t.elements.push(C(e[n]));return t}return ne(e)?e:d.parse(e)},Me=function(e){for(var t=0;t<e.length;t++)if(e[t].group!==F)return!1;return!0},Ne=function(e){for(var t=0;t<e.length;t++)if(!e[t].isPi()&&!e[t].isE()&&!e[t].isConstant(!0))return!1;return!0},Ee=function(e,n,r){(n.isComposite()&&!e.isComposite()||n.isLinear()&&!e.isLinear())&&([e,n]=[n,e]);var i=new Fe(0);return e.isLinear()?e.each(function(t){var e;n.isComposite()?n.isLinear()?n.each(function(e){e=d.multiply(d.parse(t),d.parse(e)),e=d.expand(d.parse(e),r);i=d.add(i,e)},!0):i=d.add(i,d.multiply(t,d.parse(n))):(e=d.multiply(d.parse(t),d.parse(n)),i=d.add(i,d.expand(e,r)))},!0):i=d.multiply(e,n),i},qe=n(\"DivisionByZero\"),xe=n(\"ParseError\"),Ae=n(\"UndefinedError\"),Ce=n(\"OutOfFunctionDomainError\"),L=n(\"MaximumIterationsReached\"),I=n(\"NerdamerTypeError\"),Le=n(\"ParityError\"),Ie=n(\"OperatorError\"),Ue=n(\"OutOfRangeError\"),_e=n(\"DimensionError\"),U=n(\"InvalidVariableNameError\"),_=n(\"ValueLimitExceededError\"),Oe=n(\"NerdamerValueError\"),O=n(\"SolveError\"),e=n(\"InfiniteLoopError\"),Re=n(\"UnexpectedTokenError\"),e={DivisionByZero:qe,ParseError:xe,OutOfFunctionDomainError:Ce,UndefinedError:Ae,MaximumIterationsReached:L,NerdamerTypeError:I,ParityError:Le,OperatorError:Ie,OutOfRangeError:Ue,DimensionError:_e,InvalidVariableNameError:U,ValueLimitExceededError:_,NerdamerValueError:Oe,SolveError:O,InfiniteLoopError:e,UnexpectedTokenError:Re},Te={csc:function(e){return 1/Math.sin(e)},sec:function(e){return 1/Math.cos(e)},cot:function(e){return 1/Math.tan(e)},acsc:function(e){return Math.asin(1/e)},asec:function(e){return Math.acos(1/e)},acot:function(e){return Math.PI/2-Math.atan(e)},erf:function(e){var t=1/(1+.5*Math.abs(e)),t=1-t*Math.exp(-e*e-1.26551223+t*(1.00002368+t*(.37409196+t*(.09678418+t*(t*(.27886807+t*(t*(1.48851587+t*(.17087277*t-.82215223))-1.13520398))-.18628806)))));return 0<=e?t:-t},diff:function(t){return function(e){return(t(e+.001)-t(e-.001))/.002}},median:function(...e){e.sort(function(e,t){return e-t});var t=Math.floor(e.length/2);return e.length%2?e[t]:(e[t-1]+e[t])/2},fromContinued:function(e){for(var t=e.fractions.slice(),n=1/t.pop(),r=0,i=t.length;r<i;r++)n=1/(t.pop()+n);return e.sign*(e.whole+n)},continuedFraction:function(e,t){t=t||20;for(var n=Math.sign(e),r=Math.abs(e),i=Math.floor(r),s=r-i,o=0,a=!1,u={whole:i,sign:n,fractions:[]};!a&&0!==s;){var l=1/s,c=Math.floor(l);if(1e7<c)if(Te.fromContinued(u)-e<=Number.EPSILON)break;u.fractions.push(c),((s=l-c)<=1e-14||t-1<=o)&&(a=!0),o++}n=u.fractions.length-1;return 1===u.fractions[n]&&(u.fractions.pop(),u.fractions[--n]++),u},bigpow:function(e,t){e instanceof De||(e=De.create(e)),t instanceof De||(t=De.create(t));var n,r=new De(0);return t.isInteger()?(r.num=e.num.pow(t.toString()),r.den=e.den.pow(t.toString())):(n=De.create(Math.pow(e.num,t.num)),e=De.create(Math.pow(e.den,t.num)),r.num=Te.nthroot(n,t.den.toString()),r.den=Te.nthroot(e,t.den)),r},gamma:function(e){var t=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,1.5056327351493116e-7];if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*Te.gamma(1-e));--e;for(var n=t[0],r=1;r<9;r++)n+=t[r]/(e+r);var i=e+7+.5;return Math.sqrt(2*Math.PI)*Math.pow(i,e+.5)*Math.exp(-i)*n},bigfactorial:function(e){for(var t=new S(1),n=2;n<=e;n++)t=t.times(n);return new De(t)},bigLog:function(e){var t=[\"-253631954333118718762629409109262279926288908775918712466601196032/39970093576053625963957478139049824030906352922262642968060706375\",\"0\",\"24553090145869607172412918483124184864289170814122579923404694986469653261608528681589949629750677407356463601998534945057511664951799678336/35422621391945757431676178435630229283255250779216421054188228659061954317501699707236864189383591478024245495110561124597124995986978302375\",\"369017335340917140706044240090243368728616279239227943871048759140274862131699550043150713059889196223917527172547/335894053932612728969975338549993764554481173661218585876475837409922537622385232776657791604345125227005476864000\",\"24606853025626737903121303930100462245506322607985779603220820323211395607931699126390918477501325805513849611930008427268176602460462988972957593458726734897129954728102144/17750092415977639787139561330326170936321452137635322313122938207611787444311735251389066106937796085669460151963285086542745859461943369606018450213014148175716400146484375\",\"399073568781976806715759409052286641738926636328983929439450824555613704676637191564699164303012247386095942144825603522401740680808466858044/247958349743620302021733249049411604982786755454514947379317600613433680222511897950658049325685140346169718465773927872179874971908848116625\",\"1468102989495846944084741146947295378041808701256909016224309866143294556551407470861354311593351276612463858816796714569499021375899793849136855085849133702029337910502448189055357182595424959360/819363879309286303497217527375463120404739098260200279520788950777458900438307356738082930586032462601215802636320993648007907724899611296693997216938989854861043298494990214825163523387600982777\",\"5896704855274661767824574093605344871722790278354431422729640950821239030785642943033153793245906863203822369276271050164634206965056233097479117980782641839669/3030306850569309344013726745100070601277982132543905537366562638553198167007159067544789592089960911065181606283478843359856123992707598685058297067179343872000\",\"76631772943534985713873427262830314617912556928476573358548256872141516989538374761909611879922349479420014771499018155447198112155515453671128814488139633810493264352294560043912066253026059140653027326566801398784/36852092933388988649396042883218509607503204211148493545892849595498822817623842579026942621098851631842754395231561679671400197056377380063233740202370686144673585955581403046886083948450136247134308381940165804875\",\"3159076083816399509754948610929467278257473888282947311280653574634802580912280940686954763313882823327077171624015737719617373932318151594325834524000275847475866299387913048/1437757485694188822758304467756419845842037623148461107362957994816554782989250555362514354661961482939226272309026092009962414616417412938087494467254146002233028411865234375\",\"22266067259907364984531611601870291368272674573653403965630628996687370994139884833897773468149149664829922302484782423514167405397665098388400450149078982462318781750661005833037235183394221496186539779712428265837926417581952/9670030144664428565128962309657100138096047028794689249320859276197340398920725569428532293373676415359965773460364494998334259893079003125373872108770534788283842907318071170285038777091588292539102269617376180390982915567375\",\"14604654564989239958569331443385369522850975185358647132770022716433280072271007767111036877803328768910274400515590151934676819262085211828028638417329558229123989556376108454497813055/6090614019162516693013973409650613208227889078878781039105047015752493519149314227721984436973374032279421344818329285207124280297611253861173835238379831004010748379874393292231671808\",\"1901241885407696031217292877862925220917660047127261026827869027159993239567933534052663335498281439239753018507182016153657409777749792228538380379703411298411623469292891476969894084838876001545818141543890273256985768690847587711270930688/765116019778838839812655402103512685695769161212360553099732689795578904762091216998790589926057819838537805856579109910198553330075924857419395160755642371550113347465300208422126945265887065434116781678702741657275181694851670325469434625\",\"139459806786604751793737926146840623607010208216289543036026206208962059593900745886202214788747453279179283344350478734275973878932538430194363355795823581315329311220701640235653288975569812161436/54371368534412517053056101353618694718215711767266376573138772968257303578467926450212293233332401067673270853953399269852376592855992724934941173346260129257754416412476202526978443681584633116375\",\"1045669091124493070709683241190022970908640501171378776604126771144008324358233819560649021940145166254659028524319517244711645162132513416238958170819347361185944945680269442845829390112062101255500836072082817820950448463314034677353723256969344/396228259004446234921310936915931611736815598535963504660076315228798989932959459406702091180060429080345146735173591749448509810270759531977278642135591672189002006272326131885315743181289970885337574780897529347356567086535505950450897216796875\",\"9912919238915437302006264477931031611447467070103973106567538528951878797932559935860738745374437522819124347510590800370471910492338584284092534264608801221235029062881964101996762011296996851893455828946521/3660537472668264151218961634689665210933936249986285290553357254224360417386515311493310199319523687171757653216994741150377508234317025158302057758196429623723072084157928224798322861732880034847243894784000\",\"9263710175433181746575186369318246002919895649622127410824041370079225200282403368319370743363303164313395723904510539050157032684710468364067204876434546848634842333436957245275217583248805993142227630297924119330553308466662488683624783307023014909360640/3341177182697517248552428837661919299725031035849865632511882688786226888137634168024976033652753689210700218163621739078534353578510364301481093730054725078138658805025014615651043313990684347632166030359086885561104034510990826655289288319840595753002771\",\"5116082230713622171832327542439052727465114322479570603905499496221224653983960598946033081212909066917137546065542953865612718836914393275681318667667521726785633638189373998191090501201427906618075889744489190209584/1805752553736060443820406101277706970767657006346276183748749630179442318063568286372320188433843729960294965366346522303898609655762491623098453269916163621089005711823488749297418113474056676109581110715068124438875\",\"246569125619713282434448566970352231845414317018379160824176638351574938993535464763890962336882760882398479702237564384291290459961036068916857265499633061660562532011248501476114401629839742058389195725393702000011860799793778295606988057303225493814005789533570432/85307063020836305797178273029353623060860009152114361453434032434699636078115114412588719432277441055049132559782203988387794711585368296817222565434951256788867244687081233632650953850383220864394261763844194948389861147622944651546912394593164406926489862036343375\",\"133672026303452911046163998480860917119290576658330909785707604886881155606725822685088929236266583416708668502760907677019598002175122453170574729028452721476464728566191464897928696630979863154661704374206171469014225143/45398130975270785045482567762871405072140548998125471025451666500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"6041693953360002800224091673336562508913199995987479264605216252220579740134601435770085920869376641180763419907442721705887169884230643795126568815123647603047739799302562095542459344811429882053086550900803768964612193941424128649976704727183797495759082741166938351872/2016766992122395667828553277997478570503475626107286343497917705446132017125079612756035254750822860815515899557855166824523851779156336235294914777307802256439645525835223691751931866188957324792276149549076500784191791380803500156776088683900346065830066370370083309875\",\"705868391597244582764749229356331441978820024796066870551110486625729826111158236686696326058778874201639006234449557592353247542995871491078308187261304930042019640830629526023972693107193897009168955674240659026247094657679060/231848642748474339277532000336338632910990823562381469441716922006107433404523316252618490265927265734670539384485699132080062215196462178933963957679882342083893417545858074378754089719547920901917516016346211301054206383643383\",\"101832160604157943093944673541651013907278188571533075311673249923948856034633446617630054761681006062910980371900782781226979391765818325065031889334563981235894369036439929651260587335544056975715076598739977065390678221999918899003881778449092038750712969437519295878491018112/32944277910571666002449086492515464541550138004002141571670657643770713783329063548790202120805341989608877739811787937782240802963962520261844114327432160788193314874913687387269408387417806176202979244637915812905426565263196954203487934225589622864145960079736633434831996625\",\"10655703119271468913597640479490594180964700448340778168715956712130636958373270202484276402718566314881119559090842449610957974112230306343486091910217340665146602598568991520563987490686996746558858366002301982443029430290679385551/3398412687366638541233365137084722368200311117891192348532156645374786104142009695796409107380345795998400850838706661851176885183144928701608654514812261697598380070746520197171576610572921007069104300695592751543563472456384512000\",\"1903039332876763837419920240543738799531131775028971323439870868730321221615515008394327723508670975623498588291298064320786970626232668956372004004897872810230178526101184611242511193415796638694370503100219710864543168952682617801833318493436174387568067811938490953495819438108686336/598806534367503338307287246320963280558134937382149405305466709787179429317914803617527827862441615350396864359976273212272586892074799651088317544101755361439294687323233086696182687664637422796995789967075271448560870681210580691574924544896656175563265378514188341796398162841796875\",\"525573915563826130963525826191411949262846916750432019596028344808298471293378917508549164993368392834023782480702893643486699787870059946429810070222126260200026332874480239090370088123833491499400991181659445914352500247596757005142623368/163278727324937389095822405034435687776345799835442022795533783889356344755225815267819508608559076191292900367982490827396869405536484846115955581043091229202052407483776587687967125885665493681707461345895999542381476164157058393971431375\",\"9263815657177858787273494705338516861045771674838057329170239610953039987023429736752079544014780707408666628475997291124805562998227296677616204140605356257712022384368492575381355563976330347792504605666631512343447560301417325154003481040250148561839861837778597346623630046623751094400/2843321709948499955095590862256744532227698001408929142548057792217790532624003190447363578048562448168721539177458065482170148482375585867230123873178100117094533143052886527452665480614620123764036974180917207421482431983407742154634391264619615289225747664532332469783301704643254076601\",\"407959339726114455622180187758753007349209016396248763075759257357925636039752474207685682218422721827857994768023399625060206708378433960993946156803948655098667156937949174400873748557248801874735834957795040139401560494087476967548060208243867/123780218751812156744401121690996305978134694678934447237402511116731459214498784497436358160964198336874043702652746834763131444030185151143987331404604087778514863973633941401826334750268416015224906056576641018962863645043976537664227639296000\",\"2547676391598917379516698439971914695230548782904479778605691338364453606537643088857116141939170899135026552016969320061900926954008522781162186995856580955090548471448276736878300717869625651893741316530109438876067419826217901657017506157997588944233677467357220316084583383623602865379325184/764562034757392298786420374672266498815021229519853724850874576419885380830752931701831256959159800764672605004880389358601658343203513177084389490286723240185146570925957286083025676875197029662038213216541352875570101363668917766225709569356861275434470568767077844675593176178611021135573625\",\"186545352286463730559933346565311535598243666022232037054735807289501173444103692309735768703898330430135399033529355360391658728987379385732098960609744313878477967971557204207043802935782878745271859468248704012618254203101767841517569443555143252/55399179641621656233589820996143825959365789093262978988289445625153099592463372579496245442338653053662134699646413817866770218574795378644415019944304868289119443774932782235638737888469746745621382139263856603239588594078668393194675445556640625\",\"664884440164786473344854955309049113269357314957985265728106924238588705533437169796551912202931185746193155801905841712503407258166135075966280435780812714252670362202091663287095423712596462690753468682634261029392794173636943978404002804413009590005984736612421172979101972556772005594499779860608/195485517776407145286424460448995460754674039560651791192647586550615878988380153730602665795647187884543361218962125172808792176382956599256188706636727418572541254480798303566840010217729386905041217793614214518363859058348249961790104618910877813067510758225302884815410347238200133693756493703875\",\"2614957283934314904315471338485451166053664494383241929385424599389309215073267052860464009981063483440201193771607520572077231889699858482582363845275452280606276949653970992719332472370351170732899676316967244504534154616036371979031399425846100527685/761493664432749089312665480773496290658029971027686543404885407644062485746072719559288231362060149626237939029641098328278650939665665969011529293869562636656650999759724704272743235210867676873525147820749560155294022488994426729939894753293900972032\",\"124843380518493746761140367283007507854364503961156704095198010255465940085534099747297600085903814014415830785663764373057896014399822131175202342399536439284123918855893825207202244831315575594886675813256448846863723093240955901916229136393454605455444105444987028391748121054399538064686074523506176/36022228212051654395480210378626648518430280334458144892889271272122662467638331091863215146548048144675657239846337165813938424387499358852301016926312083940212100001220180762189978024821166744964908871443681332664798940660421469519997746775275873085770018269706847741064037876137315001228315806659875\",\"827992369063043155578730871896750570951766628472810506926098505028264552046829097082095665194000002802661600196840639204300804225352337632259980703832713031790922485730615305441309917696044954289187837653933158950774246017223571461858939407386087081525130831392/236805932823686534991153393869288530368011574665859226704279685567723830696754821658770176385138917722808377962346690757191122309876922069867472518117628639913077442806147910884267694879089753138429767401700283014143248445966474839193628309668702223994071394625\",\"17347276886878323736540051321582548724378497839789943634071026331001588645519865992773157565595886250230140452154269197770615097377486013097979087647774513500701793885978192218455687078883766086309728287172567466406449372659680040183273634701092561727514713494914793425407149186041796935055187281744386432/4919325621804683623339606849970832094714371903709195539440424738973575902329797546592497378000858196173718145883783709223158260700365224756081275272021856393735663399552166737690038832550853145831185979094979556715294990257315369124065787473707136464772247917156232366320267601622617803514003753662109375\",\"137984231830526866236186357461458917020538108058615632801298091031540729111527734872044790487396302545910108285921421417358113055522725197998483383380192391312304647004240060970929072498293210057120617332323445379424867965764749534125081131327565507524502163460761/38810445792642817561168950890315210470940006613819790543653745327778579787694809782601777514116858514049585074667085399925278459138508514838268321349069481334967221455722811414399738756151414906092225265355449011152267068726417045644222323488445626292574879744000\",\"746567120547823334914136339633766098626636643449144032626270358619125402826113269699709721071135471625588981126637674402048519990010499180844665151971356149292818375448504122545400227696621572263621729512461528550588108384619064912224884465737417596190735966915167530332762203074440688676123756162572829692160/208334337057923929636884170505570363171441147899816815785150954417598643614152856767186132467069365605496210036171429712485182162940460120834349006784956522600679357307849981862006710239311750261522832996877712350330290831638640913932265004107623954913155144975252743257846945609734368518424172846119306643431\",\"64649371728330695076928013661001819989330953381731372450140483779536126948957993261299287753791770622512248630224724990234903928056275080682537641377393210728546364176267034339221558641084730052304770498929958838997239635790469536857863963589118888238069738647239076/17903951498200212327802847425913723358452100686246224008745414214690047078122925247086521362329833307849817944645647750649290248110509395628305970523384831671737569872597295947593410067364379687588919135621621162007748635920864926867870502568935739725312687094047375\",\"2454918942158003099688922026016393688092399295166304634317616773083386087532869193458590448918958337530406410803840837646465522656670050113548208618655070231274778592766244282964463702354872753657766121825196898916725498553882689210280080206627916046484942827487726300822318764058084323314109595329304407466188383616/674880185931325925966586583820010578979699141814417326552629206140252348822939845006845669570885271576698771404162512001549922909048916000017837898649100825976232784446638776021483802989797501705685620612986771521390439936066527738682396560462899753657942715306792783283782238662155922082005591512296007820682995125\",\"74018558041066162916454010680594042518462756234254788158141115244349044958441521749277686851928706433556285971088455226217644009628399441967508838553345152310730562224910795446341601049647392069373970101491741830623078126344928804029524181578945586663110848142571149861/20204153620006780689923328634586091101021423979622170579036140596085566172775051595588438592742563923428900864000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"2127032036758045513335690185608563023954009095206088224487365541995326714285119384743928987635752931664240752323937321097955456543854943206092931247498833001499955456190701695430459583885125382086777607021670447795321669948733328973350279846928613949120929250312666393359442423066212311060931469017737106028339882830848/576612418511902928757340062840968526862381326698309578771238715462180282212422302261044980131594522407066369222998903808960617461164985318633518680304995784614308979881735537678182134128319596636920719106506829571072447362052319438091347699720147003209417806230149598345068078717948025207635448205253184540936478445125\",\"35289653975561083576641954928762116897061274899517309102784750384002335187117263273488751066569234386120759866204372398611196356888479036949053282301027789530999737306501029700128744408015642211359442183943916106790666114870974212159410284751571905275610921784716184508440/9503006066880728386808143045924119024212377150217533250562188228062174064693375135306438120385877320162710918716613546077156389583384656340709638430674364232343609717735574035535102953482366914421205216675248471695111720986346092738728929878538430662191272737183832556131\",\"102633551023964794485575491065909467125458972250222581133681080524371507544152979467328048718122409841060527545925136196267751819689935599599321090571687632103850847605493223603751038996548520557330016046032671961857623066292962260173840972332108111505971231021442896036760967107060309991355545554631003681544611731245475968/27459658121882266328752886605529964804078316737648012166874496015808620265471203512606463219297059547428855195782384236337998738233668399173746663289852416697917397644234441300570212555870401420579737973722145663287124151049692290432756231390864184491891697469874600345958989433125942336757049639797225309327019275689074625\",\"10034393558388390065766795008210457368713365491566387292163814915435906649268119060550511145023450790393353937124495488860451123302412204483570913557762460385297770427946219119911920640306914453207097103853766023934602534502476962159682750262143380527529536498215384467975023/2667919902603322771586358077760621955455470781865624844984169443739075976572061827709528710108877015489050369589117491611045518221354793418884447632063538994046714401229510497599783726376490260140723032102883617341970952663947646017489439179953454964374887388652792446976000\",\"248528145263843375390386172800048509380966183384567983242213959113927668429802237067505890436957693495616107089384741585283620097982859345081736730899912519273262934785992235852866637878831878448348444611412764161078458068549719800733237024285525816723480868704742804077255242682077291713092790250511567621735004237450946304/65676865669148624809340872151906045781446981664561196686217551358486802274698228825404698950974939545099727242259547145392352658637333562345477931951890984276718673618736565926663528625796412420753961231404680876558659735251469326707567479071881966875336951133475135427640218972722939427821842173216282390058040618896484375\",\"7805448718805635696495809414501206964843262114470109146341305656318015059743127114324245035489577134938579856003956861881125856595981500593426840968087618241785931128978516340812066502964561231235073012672356530509663384739132686548934288703179479011016719045530855033205271548/2050525178024039744126592505352202216905491833360272553169520915020715464206141942151086176509423406413311520838568324134077402841030113427309725873344806030836314500267104070131451720947531994814710189000076651895520222646974590481497382830325485174899169093049299764813276375\",\"3355325071293197839434119105039673324264765809771192815982246040415580387729382404624613875653005261578877047405365032178619450963731719777167015959920645055600439987161800547901539269321100559393048973255388860193948274255340335876890491746900991668165565729269698196233805991206691196045182214641935483083662356666996922240/876402579119117579582569839757462461050855174353108858954282915644790659429341853404829661899850841645529640454766173209897510988090318303454542547519850473808789222552969933222203420847859171250332350076509996295844203965564448154484566493395403967626596213792922784509892086361572955175655987334882030766001799867659814117\",\"218871061991045868372866381545267589365410350294028138778572466235486397478028823720846191998825628156716190463263492304639890659254282445466806224943413446008645087186307985343574807361972238230520975439736199291019544576443791916302825193643774360055545186783819367378492631806297/56849560726416896431557940314760680962653658127458002233782028041537121216487790008085876994020812492987733987414743604239935223783349870516284048368761617736127892160849065895223288023531930411718807065209903593668117085505482007061969339237404945180379460053180570404846043136000\",\"5008685108365226931582937964451700746853986170633433728409171904803795018146152804690759530990140552460596075588463394200510044617816085275660078502126507209302951286606953039953843685800941558212440519542602092919776366067720586295390886070120828199562643208637974347390938772070049344991272621102622931576339988103674070876518912/1293888539680354282541277646947380627241979967611883341823378331667976045287311988103163380651334828012840330710760757271860219584371109472132211215957402251594055009937397184768184517621978947384029376766290498101728971145633139541827544539988344772578184316843734267915665730981857376872622787627370859411909330227080697966353375\",\"15388340113525711660227566446101909585796746979396093776960989868457211684028149502578116456785221720682202816140911944661051001675127262774824593420825587319436537346311831003212424497488485098543512314062112948777572038731823948224734505930748371522309451168088057190162878224801232/3954220582960831691377435160890656173654063611768428458807273708040518769541211737927975894584024448193835165167801976423275767590502552964407494549049777006346189436817215329891530811451811864579644894987864267389290848598289794977382504890216219362031324635609053075313568115234375\",\"5099039333987561374222193551155323470675617979816941646196895589439391685938046865391119484510329634015275893520725135141878751153360264368353595348921951280561029028912953500944814771064409611917475818956659775131751121312316084465321917769679881052144364834485866477379437705913911371481828140817759401117780199246301705600020671104/1303503600297679371136943454060319958680553228879031326679449263682048703103464872914972900105569835004878963701599765030590097739639045890060548760692125546754294514068052902543220382104483822438283040090444827980927544440984823535260277595466339403795403200720622852069244768910603820007632395190204569927612348189089161551951106625\",\"4902837141334073026145827027361937996261324349722726869116185158777439337041263482852376194988371853413467559557923410949898048139830183335197992754748294810838187068126867611615800383834975563313220497573778480109264178673389149671194149749735833378557143135481387904961537942569904075/1247045310545991266291285730016853118981099516935251861146038369985109288084420528171217942065832292739130145780833406014673689119563698528225048800794718789218267628507713621235056538202070171596177775095071513194885568843375526804796016261173388452184505503341132236719484809714335744\",\"38114743522716832107917466438257616720476488812538316101658139632867788464381862291240727309611460187159930652186486096300862388591521625093237019662273764387591494074792574929490381910446287947994150655077877204446864004067956087975012773988833339521775463977233068498404144221045837190392670308437391686081418318624745039402145439223552/9647001083383999453668111809775451078976046488746916070976218645431946648087171586252172936600115032316383427265217993193444199863138429602138841976586190525451324093772097241349417938578878934577091671046050326087898259692917931230974174799815198493279413438192301437068820185757869608523761456160341754512329264442115351926967120404125\",\"573695055225225727008803730767518906490704995929177617646275646884555707960986625481944101622708415415988844740028718027554452662358957933526173824325955904005404113684003841990198157072540659184995738719040024647370869010473254071681533880576462368600901824622431045529064651675640055917092/144509482511118816399089096021290587489594541280398871255876563615464628718527634679330291741479135415168539765887291789615790513527330600394937614433502341116068305347468133950204152174094704092402978083370792135432486240914953928188835819767755172666693219213868545854371103120604946200875\",\"23876960329653589647925126180903391687666378233201794403339630995420215267415575142266707357255726330536094448314199602616026935251126469221925945960901748679919435908556550271504767784553484434363646489174587463466333864577705745452492395785557425904735048180164697040313528831173448025400634629163795223739061661461986923675833880378496/5986312408594306954013526197465608559068621248896320652512228238115589875514604632230098997609482248000888567135685167138762172475788060284232459813998201719590208742091697294562538265829954186149162974972471533202880368317237508987477069872431064075005305838801862900501819963793062041081601844759452202282545840716920793056488037109375\",\"58168289917567723171226992383559866214094157894992327555495441698028867727845766488121900626912848698952863438654895252811583144479300382761129433911280049009362667380001406579175563745824368613319103673817094498117944856004415812877213722455299491145649879676787079744410765053845551958756701/14517067289347903655500020160671113450349743650636953726251191692074385521975132268313263723831804150872238173602847065423463131917373356798750100313145228608894881457107689499956903046984443545789053438946050974567665049237414588435796381674590098629779384355275820782532479708807512981504000\",\"728621890568281859295409481422447012528302594365693410763821707074444799793690738137592101239862736313347273167450056625929591960610208335290882047413011571781161008296084630072829079783328937418641417642857196346026366370059522990813537731394823630207433267854616768658990289454635793326766697884798538576055949457122067828153655416688640/181030730759516991863708593747964787874073354051675597050399087612142539517308720603687322924426591889179726492403913356461908748733972707460063017057809060190437917851790767968877215795679844983288935075688219234885360839984681619084834228226744165610073685719017596630302462070188937998558312507638434329299017584329479516410907786681093\",\"86855946923438322218622470067224691860808273886184997065663554841573982963995340977083049132518812923329423480393306918856650577072525633920456721265953575424233701929892019410099166322511413146891121248381648145391642571638857576890568882512129960291171866772665863159474602604647289052079991768/21485753507365901947528588896402264670781310878547726104482740647554738151100954835784115119035980523529677083504495839730499664052882400915208251594384038810917282207449860876251558307288700200910747338758723324686939379138206117634546981163355060740270734146780942696291669461182599512320099625\",\"2158989152301022938148680102142188531448821359505188055264665167313418619665693092337665573150374231484840948447637297247277576415460889296724813940128955070240137590073233263168835678714131062764247434144994737610229909964847568491446606012581370840699582055341626266533733744293929658949697805855362114229666626620766245630122333733703618176/531794915405164005613733454597931482878479882704956110685223892325074211694837836221759995948610212818642789132749082430059593652854659130217225506942675608692701447738732031302987802196501895840510235161825501235133794449421919927396142470196961877376701957829921152848178076410141813926924749057304222282687697297216661687583257901415465125\",\"139432548574396829074586704387656697097760057897628994548358619815052936481650396157428747411173567801047221928593253479330480454469358220685854351236980383914223693722868233819483137401339800304943891968050399345430243790898955416907228948287367356990263740207046902209563417267686591994743547621/34201151688775214071963206765436083445901621442002061707492082843232231754829227303539041286301398668437202547003300396162741375435703188500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"11008517174872833286150985180322584448162884832099344969609291070844193524816852920942383850580217443209402836100467940651581092350600329145627967515818684442171571156446321228596914355704205623857871497315955269266498229823278800717909321269179839084452384509142712677235552103459737790674103994445173074670347080506698168482564009465276165824768/2689223396936080856855299215659204161946704205931885125148201643087176556822542895325191478283706585400237901215485150928036895428721912118467760766508162631903585126377676412573187912443878232521444786090510891599171741773242011017926658231638022943018461086517502584854390836347781674626615709751386455292026775663545470794167629144456268750125\",\"16108638074211260588800537540680707641986073914251424878121255234668558067988171568946079848860335948991834525552515669040163026131919804987340113244760738846884911038097907756220945883750502673899084880578229601870882631165510396775126850307838505063922101682333806284668762825609556049426829531780/3919363961344261777100658318137884299575193089462944554282218278496298610828757650104922583359642384253066896538203596057302203635134833545580869871333892935330950583664400555463557735723364497947986885146043017010159347046389604172186788902608216894094289769850517098027486468084407618748895626853\",\"34420755849180279597302103726180110022640946692592540634353734157479505420320000324260530767186132260970572450489530034440214259559325114511265075416512316229177952140217732655405289808326341696986755141965043719344169685611217958619102774617224847284122901023774956887687026904767714958090256282893003000752947427857703259704682455375442735857024/8342030311716679826889917494957593165464748884572298173556257652389845294530325764837124998293398445804458613956489096007564811101361266196542129764287084823604897187311540561857741285793447174119667215803837719660675298308873496219385226998078648428368061868944322478384684509466965129972030932418920415308276430355882329457342937549162000252625\",\"345888075261020004071220843714060353763382280664960929903544964118831237876694384053904571498830068831026644303797377762345709976595360421502594656308937649239978525713471393570536680412814805076323426256584504251728507416368609420882442293831684681071553766603478479006495757222912500012444787804577811/83505703731469734628961395063481893801938371516752417759131774530720075262459158384433785006689548434701904106312038822969658455364219435022841597243178757423598248565463985786213156556523685666430799283870548238467817226915680747412191245046634279766450629886904716776719219698922088211154187845632000\",\"1061717830619177527082296723099890392273896386613997004874669053445943252046748251883532634529759169500795452576392700472771365240996842610207274128102329096619028487369622001737128463631016494371635687841733644339636164570819431573829173533941056258744442930643735587780907310433371453992062647737259587563398111688659657406089003293576961475848704/255359631537215747979895955806995352799574790340218399351168178555478073997876110889483456972687438702262017800167048243754141722496276537685853311434069991222324039005160057724073156957530106623908696241268268096879569794431919729620178375212905203484165745866913773304319069321426245521467122472046370356725530914587807274074293673038482666015625\",\"274122944106300296738399632684955400761495830361663966466225652918683099779465438024846903286816813856490888796372134557295699980528187779624865098445756013563535339056233912394908544185885547842235097677765325396255649207317018754967666450708249125316192200151505568416495274671679500594656671785202496/65687592621976546250581560102201535533608158256953087745856906437400149205693427285162333502528793675585022025602144243543064185647792948495372442630333800126269123531636800213405254045262127593759539706750242430153456891792533267948231185296091297979933562727112487057234422009426868531651634706262125\",\"7842680480716516803148821198697967237136721860017131244266974996267074742248599085253569637183007740566941125452215834642683053334607896723447140851344501084122965014242091312411884985569341166545074688756440728922408743841592658677792796881188604773469108807869960161395759837407978596679911066586626885830991556090978327508459276025943279064965688960/1872528612245648675720382138045071131304652050696842872529163720558126655075937845539792108048310219395746259570506175902206215101518698490144716531697689534559827422735649881381597761684154409796315455445459537515308174919488497154409643876490472215352056502193150125644288086294418253309947229151074464928874881827227706992859640236086417889990541889\",\"5300824422251242070074569186825929119848111723012841627275830216301188228660779008353049603527567784119877706984722171178137272986345560485784907345500893648715341273841147320288851034078863843374665850852481747000237834238703248634174397792745914847774297223176674917912406659831206869442510948965571661/1261140476013707338477604677428573831791396352814802149994640617701773078174882455512668089072441176857892331468691160991310474734143842336092636848492066592397892638052212250229129355009939118431643425836944282456647571558383755315238500832868535816144280088644939696339160092963629012001958205063168000\",\"2220223718762215584659309059880106334425515875615107369399767892051551634000614327272260081056973863669004224981561870246078120862256383581012183852291444462730018546753183156982897386563561418424093883164027305254176874653780425452987066512563140531367766900610414277825262239199580925879453806414860409441845631158680721091621460775043562065815179617536/526383206607841251253861841374779803798480623722760367843070466043030228662340154304405180907941079883976168609082254331465595267209149963786388600028701073430773581228212441424400748220833542964971495005714483235359479470452593264280645360131482713147116366500300066771223383007216182988263355451923333319170174755334598973202740108032097242475554128875\",\"521891797109626296684891455959263713257353500867652268541535940159815152120871142196535233326890353914761242025931373491906127275561002910157909306979093246574207104081108188995072105948138299097848175016082947174156278439986705241571619793059501724269644447572323501261424770743329858038040685313621446524/123310256826873923765604825413207481739886340225713108649758575106598510022338480189649787216845041382860899099250547657534972156328080736149239332330143771138115695598493059325064119176038137294863053148618656356436332991079150723235214278848602671333076219529535123842212129829931654967367649078369140625\",\"66086044538329677372986118727999622900471937619891337714357792768200341519193500393739322894033303245376225584865369486696276607060432449792893028061817203932068085863800494054274423512956136695211796751845295921015953538329385253280866669403169919614982155350899648626481405781514434761541281229159396787287553493046927448595964103589100429722948913403008/15562137339474350565671240515273666798063901504051979980452491653975250630723677279081058884163396938548780856293034775459223871281049026140999055923743471466471830572672766633086347312178711643724485955576579988182546105048041649947277672869613992334541438784737993706482731696809943027528882927942967419447250586964258807454003775693567366165507144866375\",\"335377615394100148751647837967017467711612297170079949298328061159559939969228226474615711044891085626519877634842694983669611974807129333052471799687426665556738316626171408219730853872410792831871526174987402129691897433888027072807302411474690613948951673562473758814664346259109886876538510453475290967835/78715592752271462306588358880337347638000605031000575876214116610339827495261512281635361568951675037834544811575026718101166562072917855004822606752296233435017284127594847656529606648345533195437635894948829857913798336356647286032372695130461573940500785137424365840081503133157308796505622439791698116608\",\"20090879701618729602554170716780970848925039917987945471322994867171660307998603515745066411687983450400412739285577269751603921163835619296822801840348319742203974023505186187060251544248644338412667631232247108675504629538319425769464277309915502144443973397371136256151336255138506001292355330875114245901820438821732843540725116728866301271466614762497024/4700223519410528857298732096729483544820841497820611795617923063440946097326817340637303431283005509904481323205480729806879570430868897342398783028649633951362398196137429076844504529051072393709154483678349272930361110568616112723747726853614661953537957117231900032044221535502745676310313569997665352252492568100075191900969170979460298189170486601502625\",\"2904778979985524171206573028445379872240558084236464200857594814631031581387804621371822074061289363372523364167184697785570324832815972970658633551879143187709707164796663015180877412717910872234647704536817108676736661804878068078543241390828229923424191204586313620612539678930999769543756218765870513049986792/677408099044823641581658869221044375312077929976719183424865834811543737800956896926637625166844372424044003929341361734886232742770909683021563822987505236295727478159938135467975522336774471915167606673489722102077041330652185811196423400701795791669780695158730756241178262962515917389382302757366325768069625\",\"31270155809329751863885224732454397292230969002004953832354065319735530624996254695453061851449600345977646455072512400760539747054003851289540339425848681804190284451253462663731135337775088379954403740058084949675460445909826322297817535400604180338201322667139062500269285493417563095365899631360901732684124930296643108551710704785906431324876072470231424/7269578038000504017073007978844992319987411732848567116655821196644382777088703228960020894756722675887473977480537577509061256138261063926845643360849217556370868752909531088361229374467207196928745673402380473721018157327193509586295879051411183657185176812738231456253321187419224704301236205478184115996135940848503487199394612616742961108684539794921875\",\"432538822079707760382094121020421735679118830363764570640789368235407853152380328891350816400541189148550353337874309885334920995713154225799660601389784410911658967499100610376065640785585342035058364676314084595283850213942576431310823836792440218271879354669291052589804956435743500204185107215929849054782893113/100246574739326291035824954677502591279343311051719151327066341370995390423713403739043396503785261917771859220535505691760472395306543276314938287868734009582906895763073519374099272340577921671298878837400921045252035507925021904954445172372479744465666760762909731237634082051855588025732494461939980856983552000\",\"1914333673689206389116942789116917579088664511118582610293383428712902211612554212779880638065888518488492298586641997844141510832940409501694726851666478650414191249534733087933879981733561565249818572204932715347752949087800778646065986244657260832234479202201129845117955957242616947361016603702640821256099895469088229339240402478576285854783063612307200/442333801076281757298117784528962837115323835962460661601905131618341609371649347131724700192551574625400701487125984359494804828935577124602622582550626336986871791407398609915208114339012374456785705161994343348351473385887949809051796407340988735853810174589261300681030826392672282630613354461927208579993042968520650313621522933214063366558703422757071\",\"5704691626402072213006354545292364761246893919997531024861408248746241619817955824682639582830486790618668221530365426203424888737658778881721063941495350237419723855000515747725926735319471480027293210991869255971365522170749568996651406002311020883635577590045650037569906001924971041810547543163363976464780729932/1314240362076792592671773873754757443276256223533339004339330559325754574023619698171225777585408160438834449576526997055649849875516310105297894855264038450585295422343454458568152668980131977005808840141079502436391909349182185596381509091427752151860204235071122788499996991078935216686010888734471173124487937875\",\"451219364084386208718456142329444023337343409261545444643031014769484085278440612677813682892926852469540118625738238137458321112005189595703619178533263706811689687213128887082197330137502064260105387500552856851972124172206996205919556553246133218441769325133725631665593372188755090094541462474970525820334385058333756591222492801647110594428922046641945259392/103648250172203340865458115839764297558925693061798169434516001775068769911768281084188883278842546791612199025413573394167639925287068809631958006622842716869211374513136766899877504136929177267362862319748507372147243911522667591375015611312165464514308451222180272935398828092646393830572838772085366567154646425598388620105539619174837489536378605144891769625\",\"1591076564577634575701791393842535460875733974464805197283632670013516183281542903377750304419996681222758401497321278555686661981435637461350320471258386388843198706277657208526372100698700615835733712519332548607115875288787602084336341594576426630670911478276101702119972195558314357975365863803265163991961173/364433108410193393847203348728981296285742202617988970384277162225847256295865554341611171460436362780497179090329831885853324392923449579538286804729856000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"5307507148709435807261229345132535134848030343901300324623409721698217134932866488937772986386501538026693956121121771089740095760486362654754229904633476234090792827930433598453200536551779789049352131005222659995845427680686677324963223653949277037520711609343166926627713758990384011274777087968799793410506391884872456420041494598273703914689586637995139580794368/1212244290381524115082005575105703496583315188540177702780216570265159923654197746388568151706509243638302707511238539845531608313334248788980188054651601536067740709977678222790481348003085034888244447626347312094586389347535167903408519024105748523384932942441843118813819781347089702286481924493361058339731949844620763272778960860509570622673048786968660129650125\",\"3046577098843580578619955603029073328361298436129791931304665777036152915858575282362742008136721284817899542475666054101957899858138590963789072530710775790433466847100422875906866496318804986202089528198912098377828580031852152997907433335176267300286466072997014023120087988748396598176622765923059385876855303940720/693911859077752895978833241338902695755528613729508555938416419864772385336777924892434701804078893822446727762077537955240605927550548046309823051841326355655848406646248595628715185413852040295631448250459076043816328082561248420925930431777502622148019371383254316636979070731427737764160145097293260938978413488819\",\"155310926743873343426312607182060072939030765297630534544899230213054714482456829198485999782086944271490229412707980997432528653509945301574794242118433868747172279224118534460563400440670015323324602117517342201640016853927923976796453577048995243600967202462466681112804476672348206491490513419336308575442086511015101999847896197546900512764233674747415844045184/35278162986589659300679088538176070649273991865663041616088851923111175518405117391134863644540911005782372831496121355954470744169969774540892096320978686548284501139861783292226140413769665461494668479430833892857992401391262903582109993838728281915806394747833588629467613308837196269424421131934859079260185052081536487462257809987002198437182539441349474426375\",\"46729591025621874782758519074451728476386657576036360734358719976400940301493939192083339293779149127132651616972817165172116269307276487158069293114860391502484125554406945249728802484128756924044633825692779783425628292959170597009935305429239702926898931975023598456207165067568919757902764815108751735753431153581849/10585868084079030838651390738371141142245086465033459640458366146849314274285871375459898014414833295804139979016362796357043372316321872357817727821559232353993714062535883074661734509440994664726425399880995133711038483607773782532430879196405793694658185175583691180757783597895616920432527125993118171361116684288000\",\"3736372348124144720852190769710129461145889011598636925228657393934132828633132357232883470466940330848177425542748100211498184494252714616379450272611850068867816250209867530921278645286769418080018709947826876461419654782341309127709703626401211996255743831998918894661053669189312375159058718767082163156988766821194002596331826150321864927832618126580509732359424/844176851007504003627016945212023239308348428094023437269532743221937069345682900884618378849283002998220513307273333096775669556093005637615012750733216460458689282791632437851364674879152695438589692227159038555722539345972833161146108367329370564838671791241431125003401861887477969954740544092178721327724620450947646209914621007186497081420384347438812255859375\",\"1258774755828991281578968023382624723772927642002016270484090409043454336040857926581316994594109169123354553321469500848146015719851609220423736153365139804086413284787598253618361769125996755159571523632747129480387254164008968993734442164892486441152227433281625391753702577143985047832519062595123255569172968685060844/283659859661671181526547833415653453506477950678651675193210969173130116121017723360258249430884213011988678011357458727603413521688184521573094783291496368005697481333739504490647194454695504722542014845706216224432373442438242355188461951883454664693262684873988061018976711201351382163527093784753398257094429403691625\",\"84932063355292829988908961192574710493098897148701473172754949846455626381329456661808566365329266898990829247446356970454502007127269708487563279536825277374133681167235811080298134899629580318813382668399644553111080625918213250223197440426147821225593304993621451053135332451997633132772608233430131400186571793929377129211228689703376067763625568623535588709576320/19089978133324852910950469658566458037096027722326716800113107848115231563787455584278193954518442601810776347091253561956877155673550458955562102935555510392954425196165785410319126098393353878286400877305164869548380670204577544630353859009177051698096136470072137579698473017257397949994722015089768745013713383769765609613514021200888647472804720456494757423299627\",\"802638881530832431828249604040579750916118423833791608589560402449036920165704012070349537114920882938466635598602387718300074733476150548724726460209016834416094317724261857969955414000155807312852092720310159572547644569797512233899495300028159721348599816083166712365215075728968005941610056018023633235372936903015771583/179951197386119079732438617407921535065140503043429174394605652913879982486051627760652197484142547447000508189455126493868229565647284332735552462525598465192073558793335913005459266977086104359621022691931002488052727597513413492393525660272900161375677499228252863529934576881596384036401784035248649026076581302370304000\",\"25208742399375362881099811032135575360109715964024747212026245529087599633280142314962581193303683759605084995818253124445773115574470717199218828756449187055537877478033129862600982068782249943150019637186466260707552416433010545437321814115233841687700051830170191107127799355485920046505591193770164750886037885397478191534797655616745528343172318318678405576430544896/5637713398995569614196397857525646325234056219513202928587580534159596897880731043336790273040813044077153051260989730372846713618900145444802234629922717464041261370803598799826604841654608724727320798324006129524610666235998113655193642594744544226880944882342204407750193512869672849910003246504052298022468012594459974209940607450480609190841893267203392880360823875\",\"732332637178584560220688900268566130246820235956768724845747830959547501950765063982943061181526237061809052444110437930100210105274824607344902764184151030827266142225894655531497849161692760385938786736436977268616029862577293984376170905024712952813234949508186306774257035535805330366742322777611063402455261391021097128/163377988152179636922409938163005948596822656868040662831003991395905185823836089887990201522673196719628247106777881741843786365701135555917263285268753605514812568258179391272113405920369587922702002732667842511108732068683407168090725712401954314293193572654347237716691784386690948494003094992876867763698101043701171875\",\"22391374854299462107923583267570593886002658786775211597896252879708753450794332301142909715845151746786016535157797023153041007263258732991465037648536702217273897876864351559736449481285518249846264600935543582562018874574655740660800634883403597181876364712521253650744197321080655028374602772696770227741610874399454362583980465225235674816785988164157351243193265401728/4983275997188967758382167867656806681565521964135131710678447245984239733544941881418957694612909599261843693554043504855207170782744518943778096768859337980470219783210191765678908537645270392500777411134164918803949155037581108678968701961544979451081836872425574123683574475790997414488641534074873248802450108535183413970057319247033379016606809226547805269752123746375\",\"21252344995592269775107236774689012760750850598567799560343535731251766780016530978663079386453430272698006977668063208502408607227544322945446079708000304179073184745623740466334127867464883762843346619853325415963062181018736410570113171387891518398846617197097407612852037905687899800932343156979591740310928257766081697645/4718515378484509142377558412184183991357747235892194234377932213613746008373918923611236346330189287336493794499188640380975364991548794341177060325509698404571318037298112293926833877103554546466055612498927474225619680186119313129604319096374924037870803554153458104225741255753314955115645304948564151765516183663634546688\",\"76703085666560609319365659209445044957052359500745196718269665234646121134787807938680787341023203786904308047981099228357850016602203539979246579454229078497537148799349353250167621935384193502383187510928609818011142642954550330069991570983902841318203794113898871515702445720207144863877026526025447819537396146822201819435536435835285098485990260677737192230985069824/16989892821104122916312992616665764943723222199277412857053896319814438961475117951904867066845412639236790762432996309717924037467863024360211163971190006272168845197000304328480920483651558672879967350982199768255256753110375467976246339260326422891913564151453729285191351273342206198366624882195135056176502724912849575385576554208844814085228696838834665339811027625\",\"40153831166521391225489894857551838468150576827129133168972859441122728710165233865309084872159583787083130713473702296122465319276461991457173085312407612757280915853584698420083436946976844240063731333638150599017886937783470942007376523947840104246927580254612991191040951001539641947153847776050138532219595746056076776809812/8873576113581065493273519627544307418139908640325227196912114520903505426722086265723900326735989771660987609604507503750212298754414472822477243293638486047313990878348820573874809636084574108909615044524663712495422565151340037564156235745628465172219286664653343193162657374410926171153516871765680561505768223660055617934625\",\"200736374277835272485186523480177159453030082779872429648449412313247640312479214261681899286513818912991945046297334418102711629933437654377760028476767482162031641781499114859553677502002901248124750539270235098492377826240319766677856465093871367817683734079621359186477306173620331748496369122143019303740252461824523590096923561928354020960176605008889579578495073283712/44259440065125442964014453739391594153290923937737136823355312892557975399035370631521014554980129291582486968083228888083079118116286312583989433037097397252506140224404130371160608365777625538148303917306340620019882928744151294738308047800711028158277500317134537540772759486365658024194428796846364486187105343266398338060080611643110071184992193593643605709075927734375\",\"488459049325494693259159444507437983381645757291858092983371672334043029615965882574409808932509285079401239403272414271652617474184321852388397021836909585659327974611273820676128650810907598106588433939541654215766888212287311943387232664417347883717203611092450971786083806323404432266197250919880225892099146722474124874256523/107455855466267410923480140898552598306699341366032095904938430084768624148829473848763761936703072253841751966906142283640379336131083461646777390874405323298406517250231389493084918065243079819898691146841695350589992171102939046740169198394671965069747042621265775948217054519855346617967866614303497258042439052681849864192000\",\"8430374068596413768975326329313648683222744787097373111477788794692418932056901235174019333392845529821722488982447683794746518712070635063397464904489452840169472596494433874412726723065560358405027764015273789053064830528919091414531400589850704395887250756457780868677553068164933299802944396576360356896758745030955907258232257358056931680617626606715393885378887657377280/1850480358582748412767893656294669486390769246349349706200869446679212812264400876685764762211659843658541567071977813110496329850010288179702589501255367345935389050373021591572539260951149696801665953123597521983257852207280970577287472932167362521740230973547070264273850381896786822127290397075758780174083415923482640313277341120938690594859118603017930500014640169211239\",\"58273615882491925540881784328370957720539797010816130007322211512070634295154626813477498607761260613353633996451797686143131893884559909668805628269959901044961666535533876340116728982072626875010391195372759135469446048394835148654407846242721443845351855234347422256700864370273092971804207514736924787577569355949601385705517152/12763172138328432984573837529764902730448666594097466544652830703737195804747682450548488162227364538052585484418491914323658215406327363805353540266048943197822838925184942600367647278764952826664684839953902567694832690683467635727409976388280092262839126779730168889686628630302519063225007497707028600865624133968363921915016625\",\"2685278694947152969468407055109959900160804835228466214479525891103128459065131221736713585038130737099067040196326815283171857977706979990467444622550497565521863441617001097354649972660183038850033950647594754644997436624623325003537308428828750008305464174443210079059253920383411910911594636045517662796811001285984447671371943267419151220518726940455756833040934506414133888/586864816044968996825907488721678304211296267371936463272955488077666796280028127333229453342355554450708284934221461946991556216095213627059047984199091625921432110913096253352065238765240063555347292393427726758010888546427415276046238297382474708612526770055488323003698641493939145624184943388159614111350839555141202024991876221874110644879676602924730506882384603409121625\",\"27700345710264347957758638741952394530538598225904772664391173119594616680996031886665218221392453628824570256438960349220263575741495285780845399187013582169907518462437966962923592601721119258663490655013419675469864809004562272799012227293974254329929404036071055528766397079743200179924243479370594973626764330855493789112414191/6040997839051213541001279276287478343874107660287651711609067205111574718442229224212245187655300348484144001298428958025052162253854676210451657425437588244676589965820312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"80160269787574270953020489212619791839643207793889009503234879683494928396231769167082355143564723274576166638869430572977442020236299319718643894871736539109822173538266278165276591962215927816541165548699380129014840956895931285215480350321259054359835472320394089646764361802445068798451796525897304221529850133401768027469126408090577121172238802281079916258951770135485696/17444957084936455555074876721808241311651668802091828589911310253709517226715880722948267977560381436307152342821304525073651379763144281678911047276389231713860392794975453518107055568765009486973017341479560154792340888780337029481646046233967923289468141293699236815196553819373828280398488966665994092877680860643266914861837639322607761804740256920429518434353839878280875\",\"2352816897072623416220002134476921108405735955266703519252095150412419264317091785317803024028565851487861978477208755211589867803009700996828082850796103789009194767813611798769297617674631277847910238088040257037678126316866517601388289837575778165301828137259948173292658462765645645868094197736382683775415645307647043205988394700/510973411316690313485681833991645423802776865720580280058344111363363091616558230182669376841383375321912553771027107891991318313938505988903735114191313214327683449514676737796942389784957658395806951715454372568523597420866050825822028817422805046287798054682484158011143949412956697442991898914560191411624040490122951328364833797\",\"6403295584873165688372907494046202150046769667837790834896334486679541887567517050446119511695248926941383207478170182650927368177009669717288184903306689332746127845953193587519575304974203099873732502605739219028995266139383163062837007982999189114810534856227848568800302527760100163350814120545587074865568436789021082619398126713943637898657861949091545516403987546145915409024/1387794272010111535893205703999712437783041553900341112488641528986385462810448493444968969845352401058333929711237978223214186693177251566069419805757440174840170213159651962686467523533938145629444468366235554597245713128812532716616087753947246800626006504878203666972651384731498770435755225220796872155249202960801768048854869001310722927230237083418017482134588865244642658875\",\"82993247683514419570466529457059660634483860665557779709153549045427987672829778520201315148149878525274005978368939092115193636113741972236218502664881450367443614971109677363668874484696543982239492409231870942414193419634675024621942196087473557914167832058111113476295926250739099284241826553737074679953551191767148712684157318697/17950946423927357725787689855263532224005643859095168852729513034456208872420513601894508438640531171097082516559962755244698695622824386001219435651555513795509616906355363573638916895074349491513539093024980575852693293474288638209680085037286354050958859425647536735341886663074581909148323105020337857959651624760873736590065664000\",\"584891611376763781852144397260140844977346305541197362434227194779766612939978629636198589818106137319267243431810481928639442343946346034433828599323416877248326356345631611148749005937144684862502198147087702668524450709118588741606955966569427636630159793409544653944608958808602551061186799401212712216156799273254257486955348236914237644151956226336750212957092204830385441792/126256710861549838395499078249922986417488985866522660521294610280820007499099176190820291214370699289977888813109514854178180265382471972583921477022411657285850911270389720508719377071949050253246021921916685716353393018411683757067093259101151481189635423399611625009617884983318141463140199839724797412514785751549277231259345923662499623640886881048572831787168979644775390625\",\"4743054867460856425399742072925732465660626340183690464743217147109403130730445842673866624947360862438925194786600531200056131309608642363389833474026007798643235346104937733349791667694862514383520689594596660275306247615314272223660862212527346572811422915223417783887717426641317921972456913534338708745549252254865615725859881457906376/1021840037832289788284691535543138164288462770384961802287250236519983887262771944174557087207566030730743075334169628971336358708580124427857321953981475719503574867471090607795242192417162791762511940848493176847925838738242153177311649130718886794249673254183907621449520415060660496225939963471753122766421338241291756892571824984344625\",\"3784664074155769467702999785016514468281913375341134899878893061325465790589101335015569840325786070795267055386681356241209412947116340524588831510768864231937929260236754881829005065056310226407358204278658699999612596866156294195316867934035877283950841910726224355461522065773816109849107487214275801829843762482082803559183694631856772777313673086715631547326400170962722842240/813783281473223559981291694175087508812520505931454895884442580280342455516154674683217348039336712901850738745276445107477919518905155156380620466135946654952837573797479076027688866326359448543065305071605591497778941561986579230698384305536224430794233462949056326864499827444363206162251104552740175503996670997705423888382328014210171324376593090187604268086334796245552762333\",\"1946671258536842642381655747294621776070051525209940130115769153666368932042152311477746728678182920842238801763565726086459485050237860693394471644023999467670017470376746609892484192072297938254898880354014176373253875722410186683852253828299669530022166361304397631667133689128358365296701757782382475692465977794960109690362462330857/417774039698408581013003883929127512062321623871486379101498968145670269174833505080260389860863417408848209525427705249526516766731427603641806256289098209429110794311660844125377702016056984573671024035213045475132134896835814746425864304907974005950155657789157496389234919107772201305672421982198984613601511388413381215220924416000\",\"328578487723377153600821813410631465225159589727320893988991729306688663770697528156625398176929288628930496338036815910669579019719633124832162035588583242320537435554101841406566009219059042888412893352417446437227440076869427577701706713564212185163005644118869496869980925214424591264870388237079776503547314587137721633918824664946974571838634860386893404364499977966899068777016064/70382695927096628347637455030970644630942872888311870124896575877585692281624151103204551947776906510366521972834357031777287506848887607457751667816514216907338309372900327919413372044625602555866294337672022362865161523684052940126509854895320132828009551012639156341878073682501185688461720664801829933689280752623773789373199210473995823367199793407048741191786377993390965297664875\",\"2617201476921368517857942326432090876874414269689140439151907982631768946799200744678055980827789859579196832718849393046147656447672531861353456343821196812881882023188898815179947651274131166835133965629115749368441605680383605331300030886676081418867305170012032824011912531673468215561506423833911621270680104083533917562622600478548/559567121085534865189976875600841717161617153776904752351231210970240323460800785728739412474960421770806162360125774000625035522428160837855944215417821324758873127567654244465281354654299068546570789547691342609793050301258532586131013585959164719533123826201937801986942606844854123769532447570107525081084531848318874835968017578125\",\"636225736038986537559880265988431731529837451289737542395494683393492040808565905376235074534207026537145408562785279823547657299565440309510931336394031904920056464959974743525662459433889398003683078967642651812081450227654478095420306880762753401111260630654049389197602389949892636943971690212484981672010398108426002137114819838399222096538921225458913266993881960732663394566024064/135776510176793971074115131648637508758953050390591773574951317807919051619690313331192027871176160424663811116849856489187562728496099757910540362703888937768555824513740118941387831822900198029266206334350448626733139136083404404120210893986654422850183837974770675600952078956326317698998103770833069712616832650406225828969036781514645731022616236082175582937900731419575337473384125\",\"266695771933124633677367149389643417608461366874310588884377151539325854547826373711099517873721616543570605935954334944030816383858485296542260152894035979141266909050267414072982042090341712035518685997484257326212454742816979806460287972757626105526907510197321350895873473656215941034605746494172316089636216915825022339855304925515685/56811706665210352283362623728191218698295056176625217939528332247537278605113496147630185544004654583441448319260578659922931798845493756189402805173037491645434052737405379674607517658118427614090338938517963215812444779184193933749520313676564187507594274551791388039139409235056119788261689087831209441779870873305232021728002651979776\",\"3511806683161697708497547617957719390189982761002154386881580160856792742952365159764830433511949678304281539875366378131195670004345568047690216126001067194904446295336734931691743477531830892015690816210752795806120303198745685394015161323982229908105397857791180342330098240702332072396030780386362735967021055250450666535422528637737695053315137238368787607412459874094164027214953984/746741569878639983491390741637813989978804202898438708743258000150996080386381281307609038830698579358879333079215327202911977568726258527646560497079622703052765164031089590965199628534477381843079892123440214378949632707668935001371616475282883095939750704292616758568964786737752325652839226013335092148777788733453702438432279149298482004122593243860829060557386699231448957232420125\",\"499543951252504651717279461487337168721376180441322735807713499521878076780205427598086756686061009718016175215146305489885835839673419698751530207404115002383180054704927695269921072232395828258826213554806570423602966743337801741633869267620843626804016742412046844770601322513184123515405692795346790813502805238635003099976693786012816/106032986203682550514602969462803214831559442358811656484036951559991322084935692953211120289352600484987931812632505499612220494311324679562152078883141464406938524087376964935494245010636163705698220308243980789514815579319533341929989455211613890905485981353837321342730307819060825125980500975023479813757024395422041501208805339176375\",\"8540849722242122835873311629952985285477986765819584558233324868363310302206006773828897816547299245727087876984857726652932481899766510637403577175623031467933486823994040576431755172220921921877192006685053572215922347418846423419683723609799729359551828522978186208983138345476801247634773975311405913274552616037005854836040162212761099347518242200807692224460514057530656658616850816/1809694575992816440924165741094996511361288430727981159314194000585536832192004274726651828760263522962868944612215633976203596150606503849595633388319338251977160257979846235995654357082321611719654136058257458753105122024859078420173515189641515736029725847315662215778251370398007468665986604529263071981040014321717598469319370651877296085250322599247141397427185438573360443115234375\",\"51377057693118720457387330519321684810411289582445982078756989158447711080414032055843805733348558621949380554029375294451303430269197115810494758213980833379214402452992657502777067850631862453239349835215260705131864911194740832694498014048717871429797341104227759557199716944554347879767916801106279081864127192611546757627038037780244683/10867246748205139797826516105458406878398263495890048637741584969144406206902037615496936724683237700974333817527350121106320991054058406504571347680049945745432432384570515723033245430148177097144850158758462968940525568041926860856763884474605057056550146491001458649244094211354153171337463406192651150028767064600270112838159624568832000\",\"2517199821548153657910904242290029026229621935918771922146425373057248090467388430999870036608278542449661971830076845113363443421757278612394167195431759807908413353743377586893872930828548256216510734912027450642648789925142482023713336937258932978503310551945630359646777080073329099268529064437120002567758664419443374110941824106727218341795100740316967386497091058915066147604481280/531524260324016969370728057738851340792702640911631807178654723224511108065633433027773388768889035083734041289308124943130099580765995149865288328550751289346866467755881013217287175392101334538392596956248952430438673292186779006015549928829953979591250274457658042926539541422697852390294886719770034058916886894408015624288115732154492554105512936468520265305162358665491880968652687\",\"937159485027553069020805864547349554547661693803137696125140510201297417077233061462068930061915381468160677500445535971818609631674361074587732183297775728389124966713749450996643183965795829780345678634356741756033039293590264355732129789110416943789326482663579413229893878422643110852069225671783017610387570935863228248464396615988222968188/197552642195166614912991396771845374656891854357948006221100585931656016640982345159207601253599235265353060942313995345483862152489766993442419668492877390774016299878943454249209917002169480134131612530977452579520564400124908392339263545911443803619972765231094502745980083350567509014991735227390978850048088378721210219321877150756855372125\",\"5119346675109082499980756672052066247676641510661024682574296075659671743397880591881419516307292610449161239233139088348510165442597278965718490070997173182184417648987611422446347235659085092530927312760229499083348217392125906851921500360553758600756698605047197529446594606336369425040236883171542367713951500007600355406492128741649090501989105696576697387613035366083536629358444229248/1077349190930018641197987339365056771667455373500846354778079878558146320193384166982231171317419356136237346389570422332278447217033773023556383420372685049620361481309067017697564760747047839930422553324681218253359586320952896352245366885171583221864112040038531116947187482413031483309534553461613717398523132176948321964066833901215878133594739833910960843185464241840039390204295097875\",\"58469980853327028628854378052548435225264353747414624620847476036979290604604988637469977624105451959796142112200285366199247075503424204044884512269071061176877225315884188402954249683107639777479663275428465242905314418930053869461904934138752031124685541853599407727446896558064252696813370692668496452783003306386669962110734257851955001481/12284458784412533668960387046583440199646081362484321078872891438551639470826582933879934711861551014258493898870867541349962531447724393381011633785884743889445407749238183080941846528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"632694338036291086868292541736272151517212971647680989553388199374739841494700315711180961760384484042159533979873604395621016272772109619401112452105475906812313548587880899058905419220497456502543971131226430775692744506047039958551641270070996110661036371362526401525207493270590999387476275629412687473362310414634469788979236895300129227082421021999210841384596617452097273320509348159488/132710874087075221626157136110978536488168313127228703025408943153782802265472978945703742152954881438058373686972477195846162708986982742647038014147903817539418442869011995988024638278746664230046452545499722614320284478925059527086663455478374200352375121910000967044366831275681254530914306064535110528723482282501358749001657608122307686482720926189537227492041135055090784059994118192625\",\"2022422468242151190347511883185841333968390991430363660248687284021524206079162212007263606819387821055183192871951076644707111802972354128011904720586729919826758651167984507804867954970064938022106484656560866447290934136610214175516487579122328055482392137619829739560923807880779865442016530712986750711199998190148885726144596663143651240/423528009127070458603837580844559347493775236970253513203186912091140251858605354218715508091394564000304400858761758838182654201653901408046974668599216804223721114331085507752600832390227068985693006017591304916519540245902645712532993889000048992026931475754508248265356181099817467608863068068953756055334213584649136541490530849577363647\",\"150542201776735231618709653388506394887777837646651406023174643241783006776019388336318216053045300417086929061565868663031237502137150880313922488106751241006715449458736723129545400133450376339156062387859536289694727635468338235084533552501618659272047966040838509286942825414463511175531001410923014751124732748099355476332649458471135027773371541572374016038525336728276024676601778299264/31475618522527975728853391146702172347290819252268551219771201846701658848754300838383637247014705706066050673096278897933831272607774110183488615338021656923433335661890414740664480671162459271850877855521869741833030384682549648626038314686632195158507693321505500888988183270276134667071014075017317692121986144742473139078857816578133693776368882596780120407949076129685719314703426278875\",\"162664351499283182546788129866259011542529017155637405328005084357078048074065548349602626724265307733005745244338982661090506394708170105916177679714664432754153795772811389612700051002336719842784098507498286260450939289109123759859710248621544296008356071415713931721102824434964336667980062728653562369697289761913925215639430496443820411811651/33956433298509232632327667206936379248172049619640091186698677954874297837764235300806836350019565970550533206216590639008637925266405524715041372407701947953283803854153876844320283735281209725651036513491246238622967031979233265136280687995181375582844780830517825595245506321879177965868747546127685256867456319112247572348416655367667187712000\",\"27228583713734183629451808889147559240254570554044667607519238865891084165382075658707675405673276615039702916443152954157535195508033284355580742761569101934821088036084480297442018005972653124248838420021440899368869744141698556359295489470499243402799483082406238128875386939389123336303631993557844565927960009744780823166462314116039469622216263221278402673028225214534859076857413557466368/5675134787340359276387085910732530678163604187009567576895331134521132071092293139167824957253050637085885426100206370974479279292804959049999647539684766632278449357893560561608633329561385765035738071726214510832066885156767060324427330401967034889966727638276371320401053302413136551142103678412692111973028587922399670456670380189570979581674699102934733563330382821732200682163238525390625\",\"1340937726818688387636018677960518622106989311577445614347061615417831160296369500704524022869612973331444242000788110133157689786976834913297544087249593601420972111789552905846168933014570399562460789075871112224533723259660967481288525220689577290386781169316008987012566216235876842757183233207943071523447855623001920854571597886491163165150556/279054368814522483241446594911968519760869180429079780837994812436395792594449929617293503975169489945136244602350941695478861584261665582123038340824700224583170270427163469762789603657025958695551448477050958557681299495041994050951692916032501884523150972841782658389836059236040091605838583126400660344344601879969354053137568588338096589095875\",\"8910951660339249479517731530773509037034977353457185453617569046885132434552771722727442649095007828468878374139001808825741829728375370140505088133244952288239619141544661695065318568074863317054989982620944602245967155400712702259180443238473885690297281525960618905625084639870407113029712510345262279507055197024677292523214467306898573956604928730377318210588837126450942086527893437954864000/1851573255256476362977604759655284263358595254392797078730401113550522214182030016660458780180636930591149034499142464357511158868625309442843792189394292787657774627425816694628839987456477799348874853555586931850788645677998004186437300173080088839930384424797706381282430208961565555953254145002318893188197561315855286173276564036402546798318351229978103276843822345004757661005876638005274037\",\"84997663352987536417038496128111159210386455419431137931308301989414462311135708114322046234708053448098538629166672456703651524480738219822858469100454933583774404032968304328859365484249897913676382909050450855222567147661842184538302991526635974158862033287154321908483007506326807469239745851379559259262425675035790574846229470041596801343087041/17634687575122715507915388096857069366146981156897230620371714518707518105157483283253374797127075689236298114335734874553183291806268149747826050838089931351158483980735336772879045027213982661634865556129548356487722537193914986994283729746578044621115589195066212043187229606921062007047940293972381121200723292297716621231320254309060321476608000\",\"1648849257486312935416274009474520589799750757877252390543329851029437452988499485179026845292068377957697884739052491455807688429630524210823560524122596610276957537756142278585091315141096146341773982302888007751632401090642472506538817998043326415693840862261701364114923327286462650797963969289743571514890723145251583881752876340628073395708716735192690808352188867334842743895738955762067968/341580411902962140529547622267381834425264893226447658723654120920549166416114849731588552578626041597847002946105459812230979900480135423787717825697955152193526724029890829615845314765605770060975538542976523177976182401820926854406945392167140347444433885786340415437006775075196031433365827874254477351374236932624514469241634422312990555534789607377023339236417434574755566856489013828206625\",\"4899626659231633406569362199187192352933567344960498139854460545644210119722856870634652562532083546344965166340063297647520613455037240144734014575196764021102614748218834054157165781057405100578668000290493431869797883155764963238760612333048336953434663867580862692267574574465371615023999531030446250351305046572267686566999209229202587258144318592/1013522377571209303732207048597964555261512342860326827024786500686692475697570284120359840724596444209277948648863014479460188496587721578075151793081823795161404110811480269106846359964436993190293615381593756076515012514100289406862487971220020752628653845345780766244842386136740768474703009091552043945843632199999007070800871588289737701416015625\",\"362903847358088423032098939589019598036593525722040887883164115981767777873860799955715587436566233010543937498922435963385091400670303956612881974450548904906949032005878241638546734597308786514086678561900713741746905742866635779432216761799371793260025549698865319760786921444505323758235164807966277024031605673481480590193724980659448692487108892154809490199414370023696404259691299614147712/74959603173756091922435708504751461448318819548943586676159545028063979695880930926805574951275602951047845904770828900645717477098988124553474616764040938121171776556999069351772286262529729056288451037717198273521810585868307402693261479298923209587143468206907278220909447483738730657438961435587752873879244136801168836767273934997417156543866722171766794171623224855358640156858606843576125\",\"8521348154958613550574095745596657249924328336262127244827955886474742319277424381360677655239017583606851483318951440691757875270001283229585075137091617073509041644097526047127618954293881264113694362598157456878784814696577083997902588926421675843291157049153701100218784481406086810264243143337016042301806376864424632290226377881206765051896745/1757584673254145109614914862134217345456065873908262753169404848658913774363650863904627183104777337461445063704655164325930891269843669860409763569362863600932267319335889540453302785099532688264425988677082044905948179153286276609910158854349711054144968131934713419772852663860893241364433872853338630216232313607969790083448433666334742108176384\",\"1802461420562646993856730082999823508145602238125054717836501201545920604020389361370931345491160549787411668288359013059160331370751496329806488246135100776263777863399096485894306306621852596694700845918608199329091852956315870664531614358379176680326508877329862713333336188556181470928613423972314983964578645688876556351433429494008513812136152576866650152623510296911708111085518974142728903424/371238439252064016214448115231139360835481920731625321084601566992497057371416121407293286027832357816257507287295719261141426130159269433199862002841433235955835172774430690352481806933860390015899973299268361513643524088242973968537595085600335021120523852420135081643310663869327371821064862449426404044951571585406092523478861879148545678639697679215289523234342337347529225543852787599016265125\",\"88795280670112240977945082069219541902481768504536167808816453021962616596410396813316064685579412429940019071114917828928080181638058444302439626425155946562362550070187433083541414569447612195370911498321149367969974762244140788494955146280201020345849385865084095189982291190135293114489407801749533448443222584092575861096946605418438181411489276/18262596223069549313969288693970246663726147886364354584825624311486557881239003216971630599389642752648815377795018130449384513824927138566203714891090017787258920529990523519479383032564209629983810866231367438270859421572641494420831435563580050954867101292568399107965982704216434467243223964964535464624988344342084084237484262612100980519602625\",\"752911409358158070688133336918078236438086521781731735123294741731669530734909563155732092406099003582749182967246236657021875488130304108082404134004381196925042617909108654109138702993903561036987511410396567636331465803949049946947888490287210013788802287247422993384874670368649616782837096233384279817294778916419067404863458318451722971117669642134894906235066332205740872938406767767019265664/154635332883086377656813458754577288834216641577439356891585125701020579768315520324293435008561626926046988056302745604248220408154454267643222328696606367409715369481567213640103076112146615938180089303294709009813772509602954514391675152597458428326644988225555987883250642389550531163153338541870029415077982539614784206119074702022117790679351778993541426110436276530890609137713909149169921875\",\"15286089077439918584953144558775765002061832952090847117286473868694909713791678395221438112006475047633028543501632631679316850512797978594476229228325228403849089079675681042224057234415951253954044235099139983386056610384489202589484570852048157272551098909455253037561994944665563291526597323199530997923272894119350512727802414680772513760081360291/3135161418037836259442831302977219750614726139657718770206960776514822107155928800694375522572523712277389679035632531727155957120566617736817225541673148354829212969778664144907503411589126111888917929495106029890532891919001138770210977012708107496187227751496980000137223047079127096028939624830654227758737339725345681745847598157538483308068864000\",\"17723482381737693269787076798246423310802126092500438681864673375704464394105734049099094818738115345706100191580982712146882034618103161268453808819471603805345990162762722549964406042295355916458624836894291267553138041035528315839108252422478610879301656207772491548742981990469454529537049123948604931661837539943536878260665617524824604291547373872716194154198824107266275716083848262625068958720/3630091565725887087605600771358216927099748013831912080380983545872077197366172619225751217619097657405660172801849926220948413919823038425519006413005998509677472226729295278652284861834178791332630676772284971762683579047508016687969040658592436230062049051143001484384767836353233324570686249824980508520186643477313941054900197268584495128610811273834192099099592687485176400539748616360799518357\",\"39160514032490258389003214587901781721548011632821053230881239001436341012396166857515197251499460842954863342641015306304854226194551189224721257664420778416733889030680295206179109679627522113592373938602737416822981698362363553492610842201005420727750505681358595340127099855823746410663750133019743170700888375554918213182862789028531284364877435896/8009919337434786244380818390213546866794958389603666737562053423775386173149395943310276429895991903753441584557917565343673605019989336264748588735390182130334278887642569515202100870042209261561001627386525182096090194076839370589780431326097965428311786635366819094633651297179987340498215947144870164066409654464551017761658775207392803825996394875\",\"18188388167811476762477659006849121912679763597132233588170406666718758511478154418948855160838212151370453213943784067796172102916618102024199200086478021533171984254799008541948973652219533819511807681148179806051835318645591102296256347927018942348574774821478499092054497390790734798143983945096982240517058861467440217558586822663985584775920517755909444876443211404222400335500608733284461685888/3715278241795087610941547133490827711133909145414878217965273061493740719983191775105550559905283733134189195190321643965858771461560130864714477448011225816210219450040558581571206711791272284197614810026220745160693898421068168630870850392739817340370146186703867097982858560347971281142766235850971837330222970900661653800041795020382847588362774677568059355238174402415384788280852059532958121625\",\"46353430636874284402376008361176880938798775506236714098123916668545331718677407145199311191108199195405139575147933283523305343027297808443653460575141799729554209181454676876263582758919969948546918471128299522715691694855904535448703118221685887195383025133924852224568922999317583667985459047407473419196367812949579858081181660610155317911318937349/9455890179897829052705408931064120820559254220394152447502395298827357144081378513080398823188243663943177539817982481713456798757563952162598464929784370305696420245648035222083207596797327498500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"13607414211126412689435920170832779523235279308039712294681570127241403406455725064605210473923965685858012114332021572088551127762628892611459785625407107300355287623761046438724706918300976102581928643740596336865698485838431972050267114940079353996100620311097561405192365496385584164725035842307146351211183443267583872067352881387294766804298681841402861626441205037637282007810811602289501477350144/2772205947240095684743358245950494400934136973845543049938212403703005150954425087866758842625041409060217562878157900197951382737615822655863548356735553650755342108183641353142157728364469706919993519071329069805875834057743793434164720370026073143626055293058601124362130539040404491770346043977106988100969901297669523170508321703496903672333781306743488573086901583022550356345156457496396749797875\",\"23264350093315690507131500726914401771633259602904894387312742275462601574788485574913195967854009886824436237740789910851843045306673524324611130536719802717912615609109285261163220007241492964833933975789257681755002054890453747803418465119567389315754801791950553304034666399677630030683759466627797123971742061866928213780452325847848901682792886840980/4733430508316851445525799359992627142007028326865116523033957869609125212251136452396410236930025876982265915963089597825393317909648054808274488356887197933393799241941120691826916741647173843634076299630884655997401370400734954098249519111198509015387869462198674657171808841005212058822254513429836457539629035675822719720295352508916898476137111981397\",\"538960934807826161927564251064896730663918579817797131801326848839524373936888402762331254883505157846659830555799909822861853145306547699817986010353774500545305596630924815657016569444824389893996399550343022444937690798126189162954188680257730893424775303801562327757655350002001080811866451425665301674688928515041429654624970707803336800125648742168380676815769457467038849213225206824671025803392/109517448833211208909213522579666376007937648875042608355810687327424621469323788799169718267715808580775296460944943658428295481347915131091297305260674731651980547668762317138753250458639043477453950774629862540017034566407286963562574188172753764978963685535201028286359818524519980885827473904574840285411260037264057197155527809916623487144493019982419606308144576939532055057697567269576800542875\",\"24451481554350251656598350124163983489544445991992661049829014268366250968046589127810466483349378560701491445658725080497078590986743512397927747885285095846398852574219367580068049729894667374214861939897557930527646930793431512683750733092448862551580494245486308114129295467976874843852138144539250235632985676953662288536669286915983261820949386845806781/4962240683851186225340479316959605207278948397833849899236383273145853045488131674290332609876751222112917095096150531825255611911377071887145019702433883343849119017643117746273523770961304609989779231048095665388209125939879595509516490230961558353074751312876252070889983946768175488341370453053495319823381943793679003096504200440997908071027962806272000\",\"166591964685609920525429719961758335887941461052357297159523350448241484106515158310298216150030768812873781356326923214637847449893575074813991141092681107583183275003570804134461187213143832123628701876041315736048451374824101256980832991214945762266748755723551899001458245164317581617731332466039757786839492869211248064662857987111284518155462148044812626055842061283907063784492325693994911811072/33765943466859756347231737285768516240749714264564410814839966011490233598006227246396923594069488496368994857718734549787000213944990695920130591750377483911116845697231074543526982580529937081378303555262933800375576494067959129682770065443667091668104132884375840812635624862495548888467575848428463895756394050252457592540570490061561616914443009224917652440212112452400106121785938739776611328125\",\"142464729519206642943985715465196065680101634264787375740459792619754842396453535646509170066091478069799080172299369994438836484938378991283020978342879057271045033903518255546705211647900945143546293360496661466657600494787228476009216508124736254967761901224547269496682078470378676865981855568197705507111970901389105723589666709580851611656838285777566736/28839643075889294346635430272525349651555039807615358795334663734940126053968249608601725991946342449660829847322517564370606746964714098508298705743689729306507554363954348780144675937510900983622836770223945538844314468550644543502501484521561567788992156632892028591678742014134130878101553633195551605796158103033794695984958987367799607407626319024034625\",\"380457154857422076784416625436182734840012277442496600178664323821064977485271288502806124740204295811759917468598315932331219906040253463960961995849761235911145436552991677050565022181516596464968316292789048809559129516930574340710998611088996508613850407294743457197519091160170604426002924022923388338999324182261954685794522778833029950214443271526469607532589775916381786492089432407550224137344640/76922142291839859196033215395526448408989799722090330866256930898223012427332209054699494033511478050536463051459450844520020426942553107946282832072826069342120835351421637970462054707566481086202287686453371483126873188020538661871147778312986131920021929455276187425940666580158173676284545586944833678819622895550345083175685846944633982680908505900099388037050135210936852210263717185637166725605577\",\"79999800708369666670693340813609265988600461251844239982904928629083975986385235816587497657678297663151298709076884516168798694292862559083730259839524968813932151813233366175091317046758260934357096757322369138747731224414176608247605314668045838769433811781490030635374856042786947109101585097035794969502111354126773165391577217071956928171336060247633607/16154850265413610119312596299635391433380319311682208755390341659152160578366244774029302281068833963848811596545791104919556346810193385001196395489740571188884873246131813864782581356887110499639544662322008824704830818136660544673293865921754569356583698951612797219776290835161780326945625621758204931298948625885081325268123344406261740843197232316416000\",\"26517014004241498798848003208133111307300592620947908933072661812816683085261359696887064436611747292468717739609776825664344064024535028242737616786238200200498291226984541942836459188328346609549239724653950302145388877472274074665166631509490297630344351573245265440164082334092997307729007429218385933622623935704482371360985836659823269511115937443161532987660855490906546130131716829909388620539153152/5348257529530073524280989257577050878033239486885664777340947102417077875628238501791711336803418503616042922880218860266611595594400020206192599559925169589023339295256084579966533260861249529670141854632965231468533448709363477120437277477668173149958267956654411822360053335695956270719680086524322530514249891157439878407417971839744392044064720476417844056346174795601710447583861127956455406902139625\",\"71197348290771978405602732839537012310626009318133570890482364371056186523989330157966045289127980687764218363064941391483781008265266963537623770685390148810455244349859354857421474277963009857011653865476081389968122418691934354122230780300833008753686234433642072919923583176333668289998661499146617277981691372057042930131717336250309680764289256080895092/14342680993892886303954853579883363225921109635079605392320944523109187641283117181461662846411912306480691901515655220490850586434947504504317080144378185989596578890875561336496479576651516902048606328604696610314441229321219627021610788398730173161473456954861916116391687748151443335513249810808309201830214153565966339609616397865465842187404632568359375\",\"342401018754023891059352629509715357053454506037284788725127073168445189422181540408896452651232759821766616850264122591225331120588918865882061344322996688880669665450231982002597398732201789017495427566260651180470635467002453249479483900268320570004293679361696197905823690145326531180324429318916092471863347575533714871355651558610515931373080997536792242278529575700808878786732127630024064418468916608/68894647682461956089382461406499759613691148650738957016015844830333168307020284281532026442272618372290646283794122772122665531108484704223311663270836645399554940741928358317884620420886609705267248656765357348477857852684140561714900614303731786621656041881975328169543884661780531057279582784036689401206706069028229798913082362331334839997133771880514515972024899408556517159759907883793675672065360125\",\"190286571838805495686895463752492174798162827967490343625540320679760700551286395956241059969689020885714190883323266375067607282890063444652926151862650426323339187596278760962390404656342309737428214493422028545912504503974763216230927196187743439226243880933947417760147785405444976177822143722569696182520826218120595298059020305548681823408268556482981325/38242608291912408815838081993045123864617058390583394828737640036167893859507494091864963383596867701436244007905770284939991912884465101575490548813894148831966132970730263562113961685364216989999844961688441914455435934703797359360780356482629495214859917249465567846934284121032247250332634283689409883499295469118485912489058982596725212975311140618764288\",\"15345379701153714436938289567639102307887273898834051456693981514956329731572600026866162286097662958712922836383881840211072389867463987895894067288699955858337488812343674818565432780224654423872618380928462939482247900055572079914753652915184313685270722583926261499687728814560680092231526501970431280783177357735398580700300402036873780385926225005561766822479878280891130232036389707452005183370152749056/3080426623087819678602049171756961824196425548529619576972793653585089380165862889092832375934535464160425580449193072125955685099151500755278763306599307218302635233595329082702148677300945556130106197481236122437978375963261172524503625593066102601042060541617791008722569799735202779005407381267021641545644264334109052258081225159748043792288699674153722046659880085850980843460715080965607434114275256125\",\"36443601662144279337033484452272105547257065463167427418525882851507989449375452076227652634440476502702584889057376829320548464677623038648843251719168810701744338735202853412651160681259533015293997501525430222870696235141468274274064390273214484922080219643095978640300874086585386991338440415203863901714217818222666715642467237183267303214471854472286478344/7307237990148312451155090506264642657872224684879860008436735430879314349554023096366846856470375025555139219961666754780864835035902856314981482268319886395881809659368275720375576152008289949085453326722156553603358879420820012964006978808113307340321824660484441618487292138631579616351777191144073820686595597986548374588839763719082323114663844043046087375\",\"1575294930860663922843149113097927168024893739962464327016763741314068438447271326302129681931564068796631337571133444163024224071270063174829664848259482066723104251718808936762938249028582992557822551950212098797718627418782376027133576209718376784834456568694813577764300716139817031545408608110880973380162736536313173329973171844528083756524804574267826691156368696436273087171467254161930265910972517504/315498546654512047637461608750018349421492986465373840347519942494904200733840189483934245529561231604050629653992944140351106887747105945984325466452136415067807666316202346895657914393512001212656936450425268507235863153258769360296536050028695266363553141327896064944506216017933135251875087069031098099192325817395958019524956320840925176589616439477134480262100237057953933117460110224783420562744140625\",\"7692057599553133417225997786980128299372439542315125030077404519679450372805989755158000864378924877036225189784045171045139667691524763609840822628706422918926410377185494048355128046783294954373197082851501927410350313585640237550107070936498164597231431242858771457898152684298047446530220873884022213114819556822050178579707210264243087257050468000092842761/1538814487241112760739561704846381585063002784795057066438330325566843108114787083741788078680861495340026117682606689156065008672344707615420501964123121620401073675430690541617930520947170306763541251152854304975131871537939618684186766168376514664494488691311397307418298556185724993104760692216619178358268934740746932420562664234738576394742559349407744000\",\"15190836470550557926140012263310230378455340797095100474720776113765300081463960235506950799869073894127884189857505951314428810423734978025409205413789025720642609035117121385453856877706229778165533034683130064865256448444765902482146676668197546098809055341050873494446231793312407516463576380102073171090898973046611572020564659042146465345334273595086941562425006763960197801018796906114925005810069684480/3035556598829526968124942916297025416522606357010637652635799096498208643970273828496655227572100159414352020909846298817521082538898702393916708804775798552206401718323929157863173504795127180177622667376867235806208021329981136637175570409791442328468473111768140746895005561471574356889047981458002257872092408771959478275534098789982899056118498417649167444480913552548249005268380838457505944462494874581\",\"2923754549090941424546974281011770689534961442264350984393235983189168024079617848190236639328676436485460311093391982825027512234467853098757486086492333410753919927528867817406389678461354257841007722472106464785557179844602277350411593959136520732862935740433163383885526249897183805981219416420390137516812715245569037561966929572448247077578419534651990827044/583599691615378545100950777601104007812792435102945248411439102112424251478512952087517463400054567832353967731887062349496616445419782499817548928078665212077449420216892583997505908858360011413290038645573504472422610780073975450391707084016931661068694024023083417126286468909117254531307085545768412513447197205482285022417611018126886491416133665625891075125\",\"441922815213568908489589193556560586318864326425397702047965372289295962228254658331201274291697626694859414786292266008476137667843874780506886929181835469302142365772763129838217316953835831059616268288399119642314758261677639945004547833810080700127847214666763863338091523753898362699222880772298183760217731228628442782431573977490761665091005756534420789258276075174436091798475838370152192077494553263232/88113527373573049332749294663402406454524640221866407165839162576979477138694653404281889227416977618913249275712917582743426231744980461918772793673202077716234026090308791893409200158969108910565467273725064769890443408324386897017825489615600787634985397885230455168591240328585041836771921929567914891379235573982442311269392541694564675053636078990836491104116280492254795616055818375774141667319774630875\",\"91197133767962483852278456285591810579974783077874307589555559715577599604626819245000672929518645004771085106770784762994476973842713035791487204122653245797126906189270204029735872508462106527240320932458036231707311992868347221176460407003487373754014365881209649632547685657666691589606571865740595829983849941049450471212387808617247938941417000965198123059467/18163679611214677813643455199979098261849405189805364986036911945012016248297645596270602508015864371788974684317239728239847888960155365342460843559658233069613218442910226128113196984801126248862273503232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"733396724434554481470656964167233690851279923085197144879644750437402627936723531635898542414136943003236478432848965516925891956615111678444586384493883113385335463639674699443808084827715994137410743992130712903997815471369201406683862985677774155704267039224546352414417632475628136460919900347977754644214725932476856018335195927604771408949980634142255497812566866795799230501026066145434755838336990365184/145912495644159810313026420025053989609942265686388630266226856650796088768164358961644113076809511566125145395699271530802891523741636707532676065833327082092521989958971154798465784847092870457944857590623097781956884297103961713362268264159015928554707158239398721416218953003215109202771651993622244788505649098445109438104466256408060944298437033058380804126574878377874459371251056800895394904459469832875\",\"167606423853658713615749101123336326908381619586838606922565378505211386185130407423587264776519589295420758009764678759213587906216543160801059029133457062067529468464636376639307690657945597847080706144898920305379653754920571797771178341550808041652360635584401789901525709166172283390177673009483341826911179861584213314395893323035527116283758445038413646757280/33310364848744488727470761889861069993071965180756187311178124887286133554324042422503263994717993129539448310743598138364172889305532401505890384806078790034557049074169245078416704866867380089103064821732673967120808611636618526737138435792818828990403374766228037003927569643972203993263329403469747342204808360947840103843317533210523853631711601450617095736473\",\"22466735478643771803624909352181817912387732117378538284107485621001246177152644141853604633676939694208131243081227668237716194316732125445041260568403752325416203858329469477774720998849334961751541191761521224644520742691981372782009394826739249604257098248751626957528543558542443122470657230835176462612530464044652140581367666271771882198747182114685116336512604038833327707163107207664705120728068987996560512/4460342260599110071819142535903990817893424192972341872394014748315090430999224107274777695306032783105944721337053156074851240201179902835353097683269298594190456286888326067932777720561181760369783486872666974623910515795208353605697065447942804414120030678603538761538385793829787734830129764152263691296719726909633580318897787729004972323599773548689272008712427926734258913271101899780538635213826239542884125\",\"1972862002066252798837977155272535342727415329632252213508267781390870646909686724955861608046325765650407340102472833428905279473185818898693854344138403744757857928883601637909604082588338869612221777263582365745419719805587946558326048087138197694016224613118304623864709183681172362693106460535117459192992832969130895829916210933710820035479169562970982784580861/391262854245936198649509275719624152305206807261382621390946060636032376057385723427601113233050260359684153963520782285097664628279596618521963444574543409076428660874564026651742234728997339844161514273669735686516761239076529088145208958938384732800586298943281728435207452253170935715239392534815683367114290676180839217919539381651841151674859715992309727232000\",\"25408691426286653276004556426513401767718328640048945917745783225459709487487356095164164652218100925888847689099153320777389381851598236046402124684511968385325107497047025485302333503075085562533472482645023963717347867696861885363417595298751490212495932766872748125111115039311507374363000062513977436921772096443948159289707996749061007112458126301618769295162649600673247799961118662602756889448152517364992/5033870770817104909025512331238419776407331281944565644457345507262881100618908405924951559853352841154730802006750688581603270849880756026262217651685813584900300357685874044482329601894134443542753690048962260914642678445058891387041919581376195543193199307524572671344323361282633828144708683536721118910549933336800461248338059209853766305058943888965279863852107507075916981165164543199352920055389404296875\",\"616565940481577765011174617619124841631603944267256178093555235591208387588894068005162766513720546626399308168923904625210748051788652328072241494243040185611373035059619136712559505023703153194815611268503291295059648269772663939137446253437248541496631852986499688052678961495116210133458596866684413931188348798244969797973846568160999564540652111599082181871436/122025682149627484528651507368051367620578469392233875493556828623437869650284356703295836998178256875766319508797903923638967073687991229708051285605187358616531926112736402511567721889845693991963610192161413692928378708223712791930113386840109729368772998347036090902364801014045328348830748307179590755723160142468563977011700764517880467116766150322736003147125\",\"979882056834583241477188686550561625289337025747787132773853690143359657519481397575561812727394470125172272246774578404543257210124412718725081536309818383310896102958167337333430555168671327992395916735022711297435263157670501117734412587691271084981140167017421900852550822579410636184333142944411060788723653596377015359036101170054828623669169047118551010102258802465554033173968468183492058271365801755986560/193732066620504775981759812703028757608600125742477178751189607602983198559778039141192492589734277739017909889924488699372940787977794555519474807920198944109549023547259912324279741006975129518191081373554817584214941629021088206977532599055014150433581544599721903881284581257812850697423350805715586436114842183295730680490110793225514602133304729484547181740290534056445482186430729398701311563285494964645419\",\"1138059441890428903336718712159907364975959482163004276901676063186939296217569849990951930955270849692775077813359573394435924934540269310629731801376134549169322946310756738187834128956671195358413024062230774111935109203207768898525882417078119314003162592087920755572050993355843681931139257303484526223461840939880759908449181135029327442039666513325916729112853/224777393704985303260433439401503507705148576727364388720387174977154204629336985298082893443205223017966145098064861566754244624732671470935725326043491911142467178027013112527668183783450932992534517827863293825061296257420183669383719043873666284378647952385401303733274771042385666436214517205678674213118374889121542369996042313879258622144464565403138392064000\",\"614262617634904509410555695398092190166323289787703954329113412647342230855826568873946233136303566178604275296873234926652080462259552775254755109931312516616838091852915397846984381183732773411263828600108443070778861986849272794442105107285234729077818614332155890946804257724112143631642663084660012362691100872465148864413343598067567142977134846266425075195546265101720326272502009234689388355365794889444257557504/121200854655310345878069155190734381476914416893031941761756379148622591310152793328910334357724762079139509813381997287954319983165971628429295803162563856219211627796200599196263868781937234015821367575512548522790158101892507996780675863234181700253545912643548466256938936835469646114659598727592390628209362096738343417775009361678599075671154405137663077798419897932404104579113056038271753988669813988076515476125\",\"106893445531995430131837569895703697604978445859412739331042151546083234373443601923983714252801103551874986033841637079479794895452077803182698291822629713500021995241940133037200268381793282318691568234728329378829301282121562652452936297422136961147432559766896143081059518238234777055931999714973999553456547746825617168005650221542417216291412324174772893635832/21070287546583154895102927029203125577385528350171457634203261197137238923923245382493868134869009844094435068284335909266152042903157700510534904847257436666980671067329084409346149729385625108233234542133838924281113454526471855573271066865534480974484196644173270141056470857666632902827625475719738076524047736123182255306429677688129231682978570461273193359375\",\"1112742798776748551928744983308584493817112400536084744850969025063360679785378789764875076529575583792571198510306186417773101346425704969671256564494135750783642910394213727189639661184379341961737135764570942961692159177189753139209638929302928699705042832922774012622017270172331722295881412111812933593370743210214549038212395941675257558442878012136484052827439007483777859391215222647499741572327725689840850048/219121905514652575155579185322367175400669386131891843382447432851122462422992147756333729893028362013318264155489537138133372703295804002840920402482110260590055749843170064921843460498824128274420925357547023876488939786863662801268798987685503391058250902634999352652063668663245829496836853509616873246554292796823779397317819134891873583857621623143253788854530146303641400986028503534408870194989478421253057625\",\"983995170259637497940121707857673268620603982844439610076334749792119502557380361624096960070148627663305171311646851566811683351232268240169848810658089698606409195744471343416197434926513684882439596141368794175162315633192028977211909698595778839497844847281262559899914504080092844816319298286511436690429175757804604673752838786852277255064434365401871903307643705/193579499709739777577893639665643417521924510242119561765932078835121983190401762561436208758210519231103767232899529457440602166918701550386152070813526760823513884391055054076485295945972185402977095815609448651316824455250005505410192101148149284756928250258632031981439345164037318129987999546683113483700660879431801728391911161900686707231543216283304182063038464\",\"30691013076836380319652884848585431917439358375118437035944950498156836885409110087616602043242747413728866747975631727566613593257623099549583001362246649928075859944695060947434885707102684568632559339383409378997568182445019183928058902445738702610436187907199482604867148445903921474846103586253320950728989228898324829144701782792767763794895137313050381112872972806712570559942583906619373159053654481250809168128/6031936190594376585238407905469035598668211679521553144958053099463931217856780171872253258738635531385711702176347575597387389685526098889278278029314982721284691198967204664771178761416891317672705719303088746953644978471289001577698554025410820041497108311270431130911021653860874238212040640737171103823631718483572464361276703378587106311153455557896527384426327053165214814954154328483257657424873929502112904625\",\"33633002641218571027682690377239300567277297301791434890431645909447040830457253186262970747405514897340315490970846553666201190386457221846694126637998462873786334837901001833771510353365825087187582807843940479192544772559118293851131234910638705258664901225494129023244916125545283621607920983287799648992632814461828998517949449887522866259724675318233522060729654796/6603800575190864815125307817934327053530311915572323544225173935830559756077637251538096164499112411672913910767032482188570876526606118068929913515497400397562722669603861813453418621246538114872330536044519242663538662076583511078523573320035084744399535581216815034837553165853576616422592790103728141443697362408727056813977234078214386771115586436985105038873998875\",\"9090550743395453237608373761422705922989356346696677314277463900103283296889488490217663400349361962695279888433677856471792856853109469433355422802663947305503479561493033851081993247556828544308258821557994512133708656174864544457143793106703578476914924328960109390350040954158797845288786321215010324565010420734044059968931558099077932776525974187717655105951506223649947806568984848883258144616897526257038550656/1783219994432430133950472014582130883873515063182143523712063859964133099770763874744121895885645346884371273930727450069430704145915261127061538288702855011220545530326588799412076879985026006593893648911637986337776174555198865379578424838210466703683642106934154603710587408512357351455891557594977191641529451749437270208258072920514602243985184744955476557012910446023911358037761232253615162335336208343505859375\",\"396226087129511787616470716244996965529391571019620342657409150252952330537366537352182763477820160355931003174946109480036915624974500187179367618457008802667089004678925595775249725629495848146669773574395699032785024522882892752987825063933573399691764866816284097232869198405981830106568826923407996367321353003569052419999880089180418759265274331299787468134974811/77651132902382550540201641628906752945078964002822585000619340261128555048628863996784740469908853602590877726845475670110127527874088625214912598995012971630852593597027649154487264595100300180591016581254965295280089902497540043916128232871685159131211213497239568483141031137909208031392464815187505714066235868748950184065923236670418822911614780061752905170944000\",\"1288523130900767412477856952035690867153496584747510253984686336382980221603917538996138294311274357713893956725672062832264871415025750136690143411884111580335458539824573239771267043414225271729141508235839982033182605445173050590151912297720800168687369852280323356691345317649445843078291369394324862039143247087442309135074453265658730028145500871559458519282433012494054724678302957276371418936282902434203225600/252284450515080370603949213084529993395050575951188044032908270470514999880554862449223347761507020354321422785760279154913310488296485989979706208254206974075438570521939826124860483842758137231373182496438568202110337751291106165654945352183167578675508602832478752400011567482434301614269579368882858973850914513870297071866544875650189106576672289734326492492059816669288907018095832842249738081022227281715919357\",\"559506782175368748187145067236900803925823792088293851453005882621173124590368101213652371965740365119375069053747415415684193092607523211636912074219215053809881814859129515591479780669511533619258835199715146655774919418434080807837587396115955105126806762961292429904380132116986984435528307613054828929294602185927322238461491059740342387266084431988727321711184308176/109446188216864405154936682374609448082436347600301765944233278303643744736544109262794383069197271409398615846380701459882784547857821831816863216080069944818453908760476475874319791512782445408136169878207358663250499628002971644430164185578966399908622640732411885568638054229180673755690889471388585521113862492432946110902070139679164884208988489955874131206343597375\",\"365842109776085256207829452385781129402656684569922320812625438296958174120084800064669048017227033185969596458778213306152397766619692644694641677223213185977626940193107608138827771259334379895020377700759789774994800008933137569543592829220611543060189849601828342989023692876182148818363689293009174358168826340010491728715549904988196347316703985894355217235339548078187164176255405596310602921647203428200269666176/71497266937783826306774367225149833789788300609530680399994804704196212252148324552193149332755057982662844988588678159610516634667597707204818296457616315484973288944637139939912166034691155272078609876888919170894915224022982785138928008133003473320018151370486895637936102520353951511525996197267572355782608352075229547764732602557133494648237258900273354364050662921889937355682486287799239363976556848320046933875\",\"59378684894605773397070783936113244261297966863668546282887298999811950599772732377979382620766180662159460666220894896896564357533604962977968843474062092083279165837424210591042655271577974272394203253875965589611493384384257117088518521598379301169916060951350650621757237206805037261878212424267780312614942173870651684587166691539909068452932891649554575072205080763/11593916877920131260484148322810317629326850763057953025674154928920977965095141485536566217873796019006709247938019404840440511433467040918770165456925609124166970862430104329357419669175323763143377917913760028500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"440706629842402075137926797732405268015915199334341565218443748798479563505125605478061664327658137598204192554352688830679475840386882350034150077506804799859586772904929402683276898098601814091430598259347980573084686932949502809068565420937301632494387691284902026088950093888426872222813857928092871267130505744095697172494119689779474840037266295586359244899477781345249657455186847452249040895151288114085352974933708544/85971876318334010542313048056773419567285701852816309711738644074302467763075671531248793080425349570584102078764464196653843973936119037322000695949209283327606280423406302517302874806092835694196353778161663338667091195199032831587897410329509487165187753418615356836636352319310103639079123698118997500068644500893282438137614420288839230827096109835206605385673197123994357393257304049093683934224826006704198171592304125\",\"13220371178312284248107863849287558696210741535280184003301555188086761767176560823174196915070378763091889333203635784037294769747641959860810039816533609140662043493962707445564057197150603226797446933532133956054671103942520142568674339411250001585991743608723150284270101326419464088290151483823061613403673956918458456165552482913079283537536214967294211244361353060/2576683013797055224377707713704899315377379548630511095136568220145808780162671473907260623503552385384482723173913562423316997528913651044277418227616447815609873991028073011738113927961824632868956802271260292075825561646156680740323686126811928372672670917332613490241615850953660246271541592056143611581223295045062157404996958100136358649109693659623847024011265147\",\"1538372578072246705266078247950089219881197139399081643650271348770110178217959856819170325400476655944115553238940541695152110949081675985299189913515975242840473616169775880272489805123124548256666658584129873597192213080038937409046114908719298170078476325423466734429870048697383304265342125425087105698152643145531760853127801123272389134514333752173173161562273487752064850461823726948588221913540799816489566883798912/299566102446745552813544808169323270315327122249327394279467999308669285416179486075255023523726449428151807672528368606071047812907935426406886253284580296349349558797128593446316786243666290649442956134448480598303527795996222703837663605600624271807461605295956674925277658331760000117761013381199880905748188151556184620779667670278558839116983636972680749836497346863752662521197700717702790359162307617024566689271625\",\"281696937222363685333688097915539146272117417024070728031063821781398985795813333650547982965341298894634762289669256129805545549280355643122501181852136332529515756074502902204877664395456278205770206019663082511098956468724829475220996427130295010430751942126263620206886404244432409164651524408198286831329682605959881993845189585640874220032515465014097345759490750307207/54806274927935495596891312029173862473687610099325998583092091915101265393157631244775387832621032230434007486602816972765210205596482942091518459849775458089575743699797096697542306049628939919466378189656065461708686421130956996965004776108499273871055615413566043083634090083096967567965373203683231171594922347812966905149873265654962896456451681332216735396249206784000\",\"228506238533410805238253122961471637501498406104430046727793420497895852412513560203475440156216063574654372726194215013407325207763369075250819386897086702757125418327084312933061738392406321003231853349865003322697360659712771167066453430309997639548320673279964210730701373707765051246595806673865646607841876463608039111252607452843372970797479959213447237540830563469297144446069689149549515457318899981763489792/44418759813188470246596822974281932219088697005123285598909329328419879212164564561558656547678211265529803086702843380128457744445765859393426675396393053094588240457569380155526179040891009717323059641035189017918495485630657360525410506453554255734005459614858972904374739673834145083512160883402151636664208253116362089211658645312778404886460203600762546810897889629330022309705583438699250109493732452392578125\",\"2396110297187570506257836426251930521245117960980667897194680897478996322590925380310917400763581787981992131769075961259393685331523600287377841990678117113566991100720996059187144934569703045966210306282348527729533806882408323961336166190162075154579344185244957673138372347997134388801085788353482276257401005734929059700346687783400772331280644647089520646562669857652648/465370154262863030800729180763091967573522779260407615567563274096037297593764955820626213827962697601334935773802201919483657310282236100250543992334865461800976838791035335861420892967699843608855185710753433852279737724446294443337363478679601049432404435672469098850676302728116369979460222148206944323730586138087862719386327396334468302608499235112520318322763857676375\",\"1188272888075247520453568790651819187486389546755745961952033150576243575862120569399808467067800830890874391487822723879717525264875722720416173276963170672622214121308038530968291758445510982186014289745026439477197148445087614813262170975056866881909056450023324743409114115141145340480846088869807540798073417035168139476153897066325127540609756310068558610112731607522096096821938163134080426356894899245575410494080/230586762395914863625709048789913840511134004337945700368117795195769576856434588144361459740833007125516905017415184787078710001969815416281381427387949263792200577791644278234661952852149216540491852757174842146376788280677956350901082838474705227642420261641783722891948710833898248566893322144435457967452449965772543077421407816225704952270697016152452032506898311260979594550143344971416786595888053149375287120733\",\"1072184299258468249004114536023934869518152618369895613271618698908405514630154819453979477077738526673716264830106745031385951736108376866253955319711026042389282009348594845497252059906901748860111986811345742998968284077119165082435598381810306691078037018432766116865792677955520465319184311529667642995217214507658693259694586107847099911341219913576038605872218680562047/207882129535607118520818565811162643811811563516006836924341123976848022970024793004700710992938987476728640943834012473687892481059618823520721737479364352887178017866425027953255856440099446112508663603319745066750522936408781591578321031173620445865113295407603090322283539974563690157418931060565698315406021569491751612761888641141446406531645379264720684248398299136000\",\"158094023904374464057702010126993231151433474361820266584020400101533651587072432728050776506672527718975042616651177034635188178967462982926261516748842073587981953038445977514446838733557926696939591069712397947055261777416704028506441173540338327591514650398349069348381309688677335132100441905603664282735310299686268721634369502296867409514777359935022301425165750780988231639828675424239931533849896744198012747670272/30626384366513923671063955469537776291182594080083494737341604579575446319190916924682809546024369330706012653799783122328775875399363759308193432327358837772825609356553955350401725689682838701996446404559005896479618311357573203081153855961484398360670837599853294627153740224543175497655414585918231215639906924313779933211774291565425360415684556655021031131349317390382320286092667852173815259422737956767922154798375\",\"12216278924286401897470540169822542417611356797676160128176706721343511598951866107858729405615631246003458062949723290192242594609994613705183460814797527214549142043573863947658832694800184691222426521703728394203722420336773310908687071670107794543022567943478843065246011544888390757810534211554666736239506503613750756246364621509359804902243487113673014588325806249988332/2364584127734680580481708368927921125934330000162935118371174269642831409084634375654239735054363928748162229294829526339927907778510530444646754603322373712788147193691037688552857183116332292048731726305451516954679277320777955342295564000586923227775208580772868590742136150431152495718132142742153643081187691849828217592954519485869135930755646768375299870967864990234375\",\"578939195017447864385837341975558679292903716580114421030538728778491606282153588930983966100514147976321305616196463174070345884292672842497715966933722088536619333912687108737657068701352918582656105418491672377271304970407730786932913490869797471081081431072836814581099271832696990064828717287258860166842791984158634684078346453202928137987930328826212011774670396356151265781053547412633310327737900786639842674288716416/111966291649651600701875186827360807558960817589719096407887999108024557254221008849510152469119211567152616745769256123968832250104006560061907741567034087109512483357851919402017950812795426393415409198268246337542639470834168040295134130657073201020340432236723824670803498949071870597039309004562024033656488150406105175401372709011082725359382691270659245312133919518760328422827067578306005644825927050994860723405473375\",\"8041514821545833865350873212853873042112343327573364523948780030849543753072688526717886590013028227714585965095216381829914996539132359247488639692828639170075726301411777307168737667077730792892326979446426349813642680537699905651125068091362135055902152994216233622733424128982011248923051410141033146604688083721413402395290842738021365861670415833356403364696759583009635/1553937833499559104910551811592138833189892464446761247731330672284191313590708439680460540329836344767557599746234213006493842842879398684745864919973051635127080738612248150108793397855113122368507483429209127035263504194847798809612278864438287815470711036548695032421148125849669175729331459149833945183228413961985381338162155596008680906676498435954178226973272371625984\",\"12059659399309169167301353842123191409306995788633965680414620302285606896146667751472818541537183787935352700725982053536032930866708413010971856856768384974849695774437178790890015242323873769697407411558706626105140596160049735605389301414460825674631122462760014451298494875244754354054447697502521388381253293175367558014453865905104467382184997528879171136492277222127399012368677604910497789360212571238146627048080568400384/2328494054002703067219004484782931471919751585969487160602269605916676223315055450845942763690581877771159615428854802721943114463834992106300185328876910271612375509166975628540839858771078495267566008071532876816826751069408153323840515037497664871689085370699991860738368371510578076683395101062439493831773194498579620513073693022191702398601471237166387045790480861932005012807234071429628725981935147069738988682858417182625\",\"683009426705008850682549700382901603742691705123356866338951397347368059105140826655486518416578697931244347554322654428162554903861783227680935341690740579867651545205562690172425016836559678937794312287639193745517811234257062356826622207475918293015140472942579713388671782202262396642735640315948612572908444501108579457520714632371056288874351015666995549139003946314085696/131769214246522869780429817236150406548549044658474416909806179734873399109656411633488099249198882165279745627038984487365589625562901914030850178330133080409420340227179447548044572594184601425691821617928130423410997853384425373999967759499571890326740433081063424903098252502791477854302204200941376983295622430177445507316706609802292121282957519571162158620971952084486375\",\"1418116259749091420309271913909337143756589314597557128553117870573928055109322864794169592355058370891251425125187770724828108988587888087023982451205475980371440423992838481547236638456717520835668859093413956339261802305597694403381021863258753441889536361061407579332570493634254542013337999844407181346815549594836374497512447969751514466481466717590255369810506813543577735080228718660747940956248427356785784199073569408/273368882980516556922532339653303822104510203916024760371844491705599093435133738774975538364241630079468712981056336655766117378160822393876348755370711942273876284944422610974149712212944211513462921649872232656449940987552227525504529710373144228818606127541937831103642415534318303187393593236209298242574677293352798419428712873685798636474667204083938875672934235816396371477146089168375198141802684403955936431884765625\",\"546411077581845999248238069684194831621691193366466972898628141511422317954477211865167402284211971296286346492698354214043840080181702652132835681239302798339667835439189275457116051279366194551632712819028177402221815140045210690908631767786711675029194359998826252332434573121740830827417293557234891406021102083555472155479148332697839972702631641910213821827820374586459319/105246945889799140338072754365901705544530661781295362563214285953881890233987516230568663143342952799036341701952267011236663118111226623815975847494372076420199418712941018288738590264475520229651370015377608638075866459684692488079223686296541020897904588347083045723167762682959422858996673894180805702299907478685374065593161226849447131100462022089783265346597553176576000\",\"2398330640958841474772606439916070050977544535580605737383995160447105736276950196885906408317628083110923322157113892928963237845914017845444295040924101784423382681801754191301860383927129006953354739240926643562987838836997453985855576402628166875869041032631651591871962852884189548538272285387092843044669499688035134181859376665409767886188304314888753894905317929877238322615838524354191263502347881033855441181420399360/461588070868590122892265681879734295007029130965626060552783760068897000195207878227714842617470320231527222074701444349530952699708435668339712860464533455345665068841333232359698449088497137068713309811942968433868609329301082001752617420002377892756821532220676085014874112083615054550278903960627185675459015343606391094523511117705747842645927349130302549554534056269331809016770715819934970200483161548527932617036185253\",\"6041015879424725383006424536130409209607854044642113747266098198777011981328765528361630516108680392500990580908509403483891763219659726090675140672989657743882183951954294745396417829943469201306594018454995862321821016087416840247422350906412007336103086620396467456181771583200365740253389107968122850063607085957109965406634738740996318415514360956028575560979203447735121436/1161752799109428422288020947061281540989708937450568100764830251908850596717606701047413407636907934320789870175907792017513896999208892282137299070761467096211814586909598705615312819596495636017728313513520193786266452836805291464826226833593878504804389728477191170027729963773716267868284479768397603444919008915279522376004326398403851684761808785381609370767169521034383625\",\"13240077436443988749179508462267267187169441948722358165090554769250505713747934643200804819418670147225695324432684266924694524337920816452346599774452681831320005286326986675907899608537972384924882996757503264622991355949039882526389342174307168805166215838138277557052303430492669193939212362638263582899713198716541723383138016564027766560215944409353427176135895982596327685665844815618402881202645610620284792793420780517248/2544223084468158291883698813309541801455311468982232546872485444308211415529998472787377800559884210837213042932180479090277285630234238711851480232520137856848809986631784843528381778520727465146661792797924458540957133423665746229799675650290296217658444899605236550972043549278128087645211909479009099766619355677984218929672461506691980442071860591767266913041147587815452007726513853820116629482732060593116624596368806566625\",\"1953999166296955830935495158735359200362904181792947794529339487489730042568305997099959302322956898299616194932283060554261566410988618045107398092345476532371402134206635235570281738377188438407703089325315446371127042537576093536896282955524842632708645655481028161471313608974238110718242273935956977555610147714316158486553633871312187084618154014921190595222799283957140353/375191165084882521037046014569185165885459082629136124177286500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"];if(t[e])return De.quick.apply(null,t[e].split(\"/\"));e=new De(e);for(var n=new De(0),r=e.subtract(new De(1)),i=e.add(new De(1)),s=0;s<80;s++)var o=new De(2*s+1),a=Te.bigpow(r.divide(i),o),a=o.clone().invert().multiply(a),n=n.add(a);return n.multiply(new De(2))},factorial:function(e){var t=e%1==0;if(t&&e<0)return NaN;if(!t)return Te.gamma(e+1);for(var n=1,r=2;r<=e;r++)n*=r;return n},dfactorial:function(e){if(ue(e)){var t=e%2==0,n=t?e/2:(e+1)/2,r=new De(1);if(t)for(var i=1;i<=n;i++)r=r.multiply(new De(2).multiply(new De(i)));else for(i=1;i<=n;i++)r=r.multiply(new De(2).multiply(new De(i)).subtract(new De(1)))}else r=Math.pow(2,(1+2*e-Math.cos(Math.PI*e))/4)*Math.pow(Math.PI,(Math.cos(Math.PI*e)-1)/4)*Te.gamma(1+e/2);return r},GCD:function(){for(var e=a([].slice.call(arguments).map(function(e){return Math.abs(e)})).sort(),t=Math.abs(e.shift()),n=e.length;0<n--;)for(var r=Math.abs(e.shift());;){if(0===(t%=r)){t=r;break}if(0===(r%=t))break}return t},QGCD:function(){for(var e=[].slice.call(arguments),t=e[0],n=1;n<e.length;n++){var r=e[n],i=t.isNegative()&&r.isNegative()?-1:1,t=r.gcd(t);i<0&&t.negate()}return t},LCM:function(e,t){return e*t/Te.GCD(e,t)},pow:function(e,t){return e<0&&Math.abs(t)<1?1/t%2==0?NaN:-Math.pow(Math.abs(e),t):Math.pow(e,t)},factor:function(e){e=Number(e);var t=Math.sign(e);e=Math.abs(e);var n,r=Te.ifactor(e),i=new Fe;for(n in i.symbols={},i.group=X,r){var s=new Fe(1);s.group=B,s.value=n,s.power=new Fe(r[n]),i.symbols[n]=s}return i.updateHash(),1===e&&(i=new Fe(e)),t<0&&i.negate(),i},sfactor:function(e,t){t=t||{};var n=Math.floor(Math.sqrt(e));o[o.length-1]<n&&e<1e6&&u(n);for(var r=o.length,i=0;i<r;i++)for(var s=o[i];e%s==0;)e/=s,t[s]=(t[s]||0)+1;return 1<e&&(t[e]=1),t},ifactor:function(a){var t=new S(a);if(\"0\"===(a=String(a)))return{0:1};var e=(a=new S(a)).sign?-1:1;a=a.abs();var n={};if(a.lt(\"65536\"))n=Te.sfactor(a,n);else{var r=function(e){e.isPrime()?n[e]=(n[e]||0)+1:n=Te.sfactor(e,n)};try{for(var u=1e3,l=0;!a.abs().equals(1);){if(a.isPrime()){r(a);break}var i=function e(t){for(var n=new S(t),r=2,i=new S(t),s=new S(1);s.equals(1);){for(var o=0;o<=r&&s.equals(1);o++){if(l++>u)throw new Error(\"stopping\");i=i.pow(2).add(1).mod(a),s=S.gcd(i.minus(n).abs(),a)}r*=2,n=i}return s.equals(a)?e(t+1):s}(2);r(i),a=a.divide(i)}}catch(e){n={},r(t)}}return-1==e&&(e=c(q(n)),n[\"-\"+e]=n[e],delete n[e]),n},boxfactor:function(e,t){t=t||200;for(var n,r,i=Math.floor(5/12*e),s=0,o=!1;n=Math.floor(e/i),0!=(r=e%i);){if(o)return[e,1];i=Math.max(r,i-r),o=t<++s}return[n,i,s]},fib:function(e){var t=Math.sign(e);e=Math.abs(e);for(var t=ge(e)?t:Math.abs(t),n=0,r=1,i=1,s=2;s<=e;s++)i=n+r,n=r,r=i;return i*t},mod:function(e,t){return e%t},integer_part:function(e){return Math.sign(e)*Math.floor(Math.abs(e))},simpson:function(e,t,n,r){function i(e,t,n){var r=e(t);return r=isNaN(r)?e(1===n?t+1e-12:t-1e-12):r}r=r||1e-4;var s=Math.abs(Math.floor((n-t)/r));s%2!=0&&s++;for(var o=(n-t)/s,a=i(e,t,1),u=!1,l=t+o,c=1;c<s;c++)a+=(u?2:4)*i(e,l,1),u=!u,l+=o;return(a+i(e,l,2))*(o/3)},num_integrate:function(t,n,r,e,i){if(i<0)throw new Error(\"max depth cannot be negative\");function s(e,t,n,r,i){var s={maxDepthCount:0,nanEncountered:!1};void 0===r&&(r=1e-9),void 0===i&&(i=45);var o=e(t),a=e(.5*(t+n)),u=e(n),r=function e(t,n,r,i,s,o,a,u,l,c,p){if(p.nanEncountered)return NaN;var f,h,m,g=r-n,d=t(n+.25*g),v=t(r-.25*g);if(isNaN(d))p.nanEncountered=!0;else if(isNaN(v))p.nanEncountered=!0;else if(a=((h=(m=g*(i+4*d+s)/12)+(f=g*(s+4*v+o)/12))-a)/15,!(p.maxDepthCount>1e3*l))return l<c?(p.maxDepthCount++,h+a):Math.abs(a)<u?h+a:(m=e(t,n,g=n+.5*g,i,d,s,m,.5*u,l,c+1,p),isNaN(m)?(p.nanEncountered=!0,NaN):(c=e(t,g,r,s,v,o,f,.5*u,l,c+1,p),isNaN(c)?(p.nanEncountered=!0,NaN):m+c))}(e,t,n,o,a,u,(o+4*a+u)*(n-t)/6,r,i,1,s);if(0<s.maxDepthCount&&ee(\"integrate-adaptive-simpson: Warning: maximum recursion depth (\"+i+\") reached \"+s.maxDepthCount+\" times\"),s.nanEncountered)throw new Error(\"Function does not converge over interval!\");return r}var o;try{o=s(t,n,r,e,i)}catch(e){return Te.simpson(t,n,r)}return me(o,12)},Ci:function(e){for(var t=0,n=1;n<20;n++){var r=2*n;t+=Math.pow(-1,n)*Math.pow(e,r)/(r*Te.factorial(r))}return Math.log(e)+.5772156649015329+t},Si:function(e){for(var t=0,n=0;n<20;n++){var r=2*n;t+=Math.pow(-1,n)*Math.pow(e,1+r)/((1+r)*Te.factorial(1+r))}return t},Ei:function(e){if(0===Number(e))return-1/0;for(var t=0,n=1;n<30;n++)t+=Math.pow(e,n)/(n*Te.factorial(n));return.5772156649015329+Math.abs(Math.log(e))+t},Shi:function(e){for(var t,n,r=0,i=0;i<30;i++)n=1+(t=2*i),r+=Math.pow(e,n)/(n*n*Te.factorial(t));return r},Chi:function(e){var t=function(e){return(Math.cosh(e)-1)/e};return Math.log(e)+.5772156649015329+Te.num_integrate(t,.002,e,.001)},Li:function(e){return Te.Ei(Te.bigLog(e))},gamma_incomplete:function(e,t){for(var n=e-1,r=0,t=t||0,i=0;i<n;i++)r+=Math.pow(t,i)/Te.factorial(i);return Te.factorial(n)*Math.exp(-t)*r},step:function(e){return 0<e?1:e<0?0:.5},rect:function(e){return.5===(e=Math.abs(e))?e:.5<e?0:1},sinc:function(e){return e.equals(0)?1:Math.sin(e)/e},tri:function(e){return 1<=(e=Math.abs(e))?0:1-e},nthroot:function(e,t){if(e instanceof De||(e=new De(e.toString())),(t=!(t instanceof De)?new De(t.toString()):t).equals(1))return e;var n=e.divide(new De(2)),r=new De(1e-15),i=t.clone().invert(),s=t.subtract(new De(1));do{var o=Te.bigpow(n,s),a=i.multiply(e.divide(o).subtract(n)).toDecimal(25),o=De.create(a);if(u)break;var n=n.add(o),a=o.toDecimal(),u=!!l&&l===a,l=a}while(o.abs().gte(r));return n},sqrt:function(e){var t,n,r;e instanceof De||(e=new De(e));var i=0,s=!1,o=new De(1e-20),a=e.divide(new De(2));do{if(1e3<i)throw new Error(\"Unable to calculate square root for \"+e)}while(a=a.add(e.divide(a)).divide(new De(2)),a=new De(a.decimal(30)),t=e.subtract(a.multiply(a)),r=!!n&&n.equals(t),(t.clone().abs().lessThan(o)||r)&&(s=!0),n=t,i++,!s);return a}};function Pe(e,m,t,n){var r=\"hash\"===m,g=void 0,i=r?void 0:m,s=\"decimal\"===i||\"decimals\"===i;function o(e){switch(m){case\"decimals\":case\"decimal\":return g=g||function(e){return!1},e.valueOf();case\"recurring\":g=g||function(e){return-1!==e.indexOf(\"'\")};var t=e.toString();if(0===(f=/^-?\\d+(?:\\/\\d+)?$/.exec(t)).length)return t;var n=f[0].split(\"/\"),r=!1,i=Number(n[0]);i<0&&(i=-i,r=!0);var s=(s=Number(n[1]))||1,o=10*(i-(h=Math.floor(i/s))*s);for(h=h.toString()+\".\";o&&o<s;)o*=10,h+=\"0\";for(var a=\"\",u=[],l=0;;){if(void 0!==u[o])return(r?\"-\":\"\")+(h+a.slice(0,u[o])+\"'\"+a.slice(u[o])+\"'\").replace(\"'0'\",\"\").replace(/\\.$/,\"\");var c=Math.floor(o/s),p=o-c*s;u[o]=l,a+=c.toString(),l+=1,o=10*p}case\"mixed\":g=g||function(e){return-1!==e.indexOf(\"/\")};t=e.toString();if(0===(f=/^-?\\d+(?:\\/\\d+)?$/.exec(t)).length)return t;var n=f[0].split(\"/\"),t=new S(n[0]),f=new S(n[1]);f.equals(0)&&(f=new S(1));var t=t.divmod(f),h=t.quotient,f=t.remainder,t=\"-\"===n[0][0]||h.equals(0)||f.equals(0)?\"\":\"+\";return(h.equals(0)?\"\":h.toString())+t+(f.equals(0)?\"\":f.toString()+\"/\"+n[1]);case\"scientific\":return g=g||function(e){return!1},new T(e.valueOf()).toString(D.SCIENTIFIC_MAX_DECIMAL_PLACES);default:return g=g||function(e){return-1!==e.indexOf(\"/\")},e.toString()}}if(s&&void 0===n&&(n=D.DEFAULT_DECP),ne(e)){var a,u,l=\"\",c=\"\",p=\"\",f=e.group||t,h=e.value;switch(r||(\"-1\"==(a=o(e.multiplier))&&\"-1\"===String(e.multiplier)&&(p=\"-\",a=\"1\"),\"1\"!=a&&(l=a),\"1\"!=(u=e.power?o(e.power):\"\")&&(c=ne(u)?Pe(u,i):u)),f){case F:var l=\"\",d=n&&s?e.multiplier.toDecimal(n):o(e.multiplier),h=\"-1\"==String(e.multiplier)?\"1\":d,c=\"\";break;case j:h=e.collectSymbols().map(function(e){e=Pe(e,i,t,n);return e=\"0\"==e?\"\":e}).sort().join(\"+\").replace(/\\+\\-/g,\"-\");break;case $:h=e.collectSymbols().map(function(e){e=Pe(e,i,t,n);return e=\"0\"==e?\"\":e}).sort().join(\"+\").replace(/\\+\\-/g,\"-\");break;case X:h=e.collectSymbols(function(e){var t=e.group;return(t===j||t===$)&&e.power.equals(1)&&e.multiplier.equals(1)?E(Pe(e,i)):Pe(e,i)}).join(\"*\");break;case V:var v=e.previousGroup,d=e.power.group;v===j&&(h=e.collectSymbols(Pe,i).join(\"+\").replace(\"+-\",\"-\")),v===F||v===G||v===H||r||(h=E(h)),d!==$&&d!==X&&d!==j&&\"1\"==e.power.multiplier.toString()||!c||(c=E(c))}f===H&&(h=e.fname+E(e.args.map(function(e){return Pe(e,i)}).join(\",\"))),f===H&&e.fname in M&&(a=Pe(e.args[0]),u=Pe(e.args[1]),e.args[0].isComposite()&&(a=E(a)),e.args[1].isComposite()&&(u=E(u)),h=a+M[e.fname]+u),c&&f!==V&&g(c)&&(c=E(c)),((f===$||f===j)&&(l&&\"1\"!=l||\"-\"===p)||(f===X||f===$||f===j)&&c&&\"1\"!=c||!r&&f===B&&-1==h||e.fname===Z)&&(h=E(h));var w=p+(l=n&&(\"decimal\"===m||\"decimals\"===m&&l)?me(l,n):l);if(l&&g(l)&&(w=E(w)),l&&(w+=\"*\"),c=c<0?E(c):c){if(\"e\"===h&&D.E_TO_EXP)return w+\"exp\"+E(c);c=D.POWER_OPERATOR+c}f=w+(h=f===V&&\"-\"===h.charAt(0)?E(h):h);return(f=e.parens?E(f):f)+c}if(re(e)){for(var y=e.elements.length,w=[],b=0;b<y;b++)w.push(e.elements[b].text(m));return\"[\"+w.join(\",\")+\"]\"}try{return e.toString()}catch(e){return\"\"}}function ke(e){if(g(e))return[e];for(var t=e,n=1,r=[];n<t;){var i=e/n,s=Math.floor(i);if(i-s<=2220446049250313e-31&&1<n){if(g(n)&&(-1===o.indexOf(n)&&o.push(n),r.push(n)),g(s)){r.push(s);break}t=s}n++}return r.sort(function(e,t){return e-t})}function R(e){this.symbol=e}function T(e){return this instanceof T?((e=String(void 0===e?0:e)).startsWith(\"-\")?(this.sign=-1,e=e.substr(1,e.length)):this.sign=1,T.isScientific(e)?this.fromScientific(e):this.convert(e),this):new T(e)}function De(t){if(t instanceof De)return t;if(void 0===t)return this;try{if(ue(t))try{this.num=S(t),this.den=S(1)}catch(e){return De.simple(t)}else{var e=t instanceof k?Be.quickConversion(t):Be.convert(t);this.num=new S(e[0]),this.den=new S(e[1])}}catch(e){return De.simple(t)}}function Fe(e){var t=\"Infinity\"===e;return this instanceof Fe?(e instanceof k&&(e=e.toString()),/^(\\-?\\+?\\d+)\\.?\\d*e?\\-?\\+?\\d*/i.test(e)||e instanceof k?(this.group=F,this.value=l,this.multiplier=new De(e)):(this.group=G,m(e),this.value=e,this.multiplier=new De(1),this.imaginary=e===D.IMAGINARY,this.isInfinity=t),this.power=new De(1),this):new Fe(e)}function P(){var C=this,n={},o={names:[],actions:[]};function x(e,t){this.start=e,this.end=t}function L(){this.elements=[]}function A(e,t,n){if(this.type=t,this.value=e,void 0!==n&&(this.column=n+1),t===A.OPERATOR){var r,i=E[e];for(r in i)this[r]=i[r]}else t===A.FUNCTION&&(this.precedence=A.MAX_PRECEDENCE,this.leftAssoc=!1)}x.prototype.isConstant=function(){return this.start.isConstant()&&this.end.isConstant()},x.prototype.text=function(){return Pe(this.start)+\":\"+Pe(this.end)},L.prototype.append=function(e){this.elements.push(e)},L.prototype.getItems=function(){return this.elements},L.prototype.toString=function(){return C.pretty_print(this.elements)},L.create=function(e){var t=new L;return e&&t.append(e),t},A.prototype.toString=function(){return this.value},A.prototype.toString=function(){return this.is_prefix?\"`\"+this.value:this.value},A.OPERATOR=\"OPERATOR\",A.VARIABLE_OR_LITERAL=\"VARIABLE_OR_LITERAL\",A.FUNCTION=\"FUNCTION\",A.UNIT=\"UNIT\",A.KEYWORD=\"KEYWORD\",A.MAX_PRECEDENCE=999,this.classes={Collection:L,Slice:x,Token:A};var b={prec:void 0,cos:function(e,t){var n=C.parse(Math.cos(e)*Math.cosh(t)),t=C.parse(Math.sin(e)*Math.sinh(t));return C.subtract(n,C.multiply(t,Fe.imaginary()))},sin:function(e,t){var n=C.parse(Math.sin(e)*Math.cosh(t)),t=C.parse(Math.cos(e)*Math.sinh(t));return C.subtract(n,C.multiply(t,Fe.imaginary()))},tan:function(e,t){var n=C.parse(Math.sin(2*e)/(Math.cos(2*e)+Math.cosh(2*t))),t=C.parse(Math.sinh(2*t)/(Math.cos(2*e)+Math.cosh(2*t)));return C.add(n,C.multiply(t,Fe.imaginary()))},sec:function(e,t){t=this.removeDen(this.cos(e,t));return C.subtract(t[0],C.multiply(t[1],Fe.imaginary()))},csc:function(e,t){t=this.removeDen(this.sin(e,t));return C.add(t[0],C.multiply(t[1],Fe.imaginary()))},cot:function(e,t){t=this.removeDen(this.tan(e,t));return C.subtract(t[0],C.multiply(t[1],Fe.imaginary()))},acos:function(e,t){var e=this.fromArray([e,t]),t=C.pow(e.clone(),new Fe(2)),t=C.expand(t),t=C.multiply(O(C.subtract(new Fe(1),t)),Fe.imaginary()),t=R(C.expand(C.add(e.clone(),t)));return C.expand(C.multiply(Fe.imaginary().negate(),t))},asin:function(e,t){return C.subtract(C.parse(\"pi/2\"),this.acos(e,t))},atan:function(e,t){if(e.equals(0)&&(t.equals(1)||t.equals(-1)))return C.parse(`${Fe.infinity()}*${D.IMAGINARY}*${t}`);var e=b.fromArray([e,t]),t=C.expand(C.multiply(Fe.imaginary(),e.clone())),e=R(C.expand(C.subtract(new Fe(1),t.clone()))),t=R(C.expand(C.add(new Fe(1),t.clone())));return C.expand(C.multiply(C.divide(Fe.imaginary(),new Fe(2)),C.subtract(e,t)))},asec:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.acos.apply(this,t)},acsc:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.asin.apply(this,t)},acot:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.atan.apply(this,t)},cosh:function(e,t){var n=C.parse(Math.cosh(e)*Math.cos(t)),t=C.parse(Math.sinh(e)*Math.sin(t));return C.add(n,C.multiply(t,Fe.imaginary()))},sinh:function(e,t){var n=C.parse(Math.sinh(e)*Math.cos(t)),t=C.parse(Math.cosh(e)*Math.sin(t));return C.add(n,C.multiply(t,Fe.imaginary()))},tanh:function(e,t){var n=C.parse(Math.sinh(2*e)/(Math.cos(2*t)+Math.cosh(2*e))),e=C.parse(Math.sin(2*t)/(Math.cos(2*t)+Math.cosh(2*e)));return C.subtract(n,C.multiply(e,Fe.imaginary()))},sech:function(e,t){t=this.removeDen(this.cosh(e,t));return C.subtract(t[0],C.multiply(t[1],Fe.imaginary()))},csch:function(e,t){t=this.removeDen(this.sinh(e,t));return C.subtract(t[0],C.multiply(t[1],Fe.imaginary()))},coth:function(e,t){t=this.removeDen(this.tanh(e,t));return C.add(t[0],C.multiply(t[1],Fe.imaginary()))},acosh:function(e,t){var n=this.fromArray([e,t]),e=O(C.add(n.clone(),new Fe(1))),t=O(C.subtract(n.clone(),new Fe(1)));return C.expand(R(C.add(n,C.expand(C.multiply(e,t)))))},asinh:function(e,t){e=this.fromArray([e,t]),t=O(C.add(new Fe(1),C.expand(C.pow(e.clone(),new Fe(2)))));return C.expand(R(C.add(e,t)))},atanh:function(e,t){var e=this.fromArray([e,t]),t=R(C.add(e.clone(),new Fe(1))),e=R(C.subtract(new Fe(1),e));return C.expand(C.divide(C.subtract(t,e),new Fe(2)))},asech:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.acosh.apply(this,t)},acsch:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.asinh.apply(this,t)},acoth:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.atanh.apply(this,t)},sqrt:function(e){var t=e.realpart(),n=e.imagpart(),e=Fe.hyp(t,n),t=C.add(t.clone(),e),e=O(C.multiply(new Fe(2),t.clone()));return C.add(C.divide(t.clone(),e.clone()),C.multiply(C.divide(n,e),Fe.imaginary()))},log:function(e,t){var n=R(Fe.hyp(e,t)),e=D.USE_BIG?Fe(k.atan2(t.multiplier.toDecimal(),e.multiplier.toDecimal())):Math.atan2(t,e),e=C.parse(e);return C.add(n,C.multiply(Fe.imaginary(),e))},erf(e,t){return C.symfunction(\"erf\",[e])},removeDen:function(e){var t,n=ae(e)?(t=e[0],e[1]):(t=e.realpart(),e.imagpart()),e=Math.pow(t,2)+Math.pow(n,2);return[C.parse(t/e),C.parse(n/e)]},fromArray:function(e){return C.add(e[0],C.multiply(Fe.imaginary(),e[1]))},evaluate:function(e,t){var n,r,i=e.power.sign();return e.power=e.power.abs(),e.power.greaterThan(1)&&(e=C.expand(e)),r=i<0?(n=(r=this.removeDen(e))[0],r[1]):(n=e.realpart(),e.imagpart()),n.isConstant(\"all\")&&r.isConstant(\"all\")?this[t].call(this,n,r):C.symfunction(t,[e])}},I=this.trig={cos:function(e){if(e.equals(\"pi\")&&e.multiplier.den.equals(2))return new Fe(0);if(D.PARSE2NUMBER){if(e.equals(new Fe(D.PI/2)))return new Fe(0);if(e.isConstant())return D.USE_BIG?new Fe(k.cos(e.multiplier.toDecimal())):new Fe(Math.cos(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"cos\")}if(e.equals(0))return new Fe(1);var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier.abs();return e.multiplier=i,e.isPi()&&e.isLinear()&&(ue(i)?t=new Fe(ge(i)?1:-1):(Number(i.num),2===(i=Number(i.den))?t=new Fe(0):3===i?(t=C.parse(\"1/2\"),n=!0):4===i?(t=C.parse(\"1/sqrt(2)\"),n=!0):6===i?(t=C.parse(\"sqrt(3)/2\"),n=!0):t=C.symfunction(\"cos\",[e]))),!n||2!==r&&3!==r||t.negate(),t=t||C.symfunction(\"cos\",[e])},sin:function(e){if(D.PARSE2NUMBER){if(e.isConstant())return e%Math.PI==0?new Fe(0):D.USE_BIG?new Fe(k.sin(e.multiplier.toDecimal())):new Fe(Math.sin(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"sin\")}if(e.equals(0))return new Fe(0);var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier.sign(),s=e.multiplier.abs();return e.multiplier=s,e.equals(\"pi\")?t=new Fe(0):e.isPi()&&e.isLinear()&&(ue(s)?t=new Fe(0):(s.num,2==(s=s.den)?(t=new Fe(1),n=!0):3==s?(t=C.parse(\"sqrt(3)/2\"),n=!0):4==s?(t=C.parse(\"1/sqrt(2)\"),n=!0):6==s?(t=C.parse(\"1/2\"),n=!0):t=C.multiply(new Fe(i),C.symfunction(\"sin\",[e])))),t=t||C.multiply(new Fe(i),C.symfunction(\"sin\",[e])),!n||3!==r&&4!==r||t.negate(),t},tan:function(e){if(D.PARSE2NUMBER){if(e%Math.PI==0&&e.isLinear())return new Fe(0);if(e.isConstant())return D.USE_BIG?new Fe(k.tan(e.multiplier.toDecimal())):new Fe(Math.tan(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"tan\")}var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier;if(e.multiplier=i,e.isPi()&&e.isLinear())if(ue(i))t=new Fe(0);else{i.num;i=i.den;if(2==i)throw new Ae(\"tan is undefined for \"+e.toString());3==i?(t=C.parse(\"sqrt(3)\"),n=!0):4==i?(t=new Fe(1),n=!0):6==i?(t=C.parse(\"1/sqrt(3)\"),n=!0):t=C.symfunction(\"tan\",[e])}return t=t||C.symfunction(\"tan\",[e]),!n||2!==r&&4!==r||t.negate(),t},sec:function(e){if(D.PARSE2NUMBER)return e.isConstant()?D.USE_BIG?new Fe(new k(1).dividedBy(k.cos(e.multiplier.toDecimal()))):new Fe(Te.sec(e.valueOf())):e.isImaginary()?b.evaluate(e,\"sec\"):C.parse(ce(\"1/cos({0})\",e));var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier.abs();if(e.multiplier=i,e.isPi()&&e.isLinear())if(ue(i))t=new Fe(ge(i)?1:-1);else{i.num;i=i.den;if(2==i)throw new Ae(\"sec is undefined for \"+e.toString());3==i?(t=new Fe(2),n=!0):4==i?(t=C.parse(\"sqrt(2)\"),n=!0):6==i?(t=C.parse(\"2/sqrt(3)\"),n=!0):t=C.symfunction(\"sec\",[e])}return!n||2!==r&&3!==r||t.negate(),t=t||C.symfunction(\"sec\",[e])},csc:function(e){if(D.PARSE2NUMBER)return e.isConstant()?D.USE_BIG?new Fe(new k(1).dividedBy(k.sin(e.multiplier.toDecimal()))):new Fe(Te.csc(e.valueOf())):e.isImaginary()?b.evaluate(e,\"csc\"):C.parse(ce(\"1/sin({0})\",e));var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier.sign(),s=e.multiplier.abs();if(e.multiplier=s,e.isPi()&&e.isLinear()){if(ue(s))throw new Ae(\"csc is undefined for \"+e.toString());s.num;s=s.den;2==s?(t=new Fe(1),n=!0):3==s?(t=C.parse(\"2/sqrt(3)\"),n=!0):4==s?(t=C.parse(\"sqrt(2)\"),n=!0):6==s?(t=new Fe(2),n=!0):t=C.multiply(new Fe(i),C.symfunction(\"csc\",[e]))}return t=t||C.multiply(new Fe(i),C.symfunction(\"csc\",[e])),!n||3!==r&&4!==r||t.negate(),t},cot:function(e){if(D.PARSE2NUMBER)return e%(Math.PI/2)==0?new Fe(0):e.isConstant()?D.USE_BIG?new Fe(new k(1).dividedBy(k.tan(e.multiplier.toDecimal()))):new Fe(Te.cot(e.valueOf())):e.isImaginary()?b.evaluate(e,\"cot\"):C.parse(ce(\"1/tan({0})\",e));var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier;if(e.multiplier=i,e.isPi()&&e.isLinear()){if(ue(i))throw new Ae(\"cot is undefined for \"+e.toString());i.num;i=i.den;2==i?t=new Fe(0):3==i?(t=C.parse(\"1/sqrt(3)\"),n=!0):4==i?(t=new Fe(1),n=!0):6==i?(t=C.parse(\"sqrt(3)\"),n=!0):t=C.symfunction(\"cot\",[e])}return t=t||C.symfunction(\"cot\",[e]),!n||2!==r&&4!==r||t.negate(),t},acos:function(e){if(D.PARSE2NUMBER){if(e.isConstant()){if(e.gt(1)||e.lt(-1)){var t=e.toString();return T(Se(`pi/2-asin(${t})`))}return D.USE_BIG?new Fe(k.acos(e.multiplier.toDecimal())):new Fe(Math.acos(e.valueOf()))}if(e.isImaginary())return b.evaluate(e,\"acos\")}return C.symfunction(\"acos\",arguments)},asin:function(e){if(D.PARSE2NUMBER){if(e.isConstant()){if(e.gt(1)||e.lt(-1)){var t=D.IMAGINARY,n=e.multiplier.toDecimal();return T(Se(`${t}*log(sqrt(1-${n}^2)-${t}*${n})`))}return D.USE_BIG?new Fe(k.asin(e.multiplier.toDecimal())):new Fe(Math.asin(e.valueOf()))}if(e.isImaginary())return b.evaluate(e,\"asin\")}return C.symfunction(\"asin\",arguments)},atan:function(e){var t;if(e.equals(0))t=new Fe(0);else{if(D.PARSE2NUMBER)return e.isConstant()?D.USE_BIG?new Fe(k.atan(e.multiplier.toDecimal())):new Fe(Math.atan(e.valueOf())):e.isImaginary()?b.evaluate(e,\"atan\"):C.symfunction(\"atan\",arguments);t=e.equals(-1)?C.parse(\"-pi/4\"):C.symfunction(\"atan\",arguments)}return t},asec:function(e){if(D.PARSE2NUMBER){if(e.equals(0))throw new Ce(\"Input is out of the domain of sec!\");if(e.isConstant())return I.acos(e.invert());if(e.isImaginary())return b.evaluate(e,\"asec\")}return C.symfunction(\"asec\",arguments)},acsc:function(e){if(D.PARSE2NUMBER){if(e.isConstant())return I.asin(e.invert());if(e.isImaginary())return b.evaluate(e,\"acsc\")}return C.symfunction(\"acsc\",arguments)},acot:function(e){if(D.PARSE2NUMBER){if(e.isConstant())return new C.add(C.parse(\"pi/2\"),I.atan(e).negate());if(e.isImaginary())return b.evaluate(e,\"acot\")}return C.symfunction(\"acot\",arguments)},atan2:function(e,t){if(e.equals(0)&&t.equals(0))throw new Ae(\"atan2 is undefined for 0, 0\");return D.PARSE2NUMBER&&e.isConstant()&&t.isConstant()?new Fe(Math.atan2(e,t)):C.symfunction(\"atan2\",arguments)}},e=this.trigh={cosh:function(e){if(D.PARSE2NUMBER){if(e.isConstant())return new Fe(Math.cosh(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"cosh\")}return C.symfunction(\"cosh\",arguments)},sinh:function(e){if(D.PARSE2NUMBER){if(e.isConstant())return new Fe(Math.sinh(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"sinh\")}return C.symfunction(\"sinh\",arguments)},tanh:function(e){if(D.PARSE2NUMBER){if(e.isConstant())return new Fe(Math.tanh(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"tanh\")}return C.symfunction(\"tanh\",arguments)},sech:function(e){return D.PARSE2NUMBER?e.isConstant()?new Fe(Math.sech(e.valueOf())):e.isImaginary()?b.evaluate(e,\"sech\"):C.parse(ce(\"1/cosh({0})\",e)):C.symfunction(\"sech\",arguments)},csch:function(e){return D.PARSE2NUMBER?e.isConstant()?new Fe(Math.csch(e.valueOf())):e.isImaginary()?b.evaluate(e,\"csch\"):C.parse(ce(\"1/sinh({0})\",e)):C.symfunction(\"csch\",arguments)},coth:function(e){return D.PARSE2NUMBER?e.isConstant()?new Fe(Math.coth(e.valueOf())):e.isImaginary()?b.evaluate(e,\"coth\"):C.parse(ce(\"1/tanh({0})\",e)):C.symfunction(\"coth\",arguments)},acosh:function(e){e=D.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"acosh\"):D.PARSE2NUMBER?Se(C.parse(ce(D.LOG+\"(({0})+sqrt(({0})^2-1))\",e.toString()))):C.symfunction(\"acosh\",arguments);return e},asinh:function(e){e=D.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"asinh\"):D.PARSE2NUMBER?Se(C.parse(ce(D.LOG+\"(({0})+sqrt(({0})^2+1))\",e.toString()))):C.symfunction(\"asinh\",arguments);return e},atanh:function(e){e=D.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"atanh\"):D.PARSE2NUMBER?Se(C.parse(ce(\"(1/2)*\"+D.LOG+\"((1+({0}))/(1-({0})))\",e.toString()))):C.symfunction(\"atanh\",arguments);return e},asech:function(e){e=D.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"asech\"):D.PARSE2NUMBER?Se(R(C.add(e.clone().invert(),O(C.subtract(C.pow(e,new Fe(-2)),new Fe(1)))))):C.symfunction(\"asech\",arguments);return e},acsch:function(e){e=D.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"acsch\"):D.PARSE2NUMBER?Se(C.parse(ce(D.LOG+\"((1+sqrt(1+({0})^2))/({0}))\",e.toString()))):C.symfunction(\"acsch\",arguments);return e},acoth:function(e){e=D.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"acoth\"):D.PARSE2NUMBER?e.equals(1)?Fe.infinity():Se(C.divide(R(C.divide(C.add(e.clone(),new Fe(1)),C.subtract(e.clone(),new Fe(1)))),new Fe(2))):C.symfunction(\"acoth\",arguments);return e}},E={\"\\\\\":{precedence:8,operator:\"\\\\\",action:\"slash\",prefix:!0,postfix:!(this.units={}),leftAssoc:!0,operation:function(e){return e}},\"!!\":{precedence:7,operator:\"!!\",action:\"dfactorial\",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(e){return C.symfunction(D.DOUBLEFACTORIAL,[e])}},\"!\":{precedence:7,operator:\"!\",action:\"factorial\",prefix:!1,postfix:!0,leftAssoc:!0,operation:u},\"^\":{precedence:6,operator:\"^\",action:\"pow\",prefix:!1,postfix:!1,leftAssoc:!0},\"**\":{precedence:6,operator:\"**\",action:\"pow\",prefix:!1,postfix:!1,leftAssoc:!0},\"%\":{precedence:4,operator:\"%\",action:\"percent\",prefix:!1,postfix:!0,leftAssoc:!0,overloaded:!0,overloadAction:\"mod\",overloadLeftAssoc:!1,operation:function(e){return C.divide(e,new Fe(100))}},\"*\":{precedence:4,operator:\"*\",action:\"multiply\",prefix:!1,postfix:!1,leftAssoc:!1},\"/\":{precedence:4,operator:\"/\",action:\"divide\",prefix:!1,postfix:!1,leftAssoc:!1},\"+\":{precedence:3,operator:\"+\",action:\"add\",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e}},plus:{precedence:3,operator:\"plus\",action:\"add\",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e}},\"-\":{precedence:3,operator:\"-\",action:\"subtract\",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e.negate()}},\"=\":{precedence:2,operator:\"=\",action:\"equals\",prefix:!1,postfix:!1,leftAssoc:!1},\"==\":{precedence:1,operator:\"==\",action:\"eq\",prefix:!1,postfix:!1,leftAssoc:!1},\"<\":{precedence:1,operator:\"<\",action:\"lt\",prefix:!1,postfix:!1,leftAssoc:!1},\"<=\":{precedence:1,operator:\"<=\",action:\"lte\",prefix:!1,postfix:!1,leftAssoc:!1},\">\":{precedence:1,operator:\">\",action:\"gt\",prefix:!1,postfix:!1,leftAssoc:!1},\"=>\":{precedence:1,operator:\"=>\",action:\"gte\",prefix:!1,postfix:!1,leftAssoc:!1},\",\":{precedence:0,operator:\",\",action:\"comma\",prefix:!1,postfix:!1,leftAssoc:!1},\":\":{precedence:0,operator:\",\",action:\"assign\",prefix:!1,postfix:!1,leftAssoc:!1,vectorFn:\"slice\"},\":=\":{precedence:0,operator:\",\",action:\"function_assign\",prefix:!1,postfix:!1,leftAssoc:!0}},q={\"(\":{type:\"round\",id:1,is_open:!0,is_close:!1},\")\":{type:\"round\",id:2,is_open:!1,is_close:!0},\"[\":{type:\"square\",id:3,is_open:!0,is_close:!1,maps_to:\"vector\"},\"]\":{type:\"square\",id:4,is_open:!1,is_close:!0},\"{\":{type:\"curly\",id:5,is_open:!0,is_close:!1,maps_to:\"Set\"},\"}\":{type:\"curly\",id:6,is_open:!1,is_close:!0}},U=this.functions={cos:[I.cos,1],sin:[I.sin,1],tan:[I.tan,1],sec:[I.sec,1],csc:[I.csc,1],cot:[I.cot,1],acos:[I.acos,1],asin:[I.asin,1],atan:[I.atan,1],arccos:[I.acos,1],arcsin:[I.asin,1],arctan:[I.atan,1],asec:[I.asec,1],acsc:[I.acsc,1],acot:[I.acot,1],atan2:[I.atan2,2],acoth:[e.acoth,1],asech:[e.asech,1],acsch:[e.acsch,1],sinh:[e.sinh,1],cosh:[e.cosh,1],tanh:[e.tanh,1],asinh:[e.asinh,1],sech:[e.sech,1],csch:[e.csch,1],coth:[e.coth,1],acosh:[e.acosh,1],atanh:[e.atanh,1],log10:[,1],exp:[function(e){if(e.fname===D.LOG&&e.isLinear())return C.pow(e.args[0],Fe.create(e.multiplier));return C.parse(ce(\"e^({0})\",e))},1],radians:[function(e){return C.parse(ce(\"({0})*pi/180\",e))},1],degrees:[function(e){return C.parse(ce(\"({0})*180/pi\",e))},1],min:[function(){var e=[].slice.call(arguments);return w(e)?e[0]:Me(e)?new Fe(Math.min.apply(null,e)):D.SYMBOLIC_MIN_MAX&&Ne(e)?h(\"min\",e):C.symfunction(\"min\",e)},-1],max:[function(){var e=[].slice.call(arguments);return w(e)?e[0]:Me(e)?new Fe(Math.max.apply(null,e)):D.SYMBOLIC_MIN_MAX&&Ne(e)?h(\"max\",e):C.symfunction(\"max\",e)},-1],erf:[,1],floor:[,1],ceil:[,1],trunc:[,1],Si:[,1],step:[,1],rect:[,1],sinc:[function(e){if(D.PARSE2NUMBER)return e.isConstant()?new Fe(Te.sinc(e)):C.parse(ce(\"sin({0})/({0})\",e));return C.symfunction(\"sinc\",[e])},1],tri:[,1],sign:[function(e){return e.isConstant(!0)?new Fe(Math.sign(Se(e))):C.symfunction(\"sign\",arguments)},1],Ci:[,1],Ei:[,1],Shi:[,1],Chi:[,1],Li:[,1],fib:[,1],fact:[u,1],factorial:[u,1],continued_fraction:[function(e,t){e=Se(e);if(e.isConstant()){e=Te.continuedFraction(e,t),t=Ve.fromArray(e.fractions.map(function(e){return new Fe(e)}));return Ve.fromArray([new Fe(e.sign),new Fe(e.whole),t])}return C.symfunction(\"continued_fraction\",arguments)},[1,2]],dfactorial:[,1],gamma_incomplete:[,[1,2]],round:[m,[1,2]],scientific:[function(e,t){return e.scientific=t||10,e},[1,2]],mod:[t,2],pfactor:[N,1],vector:[function(){return new Ve([].slice.call(arguments))},-1],matrix:[function(){return He.fromArray(arguments)},-1],Set:[function(){return je.fromArray(arguments)},-1],imatrix:[function(e){return He.identity(e)},-1],parens:[function(e){if(D.PARSE2NUMBER)return e;return C.symfunction(\"parens\",[e])},-1],sqrt:[O,1],cbrt:[i,1],nthroot:[s,2],log:[R,[1,2]],expand:[function(e,t){return T(e,t=t||{expand_denominator:!0,expand_functions:!0})},1],abs:[_,1],invert:[function(e){if(ie(e))return e.invert();K(\"invert expects a matrix\")},1],determinant:[function(e){if(ie(e))return e.determinant();return e},1],size:[function(e){var t;ie(e)?t=[new Fe(e.cols()),new Fe(e.rows())]:re(e)||se(e)?t=new Fe(e.elements.length):K(\"size expects a matrix or a vector\");return t},1],transpose:[function(e){if(ie(e))return e.transpose();K(\"function transpose expects a matrix\")},1],dot:[function(e,t){if(re(e)&&re(t))return e.dot(t);K(\"function dot expects 2 vectors\")},2],cross:[function(e,t){if(re(e)&&re(t))return e.cross(t);K(\"function cross expects 2 vectors\")},2],vecget:[function(e,t){return t.isConstant()&&ue(t)?e.elements[t]:C.symfunction(\"vecget\",arguments)},2],vecset:[function(e,t,n){return t.isConstant?(e.elements[t]=n,e):C.symfunction(\"vecset\",arguments)},3],vectrim:[function(e,n){return n=void 0===n?1e-14:n,e=e.clone(),n=Number(n),e.elements.sort(function(e,t){return t.group-e.group}),e.elements=ve(e.elements,function(e,t){return Number(C.subtract(Se(e),Se(t)).abs())<=n}),e},[1,2]],matget:[function(e,t,n){return t.isConstant()&&n.isConstant()?e.elements[t][n]:C.symfunction(\"matget\",arguments)},3],matset:[function(e,t,n,r){return e.elements[t][n]=r,e},4],matgetrow:[function(e,t){return t.isConstant()?new He(e.elements[t]):C.symfunction(\"matgetrow\",arguments)},2],matsetrow:[function(e,t,n){if(!t.isConstant())return C.symfunction(\"matsetrow\",arguments);if(e.elements[t].length!==n.elements.length)throw new _e(\"Matrix row must match row dimensions!\");e=e.clone();return e.elements[t]=n.clone().elements,e},3],matgetcol:[function(e,r){if(!r.isConstant())return C.symfunction(\"matgetcol\",arguments);r=Number(r);var i=He.fromArray([]);return e.each(function(e,t,n){n===r&&i.elements.push([e.clone()])}),i},2],matsetcol:[function(n,r,e){if(!r.isConstant())return C.symfunction(\"matsetcol\",arguments);if(r=Number(r),n.rows()!==e.elements.length)throw new _e(\"Matrix columns must match number of columns!\");return e.each(function(e,t){n.set(t-1,r,e.elements[0].clone())}),n},3],rationalize:[r,1],IF:[function(e,t,n){\"boolean\"!=typeof e&&oe(e)&&(e=!!Number(e));return e?t:n},3],is_in:[function(e,t){if(ie(e)){for(var n=0,r=e.rows();n<r;n++)for(var i=0,s=e.cols();i<s;i++)if(e.elements[n][i].equals(t))return new Fe(1)}else if(e.elements)for(n=0,r=e.elements.length;n<r;n++)if(e.elements[n].equals(t))return new Fe(1);return new Fe(0)},2],realpart:[l,1],imagpart:[c,1],conjugate:[p,1],arg:[f,1],polarform:[function(e){var t;return t=Fe.toPolarFormArray(e),e=t[1],t=t[0],e=C.parse(ce(\"e^({0}*({1}))\",D.IMAGINARY,e)),C.multiply(t,e)},1],rectform:[function(e){var t,n,r,i,s,o=e.clone();try{return t=he(e,\"e\",!0),n=C.divide(t.x.power,Fe.imaginary()),r=Se(I.tan(n)),C.pow(t.a,new Fe(2)),i=r.getDenom(!0),s=r.getNum(),Fe.hyp(s,i).equals(t.a)?C.add(i,C.multiply(Fe.imaginary(),s)):o}catch(e){return o}},1],sort:[function(e,n){n=n?n.toString():\"asc\";var r=function(e){return e.group===F?e.multiplier:e.group===H?\"\"===e.fname?r(e.args[0]):e.fname:e.group===G?e.power:e.value};return new Ve((re(e)?e.elements:e.collectSymbols()).sort(function(e,t){e=r(e),t=r(t);return\"desc\"===n?t-e:e-t}))},[1,2]],integer_part:[,1],union:[function(e,t){return e.union(t)},2],contains:[function(e,t){return e.contains(t)},2],intersection:[function(e,t){return e.intersection(t)},2],difference:[function(e,t){return e.difference(t)},2],intersects:[function(e,t){return new Fe(Number(e.intersects(t)))},2],is_subset:[function(e,t){return new Fe(Number(e.is_subset(t)))},2],print:[function(){be(arguments).map(function(e){console.log(e.toString())})},-1]};this.error=K;this.override=function(e,t){n[e]||(n[e]=[]),n[e].push(this[e]),this[e]=t},this.restore=function(e){this[e]&&(this[e]=n[e].pop())},this.extend=function(e,n,r){var i,s=this;\"function\"==typeof this[e]&&\"function\"==typeof n&&(i=this[e],this[e]=function(e,t){return ne(e)&&ne(t)&&!r?i.call(s,e,t):n.call(s,e,t,i)})},this.symfunction=function(e,t){var n=new Fe(e);return n.group=H,\"object\"==typeof t&&(t=[].slice.call(t)),n.args=t,n.fname=e===Z?\"\":e,n.updateHash(),n},this.callfunction=function(e,t,n){var r=U[e];r||K(\"Nerdamer currently does not support the function \"+e);var i,s=r[1]||n,o=r[0];t instanceof Array||(t=void 0!==t?[t]:[]),-1!==s&&(i=(a=ae(s))?s[0]:s,n=a?s[1]:s,s=e+\" requires a {0} of {1} arguments. {2} provided!\",(a=t.length)<i&&K(ce(s,\"minimum\",i,a)),n<a&&K(ce(s,\"maximum\",n,a)));var a=Me(t);return o?o.apply(r[2],t):(o=function(e){for(var t=D.FUNCTION_MODULES,n=t.length,r=0;r<n;r++){var i=t[r];if(e in i)return i[e]}K(\"The function \"+e+\" is undefined!\")}(e),D.PARSE2NUMBER&&a?d(o.apply(o,t)):C.symfunction(e,t))},this.operator_filter_regex=(e=\"^\\\\\"+Object.keys(E).filter(function(e){if(1===e.length)return e}).join(\"\\\\\"),new RegExp(\"([\"+e+\"])\\\\s+([\"+e+\"])\")),this.setOperator=function(e,t,n){var r=e.operator;if(E[r]=e,t&&(this[e.action]=t),C[r]=e.operation,e.action||e.prefix||e.postif||(e.action=r),\"over\"===n||\"under\"===n){var i,s=e.precedence;for(i in E){var o=E[i];(\"over\"===n?o.precedence>=s:o.precedence>s)&&o.precedence++}}},this.getOperator=function(e){return E[e]},this.aliasOperator=function(e,t){var n,r={},i=E[e];for(n in i)r[n]=i[n];r.operator=t,this.setOperator(r)},this.getOperators=function(){return E},this.getBrackets=function(){return q};function a(e){this.type=e.type,this.value=e.value,this.left=e.left,this.right=e.right}this.initConstants=function(){this.CONSTANTS={E:new Fe(D.E),PI:new Fe(D.PI)}},this.pretty_print=function(e){if(Array.isArray(e)){var t=e.map(e=>C.pretty_print(e)).join(\", \");return\"vector\"===e.type?\"vector<\"+t+\">\":\"(\"+t+\")\"}return e.toString()},this.peekers={pre_operator:[],post_operator:[],pre_function:[],post_function:[]},this.callPeekers=function(e){if(D.callPeekers)for(var t=this.peekers[e],n=be(arguments).slice(1).map(le),r=0;r<t.length;r++)t[r].apply(null,n)},this.tokenize=function(n){for(var e in n=(n=String(n)).trim().replace(/\\s+/g,\" \"),q){var t=new RegExp(q[e].is_close?\"\\\\s+\\\\\"+e:\"\\\\\"+e+\"\\\\s+\",\"g\");n=n.replace(t,e)}for(var u=0,r=n.length,i=0,s=[],o=[s],a=o[0],l=0,c=[],p=!1,f=function(e,t){var n=[];void 0!==e&&(n.type=e),n.column=t,o.push(n),a.push(n),a=n,l++},h=function(){o.pop(),a=o[--l]},m=function(e,t){(t=void 0===t?n.substring(i,e):t)in C.units?a.push(new A(t,A.UNIT,i)):\"\"!==t&&a.push(new A(t,A.VARIABLE_OR_LITERAL,i))},g=function(e){a.push(new A(e,A.FUNCTION,i))},d=function(e){i=e+1};u<r;u++){var v=n.charAt(u);if(v in E){m(u);var w=a[0]&&te(a[0]);p&&i<u&&\",\"!==v&&!(w&&\"*\"===v)&&(p=!1,h()),d(u+1);var y=function(e){for(var t=(e=void 0!==e?e:u)+1;n.charAt(t++)in E;);return n.substring(e,t-1)}(u),u=(i=i+y.length-2)-1;a.push.apply(a,function(e){for(var t=u-e.length,n=[],r=e.charAt(0),i=1,s=e.length;i<s;i++)var o=e.charAt(i),a=r+o,r=(a in E?a:(n.push(new A(r,A.OPERATOR,t+i)),o));return n.push(new A(r,A.OPERATOR,t+i)),n}(y))}else if(v in q){var b,S=q[v];if(S.is_open)c.push([S,i]),(b=n.substring(i,u))in U?g(b):\"\"!==b&&a.push(new A(b,A.VARIABLE_OR_LITERAL,i)),f(S.maps_to,u);else if(S.is_close){var M=c.pop();if(!M)throw new Le(\"Missing open bracket for bracket at: \"+(u+1));if(M[0].id!==S.id-1)throw new Le(\"Parity error\");m(u),h()}d(u)}else\" \"===v&&(M=n.substring(i,u),S=n.charAt(u+1),p?(M in E?a.push(new A(M,A.OPERATOR,u)):(m(void 0,M),h(),((v=S in E)&&\"-\"===E[S].value||!v)&&a.push(new A(\"*\",A.OPERATOR,u))),p=!1):(b=n.substring(i,u))in U?(p=!0,g(b),f()):b in E?a.push(new A(b,A.OPERATOR,u)):(m(void 0,b),S=n.charAt(u+1),\"\"===M||\"\"===S||M in E||S in E||a.push(new A(\"*\",A.OPERATOR,u))),d(u))}if(c.length){var N=c.pop();throw new Le(\"Missing closed bracket for bracket at \"+(N[1]+1))}return m(u),s},this.toRPN=function(e){for(var t=e.type,n=e.length,r=[],i=[],s=[],o=function(e,t){for(;e.length;)t.push(e.pop())},a=0;a<n;a++){var u=e[a];if(u.type!==A.OPERATOR)break;if(!u.prefix)throw new Ie(\"Not a prefix operator\");u.is_prefix=!0,i.push(u)}for(;a<n;a++){var l=e[a];if(l.type===A.OPERATOR){var c=l;for(c.overloaded&&(h=e[a+1])&&h.type===A.VARIABLE_OR_LITERAL&&(c.postfix=!1,c.action=c.overloadAction,c.leftAssoc=c.overloadLeftAssoc);i.length;){var p=i[i.length-1];if(!(p.precedence>c.precedence||!c.leftAssoc&&p.precedence===c.precedence))break;r.push(i.pop())}if((\"vector\"===t||\"set\"===t)&&\"vectorFn\"in c&&(c.action=c.vectorFn),c.postfix){var f=e[a-1];if(!f)throw new Ie(\"Unexpected prefix operator '\"+l.value+\"'! at \"+l.column);if(f.type===A.OPERATOR&&!f.postfix)throw new Ie(\"Unexpected prefix operator '\"+f.value+\"'! at \"+f.column)}else do{var h,m=!!(h=e[a+1])&&h.type===A.OPERATOR;if(m){if(!h.prefix)throw new Ie(\"A prefix operator was expected at \"+h.column);h.is_prefix=!0,s.push(h),a++}}while(m);for((c.is_prefix?s:i).push(c);s.length&&(c.leftAssoc||!c.leftAssoc&&s[s.length-1].precedence>=c.precedence);)i.push(s.pop())}else l.type===A.VARIABLE_OR_LITERAL?(0===r.length&&o(s,i),r.push(l),(f=i[i.length-1])&&f.leftAssoc||o(s,r)):l.type===A.FUNCTION?i.push(l):l.type===A.UNIT&&r.push(l);Array.isArray(l)&&(r.push(this.toRPN(l)),l.type&&r.push(new A(l.type,A.FUNCTION,l.column)))}return o(i,r),o(s,r),r},this.parseRPN=function(e,t){try{for(var n in t=t||{})t[n]=C.parse(t[n],{});D.PARSE2NUMBER&&(\"e\"in t||(t.e=new Fe(D.E)),\"pi\"in t||(t.pi=new Fe(D.PI)));for(var r=[],i=0,s=e.length;i<s;i++){var o=e[i];if(o=Array.isArray(o)?this.parseRPN(o,t):o)if(o.type===A.OPERATOR)if(o.is_prefix||o.postfix)r.push(o.operation(r.pop()));else{var a=r.pop(),u=r.pop();if(void 0===u)throw new Ie(o+\" is not a valid postfix operator at \"+o.column);var l=\"comma\"===o.action;u instanceof je&&!l&&(u=Ve.fromSet(u)),a instanceof je&&!l&&(a=Ve.fromSet(a)),this.callPeekers(\"pre_operator\",u,a,o);var c=C[o.action](u,a);this.callPeekers(\"post_operator\",c,u,a,o),r.push(c)}else if(o.type===A.FUNCTION){var p=r.pop(),f=p.parent;p instanceof L||(p=L.create(p));var h=o.value,m=p.getItems();this.callPeekers(\"pre_function\",h,m);var g=C.callfunction(h,m);this.callPeekers(\"post_function\",g,h,m);var d=r[r.length-1],v=e[i+1];if(!(v&&v.type===A.OPERATOR&&\",\"===v.value)&&g instanceof Ve&&d&&d.elements&&!(d instanceof L)){var w=r.pop(),y=g.elements[0];if(y.isConstant())if(y instanceof x)r.push(Ve.fromArray(w.elements.slice(y.start,y.end)));else{var b=Number(y),S=w.elements.length;if((b=b<0?S+b:b)<0||S<=b)throw new Ue(\"Index out of range \"+(o.column+1));var M=w.elements[b];w.getter=b,M.parent=w,r.push(M)}else w.getter=y,r.push(w),r.push(g)}else f&&(g.parent=f),r.push(g)}else{var N,E=o.value;E in D.ALIASES?o=C.parse(D.ALIASES[o]):o.type===A.VARIABLE_OR_LITERAL?o=new Fe(E):o.type===A.UNIT&&((o=new Fe(E)).isUnit=!0),E in C.CONSTANTS?(N=o,o=new Fe(C.CONSTANTS[E])):E in t&&E!==t[E].toString()?(N=o,o=t[E].clone()):E in J&&(N=o,o=J[E].clone()),N&&(o.subbed=N),r.push(o)}}var q=r[0];if(-1!==[\"undefined\",\"string\",\"number\"].indexOf(typeof q))throw new Re(\"Unexpected token!\");return q}catch(t){throw[Ce].forEach(function(e){if(t instanceof e)throw new e(t.message+\": \"+o.column)}),new xe(t.message+\": \"+o.column)}},a.prototype.toString=function(){var e=this.left?this.left.toString()+\"---\":\"\",t=this.right?\"---\"+this.right.toString():\"\";return e+\"(\"+this.value+\")\"+t},a.prototype.toHTML=function(e,t){e=e||0,t=void 0===t?4:t;function n(e){return\" \".repeat(t*e)}var r=\"\",i=this.left?n(e+1)+\"<li>\\n\"+this.left.toHTML(e+2,t)+n(e+1)+\"</li> \\n\":\"\",s=this.right?n(e+1)+\"<li>\\n\"+this.right.toHTML(e+2,t)+n(e+1)+\"</li>\\n\":\"\",r=n(e)+'<div class=\"'+this.type.toLowerCase()+'\"><span>'+this.value+\"</span></div>\"+n(e)+\"\\n\";return(i||s)&&(r+=n(e)+\"<ul>\\n\"+i+s+n(e)+\"</ul>\\n\"),r+=\"\"},this.tree=function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];if(Array.isArray(r))r=this.tree(r),t.push(r);else if(r.type===A.OPERATOR)r.is_prefix||r.postfix?(s=r.is_prefix?\"left\":\"right\",i=t.pop(),(r=new a(r))[s]=i):((r=new a(r)).right=t.pop(),r.left=t.pop()),t.push(r);else if(r.type===A.FUNCTION){r=new a(r);var i,s=t.pop();if(r.right=s,\"object\"===r.value)if(i=t[t.length-1]){for(;i.right;)i=i.right;i.right=r;continue}t.push(r)}else t.push(new a(r))}return t[0]},this.parse=function(e,t){e=function(e){e=String(e);for(var t=0;t<o.actions.length;t++)e=o.actions[t].call(this,e);for(e=e.replace(/\\s+/g,\" \"),e=(e=/e/gi.test(e)?e.replace(/\\-*\\d+\\.*\\d*e\\+?\\-?\\d+/gi,function(e){return y(e)}):e).replace(D.IMPLIED_MULTIPLICATION_REGEX,function(){var e=arguments[4],t=arguments[1],n=arguments[2],r=arguments[3],i=\"\",s=\"*\";return t+(s=(i=!e.charAt(r).match(/[\\+\\-\\/\\*]/)?e.charAt(r-1):i).match(/[a-z]/i)?\"\":s)+n}).replace(/([a-z0-9_]+)/gi,function(e,t){return!(!1!==D.USE_MULTICHARACTER_VARS||t in U)&&isNaN(t)?t.split(\"\").join(\"*\"):t}).replace(/\\)\\(/g,\")*(\")||\"0\";;)if(e===(e=e.replace(/([a-z0-9_]+)(\\()|(\\))([a-z0-9]+)/gi,function(e,t,n,r,i){r=t||r,i=n||i;return r in U?r+i:r+\"*\"+i})))break;return e}(e),t=t||{};e=this.tokenize(e),e=this.toRPN(e);return this.parseRPN(e,t)},this.toObject=function(e){var a=function(e){for(var t=[],n=0,r=e.length;n<r;n++){var i,s=e[n],o=s.value;s.type===A.VARIABLE_OR_LITERAL?t.push(new Fe(o)):s.type===A.FUNCTION?(n++,(i=C.symfunction(o,a(e[n]))).isConversion=!0,t.push(i)):s.type===A.OPERATOR?t.push(o):t.push(a(s))}return t};return a(C.tokenize(e))};function S(e){for(var t=0,n=[[]],r=0,i=e.length;r<i;r++)\",\"===e[r]?n[++t]=[]:n[t].push(e[r]);return n}function M(e){return e.replace(/^\\\\left\\((.+)\\\\right\\)$/g,function(e,t){return t||e})}function _(e){if(e.isInfinity)return Fe.infinity();if(e.multiplier.lessThan(0)&&e.multiplier.negate(),e.isImaginary()){var t=e.realpart(),n=e.imagpart();if(t.isConstant()&&n.isConstant())return O(C.add(C.pow(t,new Fe(2)),C.pow(n,new Fe(2))))}else if(oe(e)||ge(e.power))return e;var r;e.isComposite()&&(r=[],e.each(function(e){r.push(e.multiplier)}),Te.QGCD.apply(null,r).lessThan(0)&&(e.multiplier=e.multiplier.multiply(new De(-1)),e.distributeMultiplier()));n=C.parse(e.multiplier);return e.toUnitMultiplier(),C.multiply(n,C.symfunction(Q,[e]))}function u(e){if(re(e)){var n=new Ve;return e.each(function(e,t){n.set(t-1,u(e))}),n}if(ie(e)){var r=new He;return e.each(function(e,t,n){r.set(t,n,u(e))}),r}if(D.PARSE2NUMBER&&e.isConstant())return d(ue(e)?Te.bigfactorial(e):Te.gamma(e.multiplier.add(new De(1)).toDecimal()));if(e.isConstant()&&e.getDenom().equals(2)){var t,i=e.getNum(),s=e.multiplier.isNegative()?(s=C.subtract(i.negate(),new Fe(1)).multiplier.divide(new De(2)),t=C.pow(new Fe(-4),new Fe(s)).multiplier.multiply(Te.bigfactorial(s)),Te.bigfactorial(new De(2).multiply(s))):(s=C.add(i,new Fe(1)).multiplier.divide(new De(2)),t=Te.bigfactorial(new De(2).multiply(s)),C.pow(new Fe(4),new Fe(s)).multiplier.multiply(Te.bigfactorial(s))),s=t.divide(s);return C.multiply(C.parse(\"sqrt(pi)\"),new Fe(s))}return C.symfunction(Y,[e])}function t(e,t){if(e.isConstant()&&t.isConstant()){var n=new Fe(1);return n.multiplier=n.multiplier.multiply(e.multiplier.mod(t.multiplier)),n}n=C.divide(e.clone(),t.clone());return ue(n)?new Fe(0):C.symfunction(\"mod\",[e,t])}function r(e){if(e.isComposite()){var t,n,r,i,s=new Fe(0);return e.each(function(e){r=e.getNum(),i=e.getDenom(),n=s.getNum(),t=s.getDenom(),n=C.multiply(i,n),r=C.multiply(r,t),r=C.expand(C.add(n,r)),i=C.multiply(t,i),s=C.divide(r,i)},!0),s}return e}function O(e){if((e=!ne(e)?C.parse(e):e).group===V)return C.symfunction(z,[e]);var t=(e=\"\"===e.fname&&e.power.equals(1)?e.args[0]:e).multiplier.sign()<0;if(D.PARSE2NUMBER){if(e.isConstant()&&!t)return new Fe(k.sqrt(e.multiplier.toDecimal()));if(e.isImaginary())return b.sqrt(e);if(e.group===G)return C.symfunction(\"sqrt\",[e])}var n,r=e.isConstant();if(e.group===X&&e.isLinear()){var i=O(Fe(e.multiplier));for(o in e.symbols){var s=e.symbols[o];i=C.multiply(i,O(s))}l=i}else if(e.fname===z){var o=e.args[0],a=e.multiplier;o.setPower(e.power.multiply(new De(.25))),l=o,a.equals(1)||(l=C.multiply(O(C.parse(a)),l))}else if(e.power.isInteger())if(e.multiplier<0&&e.group===G)var u=C.parse(e.multiplier).negate(),a=C.parse(e).toUnitMultiplier().negate(),l=C.multiply(C.symfunction(D.SQRT,[a]),O(u));else{u=e.power.sign();e.power=e.power.abs(),r&&e.multiplier.lessThan(0)&&(n=Fe.imaginary(),e.multiplier=e.multiplier.abs());var c=e.multiplier.toDecimal(),r=Math.abs(c),r=Math.sqrt(r);if(ue(r))i=new Fe(r);else if(ue(c)){var p=Te.ifactor(c),f=1;for(s in p){var h,m=(g=p[s])-g%2;m&&(h=Math.pow(s,m),f*=Math.pow(s,m/2),c/=h)}i=C.multiply(C.symfunction(z,[new Fe(c)]),new Fe(f))}else{for(var g,d=[new Fe(e.multiplier.num),new Fe(e.multiplier.den)],v=[new Fe(1),new Fe(1)],w=[new Fe(1),new Fe(1)],y=0;y<2;y++)N(g=d[y]).each(function(e){var t=(e=Fe.unwrapPARENS(e)).clone().toLinear(),n=Number(e.power),e=n%2;v[y]=C.multiply(v[y],C.pow(t,new Fe((n-e)/2))),w[y]=C.multiply(w[y],O(C.pow(t,new Fe(e))))});i=C.divide(C.multiply(v[0],w[0]),C.multiply(v[1],w[1]))}l=(e=e.toUnitMultiplier(!0)).isOne()?e:ge(e.power.toString())?C.pow(e.clone(),new Fe(.5)):C.symfunction(z,[e]),u<0&&l.power.negate(),i&&(l=C.multiply(i,l)),n&&(l=C.multiply(n,l))}else e.setPower(e.power.multiply(new De(.5))),l=e;return t&&D.PARSE2NUMBER?C.parse(l):l}function i(e){if(e.isConstant(!0))return s(e,new Fe(3));var t,n=e.power/3,r=C.pow(C.parse(e.multiplier),new Fe(1/3)),e=e.toUnitMultiplier();return ue(n)?t=C.pow(e.toLinear(),C.parse(n)):e.group===X?(t=new Fe(1),e.each(function(e){t=C.multiply(t,i(e))})):t=C.symfunction(\"cbrt\",[e]),C.multiply(r,t)}function s(e,t,n,r){if((t=Se(C.parse(t))).equals(0))throw new Ae(\"Unable to calculate nthroots of zero\");if(e<0&&ge(t))throw new Error(\"Cannot calculate nthroot of negative number for even powers\");if(!e.isConstant(!0))return C.symfunction(\"nthroot\",arguments);void 0===r&&(r=!0),n=n||25;var i=(e=e.group!==F?Se(e):e).sign();if(i<0&&(e=_(e)),ue(e)&&t.isConstant()){var s,t=e<0x10000000000000000?De.create(Math.pow(e,1/t)):Te.nthroot(e,t);return r&&(s=new Fe(t)),s=new Fe(t.toDecimal(n)),C.multiply(new Fe(i),s)}}function N(e){if(e.greaterThan(9999999999998891e26)||e.equals(-1))return e;if(e.equals(Math.PI))return new Fe(Math.PI);if((e=Se(e.clone())).isConstant()){var t=new Fe(1),n=e.toString();if(ue(n)){var r,i=Te.ifactor(n);for(r in i)var s=i[r],t=C.multiply(t,C.symfunction(\"parens\",[new Fe(r).setPower(new De(s))]))}else{n=N(new Fe(e.multiplier.num)),e=N(new Fe(e.multiplier.den));t=C.multiply(C.symfunction(\"parens\",[n]),C.symfunction(\"parens\",[e]).invert())}}else t=C.symfunction(\"pfactor\",arguments);return t}function l(e){return e.realpart()}function c(e){return e.imagpart()}function p(e){var t=e.realpart(),e=e.imagpart();return C.add(t,C.multiply(e.negate(),Fe.imaginary()))}function f(e){var t=e.realpart(),e=e.imagpart();return t.isConstant()&&e.isConstant()?new Fe(Math.atan2(e,t)):C.symfunction(\"atan2\",[e,t])}function f(e){var t=e.realpart(),e=e.imagpart();return t.isConstant()&&e.isConstant()?e.equals(0)&&t.equals(-1)?C.parse(\"pi\"):e.equals(1)&&t.equals(0)?C.parse(\"pi/2\"):e.equals(1)&&t.equals(1)?C.parse(\"pi/4\"):new Fe(Math.atan2(e,t)):C.symfunction(\"atan2\",[e,t])}function h(e,t){var n,r;for(t.map(function(e){e.numVal=Se(e).multiplier});;){if((r=t.length)<2)return t[0];n=t.pop(),r=t[r-2],(\"min\"===e?n.numVal<r.numVal:n.numVal>r.numVal)&&(t.pop(),t.push(n))}}function R(e,t){if(e.equals(1))return new Fe(0);var n,r,i;if(e.fname===z&&e.multiplier.equals(1))return n=C.divide(R(e.args[0]),new Fe(2)),e.power.sign()<0&&n.negate(),n;if(e.equals(0))throw new Ae(D.LOG+\"(0) is undefined!\");return e.isImaginary()?b.evaluate(e,D.LOG):(e.isConstant()&&void 0!==t&&t.isConstant()?n=new Fe(Math.log(e)/Math.log(t)):e.group===V&&e.power.multiplier.lessThan(0)||\"-1\"===e.power.toString()?(e.power.negate(),n=R(e).negate()):\"e\"===e.value&&e.multiplier.equals(1)?(t=e.power,n=ne(t)?t:new Fe(t)):e.group===H&&\"exp\"===e.fname?(i=e.args[0],n=e.multiplier.equals(1)?C.multiply(i,new Fe(e.power)):C.symfunction(D.LOG,[e])):D.PARSE2NUMBER&&oe(e)?((e=C.parse(e)).multiplier.lessThan(0)&&(e.negate(),r=C.multiply(new Fe(Math.PI),new Fe(\"i\"))),n=new Fe(Math.log(e.multiplier.toDecimal())),r&&(n=C.add(n,r))):(e.power.equals(1)||e.contains(\"e\")||(i=e.group===V?e.power:new Fe(e.power),e.toLinear()),n=1<arguments.length&&w(arguments)?new Fe(1):C.symfunction(D.LOG,arguments),i&&(n=C.multiply(i,n))),n)}function m(e,t){var n=t&&t.isConstant()||void 0===t;if(e.isConstant()&&n){var r,n=e;return t&&t.lessThan(0)&&(t=_(t),n=(r=Number(e).toExponential().toString().split(\"e\"))[0],r=r[1]),t=new Fe(me(n,Number(t||0))),C.multiply(t,C.pow(new Fe(10),new Fe(r||0)))}return C.symfunction(\"round\",arguments)}function g(e){e%=2;return 0<=(e=e<0?2+e:e)&&e<=.5?1:.5<e&&e<=1?2:1<e&&e<=1.5?3:4}function d(t){if(!isFinite(t)){var e=Math.sign(t),n=new Fe(String(Math.abs(t)));return n.multiplier=n.multiplier.multiply(new De(e)),n}if(ne(t))return t;if(\"number\"==typeof t)try{t=De.simple(t)}catch(e){t=new De(t)}n=new Fe(0);return n.multiplier=t,n}function T(e,t){if(Array.isArray(e))return e.map(function(e){return T(e,t)});if(t=t||{},e.group===H&&\"\"===e.fname){var n=T(e.args[0],t),r=T(C.pow(n,C.parse(e.power)),t);return C.multiply(C.parse(e.multiplier),r).distributeMultiplier()}if(-1!==[F,B,G].indexOf(e.group))return e;r=e.clone();try{var i,s,o,a=e.multiplier.toString(),u=Number(e.power),l=e;if(e.isComposite()&&ue(e.power)&&0<e.power){var c=u-1,n=new Fe(0);e.each(function(e){n=C.add(n,T(C.parse(e),t))});for(var p=C.parse(n),f=0;f<c;f++)p=Ee(p,n,t);l=C.multiply(C.parse(a),p).distributeMultiplier()}else e.group===H&&!0===t.expand_functions?(i=[],e.args.forEach(function(e){i.push(T(e,t))}),l=C.pow(C.symfunction(e.fname,i),C.parse(e.power)),l=C.multiply(l,C.parse(e.multiplier))):e.isComposite()&&ue(e.power)&&e.power<0&&!0===t.expand_denominator?(e=e.invert(),(l=T(e,t)).invert()):e.group===X?(s=function(e){switch(e.group){case $:return 0;case j:return 1;case X:return 2;case H:return 3;default:return 4}},o=e.collectSymbols().sort(function(e,t){return s(t)-s(e)}).map(function(e){return T(C.pow(e,C.parse(u)),t)}),n=o.pop(),(l=n.isComposite()&&n.isLinear()?(o.forEach(function(e){n=Ee(n,e,t)}),n.isComposite()?(1<n.power&&(n=T(C.pow(n,C.parse(n.power)),t)),C.multiply(C.parse(a),n).distributeMultiplier()):n):(l=n,o.forEach(function(e){l=C.multiply(l,e)}),C.multiply(l,C.parse(a)).distributeMultiplier())).group===X&&(l=C.parse(l))):l=e;return l}catch(e){return r}return r}function P(e){if(ne(e.power)||!e.power.absEquals(.5))return e;var t=e.power.sign(),e=O(e.group===B?new Fe(e.value):e.toLinear());return t<0&&e.invert(),e}this.toTeX=function(e,t){var n=!0===(t=t||{}).decimals?\"decimals\":void 0,r=\"string\"==typeof e?this.toObject(e):e,i=[],s=void 0===t.cdot?\"\\\\cdot\":t.cdot,r=function(e){for(var t=[];e.length;){var n,r,i=e.shift(),s=e[0],o=ae(s),a=\"-\"===s;\"^\"===i&&(\"+\"===s?e.shift():o&&\"+\"===s[0]&&s.shift(),o&&1===s.length&&e.unshift(e.shift()[0])),\"^\"===i&&(o&&\"-\"===s[0]||a)?(n=t.pop(),r=\"1\",\"*\"===(a=t[t.length-1])?(t.pop(),r=t.pop()):ae(a)&&(r=t.pop()),t.push(r,\"/\",n,i),(o?s:e).shift(),o&&1===s.length&&t.push(e.shift()[0])):t.push(i)}return t}(r);if(ae(r)){for(var o,a,u=[],l=0;l<r.length;l++)o=r[l],\"^\"===r[l+1]?(a=r[l+2],u.push(Ge.braces(this.toTeX([o]))+\"^\"+Ge.braces(this.toTeX([a]))),l+=2):u.push(o);r=u}for(var l=0,c=r.length;l<c;l++){var p=r[l];if(ne(p=\"*\"===p?s:p))if(p.group===H){var f,h=p.fname;if(h===z)g=\"\\\\sqrt\"+Ge.braces(this.toTeX(p.args));else if(h===Q)g=Ge.brackets(this.toTeX(p.args),\"abs\");else if(h===Z)g=Ge.brackets(this.toTeX(p.args),\"parens\");else if(h===D.LOG10)g=\"\\\\\"+D.LOG10_LATEX+\"\\\\left( \"+this.toTeX(p.args)+\"\\\\right)\";else if(\"integrate\"===h)var m=S(p.args),g=\"\\\\int \"+(d=Ge.braces(this.toTeX(m[0])))+\"\\\\, d\"+(v=this.toTeX(m[1]));else if(\"defint\"===h){var m=S(p.args),d=Ge.braces(this.toTeX(m[0])),v=this.toTeX(m[3]);g=\"\\\\int\\\\limits_{\"+this.toTeX(m[1])+\"}^{\"+this.toTeX(m[2])+\"} \"+d+\"\\\\, d\"+v}else if(\"diff\"===h){m=S(p.args),v=\"\",d=Ge.braces(this.toTeX(m[0]));if(1===m.length){for(var w=[],y=0;y<m[0].length;y++)3===m[0][y].group&&w.push(m[0][y].value);w.sort(),v=0<w.length?\"\\\\frac{d}{d \"+w[0]+\"}\":\"\\\\frac{d}{d x}\"}else v=2===m.length?\"\\\\frac{d}{d \"+m[1]+\"}\":\"\\\\frac{d^{\"+m[2]+\"}}{d \"+this.toTeX(m[1])+\"^{\"+m[2]+\"}}\";g=v+\"\\\\left(\"+d+\"\\\\right)\"}else if(\"sum\"===h||\"product\"===h){var b=[[],[],[],[]],y=0;for(l=0;l<p.args.length;l++)\",\"!==p.args[l]?b[y].push(p.args[l]):y++;g=(\"sum\"===h?\"\\\\sum_\":\"\\\\prod_\")+Ge.braces(this.toTeX(b[1])+\" = \"+this.toTeX(b[2])),g+=\"^\"+Ge.braces(this.toTeX(b[3]))+Ge.braces(this.toTeX(b[0]))}else g=\"limit\"===h?(f=S(p.args).map(function(e){return Array.isArray(e)?C.toTeX(e.join(\"\")):C.toTeX(String(e))}),\"\\\\lim_\"+Ge.braces(f[1]+\"\\\\to \"+f[2])+\" \"+Ge.braces(f[0])):h===Y||h===W?this.toTeX(p.args)+(h===Y?\"!\":\"!!\"):Ge.latex(p,n);i.push(g)}else i.push(Ge.latex(p,n));else ae(p)?i.push(Ge.brackets(this.toTeX(p))):\"/\"===p?i.push(Ge.frac(M(i.pop()),M(this.toTeX([r[++l]])))):i.push(p)}return i.join(\" \")},this.expand=T,this.round=m,this.clean=function t(e){var n,r,i,s,o,a,u,l=e.group;return l===$?(r=e.getNum(),i=e.getDenom()||new Fe(1),s=Number(e.power),o=new Fe(1),1===Math.abs(s)&&(i.each(function(e){e.group===X?o=C.multiply(o,t(e.getDenom())):e.power.lessThan(0)&&(o=C.multiply(o,t(e.clone().toUnitMultiplier())))}),a=new Fe(0),i.each(function(e){a=C.add(C.divide(e,o.clone()),a)}),o.invert(),r.isComposite()?(u=new Fe(0),r.each(function(e){u=C.add(C.multiply(t(e),o.clone()),u)})):u=C.multiply(o,r),n=C.divide(u,a))):l===X?(n=new Fe(1),e.each(function(e){n=C.multiply(n,C.clean(e))})):l===H&&1===e.args.length&&e.args[0].isConstant()&&(n=ye(\"PARSE2NUMBER\",function(){return C.parse(e)},!0)),n=n||e},this.sqrt=O,this.cbrt=i,this.abs=_,this.log=R,this.rationalize=r,this.nthroot=s,this.arg=f,this.conjugate=p,this.imagpart=c,this.realpart=l,this.getFunction=function(e){return U[e][0]},this.addPreprocessor=function(e,t,n,r){var i=o.names,s=o.actions;if(\"function\"!=typeof t)throw new PreprocessorError(\"Incorrect parameters. Function expected!\");n?r?(i.splice(n,0,e),s.splice(n,0,t)):(i[n]=e,s[n]=t):(i.push(e),s.push(t))},this.getPreprocessors=function(){for(var e={},t=0,n=e.names.length;t<n;t++)e[e.names[t]]={order:t,action:e.actions[t]};return e},this.removePreprocessor=function(e,t){e=o.names.indexOf(e);t?(we(o.names,e),we(o.actions,e)):(o.names[e]=void 0,o.actions[e]=void 0)},this.mapped_function=function(){for(var e={},t=this.params,n=0;n<t.length;n++)e[t[n]]=String(arguments[n]);return C.parse(this.body,e)},this.add=function(i,n){var e=ne(i),t=ne(n);if(e&&t){if(i.unit||n.unit)return C.Unit.add(i,n);if(i.isInfinity||n.isInfinity){var r=i.multiplier.lessThan(0),s=n.multiplier.lessThan(0);if(i.isInfinity&&n.isInfinity&&r!==s)throw new Ae(\"(\"+i+\")+(\"+n+\") is not defined!\");var o=Fe.infinity();return s&&o.negate(),o}if(i.isComposite()&&i.isLinear()&&n.isComposite()&&n.isLinear()&&(i.distributeMultiplier(),n.distributeMultiplier(),n.length>i.length&&i.group===n.group&&([i,n]=[n,i])),i.multiplier.equals(0))return n;if(n.multiplier.equals(0))return i;if(i.isConstant()&&n.isConstant()&&D.PARSE2NUMBER)return h=new Fe(i.multiplier.add(n.multiplier).toDecimal(D.PRECISION));var a=i.group,u=n.group,l=i.power.toString(),c=n.power.toString();if(a<u||a===u&&c<l&&0<c)return this.add(n,i);a===X&&u===j&&i.value===n.value&&(w=i,a=(i=n).group,u=(n=w).group,l=i.power.toString(),c=n.power.toString());var p,f,h,m=l===c,r=i.value,s=n.value,o=i.isComposite(),l=n.isComposite();if(o&&(p=Pe(i,\"hash\")),l&&(f=Pe(n,\"hash\")),a===$&&u===$&&n.isLinear()&&!i.isLinear()&&p!==f)return this.add(n,i);a===j&&u===j&&(r=p,s=f);var g,c=a===B&&u===F,l=i.value===n.multiplier.toString(),l=r===s||p===f&&void 0!==p||c&&l;if(l&&m&&a===u)if(c&&(n=n.convert(B)),a!==j||u!==G&&u!==B)if((h=i).multiplier.isOne()&&n.multiplier.isOne()&&a===$&&i.isLinear()&&n.isLinear())for(var d in n.symbols){var v=n.symbols[d];h.attach(v)}else h.multiplier=h.multiplier.add(n.multiplier);else i.distributeMultiplier(),h=i.attach(n);else if(l&&a!==j)a===$&&u===j?(n.insert(i,\"add\"),h=n):(h=Fe.shell(j).attach([i,n])).value=a===j?p:r;else if(o&&i.isLinear()){r=a===u,o=a===j&&u===j;if(o&&(r=i.value===n.value),i.distributeMultiplier(),n.isComposite()&&n.isLinear()&&r){for(var d in n.distributeMultiplier(),n.symbols){v=n.symbols[d];i.attach(v)}h=i}else o&&i.value!==f||a===j&&!l?(h=Fe.shell($).attach([i,n])).updateHash():h=i.attach(n)}else a===H&&i.fname===z&&u!==V&&n.power.equals(.5)&&(g=n.multiplier.clone(),(n=O(n.toUnitMultiplier().toLinear())).multiplier=g),2===i.length&&2===n.length&&ge(i.power)&&ge(n.power)?h=C.add(T(i),T(n)):(h=Fe.shell($).attach([i,n])).updateHash();return 1===(h=h.multiplier.equals(0)?new Fe(0):h).length&&(g=h.multiplier,(h=pe(h.symbols)).multiplier=h.multiplier.multiply(g)),h}t&&!e&&(w=i,i=n,n=w,w=t,t=e,e=w);var w=ie(n);if(e&&w){var y=new He;n.eachElement(function(e,t,n){y.set(t,n,C.add(i.clone(),e))}),n=y}else if(ie(i)&&w)n=i.add(n);else if(e&&re(n))n.each(function(e,t){n.elements[--t]=C.add(i.clone(),n.elements[t])});else if(re(i)&&re(n))n.each(function(e,t){n.elements[--t]=C.add(i.elements[t],n.elements[t])});else{if(re(i)&&ie(n))return C.add(n,i);if(ie(i)&&re(n)){if(n.elements.length===i.rows()){var y=new He,b=i.cols();return n.each(function(e,t){for(var n=[],r=0;r<b;r++)n.push(C.add(i.elements[t-1][r].clone(),e.clone()));y.elements.push(n)}),y}K(\"Dimensions must match!\")}}return n},this.subtract=function(i,r){var e=ne(i),t=ne(r);if(e&&t)return i.unit||r.unit?C.Unit.subtract(i,r):this.add(i,r.negate());if(t&&re(i))r=i.map(function(e){return C.subtract(e,r.clone())});else if(e&&re(r))r=r.map(function(e){return C.subtract(i.clone(),e)});else if(re(i)&&re(r))i.dimensions()===r.dimensions()?r=i.subtract(r):C.error(\"Unable to subtract vectors. Dimensions do not match.\");else if(ie(i)&&re(r)){if(r.elements.length===i.rows()){var s=new He,o=i.cols();return r.each(function(e,t){for(var n=[],r=0;r<o;r++)n.push(C.subtract(i.elements[t-1][r].clone(),e.clone()));s.elements.push(n)}),s}K(\"Dimensions must match!\")}else{if(re(i)&&ie(r)){var s=r.clone().negate();return C.add(s,i)}ie(i)&&ie(r)?r=i.subtract(r):ie(i)&&t?(s=new He,i.each(function(e,t,n){s.set(t,n,C.subtract(e,r.clone()))}),r=s):e&&ie(r)&&(s=new He,r.each(function(e,t,n){s.set(t,n,C.subtract(i.clone(),e))}),r=s)}return r},this.multiply=function(i,n){var e=ne(i),t=ne(n);if(e&&n instanceof L)return n.elements.push(i),n;if(e&&t){if(n.isUnit){var r=i.clone();return i.unit=n,r}if(i.unit||n.unit)return C.Unit.multiply(i,n);if(i.isInfinity||n.isInfinity){if(i.equals(0)||n.equals(0))throw new Ae(i+\"*\"+n+\" is undefined!\");if(n.power.lessThan(0)){if(i.isInfinity)throw new Ae(\"Infinity/Infinity is not defined!\");return new Fe(0)}var s=i.multiplier.multiply(n.multiplier).sign(),o=Fe.infinity();if(i.isConstant()||n.isConstant()||i.isInfinity&&n.isInfinity)return s<0&&o.negate(),o}if(i.isConstant()&&n.isConstant()&&D.PARSE2NUMBER)return new Fe(p=new k(i.multiplier.toDecimal()).times(new k(n.multiplier.toDecimal())).toFixed());if(i.isOne())return n.clone();if(n.isOne())return i.clone();if(i.multiplier.equals(0)||n.multiplier.equals(0))return new Fe(0);if(n.group>i.group&&n.group!==$)return this.multiply(n,i);i.group===X&&n.group===j&&i.value===n.value&&(p=i,i=n,n=p);var a=i.group,u=n.group,l=n.multiplier.num,c=n.multiplier.den;a!==H||i.fname!==z||n.isConstant()||i.args[0].value!==n.value||i.args[0].multiplier.lessThan(0)?a===H&&i.fname===z&&i.multiplier.equals(1)&&i.power.equals(-1)&&n.isConstant()&&i.args[0].equals(n)&&(i=C.symfunction(z,[n.clone()]),n=new Fe(1)):(m=i.power,h=C.parse(i.multiplier),(i=C.multiply(h,i.args[0].clone())).setPower(new De(.5).multiply(m)),a=i.group);var p,f=i.value,o=n.value,s=new De(i.sign()),h=a===B&&u===F&&n.multiplier.equals(i.value),m=(h?new De(1).multiply(i.multiplier):i.multiplier.multiply(n.multiplier)).abs(),r=i.clone().toUnitMultiplier();if(n=n.clone().toUnitMultiplier(!0),a===H&&u===H){var g=i.args[0].clone(),d=n.args[0].clone();if(i.fname===z&&n.fname===z&&i.isLinear()&&n.isLinear()){var v=C.divide(g,d).invert();v.gt(1)&&ue(v)&&(r=C.multiply(i.args[0].clone(),O(v.clone())),n=new Fe(1))}else if(i.fname===Y&&n.fname===Y&&!g.isConstant()&&!d.isConstant()&&n.power<0){v=C.subtract(g.clone(),d.clone());if(v.isConstant())if(p=new Fe(1),v<0){for(var w=0,y=Math.abs(v);w<=y;w++){var b=C.add(g.clone(),new Fe(w));p=C.multiply(p,b)}r=C.multiply(C.pow(g,new Fe(i.power)),C.pow(p,new Fe(n.power))),n=new Fe(1)}else{for(w=0,y=Math.abs(v);w<=y;w++){b=C.add(d.clone(),new Fe(w));p=C.multiply(p,b)}r=C.multiply(C.pow(p,new Fe(i.power)),C.pow(d,new Fe(n.power))),n=new Fe(1)}}}if(f===o&&a===j&&a===u&&(f=i.text(\"hash\"),o=n.text(\"hash\")),(f=u===V&&n.previousGroup===j&&a===j?Pe(i,\"hash\",V):f)!==o&&!h||a===j&&(u===G||u===B||u===H)||a===j&&u===X)if(a===X&&i.isLinear())if(u===X&&n.distributeExponent(),u===X&&n.isLinear()){for(var b in n.symbols){var S=n.symbols[b];r=r.combine(S)}r.multiplier=r.multiplier.multiply(n.multiplier)}else r.combine(n);else a!==F?a===X?(r.distributeExponent(),r.combine(n)):n.isOne()||(E=n.multiplier.clone(),n.toUnitMultiplier(),(r=Fe.shell(X).combine([r,n])).multiplier=r.multiplier.multiply(E)):r=n.clone().toUnitMultiplier();else{var M=i.power,N=n.power,E=ne(M),q=ne(N),q=E||q;a===j&&u!==j&&n.previousGroup!==j&&M.equals(1)?(r=new Fe(0),i.each(function(e){r=C.add(r,C.multiply(e,n.clone()))},!0)):(r.power=q?C.add(ne(M)?M:new Fe(M),ne(N)?N:new Fe(N)):a===F?M:M.add(N),r.power.equals(0)&&(r=r.convert(F)),q&&r.convert(V),i.imaginary&&n.imaginary&&ge(r.power%2)&&(r=new Fe(1),m.negate()),r.group!==V&&r.previousGroup&&(r.previousGroup=void 0),r.multiplier=r.multiplier.multiply(n.multiplier))}r.group===B&&(a=Math.log(r.value),M=Math.log(l)/a,N=Math.log(c)/a,q=m.num/l,a=m.den/c,0!=M&&ue(M)&&ue(q)&&(r.power=r.power.add(new De(M)),m.num/=l),0!=N&&ue(N)&&ue(a)&&(r.power=r.power.subtract(new De(N)),m.den/=c)),1===r.length&&(p=r.multiplier,(r=pe(r.symbols)).multiplier=r.multiplier.multiply(p));c=r.power.toString();return ge(c)&&r.fname===z?(s*=r.sign(),c=r.power,r=r.args[0],r=C.multiply(new Fe(m),C.pow(r,new Fe(c.divide(new De(2))))),s<0&&r.negate()):(r.multiplier=r.multiplier.multiply(m).multiply(s),r.group===$&&r.isImaginary()&&r.distributeMultiplier()),r=r.group===B&&ue(r.power.toDecimal())?r.convert(F):r}t&&!e&&(p=i,i=n,n=p,p=t,t=e,e=p);s=ie(n),t=ie(i);if(e&&s){var x=new He;n.eachElement(function(e,t,n){x.set(t,n,C.multiply(i.clone(),e))}),n=x}else if(t&&s)n=i.multiply(n);else if(e&&re(n))n.each(function(e,t){n.elements[--t]=C.multiply(i.clone(),n.elements[t])});else if(re(i)&&re(n))n.each(function(e,t){n.elements[--t]=C.multiply(i.elements[t],n.elements[t])});else{if(re(i)&&ie(n))return this.multiply(n,i);if(ie(i)&&re(n)){if(n.elements.length===i.rows()){var x=new He,A=i.cols();return n.each(function(e,t){for(var n=[],r=0;r<A;r++)n.push(C.multiply(i.elements[t-1][r].clone(),e.clone()));x.elements.push(n)}),x}K(\"Dimensions must match!\")}}return n},this.divide=function(r,i){var e=ne(r),t=ne(i);if(e&&t){if(r.unit||i.unit)return C.Unit.divide(r,i);if(i.equals(0))throw new qe(\"Division by zero not allowed!\");return r.isConstant()&&i.isConstant()?(n=r.clone()).multiplier=n.multiplier.divide(i.multiplier):(i.invert(),n=C.multiply(r,i)),n}var n,s,o=re(r),a=re(i);return e&&a?i=i.map(function(e){return C.divide(r.clone(),e)}):o&&t?i=r.map(function(e){return C.divide(e,i.clone())}):o&&a?r.dimensions()===i.dimensions()?i=i.map(function(e,t){return C.divide(r.elements[--t],e)}):C.error(\"Cannot divide vectors. Dimensions do not match!\"):(n=ie(r),o=ie(i),n&&t?(s=new He,r.eachElement(function(e,t,n){s.set(t,n,C.divide(e,i.clone()))}),i=s):e&&o?(s=new He,i.eachElement(function(e,t,n){s.set(t,n,C.divide(r.clone(),e))}),i=s):n&&o?(s=new He,r.rows()===i.rows()&&r.cols()===i.cols()?(r.eachElement(function(e,t,n){s.set(t,n,C.divide(e,i.elements[t][n]))}),i=s):C.error(\"Dimensions do not match!\")):n&&a&&(r.cols()===i.dimensions()?(s=new He,r.eachElement(function(e,t,n){s.set(t,n,C.divide(e,i.elements[t].clone()))}),i=s):C.error(\"Unable to divide matrix by vector.\"))),i},this.pow=function(r,i){var s,e=ne(r),t=ne(i);if(e&&t){if(r.unit||i.unit)return C.Unit.pow(r,i);if(r.group===H&&r.fname===Q&&ge(i)){var n=r.multiplier.clone(),o=C.pow(r.args[0],i);return o.multiplier=n,o}if(r.isInfinity||i.isInfinity){if(r.isInfinity&&i.isInfinity)throw new Ae(\"(\"+r+\")^(\"+i+\") is undefined!\");if(r.isConstant()&&i.isInfinity){if(r.equals(0)){if(i.lessThan(0))throw new Ae(\"0^Infinity is undefined!\");return new Fe(0)}if(r.equals(1))throw new Ae(\"1^\"+i.toString()+\" is undefined!\");if(i.lessThan(0))return new Fe(0);if(!r.lessThan(0))return Fe.infinity()}if(r.isInfinity&&i.isConstant()){if(i.equals(0))throw new Ae(r+\"^0 is undefined!\");return i.lessThan(0)?new Fe(0):C.multiply(Fe.infinity(),C.pow(new Fe(r.sign()),i.clone()))}}var a=r.equals(0),u=i.equals(0);if(a&&u)throw new Ae(\"0^0 is undefined!\");if(a&&i.isConstant()&&i.multiplier.greaterThan(0))return new Fe(0);if(u)return new Fe(1);var l,c=i.isConstant(),p=r.isConstant(),o=i.isInteger(),n=r.multiplier,a=r.clone();if(p&&c&&r.equals(0)&&i.lessThan(0))throw new Ae(\"Division by zero is not allowed!\");if(D.PARSE2NUMBER&&p&&c&&r.sign()<0&&de(i)){var f=Math.PI*i;return b=new Fe(Math.cos(f)),v=C.multiply(Fe.imaginary(),new Fe(Math.sin(f))),C.add(b,v)}if(D.PARSE2NUMBER&&r.isImaginary()&&c&&ue(i)&&!i.lessThan(0))if(b=r.realpart(),v=r.imagpart(),b.isConstant(\"all\")&&v.isConstant(\"all\"))return u=D.USE_BIG?Fe(k.atan2(d.multiplier.toDecimal(),y.multiplier.toDecimal()).times(i.toString())):Math.atan2(v,b)*i,l=new Fe(u),y=C.pow(Fe.hyp(b,v),i),f=C.multiply(y.clone(),C.trig.cos(l.clone())),u=C.multiply(y,C.trig.sin(l)),C.add(f,C.multiply(Fe.imaginary(),u));if(a.toUnitMultiplier(),a.group!==H||a.fname!==z||c?(A=n.sign(),de(i)&&A<0&&(a.negate(),(a=C.symfunction(Z,[a])).negate()),a.multiplyPower(i)):((N=a.args[0]).multiplyPower(new Fe(.5)),N.multiplier.multiply(a.multiplier),N.multiplyPower(i),a=N),p&&c&&D.PARSE2NUMBER)A<0&&(r.negate(),m=i.multiplier.den.equals(2)?new Fe(D.IMAGINARY):ue(i.multiplier)?ge(i.multiplier)?new Fe(1):new Fe(-1):ge(i.multiplier.den)?C.pow(C.symfunction(Z,[new Fe(A)]),i.clone()):new Fe(Math.pow(A,i.multiplier.num))),a=new Fe(Math.pow(r.multiplier.toDecimal(),i.multiplier.toDecimal())),m&&(a=C.multiply(a,m));else if(o&&!n.equals(1)){if(i.abs().gt(D.MAX_EXP))return i.sign()<0?new Fe(0):Fe.infinity();var h=i.multiplier.toDecimal(),m=Math.sign(h);h=Math.abs(h);var g=new De(1);g.num=n.num.pow(h),g.den=n.den.pow(h),m<0&&g.invert(),a.multiplier=a.multiplier.multiply(g)}else{var d,v,w,y,b,S,M,N,E,q,x,A=r.sign();i.isConstant()&&r.isConstant()&&!i.multiplier.den.equals(1)&&A<0?a=i.multiplier.den.equals(2)?(d=new Fe(D.IMAGINARY),r.negate(),i.lessThan(0)&&(d.negate(),i.negate()),C.multiply(C.pow(r,i),d)):((w=r.clone()).multiplier.negate(),a=C.pow(C.symfunction(Z,[new Fe(A)]),i.clone()),g=C.pow(new Fe(w.multiplier.num),i.clone()),d=C.pow(new Fe(w.multiplier.den),i.clone()),y=C.divide(g,d),C.multiply(a,y)):D.PARSE2NUMBER&&i.isImaginary()?(b=i.realpart(),v=i.imagpart(),w=r.clone().toLinear(),y=C.pow(w.clone(),b),E=R(w.clone()),b=I.cos(C.multiply(v.clone(),E)),E=C.multiply(I.sin(C.multiply(v,R(w))),Fe.imaginary()),a=C.multiply(y,C.add(b,E)),a=C.expand(C.parse(a))):(S=P(new Fe((E=r.group===F&&A<0)?n.num:Math.abs(n.num)).setPower(i.clone())),M=P(new Fe(n.den).setPower(i.clone()).invert()),r.imaginary&&(o?(N=Math.sign(i),h=_(i),a=new Fe(ge(q=h%4)?-1:D.IMAGINARY),(0===q||N<0&&1===q||0<N&&3===q)&&a.negate()):(o=i.multiplier.multiply(De.quick(1,2)),N=Math.pow(-1,o.num),a=ge(o.den)?new Fe(-1).setPower(o,!0):new Fe(N))),A<0&&!E&&a.negate(),c&&r.group!==V&&(A=ge(i.multiplier.den),E=ge(r.power),q=a.power.toDecimal(),c=ge(q),A&&E&&!c&&(a=1===q?C.symfunction(Q,[a]):ue(q)?C.multiply(C.symfunction(Q,[a.clone().toLinear()]),a.clone().setPower(new De(q-1))):(h=a.power,C.symfunction(Q,[a.toLinear()]).setPower(h)),D.POSITIVE_MULTIPLIERS&&a.fname===Q&&(a=a.args[0]))),i.equals(2)&&a.group===X&&(x=new Fe(1),a.each(function(e){x=C.multiply(x,C.pow(e,i))}),a=x))}return a=P(a),(a=S&&M?C.multiply(a,function(e){if(e.group===B){var t=e.value,n=ke(t)[0];if(!n)return ee(\"Unable to compute prime factors. This should not happen. Please review and report.\"),e;t=new De(Math.log(t)/Math.log(n)).multiply(e.power);if(t.den>e.power.den)return e;e=ue(t)?Fe(Math.pow(n,t)):new Fe(n).setPower(t)}return e}(C.multiply(S,M))):a).fname===z?(M=((S=a.group===V)?a.power.multiplier:a.power).toString(),ge(M)&&(S=S?C.divide(a.power,new Fe(2)):new Fe(a.power.divide(new De(2))),n=a.multiplier,(a=C.pow(a.args[0],S)).multiplier=a.multiplier.multiply(n))):!D.IGNORE_E&&a.isE()&&a.group===V&&a.power.contains(\"pi\")&&a.power.contains(D.IMAGINARY)&&i.group===X&&(l=i.stripVar(D.IMAGINARY),a=C.add(I.cos(l),C.multiply(Fe.imaginary(),I.sin(l)))),a}return re(r)&&t?r=r.map(function(e){return C.pow(e,i.clone())}):ie(r)&&t?(s=new He,r.eachElement(function(e,t,n){s.set(t,n,C.pow(e,i.clone()))}),r=s):e&&ie(i)&&(s=new He,i.eachElement(function(e,t,n){s.set(t,n,C.pow(r.clone(),e))}),r=s),r},this.comma=function(e,t){return(e=!(e instanceof L)?L.create(e):e).append(t),e},this.mod=t,this.slice=function(e,t){return new x(e,t)},this.equals=function(e,t){return e.group===G||e.isLinear()||K(\"Cannot set equality for \"+e.toString()),J[e.value]=t.clone(),t},this.percent=function(e){return C.divide(e,new Fe(100))},this.assign=function(e,n){if(e instanceof L&&n instanceof L)return e.elements.map(function(e,t){return C.assign(e,n.elements[t])}),Ve.fromArray(n.elements);if(e.parent){var t=e.parent;return t.elements[t.getter]=n,delete t.getter,t}if(e.group!==G)throw new Oe(\"Cannot complete operation. Incorrect LH value for \"+e);return J[e.value]=n},this.function_assign=function(e,t){var n=e.elements.pop();return fe(n,e.elements,t)};function v(e){return new Fe(!0===e?1:0)}this.eq=function(e,t){return v(e.equals(t))},this.gt=function(e,t){return v(e.gt(t))},this.gte=function(e,t){return v(e.gte(t))},this.lt=function(e,t){return v(e.lt(t))},this.lte=function(e,t){return v(e.lte(t))},this.factorial=function(e){return this.symfunction(Y,[e])},this.dfactorial=function(e){return this.symfunction(W,[e])}}D.FUNCTION_MODULES.push(Te),x(Te),Math.sign=Math.sign||function(e){return 0===(e=+e)||isNaN(e)?e:0<e?1:-1},Math.cosh=Math.cosh||function(e){e=Math.exp(e);return(e+1/e)/2},Math.sech=Math.sech||function(e){return 1/Math.cosh(e)},Math.csch=Math.csch||function(e){return 1/Math.sinh(e)},Math.coth=Math.coth||function(e){return 1/Math.tanh(e)},Math.sinh=Math.sinh||function(e){e=Math.exp(e);return(e-1/e)/2},Math.tanh=Math.tanh||function(e){if(e===1/0)return 1;if(e===-1/0)return-1;e=Math.exp(2*e);return(e-1)/(e+1)},Math.asinh=Math.asinh||function(e){return e===-1/0?e:Math.log(e+Math.sqrt(e*e+1))},Math.acosh=Math.acosh||function(e){return Math.log(e+Math.sqrt(e*e-1))},Math.atanh=Math.atanh||function(e){return Math.log((1+e)/(1-e))/2},Math.log10=Math.log10||function(e){return Math.log(e)*Math.LOG10E},Math.trunc=Math.trunc||function(e){return isNaN(e)?NaN:0<e?Math.floor(e):Math.ceil(e)},ke(314146179365),R.getExpression=function(e,t){\"last\"!==e&&e||(e=p.length);e=p[(e=\"first\"===e?1:e)-1];return e&&new R(e)},(R.prototype={text:function(e,t){return t=t||D.EXPRESSION_DECP,e=e||\"decimals\",this.symbol.text_?this.symbol.text_(e):Pe(this.symbol,e,void 0,t)},latex:function(e){return this.symbol.latex?this.symbol.latex(e):Ge.latex(this.symbol,e)},valueOf:function(){return this.symbol.valueOf()},evaluate:function(){if(re(this.symbol)&&0===this.symbol.dimensions())return this;var e,t=arguments[0],n=1;\"string\"==typeof t?e=\"%\"===t.charAt(0)?R.getExpression(t.substr(1)).text():t:t instanceof R||ne(t)?e=t.text():(e=this.symbol.text(),n--);var r=arguments[n]||{};return new R(ye(\"PARSE2NUMBER\",function(){return d.parse(e,r)},!0))},buildFunction:function(e){return Xe.build(this.symbol,e)},isNumber:function(){return oe(this.symbol)},isInfinity:function(){return Math.abs(this.symbol.multiplier)===1/0},isImaginary:function(){return Se(d.parse(this.symbol)).isImaginary()},variables:function(){return b(this.symbol)},toString:function(){try{return ae(this.symbol)?\"[\"+this.symbol.toString()+\"]\":this.symbol.toString()}catch(e){return\"\"}},toDecimal:function(e){D.precision=e;e=Pe(this.symbol,\"decimals\");return D.precision=void 0,e},isFraction:function(){return v(this.symbol)},isPolynomial:function(){return this.symbol.isPoly()},sub:function(e,t){return new R(this.symbol.sub(d.parse(e),d.parse(t)))},operation:function(e,t){return i(t)?t=t.symbol:ne(t)||(t=d.parse(t)),new R(d[e](this.symbol.clone(),t.clone()))},add:function(e){return this.operation(\"add\",e)},subtract:function(e){return this.operation(\"subtract\",e)},multiply:function(e){return this.operation(\"multiply\",e)},divide:function(e){return this.operation(\"divide\",e)},pow:function(e){return this.operation(\"pow\",e)},expand:function(){return new R(d.expand(this.symbol))},each:function(e,t){if(this.symbol.each)this.symbol.each(e,t);else if(ae(this.symbol))for(t=0;t<this.symbol.length;t++)e.call(this.symbol,this.symbol[t],t);else e.call(this.symbol)},eq:function(e){ne(e)||(e=d.parse(e));try{return d.subtract(this.symbol.clone(),e).equals(0)}catch(e){return!1}},lt:function(e){ne(e)||(e=d.parse(e));try{return Se(d.subtract(this.symbol.clone(),e)).lessThan(0)}catch(e){return!1}},gt:function(e){ne(e)||(e=d.parse(e));try{return Se(d.subtract(this.symbol.clone(),e)).greaterThan(0)}catch(e){return!1}},gte:function(e){return this.gt(e)||this.eq(e)},lte:function(e){return this.lt(e)||this.eq(e)},numerator:function(){return new R(this.symbol.getNum())},denominator:function(){return new R(this.symbol.getDenom())},hasFunction:function(e){return this.symbol.containsFunction(e)},contains:function(e){return this.symbol.contains(e)}}).toTeX=R.prototype.latex,T.prototype={fromScientific:function(e){e=String(e).toLowerCase().split(\"e\");return this.coeff=e[0],this.exponent=e[1],this},convert:function(e){var t=e.split(\".\"),n=t[0]||\"\",r=t[1]||\"\",n=T.removeLeadingZeroes(n),r=T.removeTrailingZeroes(r),i=n.length,e=n+r,t=T.leadingZeroes(e).length;this.exponent=i-(t+1);e=T.removeLeadingZeroes(e);this.coeff=e.charAt(0)+\".\"+(e.substr(1,e.length)||\"0\");e=this.coeff.split(\".\")[1]||\"\";return this.decp=\"0\"===e?0:e.length,this.dec=r,this.wholes=n,this},round:function(e){var t,n,r=this.copy();return 0===(e=Number(e))?r.coeff=r.coeff.charAt(0):(t=this.coeff.substring(0,e+1),e=(n=this.coeff.substring(e+1,e+3)).charAt(0),4<n.charAt(1)&&e++,r.coeff=t+e),r},copy:function(){var e=new T(0);return e.coeff=this.coeff,e.exponent=this.exponent,e.sign=this.sign,e},toString:function(e){var t;return t=D.SCIENTIFIC_IGNORE_ZERO_EXPONENTS&&0===this.exponent&&this.decp<e?0===this.decp?this.wholes:this.coeff:(t=void 0===e?this.coeff:T.round(this.coeff,Math.min(e,this.decp||1)),0===this.exponent?t:t+\"e\"+this.exponent),(-1===this.sign?\"-\":\"\")+t}},T.isScientific=function(e){return/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(e)},T.leadingZeroes=function(e){e=e.match(/^(0*).*$/);return e?e[1]:\"\"},T.removeLeadingZeroes=function(e){e=e.match(/^0*(.*)$/);return e?e[1]:\"\"},T.removeTrailingZeroes=function(e){var t=e.match(/0*$/);return t?e.substring(0,e.length-t[0].length):\"\"},T.round=function(e,t){e=me(e,t),t-=String(e).split(\".\").pop().length;return 0<t&&(e+=new Array(1+t).join(0)),e},De.create=function(e){if(e instanceof De)return e;var t=\"-\"===(e=e.toString()).charAt(0),e=new De(e=t?e.substr(1,e.length-1):e);return t&&e.negate(),e},De.isFrac=function(e){return e instanceof De},De.quick=function(e,t){var n=new De;return n.num=new S(e),n.den=new S(t),n},De.simple=function(e){for(var t=String(y(e)).split(\".\"),e=t.join(\"\"),n=1,r=(t[1]||\"\").length,i=0;i<r;i++)n+=\"0\";return De.quick(e,n).simplify()},De.prototype={multiply:function(e){if(this.isOne())return e.clone();if(e.isOne())return this.clone();var t=this.clone();return t.num=t.num.multiply(e.num),t.den=t.den.multiply(e.den),t.simplify()},divide:function(e){if(e.equals(0))throw new qe(\"Division by zero not allowed!\");return this.clone().multiply(e.clone().invert()).simplify()},subtract:function(e){return this.clone().add(e.clone().neg())},neg:function(){return this.num=this.num.multiply(-1),this},add:function(e){var t=this.den,n=e.den,r=this.clone(),i=r.num,e=e.num;return t.equals(n)?r.num=i.add(e):(r.num=i.multiply(n).add(e.multiply(t)),r.den=t.multiply(n)),r.simplify()},mod:function(e){var t=this.clone(),e=e.clone();return t.num=t.num.multiply(e.den),t.den=t.den.multiply(e.den),e.num=e.num.multiply(this.den),e.den=e.den.multiply(this.den),t.num=t.num.mod(e.num),t.simplify()},simplify:function(){var e=S.gcd(this.num,this.den);return this.num=this.num.divide(e),this.den=this.den.divide(e),this},clone:function(){var e=new De;return e.num=new S(this.num),e.den=new S(this.den),e},decimal:function(e){var t=this.num.isNegative()?\"-\":\"\";if(this.num.equals(this.den))return\"1\";e=e||D.PRECISION,e++;for(var n=[],r=this.num.abs(),i=this.den,s=0;s<e;s++){var o=r.divide(i),a=r.subtract(o.multiply(i));if(n.push(o),a.equals(0))break;r=a.times(10)}var u=n.shift();if(0===n.length)return t+u.toString();if(s===e){for(var l=[],s=0;s<2;s++)l.unshift(n.pop());n.push(Math.round(l.join(\".\")))}return t+(u.toString()+\".\"+n.join(\"\"))},toDecimal:function(e){return(e=e||D.PRECISION)?this.decimal(e):this.num/this.den},qcompare:function(e){return[this.num.multiply(e.den),e.num.multiply(this.den)]},equals:function(e){isNaN(e)||(e=new De(e));e=this.qcompare(e);return e[0].equals(e[1])},absEquals:function(e){isNaN(e)||(e=new De(e));e=this.qcompare(e);return e[0].abs().equals(e[1])},greaterThan:function(e){isNaN(e)||(e=new De(e));e=this.qcompare(e);return e[0].gt(e[1])},gte:function(e){return this.greaterThan(e)||this.equals(e)},lte:function(e){return this.lessThan(e)||this.equals(e)},lessThan:function(e){isNaN(e)||(e=new De(e));e=this.qcompare(e);return e[0].lt(e[1])},isInteger:function(){return this.den.equals(1)},negate:function(){return this.num=this.num.multiply(-1),this},invert:function(){var e,t=this.den;return this.num.equals(0)||(e=this.num.isNegative(),this.den=this.num.abs(),this.num=t,e&&(this.num=this.num.multiply(-1))),this},isOne:function(){return this.num.equals(1)&&this.den.equals(1)},sign:function(){return this.num.isNegative()?-1:1},abs:function(){return this.num=this.num.abs(),this},gcd:function(e){return De.quick(S.gcd(e.num,this.num),S.lcm(e.den,this.den))},toString:function(){return this.den.equals(1)?this.num.toString():this.num.toString()+\"/\"+this.den.toString()},valueOf:function(){return D.USE_BIG?new k(this.num.toString()).div(new k(this.den.toString())):this.num/this.den},isNegative:function(){return this.toDecimal()<0}},Fe.imaginary=function(){var e=new Fe(D.IMAGINARY);return e.imaginary=!0,e},Fe.infinity=function(e){var t=new Fe(\"Infinity\");return-1===e&&t.negate(),t},Fe.shell=function(e,t){t=new Fe(t);return t.group=e,t.symbols={},t.length=0,t},Fe.unwrapSQRT=function(e,t){var n,r=e.power;return e.fname===z&&(e.isLinear()||t)&&((n=e.args[0].clone()).power=n.power.multiply(new De(.5)),n.multiplier=n.multiplier.multiply(e.multiplier),e=n,t&&(e.power=r.multiply(new De(.5)))),e},Fe.hyp=function(e,t){return e=e||new Fe(0),t=t||new Fe(0),d.sqrt(d.add(d.pow(e.clone(),new Fe(2)),d.pow(t.clone(),new Fe(2))))},Fe.toPolarFormArray=function(e){var t=e.realpart(),e=e.imagpart();return[Fe.hyp(t,e),t.equals(0)?d.parse(\"pi/2\"):d.trig.atan(d.divide(e,t))]},Fe.unwrapPARENS=function(e){if(\"\"!==e.fname)return e;var t=e.args[0];return t.power=t.power.multiply(e.power),t.multiplier=t.multiplier.multiply(e.multiplier),\"\"===e.fname?Fe.unwrapPARENS(t):t},Fe.create=function(e,t){return d.parse(\"(\"+e+\")^(\"+(t=void 0===t?1:t)+\")\")},Fe.prototype={getNth:function(e){var t=Se(d.pow(d.parse(this.multiplier),d.parse(e).invert())),n=d.parse(me(t));return Se(d.pow(n,d.parse(e))).equals(d.parse(this.multiplier))?n:t},isToNth:function(t){var n,e=this.getNth(t),e=ue(e);return this.group===X?(n=!0,this.each(function(e){e.isToNth(t)||(n=!1)})):n=this.group===F||ue(d.divide(d.parse(this.power),d.parse(t))),e&&n},isSquare:function(){return this.isToNth(2)},isCube:function(){return this.isToNth(3)},isSimple:function(){return this.power.equals(1)&&this.multiplier.equals(1)},powSimp:function(){if(this.group!==X)return this.clone();var t=[],e=this.multiplier.sign();this.each(function(e){e=e.power;if(ne(e)||e.equals(1))return this.clone();t.push(e)});var n,r=new De(c(t)),e=this.multiplier.sign(),i=this.multiplier.clone().abs(),s=Te.ifactor(i),o=new De(1),a=new De(1);for(n in s){var u=new De(s[n]);u.lessThan(r)||(u=u.divide(r).subtract(new De(1)),a=a.multiply(new De(n))),o=o.multiply(d.parse(E(n)+\"^\"+E(u)).multiplier)}var l=new Fe(a);this.each(function(e){(e=e.clone()).power=e.power.divide(r),l=d.multiply(l,e)});i=d.symfunction(Z,[l]);return i.power=r,i.multiplier=e<0?o.negate():o,i},equals:function(e){return ne(e)||(e=new Fe(e)),this.value===e.value&&this.power.equals(e.power)&&this.multiplier.equals(e.multiplier)&&this.group===e.group},abs:function(){var e=this.clone();return e.multiplier.abs(),e},gt:function(e){return ne(e)||(e=new Fe(e)),this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},gte:function(e){return ne(e)||(e=new Fe(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},lt:function(e){return ne(e)||(e=new Fe(e)),this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},lte:function(e){return ne(e)||(e=new Fe(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},isPoly:function(e){var t=this.group,n=this.power;if(!ue(n)||n<0)return!1;if(t===F||t===G||this.isConstant(!0))return!0;n=b(this);if(t===X&&1===n.length){var r=n[0];if(!r)return!0;for(s in this.symbols){var i=this.symbols[s];if(i.group===H&&!i.args[0].isConstant())return!1;if(!i.contains(r)&&!i.isConstant(!0))return!1}return!0}if(this.isComposite()||t===X&&e){if(!e&&1<n.length)return!1;for(var s in this.symbols)if(!this.symbols[s].isPoly(e))return!1;return!0}return!1},stripVar:function(t,e){var n;return this.group!==j&&this.group!==G||this.value!==t?this.group===X&&this.isLinear()?(n=new Fe(1),this.each(function(e){e.contains(t,!0)||(n=d.multiply(n,e.clone()))}),n.multiplier=n.multiplier.multiply(this.multiplier)):this.group!==$||this.isLinear()?this.group===$&&this.isLinear()?(n=new Fe(0),this.each(function(e){e.contains(t)||((e=e.clone()).multiplier=e.multiplier.multiply(this.multiplier),n=d.add(n,e))}),n.equals(0)&&(n=new Fe(this.multiplier))):n=this.group===V&&this.power.contains(t,!0)||this.group===H&&this.contains(t)?new Fe(this.multiplier):this.clone():n=new Fe(this.multiplier):n=new Fe(e?0:this.multiplier),n},toArray:function(n,r){r=r||{arr:[],add:function(e,t){var n=this.arr[t];this.arr[t]=n?d.add(n,e):e}};var e=this.group;if(e===G&&this.contains(n))r.add(new Fe(this.multiplier),this.power);else if(e===X){var t=this.stripVar(n),i=d.divide(this.clone(),t.clone()),i=i.isConstant()?0:i.power;r.add(t,i)}else if(e===j&&this.value===n)this.each(function(e,t){r.add(e.stripVar(n),t)});else if(e===$)this.each(function(e){e.toArray(n,r)});else{if(this.contains(n))throw new I(\"Cannot convert to array! Exiting\");r.add(this.clone(),0)}r=r.arr;for(var s=0;s<r.length;s++)r[s]||(r[s]=new Fe(0));return r},hasFunc:function(e){var t=this.group===H||this.group===V;if(t&&!e||t&&this.contains(e))return!0;if(this.symbols)for(var n in this.symbols)if(this.symbols[n].hasFunc(e))return!0;return!1},sub:function(t,n){t=ne(t)?t.clone():d.parse(t),n=ne(n)?n.clone():d.parse(n),t.group!==F&&t.group!==B||K(\"Cannot substitute a number. Must be a variable\");var r,e=!1,i=t.multiplier.equals(1),s=this.multiplier.clone();if(this.value===t.value&&(this.group!==j&&t.group!==j||this.group===j&&t.group===j))(i||t.multiplier.equals(this.multiplier))&&(t.isLinear()?r=n:t.power.equals(this.power)&&(r=n,e=!0),t.multiplier.equals(this.multiplier)&&(s=new De(1)));else if(this.group===X||this.previousGroup===X)r=new Fe(1),this.each(function(e){e=d.parse(e.sub(t,n));r=d.multiply(r,e)});else if(this.isComposite()){var o=this.clone();if(t.isComposite()&&o.isComposite()&&o.isLinear()&&t.isLinear()){var a,u=function(e,t){for(var n in e.symbols){n=e.symbols[n];if(n.isComposite()&&u(n,t)||n.equals(t))return!0}return!1};for(a in t.symbols)if(!u(o,t.symbols[a]))return o.clone();r=d.add(d.subtract(o.clone(),t),n)}else r=new Fe(0),o.each(function(e){r=d.add(r,e.sub(t,n))})}else if(this.group===V)r=d.parse(this.value).sub(t,n);else if(this.group===H){for(var l=[],c=0;c<this.args.length;c++){var p=this.args[c];ne(p)||(p=d.parse(p)),l.push(p.sub(t,n))}r=d.symfunction(this.fname,l)}return r?(e||(e=this.group===V?this.power.sub(t,n):d.parse(this.power),r=d.pow(r,e)),r.multiplier=r.multiplier.multiply(s),r):this.clone()},isMonomial:function(){if(this.group===G)return!0;if(this.group!==X)return!1;for(var e in this.symbols)if(this.symbols[e].group!==G)return!1;return!0},isPi:function(){return this.group===G&&\"pi\"===this.value},sign:function(){return this.multiplier.sign()},isE:function(){return\"e\"===this.value},isSQRT:function(){return this.fname===z},isConstant:function(t,n){if(n&&this.group===X)for(var e in this.symbols)if(this.symbols[e].isConstant(!0))return!0;if(\"functions\"===t&&this.isComposite()){var r=!0;return this.each(function(e){e.isConstant(t,n)||(r=!1)},!0),r}if(\"all\"===t&&(this.isPi()||this.isE()))return!0;if(t&&this.group===H){for(var i=0;i<this.args.length;i++)if(!this.args[i].isConstant(t))return!1;return!0}return t?oe(this):this.value===l},isImaginary:function(){if(this.imaginary)return!0;if(this.symbols)for(var e in this.symbols)if(this.symbols[e].isImaginary())return!0;return!1},realpart:function(){if(this.isConstant())return this.clone();if(this.imaginary)return new Fe(0);if(this.isComposite()){var t=new Fe(0);return this.each(function(e){t=d.add(t,e.realpart())}),t}return this.isImaginary()?new Fe(0):this.clone()},imagpart:function(){if(this.group===G&&this.isImaginary())return new Fe(this.multiplier);if(this.isComposite()){var t=new Fe(0);return this.each(function(e){t=d.add(t,e.imagpart())}),t}return this.group===X?this.stripVar(D.IMAGINARY):new Fe(0)},isInteger:function(){return this.isConstant()&&this.multiplier.isInteger()},isLinear:function(e){if(e){if(this.isConstant())return!0;if(this.group===G)return this.value!==e||this.power.equals(1);if(this.isComposite()&&this.power.equals(1)){for(var t in this.symbols)if(!this.symbols[t].isLinear(e))return!1;return!0}return this.group===X&&this.symbols[e]?this.symbols[e].isLinear(e):!1}return this.power.equals(1)},containsFunction:function(e){if(\"string\"==typeof e&&(e=[e]),this.group===H&&-1!==e.indexOf(this.fname))return!0;if(this.symbols)for(var t in this.symbols)if(this.symbols[t].containsFunction(e))return!0;return!1},multiplyPower:function(e){if(this.group===F&&this.multiplier.equals(1))return this;var t,n=this.power;return this.group!==V&&e.group===F?(t=e.multiplier,this.group!==F||t.isInteger()||this.convert(B),this.power=n.equals(1)?t.clone():n.multiply(t),this.group===B&&ue(this.power)&&(this.value=Math.pow(this.value,this.power),this.toLinear(),this.convert(F))):(this.group!==V&&(n=new Fe(n),this.convert(V)),this.power=d.multiply(n,e)),this},setPower:function(e,t){return this.group===F&&this.multiplier.equals(1)||(this.group!==V||ne(e)?(n=!1,ne(e)&&(e.group===F?e=e.multiplier:n=!0),n=n?V:B,this.power=e,this.group===F&&n&&this.convert(n,t)):(this.group=this.previousGroup,delete this.previousGroup,this.group===F?(this.multiplier=new De(this.value),this.value=l):this.power=e)),this;var n},isInverse:function(){return this.group===V?this.power.multiplier.lessThan(0):this.power<0},clone:function(e){var t,n=e||new Fe(0),r=[\"value\",\"group\",\"length\",\"previousGroup\",\"imaginary\",\"fname\",\"args\",\"isInfinity\",\"scientific\"],i=r.length;if(this.symbols)for(var s in n.symbols={},this.symbols)n.symbols[s]=this.symbols[s].clone();for(t=0;t<i;t++)void 0!==this[r[t]]&&(n[r[t]]=this[r[t]]);return n.power=this.power.clone(),n.multiplier=this.multiplier.clone(),this.isConversion&&(n.isConversion=this.isConversion),this.isUnit&&(n.isUnit=this.isUnit),n},toUnitMultiplier:function(e){return this.multiplier.num=new S(this.multiplier.num.isNegative()&&e?-1:1),this.multiplier.den=new S(1),this},toLinear:function(){return this.power.equals(1)||this.setPower(new De(1)),this},each:function(e,t){if(this.symbols)for(var n in this.symbols){var r=this.symbols[n];if(r.group===j&&t)for(var i in r.symbols)e.call(n,r.symbols[i],i);else e.call(this,r,n)}else e.call(this,this,this.value)},valueOf:function(){return this.group===F?this.multiplier.valueOf():0===this.power?1:0===this.multiplier?0:Pe(this,\"decimals\")},contains:function(e,t){e=String(e);var n=this.group;if(this.value===e)return!0;if(this.symbols)for(var r in this.symbols)if(this.symbols[r].contains(e,t))return!0;if(n===H||this.previousGroup===H)for(var i=0;i<this.args.length;i++)if(this.args[i].contains(e,t))return!0;if(n===V){if(t&&this.power.contains(e,t))return!0;if(this.value===e)return!0}return this.value===e},negate:function(){return this.multiplier.negate(),this.group!==$&&this.group!==j||this.distributeMultiplier(),this},invert:function(e,t){return e||(this.multiplier=this.multiplier.invert()),ne(this.power)?this.power.negate():this.group===X&&t?this.each(function(e){return e.invert()}):this.power&&this.group!==F&&this.power.negate(),this},distributeMultiplier:function(e){e=e?this.power.absEquals(1):this.power.equals(1);if(this.symbols&&e&&this.group!==X&&!this.multiplier.equals(1)){for(var t in this.symbols){t=this.symbols[t];t.multiplier=t.multiplier.multiply(this.multiplier),t.distributeMultiplier()}this.toUnitMultiplier()}return this},distributeExponent:function(){if(!this.power.equals(1)){var e,t=this.power;for(e in this.symbols){var n=this.symbols[e];n.group===V?n.power=d.multiply(n.power,new Fe(t)):this.symbols[e].power=this.symbols[e].power.multiply(t)}this.toLinear()}return this},convert:function(e,t){var n;return H<e?(n=this.clone(),this.symbols={},(e===X?n:this).toUnitMultiplier(),this.group===H&&(n.args=this.args,delete this.args,delete this.fname),this.isImgSymbol&&delete this.isImgSymbol,this.toLinear(),this.symbols[n.keyForGroup(e)]=n,this.group=e,this.length=1):e===V?this.group===F&&this.multiplier.equals(1)||(this.group!==V&&(this.previousGroup=this.group),this.group===F?(this.value=this.multiplier.num.toString(),this.toUnitMultiplier()):this.value=Pe(this,\"hash\"),this.group=V):e===F?(n=this.multiplier.toDecimal(),this.symbols&&(this.symbols=void 0),new Fe(this.group===B?n*Math.pow(this.value,this.power):n).clone(this)):e===B&&this.group===F&&(this.value=t?this.multiplier.num.toString():Math.abs(this.multiplier.num.toString()),this.toUnitMultiplier(!t),this.group=B),this},insert:function(e,t){var n,r;return ne(e)||K(\"Object \"+e+\" is not of type Symbol!\"),this.symbols&&(r=this.group,H<r&&(r=(n=e.keyForGroup(r))in this.symbols&&this.symbols[n],\"add\"===t?(t=n,r?(this.symbols[t]=d.add(r,e),this.symbols[t].multiplier.equals(0)&&(delete this.symbols[t],this.length--,0===this.length&&(this.convert(F),this.multiplier=new De(0)))):(this.symbols[n]=e,this.length++)):(e.group===B&&ue(e.power)&&e.convert(F),e.group!==V?(this.multiplier=this.multiplier.multiply(e.multiplier),e.toUnitMultiplier()):(e.parens=e.multiplier.lessThan(0),this.multiplier=this.multiplier.multiply(e.multiplier.clone().abs()),e.toUnitMultiplier(!0)),r&&((e=d.multiply(we(this.symbols,n),e)).isConstant()&&(this.multiplier=this.multiplier.multiply(e.multiplier),e=new Fe(1)),this.length--),e.isOne(!0)?e.multiplier.lessThan(0)&&this.negate():(this.symbols[n]=e,this.length++)),0===this.length&&this.convert(F),this.group!==$&&this.group!==X||this.updateHash())),this},attach:function(e){if(ae(e)){for(var t=0;t<e.length;t++)this.insert(e[t],\"add\");return this}return this.insert(e,\"add\")},combine:function(e){if(ae(e)){for(var t=0;t<e.length;t++)this.insert(e[t],\"multiply\");return this}return this.insert(e,\"multiply\")},updateHash:function(){if(this.group!==F)if(this.group===H){for(var e=\"\",t=this.args,n=this.fname===Z,r=0;r<t.length;r++)e+=(0===r?\"\":\",\")+Pe(t[r]);var i=n?\"\":this.fname;this.value=i+(n?e:E(e))}else this.group!==G&&this.group!==j&&(this.value=Pe(this,\"hash\"))},keyForGroup:function(e){var t,n=this.group;if(n===F)t=this.value;else if(n===G||n===B)t=e===j?this.power.toDecimal():this.value;else if(n===H)t=e===j?this.power.toDecimal():Pe(this,\"hash\");else{if(n===j)return t=e===X?Pe(this,\"hash\"):e===$?this.power.equals(1)?this.value:E(Pe(this,\"hash\"))+D.POWER_OPERATOR+this.power.toDecimal():e===j?this.power.toString():this.value;n===$?(e===$&&(t=Pe(this,\"hash\")),t=e===j?this.power.toDecimal():this.value):n===X?t=e===j?this.power.toDecimal():Pe(this,\"hash\"):n===V&&(t=e===j?Pe(this.power):Pe(this,\"hash\"))}return t},collectSymbols:function(e,t,n,r){var i=[];if(this.symbols)for(var s in this.symbols){s=this.symbols[s];!r||s.group!==j&&s.group!==$?i.push(e?e(s,t):s):i=i.concat(s.collectSymbols())}else i.push(this);return i.sort(n=null===n?void 0:n)},latex:function(e){return Ge.latex(this,e)},text:function(e){return Pe(this,e)},isOne:function(e){return this.group===F?this.multiplier[e?\"absEquals\":\"equals\"](1):this.power.equals(0)},isComposite:function(){var e=this.group,t=this.previousGroup;return e===$||e===j||t===j||t===$},isCombination:function(){var e=this.group,t=this.previousGroup;return e===X||t===X},lessThan:function(e){return this.multiplier.lessThan(e)},greaterThan:function(e){return ne(e)||(e=new Fe(e)),!(!this.isConstant(!0)||!e.isConstant(!0))&&this.multiplier.greaterThan(e.multiplier)},getDenom:function(){var e=this.clone();if((e=this.group===X&&this.power.lessThan(0)?d.expand(e):e).power.lessThan(0)||e.group===V&&e.power.multiplier.lessThan(0)){var t,n=d.parse(e.multiplier.den);(t=e.toUnitMultiplier()).power.negate(),t=d.multiply(n,t)}else if(e.group===X)for(var r in t=d.parse(e.multiplier.den),e.symbols){var i=e.symbols[r];(i.power<0||i.group===V&&i.power.multiplier.lessThan(0))&&(t=d.multiply(t,e.symbols[r].clone().invert()))}else t=d.parse(e.multiplier.den);return t},getNum:function(){var t,e=this.clone();return(e=e.group===X&&e.power.lessThan(0)?d.expand(e):e).power.greaterThan(0)&&e.group!==X||e.group===V&&e.power.multiplier.greaterThan(0)?t=d.multiply(d.parse(e.multiplier.num),e.toUnitMultiplier()):e.group===X?(t=d.parse(e.multiplier.num),e.each(function(e){(0<e.power||e.group===V&&0<e.power.multiplier)&&(t=d.multiply(t,e.clone()))})):t=d.parse(e.multiplier.num),t},toString:function(){return this.text()}};var Be={convert:function(e,t){var n,r,i,s;return 0===e?s=[0,1]:e<1e-6||1e20<e?(n=this.quickConversion(Number(e)))[1]<=1e20?(i=e/(r=Math.abs(e)),(s=this.fullConversion(r.toFixed((n[1]+\"\").length-1)))[0]=s[0]*i):s=n:s=this.fullConversion(e),s},quickConversion:function(e){return function(e){T.isScientific(e)&&(e=y(e));var t=1===(n=(e=(n=\"\",\"-\"===(e=(t=\"string\"!=typeof(t=e)?t.toString():t).charAt(0))?(t=t.substr(1,t.length),n=\"-\"):\"+\"===e&&(t=t.substr(1,t.length)),{sign:n,value:t})).value.split(\".\")).length?n[0]:n[0]+n[1],n=n[1]?n[1].length:0,n=`1${\"0\".repeat(n)}`;return\"0\"!==t&&(t=t.replace(/^0+/,\"\")),[e.sign+t,n]}(e)},fullConversion:function(e){for(var t=!1,n=0,r=1,i=1,s=0,o=0,a=e;!t;){1e4<++o&&(t=!0);var u=Math.floor(a),l=n+u*i,c=r+u*s,u=a-u;u<1e-16&&(t=!0),a=1/u,n=i,r=s,i=l,s=c,(Math.abs(l/c-e)<1e-16||30<o)&&(t=!0)}return[l,c]}},Ge={parser:function(){var e,t=[\"classes\",\"setOperator\",\"getOperators\",\"getBrackets\",\"tokenize\",\"toRPN\",\"tree\",\"units\"],n=new P;for(e in n)-1===t.indexOf(e)&&delete n[e];return n.setOperator({precedence:8,operator:\"\\\\\",action:\"slash\",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}}),n.setOperator({precedence:8,operator:\"\\\\,\",action:\"slash_comma\",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}}),n.getBrackets()[\"{\"].maps_to=void 0,n}(),space:\"~\",dot:\" \\\\cdot \",latex:function(e,t){if((e=e.clone?e.clone():e)instanceof d.classes.Collection&&(e=e.elements),ae(e)){for(var n=[],r=0;r<e.length;r++){var i=e[r];ne(i)||(i=d.parse(i)),n.push(this.latex(i,t))}return this.brackets(n.join(\", \"),\"square\")}if(ie(e)){for(var s=\"\\\\begin{pmatrix}\\n\",r=0;r<e.elements.length;r++){for(var o=[],a=e.elements[r],u=0;u<a.length;u++)o.push(this.latex(a[u],t));s+=o.join(\" & \"),r<e.elements.length-1&&(s+=\"\\\\\\\\\\n\")}return s+=\"\\\\end{pmatrix}\"}if(re(e)){for(s=\"\\\\left[\",r=0;r<e.elements.length;r++)s+=this.latex(e.elements[r],t)+\" \"+(r!==e.elements.length-1?\",\\\\,\":\"\");return s+=\"\\\\right]\"}if(se(e)){for(s=\"\\\\{\",r=0;r<e.elements.length;r++)s+=this.latex(e.elements[r],t)+\" \"+(r!==e.elements.length-1?\",\\\\,\":\"\");return s+=\"\\\\}\"}var l,c=\"decimal\"===t||\"decimals\"===t,p=(e=e.clone()).power,f=A(p),h=e.multiplier.lessThan(0);if(e.group===B&&c)return String(e.multiplier.toDecimal()*Math.pow(e.value,e.power.toDecimal()));e.multiplier=e.multiplier.abs(),l=c?[String(e.multiplier.toDecimal()),\"\"]:[e.multiplier.num,e.multiplier.den];var m,g=this.value(e,f,t,h);f&&p.negate(),c?(m=ne(p)?Ge.latex(p,t):String(p.toDecimal()),\"1\"===String(m)&&(m=\"\")):m=ne(p)?this.latex(p,t):this.formatFrac(p,!0);p=[\"\",\"\"];return p[f?1:0]=m,((h?\"-\":\"\")+this.set(l,g,p,e.group===X)).replace(/\\+\\-/gi,\"-\")},greek:{alpha:\"\\\\alpha\",beta:\"\\\\beta\",gamma:\"\\\\gamma\",delta:\"\\\\delta\",epsilon:\"\\\\epsilon\",zeta:\"\\\\zeta\",eta:\"\\\\eta\",theta:\"\\\\theta\",iota:\"\\\\iota\",kappa:\"\\\\kappa\",lambda:\"\\\\lambda\",mu:\"\\\\mu\",nu:\"\\\\nu\",xi:\"\\\\xi\",omnikron:\"\\\\omnikron\",pi:\"\\\\pi\",rho:\"\\\\rho\",sigma:\"\\\\sigma\",tau:\"\\\\tau\",upsilon:\"\\\\upsilon\",phi:\"\\\\phi\",chi:\"\\\\chi\",psi:\"\\\\psi\",omega:\"\\\\omega\",Gamma:\"\\\\Gamma\",Delta:\"\\\\Delta\",Epsilon:\"\\\\Epsilon\",Theta:\"\\\\Theta\",Lambda:\"\\\\Lambda\",Xi:\"\\\\Xi\",Pi:\"\\\\Pi\",Sigma:\"\\\\Sigma\",Phi:\"\\\\Phi\",Psi:\"\\\\Psi\",Omega:\"\\\\Omega\"},symbols:{arccos:\"\\\\arccos\",cos:\"\\\\cos\",csc:\"\\\\csc\",exp:\"\\\\exp\",ker:\"\\\\ker\",limsup:\"\\\\limsup\",min:\"\\\\min\",sinh:\"\\\\sinh\",arcsin:\"\\\\arcsin\",cosh:\"\\\\cosh\",deg:\"\\\\deg\",gcd:\"\\\\gcd\",lg:\"\\\\lg\",ln:\"\\\\ln\",Pr:\"\\\\Pr\",sqrt:\"\\\\sqrt\",sup:\"\\\\sup\",arctan:\"\\\\arctan\",cot:\"\\\\cot\",det:\"\\\\det\",hom:\"\\\\hom\",lim:\"\\\\lim\",log:\"\\\\log\",LN:\"\\\\LN\",sec:\"\\\\sec\",tan:\"\\\\tan\",arg:\"\\\\arg\",coth:\"\\\\coth\",dim:\"\\\\dim\",inf:\"\\\\inf\",liminf:\"\\\\liminf\",max:\"\\\\max\",sin:\"\\\\sin\",tanh:\"\\\\tanh\"},value:function(n,e,r,t){var i,s,o,a,u,l,c=n.group,p=n.previousGroup,f=[\"\",\"\"],h=e?1:0;if(n.isInfinity)f[h]=\"\\\\infty\";else if(c===G||c===B||p===G||p===B||p===F){(x=this.formatSubscripts(n.value)).replace&&(x=x.replace(/(.+)_$/,\"$1\\\\_\"));var m=String(x).split(\"_\"),e=this.greek[m[0]];e&&(m[0]=e,x=m.join(\"_\")),(n=this.symbols[m[0]])&&(m[0]=n,x=m.join(\"_\")),f[h]=x}else if(c===H||p===H){for(var g,d,v,w,y=[],m=n.fname,b=0;b<n.args.length;b++){var S,M=\"string\"==typeof(S=n.args[b])?S:this.latex(S,r);y.push(M)}m===z?f[h]=\"\\\\sqrt\"+this.braces(y.join(\",\")):m===Q?f[h]=this.brackets(y.join(\",\"),\"abs\"):m===Z?f[h]=this.brackets(y.join(\",\"),\"parens\"):\"limit\"===m?f[h]=\" \\\\lim\\\\limits_{\"+y[1]+\" \\\\to \"+y[2]+\"} \"+y[0]:\"integrate\"===m?f[h]=\"\\\\int\"+this.braces(y[0])+this.braces(\"d\"+y[1]):\"defint\"===m?f[h]=\"\\\\int\\\\limits_\"+this.braces(y[1])+\"^\"+this.braces(y[2])+\" \"+y[0]+\" d\"+y[3]:m===Y||m===W?((S=n.args[0]).power.equals(1)&&(S.isComposite()||S.isCombination())&&(y[0]=this.brackets(y[0])),f[h]=y[0]+(m===Y?\"!\":\"!!\")):\"floor\"===m?f[h]=\"\\\\left \\\\lfloor\"+this.braces(y[0])+\"\\\\right \\\\rfloor\":\"ceil\"===m?f[h]=\"\\\\left \\\\lceil\"+this.braces(y[0])+\"\\\\right \\\\rceil\":m===D.LOG&&1<y.length?f[h]=\"\\\\mathrm\"+this.braces(D.LOG)+\"_\"+this.braces(y[1])+this.brackets(y[0]):m===D.LOG10?f[h]=\"\\\\mathrm\"+this.braces(D.LOG)+\"_\"+this.braces(10)+this.brackets(y[0]):\"sum\"===m?(g=y[0],d=y[1],v=y[2],w=y[3],f[h]=\"\\\\sum\\\\limits_{\"+this.braces(d)+\"=\"+this.braces(v)+\"}^\"+this.braces(w)+\" \"+this.braces(g)):\"product\"===m?(g=y[0],d=y[1],v=y[2],w=y[3],f[h]=\"\\\\prod\\\\limits_{\"+this.braces(d)+\"=\"+this.braces(v)+\"}^\"+this.braces(w)+\" \"+this.braces(g)):\"nthroot\"===m?f[h]=\"\\\\sqrt[\"+y[1]+\"]\"+this.braces(y[0]):\"mod\"===m?f[h]=y[0]+\" \\\\bmod \"+y[1]:\"realpart\"===m?f[h]=\"\\\\operatorname{Re}\"+this.brackets(y[0]):\"imagpart\"===m?f[h]=\"\\\\operatorname{Im}\"+this.brackets(y[0]):(m=\"\"!==m?\"\\\\mathrm\"+this.braces(m.replace(/_/g,\"\\\\_\")):\"\",n.isConversion?f[h]=m+this.brackets(y.join(\"\"),\"parens\"):f[h]=m+this.brackets(y.join(\",\"),\"parens\"))}else if(n.isComposite()){for(var N=n.collectSymbols().sort(c===$||p===$?function(e,t){return t.group-e.group}:function(e,t){e=ne(e.power)?-1:e.power;return(ne(t.power)?-1:t.power)-e}),E=[],q=N.length,b=0;b<q;b++)E.push(Ge.latex(N[b],r));var x=E.join(\"+\");f[h]=n.isLinear()&&n.multiplier.equals(1)&&!t?x:this.brackets(x,\"parens\")}else c!==X&&p!==V&&p!==X||(c===X&&n.distributeExponent(),i=[],s=[],o=[],a=[],l=u=0,c=function(e,t,n){if(1<n&&0<t.length)for(var r=t.length,i=0;i<r;i++){var s=t[i],o=e[s];/^\\\\left\\(.+\\\\right\\)\\^\\{.+\\}$/g.test(o)||/^\\\\left\\(.+\\\\right\\)$/g.test(o)||(e[s]=Ge.brackets(o,\"parens\"))}return e},n.each(function(e){var t;A(e.power)?(t=Ge.latex(e.invert(),r),l++,e.isComposite()&&(1!=n.multiplier.den&&1==Math.abs(e.power)&&(t=Ge.brackets(t,\"parens\")),o.push(i.length)),i.push(t)):(t=Ge.latex(e,r),u++,e.isComposite()&&(1!=n.multiplier.num&&1==Math.abs(e.power)&&(t=Ge.brackets(t,\"parens\")),a.push(s.length)),s.push(t))}),c(s,a,u),f[0]=s.join(this.dot),c(i,o,l),f[1]=i.join(this.dot));return f},set:function(e,t,n,r){function i(e){return/^\\\\left\\(.+\\\\right\\)$/.test(e)}var s;n=n&&this.formatP(n),r&&(s=n[0],n[0]=\"\"),t=this.merge(t,n);var o=e[0],n=e[1],e=t[0],t=t[1];e&&1===Number(o)&&(o=\"\"),1===Number(n)&&(n=\"\");e=this.join(o,e,i(e)?\"\":this.dot),t=this.join(n,t,i(t)?\"\":this.dot);if(e&&t){t=this.frac(e,t);return t=r&&s?this.brackets(t)+s:t}return e},merge:function(e,t){for(var n=[],r=0;r<2;r++)n[r]=e[r]+t[r];return n},join:function(e,t,n){return e||t?e&&!t?e:t&&!e?t:e+n+t:\"\"},formatSubscripts:function(e){for(var t=e.toString().split(\"_\"),n=\"\";1<t.length;)0<t.length&&(n=\"_\"+this.braces(t.pop()+n));return t[0]+n},formatP:function(e){for(var t=0;t<2;t++){var n=e[t];n&&(e[t]=\"^\"+this.braces(n))}return e},formatFrac:function(e,t){var n=e.num.toString(),e=e.den.toString();return t&&\"1\"===n&&\"1\"===e?\"\":\"1\"===e?n:this.frac(n,e)},frac:function(e,t){return\"\\\\frac\"+this.braces(e)+this.braces(t)},braces:function(e){return\"{\"+e+\"}\"},brackets:function(e,t){t={parens:[\"(\",\")\"],square:[\"[\",\"]\"],brace:[\"{\",\"}\"],abs:[\"|\",\"|\"],angle:[\"\\\\langle\",\"\\\\rangle\"]}[t=t||\"parens\"];return\"\\\\left\"+t[0]+e+\"\\\\right\"+t[1]},filterTokens:function(e){var t=[];ae(e)&&(t.type=e.type);for(var n=[\"\\\\\",\"left\",\"right\",\"big\",\"Big\",\"large\",\"Large\"],r=0,i=e.length;r<i;r++){var s=e[r],o=e[r+1];\"\\\\\"===s.value&&\"\\\\\"===o.value?t.push(s):ae(s)?t.push(Ge.filterTokens(s)):-1===n.indexOf(s.value)&&t.push(s)}return t},parse:function(e){function t(e){return s[void 0===e?++a:a+=e]}function n(){return Ge.parse(t())}function r(e){return e in o?o[e]:\"*\"===e&&\"&\"===s[a+1].value?(t(2),\",\"):\"&\"===e?(t(),\",\"):\"\\\\\"===e?\"],[\":e}var i=\"\",s=this.filterTokens(e),o={cdot:\"\",times:\"\",infty:\"Infinity\"},a=0;for(u=s.length;a<u;a++){var u,l,c,p,f,h,m,g=s[a];\"frac\"===g.value?i+=n()+\"/\"+n():g.value in Ge.symbols?g.value===z&&\"vector\"===s[a+1].type&&\"Set\"===s[a+2].type?(f=n(),i+=n()+\"^\"+E(\"1/\"+f)):i+=g.value+n():\"int\"===g.value?(h=n(),a++,c=r((c=t().value).substring(1,c.length)),i+=\"integrate\"+E(h+\",\"+c)):\"int_\"===g.value?(u=n(),a++,void 0===(l=t().value)&&(a--,l=n()),h=n(),\"differentialD\"===(c=\",\"===(c=t().value)?t().value:c)&&(a++,c=t().value),\"mathrm\"===c&&(a++,c=t().value),i+=\"defint\"+E(h+\",\"+u+\",\"+l+\",\"+c)):g.value&&g.value.startsWith(\"int_\")?(u=g.value.replace(\"int_\",\"\"),console.log(\"uppernow\"),a++,void 0===(l=t().value)&&(a--,l=n()),h=n(),\"differentialD\"===(c=\",\"===(c=t().value)?t().value:c)&&(a++,c=t().value),\"mathrm\"===c&&(a++,c=t().value),i+=\"defint\"+E(h+\",\"+u+\",\"+l+\",\"+c)):\"mathrm\"===g.value?i+=(h=s[++a][0].value)+n():\"sum_\"===g.value||\"prod_\"===g.value?(p=\"sum_\"===g.value?\"sum\":\"product\",m=t(),a++,f=n(),h=n(),i+=p+E([h,r(m[0]),r(m[2]),r(f)].join(\",\"))):\"lim_\"===g.value?(m=t(),i+=\"limit\"+E([n(),r(m[0]),r(m[2])].join(\",\"))):\"begin\"===g.value?(m=t(),Array.isArray(m)&&\"matrix\"===m[0].value&&(i+=\"matrix([\")):\"end\"===g.value?(m=t(),Array.isArray(m)&&\"matrix\"===m[0].value&&(i+=\"])\")):Array.isArray(g)?i+=r(Ge.parse(g)):i+=r(g.value.toString())}return E(i)}};function Ve(e){re(e)?this.elements=e.items.slice(0):ae(e)?this.elements=e.slice(0):this.elements=[].slice.call(arguments)}function He(){var e=arguments,t=e.length,n=[];if(ie(e))for(o=0;o<t;o++)n.push(e[o].slice(0));else for(var r,i,s,o=0;o<t;o++)r=e[o],re(r)&&(r=r.elements),s=(r=!ae(r)?[r]:r).length,i&&i!==s&&K(\"Unable to create Matrix. Row dimensions do not match!\"),n.push(r),i=s;this.elements=n}function je(e){if(this.elements=[],e=!re(e)?Ve.fromArray(arguments):e)for(var t=e.elements,n=0,r=t.length;n<r;n++)this.add(t[n])}Ve.arrayPrefill=function(e,t){var n=[];t=t||0;for(var r=0;r<e;r++)n[r]=t;return n},Ve.fromArray=function(e){var t=new Ve;return t.elements=e,t},Ve.fromSet=function(e){return Ve.fromArray(e.elements)},Ve.prototype={custom:!0,e:function(e){return e<1||e>this.elements.length?null:this.elements[e-1]},set:function(e,t){ne(t)||(t=new Fe(t)),this.elements[e]=t},dimensions:function(){return this.elements.length},modulus:function(){return ye(\"SAFE\",function(){return d.pow(this.dot(this.clone()),new Fe(.5))},void 0,this)},eql:function(e){var t=this.elements.length,n=e.elements||e;if(t!==n.length)return!1;do{if(Math.abs(d.subtract(this.elements[t-1],n[t-1]).valueOf())>PRECISION)return!1}while(--t);return!0},clone:function(){for(var e=new Ve,t=this.elements.length,n=0;n<t;n++)e.elements.push(this.elements[n].clone());return this.getter&&(e.getter=this.getter.clone()),e},map:function(n){var r=[];return this.each(function(e,t){r.push(n(e,t))}),new Ve(r)},each:function(e){for(var t,n=this.elements.length,r=n;e(this.elements[t=r-n],1+t),--n;);},toUnitVector:function(){return ye(\"SAFE\",function(){var t=this.modulus();return 0===t.valueOf()?this.clone():this.map(function(e){return d.divide(e,t)})},void 0,this)},angleFrom:function(o){return ye(\"SAFE\",function(){var n=o.elements||o;if(this.elements.length!==n.length)return null;var r=new Fe(0),i=new Fe(0),s=new Fe(0);this.each(function(e,t){r=d.add(r,d.multiply(e,n[t-1])),i=d.add(i,d.multiply(e,e)),s=d.add(s,d.multiply(n[t-1],n[t-1]))});var i=d.pow(i,new Fe(.5)),s=d.pow(s,new Fe(.5)),e=d.multiply(i,s);if(0===e.valueOf())return null;var t=d.divide(r,e),e=t.valueOf();return e<-1&&(t=-1),1<e&&(t=1),new Fe(Math.acos(t))},void 0,this)},isParallelTo:function(e){e=this.angleFrom(e).valueOf();return null===e?null:e<=PRECISION},isAntiparallelTo:function(e){e=this.angleFrom(e).valueOf();return null===e?null:Math.abs(e-Math.PI)<=PRECISION},isPerpendicularTo:function(e){e=this.dot(e);return null===e?null:Math.abs(e)<=PRECISION},add:function(e){return ye(\"SAFE\",function(){var n=e.elements||e;return this.elements.length!==n.length?null:this.map(function(e,t){return d.add(e,n[t-1])})},void 0,this)},subtract:function(e){return ye(\"SAFE\",function(){var n=e.elements||e;return this.elements.length!==n.length?null:this.map(function(e,t){return d.subtract(e,n[t-1])})},void 0,this)},multiply:function(t){return this.map(function(e){return e.clone()*t.clone()})},x:function(e){return this.multiply(e)},dot:function(r){return ye(\"SAFE\",function(){var e=r.elements||r,t=new Fe(0),n=this.elements.length;if(n!==e.length)return null;for(;t=d.add(t,d.multiply(this.elements[n-1],e[n-1])),--n;);return t},void 0,this)},cross:function(e){var t=e.elements||e;if(3!==this.elements.length||3!==t.length)return null;var n=this.elements;return ye(\"SAFE\",function(){return new Ve([d.subtract(d.multiply(n[1],t[2]),d.multiply(n[2],t[1])),d.subtract(d.multiply(n[2],t[0]),d.multiply(n[0],t[2])),d.subtract(d.multiply(n[0],t[1]),d.multiply(n[1],t[0]))])},void 0,this)},max:function(){for(var e,t=0,n=this.elements.length,r=n;e=r-n,Math.abs(this.elements[e].valueOf())>Math.abs(t.valueOf())&&(t=this.elements[e]),--n;);return t},magnitude:function(){var t=new Fe(0);return this.each(function(e){t=d.add(t,d.pow(e,new Fe(2)))}),d.sqrt(t)},indexOf:function(e){for(var t,n=null,r=this.elements.length,i=r;t=i-r,null===n&&this.elements[t].valueOf()===e.valueOf()&&(n=1+t),--r;);return n},text:function(e){return Pe(this)},toString:function(){return this.text()},latex:function(e){for(var t=[],n=0;n<this.elements.length;n++)t.push(Ge.latex.call(Ge,this.elements[n],e));return\"[\"+t.join(\", \")+\"]\"}},He.identity=function(e){for(var t=new He,n=0;n<e;n++){t.elements.push([]);for(var r=0;r<e;r++)t.set(n,r,new Fe(n===r?1:0))}return t},He.fromArray=function(e){function t(e){return He.apply(this,e)}return t.prototype=He.prototype,new t(e)},He.zeroMatrix=function(e,t){for(var n=new He,r=0;r<e;r++)n.elements.push(Ve.arrayPrefill(t,new Fe(0)));return n},(He.prototype={custom:!0,get:function(e,t){if(this.elements[e])return this.elements[e][t]},map:function(r,i){var s=new He;return this.each(function(e,t,n){s.set(t,n,r.call(s,e),i)}),s},set:function(e,t,n,r){this.elements[e]||(this.elements[e]=[]),this.elements[e][t]=r||ne(n)?n:new Fe(n)},cols:function(){return this.elements[0].length},rows:function(){return this.elements.length},row:function(e){return!e||e>this.cols()?[]:this.elements[e-1]},col:function(e){var t=this.rows(),n=[];if(e>this.cols()||!e)return n;for(var r=0;r<t;r++)n.push(this.elements[r][e-1]);return n},eachElement:function(e){for(var t,n=this.rows(),r=this.cols(),i=0;i<n;i++)for(t=0;t<r;t++)e.call(this,this.elements[i][t],i,t)},determinant:function(){if(!this.isSquare())return null;for(var e,t=this.toRightTriangular(),n=t.elements[0][0],r=t.elements.length-1,i=r;n=d.multiply(n,t.elements[e=i-r+1][e]),--r;);return n},isSquare:function(){return this.elements.length===this.elements[0].length},isSingular:function(){return this.isSquare()&&0===this.determinant()},augment:function(e){var t=this.rows();t!==e.rows()&&K(\"Cannot augment matrix. Rows don't match.\");for(var n=0;n<t;n++)this.elements[n]=this.elements[n].concat(e.elements[n]);return this},clone:function(){for(var e=this.rows(),t=this.cols(),n=new He,r=0;r<e;r++){n.elements[r]=[];for(var i=0;i<t;i++){var s=this.elements[r][i];n.elements[r][i]=ne(s)?s.clone():s}}return n},invert:function(){return this.isSquare()||K(\"Matrix is not square!\"),ye(\"SAFE\",function(){var e,t,n,r,i,s,o,a=this.elements.length,u=a,l=He.identity(a),c=this.augment(l).toRightTriangular(),p=c.elements[0].length,f=[];do{for(i=[],n=p,f[e=a-1]=[],s=c.elements[e][e];o=d.divide(c.elements[e][r=p-n],s.clone()),i.push(o),u<=r&&f[e].push(o),--n;);for(c.elements[e]=i,t=0;t<e;t++){for(i=[],n=p;i.push(d.subtract(c.elements[t][r=p-n].clone(),d.multiply(c.elements[e][r].clone(),c.elements[t][e].clone()))),--n;);c.elements[t]=i}}while(--a);return He.fromArray(f)},void 0,this)},toRightTriangular:function(){return ye(\"SAFE\",function(){var e,t,n,r=this.clone(),i=this.elements.length,s=i,o=this.elements[0].length;do{if(0===r.elements[t=s-i][t].valueOf())for(var a=1+t;a<s;a++)if((e=r.elements[a][t])&&0!==e.valueOf()){for(l=[],c=o;l.push(d.add(r.elements[t][n=o-c].clone(),r.elements[a][n].clone())),--c;);r.elements[t]=l;break}if(0!==r.elements[t][t].valueOf())for(a=1+t;a<s;a++){for(var u=d.divide(r.elements[a][t].clone(),r.elements[t][t].clone()),l=[],c=o;l.push((n=o-c)<=t?new Fe(0):d.subtract(r.elements[a][n].clone(),d.multiply(r.elements[t][n].clone(),u.clone()))),--c;);r.elements[a]=l}}while(--i);return r},void 0,this)},transpose:function(){var e,t,n,r=this.elements.length,i=this.elements[0].length,s=new He,o=i;do{for(s.elements[e=i-o]=[],t=r;s.elements[e][n=r-t]=this.elements[n][e].clone(),--t;);}while(--o);return s},canMultiplyFromLeft:function(e){e=(ie(e)?e.elements:e).length;return this.elements[0].length===e},sameSize:function(e){return this.rows()===e.rows()&&this.cols()===e.cols()},multiply:function(g){return ye(\"SAFE\",function(){var e=g.elements||g;if(!this.canMultiplyFromLeft(e)){if(this.sameSize(g)){for(var t=new He,n=this.rows(),r=0;r<n;r++){var i=d.multiply(new Ve(this.elements[r]),new Ve(g.elements[r]));t.elements[r]=i.elements}return t}return null}var s,o,a,u,l,c=this.elements.length,p=c,f=e[0].length,h=this.elements[0].length,m=[];do{m[r=p-c]=[],s=f;do{for(o=f-s,a=new Fe(0),u=h;a=d.add(a,d.multiply(this.elements[r][l=h-u],e[l][o])),--u;);}while(m[r][o]=a,--s)}while(--c);return He.fromArray(m)},void 0,this)},add:function(i,s){var o=new He;return this.sameSize(i)&&this.eachElement(function(e,t,n){var r=d.add(e.clone(),i.elements[t][n].clone());s&&(r=s.call(o,r,e,i.elements[t][n])),o.set(t,n,r)}),o},subtract:function(i,s){var o=new He;return this.sameSize(i)&&this.eachElement(function(e,t,n){var r=d.subtract(e.clone(),i.elements[t][n].clone());s&&(r=s.call(o,r,e,i.elements[t][n])),o.set(t,n,r)}),o},negate:function(){return this.each(function(e){return e.negate()}),this},toVector:function(){if(1!==this.rows()&&1!==this.cols())return this;var e=new Ve;return e.elements=this.elements,e},toString:function(e,n){var t=this.rows(),r=[];for(var i=0;i<t;i++)r.push(\"[\"+this.elements[i].map(function(e){var t=n?e.multiplier.toDecimal():e.toString();return void 0!==e?t:\"\"}).join(\",\")+\"]\");return\"matrix\"+E(r.join(\",\"))},text:function(){return\"matrix(\"+this.elements.toString(\"\")+\")\"},latex:function(i){var s=this.cols(),o=this.elements;return ce(\"\\\\begin{vmatrix}{0}\\\\end{vmatrix}\",function(){var e,t=[];for(e in o){for(var n=[],r=0;r<s;r++)n.push(Ge.latex.call(Ge,o[e][r],i));t.push(n.join(\" & \"))}return t.join(\" \\\\cr \")})}}).each=He.prototype.eachElement,je.fromArray=function(e){function t(e){return je.apply(this,e)}return t.prototype=je.prototype,new t(e)},je.prototype={add:function(e){this.contains(e)||this.elements.push(e.clone())},contains:function(e){for(var t=0;t<this.elements.length;t++){var n=this.elements[t];if(e.equals(n))return!0}return!1},each:function(e){for(var t=this.elements,n=new je,r=0,i=t.length;r<i;r++){var s=t[r];e.call(this,s,n,r)}return n},clone:function(){var t=new je;return this.each(function(e){t.add(e.clone())}),t},union:function(e){var t=this.clone();return e.each(function(e){t.add(e)}),t},difference:function(e){var t=this.clone();return e.each(function(e){t.remove(e)}),t},remove:function(e){for(var t=0,n=this.elements.length;t<n;t++)if(this.elements[t].equals(e))return we(this.elements,t),!0;return!1},intersection:function(e){var t=new je,n=this;return e.each(function(e){n.contains(e)&&t.add(e)}),t},intersects:function(e){return 0<this.intersection(e).elements.length},is_subset:function(e){for(var t=e.elements,n=0,r=t.length;n<r;n++)if(!this.contains(t[n]))return!1;return!0},toString:function(){return\"{\"+this.elements.join(\",\")+\"}\"}};var Xe={dependencies:{_rename:{\"Math2.factorial\":\"factorial\"},factorial:{\"Math2.gamma\":Te.gamma},gamma_incomplete:{\"Math2.factorial\":Te.factorial},Li:{\"Math2.Ei\":Te.Ei,\"Math2.bigLog\":Te.bigLog,Frac:De},Ci:{\"Math2.factorial\":Te.factorial},Ei:{\"Math2.factorial\":Te.factorial},Si:{\"Math2.factorial\":Te.factorial},Shi:{\"Math2.factorial\":Te.factorial},Chi:{isInt:ue,nround:me,\"Math2.num_integrate\":Te.num_integrate},factor:{\"Math2.ifactor\":Te.ifactor,Symbol:Fe},num_integrate:{\"Math2.simpson\":Te.simpson,nround:me},fib:{even:ge}},reformat:{diff:function(e,t){var n=e.args[1].toString(),e=\"var f = \"+Xe.build(e.args[0].toString(),[n])+\";\";return t[1]+=\"var diff = \"+Te.diff.toString()+\";\",t[1]+=e,[\"diff(f)(\"+n+\")\",t]}},getProperName:function(e){return{continued_fraction:\"continuedFraction\"}[e]||e},compileDependencies:function(e,t){var n,r,i=Xe.dependencies[e],s=t&&t[1]?t[1]:\"\",o=t&&t[0]?t[0]:{};for(n in i)\"object\"!=typeof i[n]&&(s+=\"var \"+(1<(r=n.split(\".\")).length?r[1]:r[0])+\"=\"+i[n]+\";\",o[n]=r.pop());return[o,s]},getArgsDeps:function(e,t){for(var n=e.args,r=0;r<n.length;r++)e.args[r].each(function(e){e.group===H&&(t=Xe.compileDependencies(e.fname,t))});return t},build:function(e,t){e=ye(\"PARSE2NUMBER\",function(){return d.parse(e)},!0);var n=b(e),l=[],c=[],p=function(s,o){\"\"===s.fname&&(s=Fe.unwrapPARENS(s)),o=o||[];function e(e){return e=e in Math?\"Math.\"+e:(e=Xe.getProperName(e),-1===l.indexOf(e)&&(o.push(\"var \"+e+\" = \"+Te[e].toString()+\"; \"),l.push(e)),e),e+=E(s.args.map(function(e){return p(e,o)[0]}).join(\",\"))}var t,n,r=[],i=s.group,a=\"\",u=function(e){var t,e=e===X?\"*\":\"+\",n=[];for(t in s.symbols){var r=s.symbols[t],i=p(r,o)[0];r.isComposite()&&(i=E(i)),n.push(i)}e=n.join(e);return e=e&&!s.multiplier.equals(1)?E(e):e};return i===F?r.push(s.multiplier.toDecimal()):s.multiplier.equals(-1)?a=\"-\":s.multiplier.equals(1)||r.push(s.multiplier.toDecimal()),i===G||i===B?t=s.value:i===H?(c=Xe.compileDependencies(s.fname,c),c=Xe.getArgsDeps(s,c),t=Xe.reformat[s.fname]?(n=Xe.reformat[s.fname](s,c),c=n[1],n[0]):e(s.fname)):i===V?(i=s.previousGroup)===F||i===G?t=s.value:i===H?(t=e(s.fname),c=Xe.compileDependencies(s.fname,c),c=Xe.getArgsDeps(s,c)):t=u(s.previousGroup):t=u(s.group),s.group===F||s.power.equals(1)||(u=p(d.parse(s.power)),o.push(u[1]),t=\"Math.pow\"+E(t+\",\"+u[0])),t&&r.push(a+t),[r.join(\"*\"),o.join(\"\").replace(/\\n+\\s+/g,\" \")]};t&&(n=t);var r,i=p(e);for(r in c[0]){var s=c[0][r];i[1]=i[1].replace(r,s),c[1]=c[1].replace(r,s)}return new Function(n,(c[1]||\"\")+i[1]+\" return \"+i[0]+\";\")}};x(d.CONSTANTS),x(d.functions),d.initConstants(),d.error||(d.error=K),D.LOG_FNS={log:d.functions.log,log10:d.functions.log10};function $e(n,e,r,t){var i=!1,s=/^([a-z_][a-z\\d\\_]*)\\(([a-z_,\\s]*)\\):=(.+)$/gi.exec(n);return s?nerdamer.setFunction(s[1],s[2].split(\",\"),s[3]):(n instanceof R&&(n=n.toString()),(r=!ae(r)?void 0===r?[]:[r]:r).forEach(function(e){var t;\"numer\"!==e?(t=d.functions[r])&&1===t[1]&&(n=`${e}(${n})`):i=!0}),s=ye(\"PARSE2NUMBER\",function(){return d.parse(n,e)},i||D.PARSE2NUMBER),t?p[t-1]=s:p.push(s),new R(s))}var x={allSame:w,allNumeric:function(e){for(var t=0;t<e.length;t++)if(!te(e[t]))return!1;return!0},arguments2Array:be,arrayAddSlices:function(e,t){t=t||20;var n=[];n.push(e[0]);for(var r=0;r<e.length-1;r++)for(var i=e[r],s=(e[r+1]-i)/t,o=0;o<t;o++)n.push(i+=s);return n},arrayClone:function(e){for(var t=[],n=e.length,r=0;r<n;r++)t[r]=e[r].clone();return t},arrayMax:function(e){return Math.max.apply(void 0,e)},arrayMin:c,arrayEqual:function(e,t){if(e.sort(),t.sort(),e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0},arrayUnique:a,arrayGetVariables:function(e){for(var t=b(e[0],null,null,!0),n=1,r=e.length;n<r;n++)t=t.concat(b(e[n]));return t=a(t).sort()},arraySum:function(e,t){for(var n=new Fe(0),r=0;r<e.length;r++)var i=e[r],n=d.add(n,ne(i)?i:d.parse(i));return t?Number(n):n},block:ye,build:Xe.build,clearU:function(e){e=f.indexOf(e);-1!==e&&(f[e]=void 0)},comboSort:function(e,t){for(var n=e.length,r=[],i=0;i<e.length;i++)r.push([e[i],t[i]]);r.sort(function(e,t){return e[0]-t[0]});for(var s=[],o=[],i=0;i<n;i++)s.push(r[i][0]),o.push(r[i][1]);return[s,o]},compare:function(e,t,n){for(var r,i={},s=0;s<n.length;s++)i[n[s]]=new Fe(Math.floor(5*Math.random())+1);return ye(\"PARSE2NUMBER\",function(){r=d.parse(e,i).equals(d.parse(t,i))}),r},convertToVector:C,customError:n,customType:function(e){return void 0!==e&&e.custom},decompose_fn:he,each:s,evaluate:Se,even:ge,evenFraction:de,fillHoles:function(e,t){t=t||e.length;for(var n=0;n<t;n++)e[n]||(e[n]=new Fe(0));return e},firstObject:pe,format:ce,generatePrimes:u,getCoeffs:function(e,r,t){var i=[];e.each(function(e){var t,n=e.contains(r)?(t=e.stripVar(r),d.divide(e.clone(),t.clone()).power.toDecimal()):(t=e,0),e=i[n];i[n]=e?d.add(e,t):t},!0);for(var n=0;n<i.length;n++)i[n]||(i[n]=new Fe(0));return i},getU:function(e){for(var t=\"u\",n=0,r=b(e);-1!==f.indexOf(t)||-1!==r.indexOf(t);)t=\"u\"+n++;for(var i=0,s=f.length;i<=s;i++)if(!f[i]){f[i]=t;break}return t},importFunctions:function(){var e,t={};for(e in d.functions)t[e]=d.functions[e][0];return t},inBrackets:E,isArray:ae,isExpression:i,isFraction:v,isInt:ue,isMatrix:ie,isNegative:A,isNumericSymbol:oe,isPrime:g,isReserved:r,isSymbol:ne,isVariableSymbol:function(e){return e.group===G&&e.multiplier.equals(1)&&e.power.equals(1)},isVector:re,keys:q,knownVariable:function(e,t){var n={};return n[e]=t,n},nroots:function(e){var t,n;if(e.group===H&&\"\"===e.fname?(t=Fe.unwrapPARENS(d.parse(e).toLinear()),n=d.parse(e.power)):e.group===B&&(t=d.parse(e.value),n=d.parse(e.power)),t&&n&&t.group===F&&n.group===F&&t.multiplier.isNegative()){for(var r=[],i=Fe.toPolarFormArray(Se(e))[0],s=d.arg(t),o=n.multiplier.den.toString(),a=n.multiplier.num.toString(),u=0;u<o;u++){var l=Se(d.parse(ce(\"(({0})+2*pi*({1}))/({2})\",s,u,o))).multiplier.toDecimal();r.push(Se(d.parse(ce(\"(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})\",i,o,D.IMAGINARY,l,a))))}return Ve.fromArray(r)}return e.isConstant(!0,!0)?(t=e.sign(),s=Se(e.abs()),r=[(n=d.sqrt(s)).clone(),n.negate()],t<0&&(r=r.map(function(e){return d.multiply(e,Fe.imaginary())}))):r=[d.parse(e)],Ve.fromArray(r)},remove:we,reserveNames:x,range:function(e,t,n){var r=[];n=n||1;for(var i=e;i<=t;i++)r.push(i*n);return r},round:me,sameSign:function(e,t){return e<0==t<0},scientificToDecimal:y,separate:N,stringReplace:function(e,t,n,r){return e.substr(0,t)+r+e.substr(n,e.length)},text:Pe,validateName:m,variables:b,warn:ee},Ze={groups:t,Symbol:Fe,Expression:R,Frac:De,Vector:Ve,Matrix:He,Parser:P,Scientific:T,Fraction:Be,Math2:Te,LaTeX:Ge,Utils:x,PARSER:d,PARENTHESIS:Z,Settings:D,err:K,bigInt:S,bigDec:k,exceptions:e};return $e.rpn=function(e){return d.tokenize(d.toRPN(e))},$e.convertToLaTeX=function(e,t){return d.toTeX(e,t)},$e.convertFromLaTeX=function(e){e=Ge.parse(d.tokenize(e));return new R(d.parse(e))},$e.version=function(t){if(t)try{return Ze[t].version}catch(e){return\"No module named \"+t+\" found!\"}return\"1.1.13\"},$e.getWarnings=function(){return h},$e.setConstant=function(e,t){if(m(e),!r(e))if(\"delete\"===t||\"\"===t)delete d.CONSTANTS[e];else{if(isNaN(t))throw new I(\"Constant must be a number!\");d.CONSTANTS[e]=t}return this},$e.getConstant=function(e){return String(d.constant[e])},$e.setFunction=fe,$e.getCore=function(){return Ze},$e.getExpression=$e.getEquation=R.getExpression,$e.reserved=function(e){return e?f:f.join(\", \")},$e.clear=function(e,t){return\"all\"===e?p=[]:\"last\"===e?p.pop():\"first\"===e?p.shift():(e=e?e-1:p.length,!0===t?p[e]=void 0:we(p,e)),this},$e.flush=function(){return this.clear(\"all\"),this},$e.expressions=function(e,t,n){for(var r=e?{}:[],i=0;i<p.length;i++){var s=t?Ge.latex(p[i],n):Pe(p[i],n);e?r[i+1]=s:r.push(s)}return r},$e.register=function(e){var t=this.getCore();if(ae(e))for(var n=0;n<e.length;n++)e&&this.register(e[n]);else if(e&&-1===D.exclude.indexOf(e.name)){if(e.dependencies)for(n=0;n<e.dependencies.length;n++)if(!t[e.dependencies[n]])throw new Error(ce(\"{0} requires {1} to be loaded!\",e.name,e.dependencies[n]));var r=e.parent,i=e.build.call(t);r&&(t[r]||(t[e.parent]={}),(\"nerdamer\"===r?this:t[r])[e.name]=i),e.visible&&(d.functions[e.name]=[i,e.numargs])}},$e.validateName=m,$e.validVarName=function(e){try{return m(e),-1===f.indexOf(e)}catch(e){return!1}},$e.supported=function(){return q(d.functions)},$e.numEquations=$e.numExpressions=function(){return p.length},$e.setVar=function(e,t){return m(e),e in d.CONSTANTS&&K(\"Cannot set value for constant \"+e),\"delete\"===t||\"\"===t?delete J[e]:J[e]=ne(t)?t:d.parse(t),this},$e.getVar=function(e){return J[e]},$e.clearVars=function(){return J={},this},$e.load=function(e){return e.call(this),this},$e.getVars=function(e,t){var n={};if(\"object\"===(e=e||\"text\"))n=J;else for(var r in J)\"latex\"===e?n[r]=J[r].latex(t):\"text\"===e&&(n[r]=J[r].text(t));return n},$e.set=function(e,t){if(\"object\"==typeof e)for(var n in e)$e.set(n,e[n]);-1!==[\"SAFE\"].indexOf(e)&&K(\"Cannot modify setting: \"+e),\"PRECISION\"===e?(k.set({precision:t}),21<(D.PRECISION=t)&&this.set(\"USE_BIG\",!0)):\"USE_LN\"===e&&!0===t?(D.LOG=\"LN\",D.LOG10=\"log\",d.functions.log=D.LOG_FNS.log10,d.functions.log[0]=function(e){return e.isConstant()?new Fe(Math.log10(e)):d.symfunction(D.LOG10,[e])},d.functions.LN=D.LOG_FNS.log,delete d.functions.log10):D[e]=t},$e.get=function(e){return D[e]},$e.updateAPI=function(e){for(var t in d.functions)t in $e&&!e||($e[t]=function(n){return function(){for(var e=[].slice.call(arguments),t=0;t<e.length;t++)e[t]=d.parse(e[t]);return new R(ye(\"PARSE2NUMBER\",function(){return d.callfunction(n,e)}))}}(t))},$e.replaceFunction=function(e,t,n){var r=d.functions[e],n=void 0===n?r[1]:n;d.functions[e]=[t.call(void 0,r[0],Ze),n]},$e.setOperator=function(e,t){d.setOperator(e,t)},$e.getOperator=function(e){return d.getOperator(e)},$e.aliasOperator=function(e,t){d.aliasOperator(e,t)},$e.tree=function(e){return d.tree(d.toRPN(d.tokenize(e)))},$e.htmlTree=function(e,t){return'<div class=\"tree\">\\n    <ul>\\n        <li>\\n'+this.tree(e).toHTML(3,t)+\"\\n        </li>\\n    </ul>\\n</div>\"},$e.addPeeker=function(e,t){d.peekers[e]&&d.peekers[e].push(t)},$e.removePeeker=function(e,t){we(d.peekers[e],t)},$e.parse=function(e){return String(e).split(\";\").map(function(e){return d.parse(e)})},$e.updateAPI(),$e}({bigInt:function(){var Q=function(o){\"use strict\";var v=1e7,l=7,t=9007199254740992,n=m(t),c=Math.log(t);function u(e,t){return void 0===e?u[0]:void 0===t||10==+t?z(e):V(e,t)}function p(e,t){this.value=e,this.sign=t,this.isSmall=!1}function f(e){this.value=e,this.sign=e<0,this.isSmall=!0}function h(e){return-t<e&&e<t}function m(e){return e<1e7?[e]:e<1e14?[e%1e7,Math.floor(e/1e7)]:[e%1e7,Math.floor(e/1e7)%1e7,Math.floor(e/1e14)]}function w(e){g(e);var t=e.length;if(t<4&&C(e,n)<0)switch(t){case 0:return 0;case 1:return e[0];case 2:return e[0]+e[1]*v;default:return e[0]+(e[1]+e[2]*v)*v}return e}function g(e){for(var t=e.length;0===e[--t];);e.length=t+1}function y(e){for(var t=new Array(e),n=-1;++n<e;)t[n]=0;return t}function d(e){return 0<e?Math.floor(e):Math.ceil(e)}function r(e,t){for(var n,r=e.length,i=t.length,s=new Array(r),o=0,a=v,u=0;u<i;u++)n=e[u]+t[u]+o,s[u]=n-(o=a<=n?1:0)*a;for(;u<r;)n=e[u]+o,s[u++]=n-(o=n===a?1:0)*a;return 0<o&&s.push(o),s}function b(e,t){return e.length>=t.length?r(e,t):r(t,e)}function i(e,t){for(var n,r=e.length,i=new Array(r),s=v,o=0;o<r;o++)n=e[o]-s+t,t=Math.floor(n/s),i[o]=n-t*s,t+=1;for(;0<t;)i[o++]=t%s,t=Math.floor(t/s);return i}function S(e,t){for(var n,r=e.length,i=t.length,s=new Array(r),o=0,a=v,u=0;u<i;u++)o=(n=e[u]-o-t[u])<0?(n+=a,1):0,s[u]=n;for(u=i;u<r;u++){if(!((n=e[u]-o)<0)){s[u++]=n;break}n+=a,s[u]=n}for(;u<r;u++)s[u]=e[u];return g(s),s}function s(e,t,n){for(var r,i=e.length,s=new Array(i),o=-t,a=v,u=0;u<i;u++)r=e[u]+o,o=Math.floor(r/a),s[u]=(r%=a)<0?r+a:r;return\"number\"==typeof(s=w(s))?new f(s=n?-s:s):new p(s,n)}function M(e,t){for(var n,r,i=e.length,s=t.length,o=y(i+s),a=v,u=0;u<i;++u)for(var l=e[u],c=0;c<s;++c)n=l*t[c]+o[u+c],r=Math.floor(n/a),o[u+c]=n-r*a,o[u+c+1]+=r;return g(o),o}function N(e,t){for(var n,r=e.length,i=new Array(r),s=v,o=0,a=0;a<r;a++)n=e[a]*t+o,o=Math.floor(n/s),i[a]=n-o*s;for(;0<o;)i[a++]=o%s,o=Math.floor(o/s);return i}function E(e,t){for(var n=[];0<t--;)n.push(0);return n.concat(e)}function a(e,t,n){return new p(e<v?N(t,e):M(t,m(e)),n)}function q(e){for(var t,n=e.length,r=y(n+n),i=v,s=0;s<n;s++){for(var o,a=0-(o=e[s])*o,u=s;u<n;u++)t=o*e[u]*2+r[s+u]+a,a=Math.floor(t/i),r[s+u]=t-a*i;r[s+n]=a}return g(r),r}function x(e,t){for(var n,r=e.length,i=y(r),s=v,o=0,a=r-1;0<=a;--a)o=(n=o*s+e[a])-(n=d(n/t))*t,i[a]=0|n;return[i,0|o]}function A(e,t){var n=z(t),r=e.value,i=n.value;if(0===i)throw new Error(\"Cannot divide by zero\");if(e.isSmall)return n.isSmall?[new f(d(r/i)),new f(r%i)]:[u[0],e];if(n.isSmall){if(1===i)return[e,u[0]];if(-1==i)return[e.negate(),u[0]];var s=Math.abs(i);if(s<v){var o=w((a=x(r,s))[0]),t=a[1];return e.sign&&(t=-t),\"number\"==typeof o?[new f(o=e.sign!==n.sign?-o:o),new f(t)]:[new p(o,e.sign!==n.sign),new f(t)]}i=m(s)}s=C(r,i);if(-1===s)return[u[0],e];if(0===s)return[u[e.sign===n.sign?1:-1],u[0]];o=(a=(r.length+i.length<=200?function(e,t){var n,r,i,s,o,a,u,l=e.length,c=t.length,p=v,f=y(t.length),h=t[c-1],m=Math.ceil(p/(2*h)),g=N(e,m),d=N(t,m);for(g.length<=l&&g.push(0),d.push(0),h=d[c-1],r=l-c;0<=r;r--){for(n=p-1,g[r+c]!==h&&(n=Math.floor((g[r+c]*p+g[r+c-1])/h)),a=d.length,o=s=i=0;o<a;o++)i+=n*d[o],u=Math.floor(i/p),s+=g[r+o]-(i-u*p),i=u,s=s<0?(g[r+o]=s+p,-1):(g[r+o]=s,0);for(;0!==s;){for(--n,o=i=0;o<a;o++)i=(i+=g[r+o]-p+d[o])<0?(g[r+o]=i+p,0):(g[r+o]=i,1);s+=i}f[r]=n}return g=x(g,m)[0],[w(f),w(g)]}:function(e,t){for(var n,r,i,s,o,a=e.length,u=t.length,l=[],c=[],p=v;a;)if(c.unshift(e[--a]),g(c),C(c,t)<0)l.push(0);else{for(i=c[(r=c.length)-1]*p+c[r-2],s=t[u-1]*p+t[u-2],u<r&&(i=(i+1)*p),n=Math.ceil(i/s);!(C(o=N(t,n),c)<=0)&&--n;);l.push(n),c=S(c,o)}return l.reverse(),[w(l),w(c)]})(r,i))[0];var n=e.sign!==n.sign,a=a[1],e=e.sign;return[o=\"number\"==typeof o?new f(o=n?-o:o):new p(o,n),a=\"number\"==typeof a?new f(a=e?-a:a):new p(a,e)]}function C(e,t){if(e.length!==t.length)return e.length>t.length?1:-1;for(var n=e.length-1;0<=n;n--)if(e[n]!==t[n])return e[n]>t[n]?1:-1;return 0}function L(e){e=e.abs();return!e.isUnit()&&(!!(e.equals(2)||e.equals(3)||e.equals(5))||!(e.isEven()||e.isDivisibleBy(3)||e.isDivisibleBy(5))&&(!!e.lesser(49)||void 0))}function I(e,t){for(var n,r,i,s=e.prev(),o=s,a=0;o.isEven();)o=o.divide(2),a++;e:for(r=0;r<t.length;r++)if(!e.lesser(t[r])&&!(i=Q(t[r]).modPow(o,e)).equals(u[1])&&!i.equals(s)){for(n=a-1;0!=n;n--){if((i=i.square().mod(e)).isUnit())return!1;if(i.equals(s))continue e}return!1}return!0}p.prototype=Object.create(u.prototype),f.prototype=Object.create(u.prototype),p.prototype.plus=p.prototype.add=function(e){var t=z(e);if(this.sign!==t.sign)return this.subtract(t.negate());var n=this.value,e=t.value;return t.isSmall?new p(i(n,Math.abs(e)),this.sign):new p(b(n,e),this.sign)},f.prototype.plus=f.prototype.add=function(e){var t=z(e),n=this.value;if(n<0!==t.sign)return this.subtract(t.negate());e=t.value;if(t.isSmall){if(h(n+e))return new f(n+e);e=m(Math.abs(e))}return new p(i(e,Math.abs(n)),n<0)},p.prototype.minus=p.prototype.subtract=function(e){var t=z(e);if(this.sign!==t.sign)return this.add(t.negate());var n,r=this.value,e=t.value;return t.isSmall?s(r,Math.abs(e),this.sign):(t=r,r=e,e=this.sign,0<=C(t,r)?n=S(t,r):(n=S(r,t),e=!e),\"number\"==typeof(n=w(n))?new f(n=e?-n:n):new p(n,e))},f.prototype.minus=f.prototype.subtract=function(e){var t=z(e),n=this.value;if(n<0!==t.sign)return this.add(t.negate());e=t.value;return t.isSmall?new f(n-e):s(e,Math.abs(n),0<=n)},p.prototype.negate=function(){return new p(this.value,!this.sign)},f.prototype.negate=function(){var e=this.sign,t=new f(-this.value);return t.sign=!e,t},p.prototype.abs=function(){return new p(this.value,!1)},f.prototype.abs=function(){return new f(Math.abs(this.value))},p.prototype.times=p.prototype.multiply=function(e){var t,n=z(e),r=this.value,i=n.value,e=this.sign!==n.sign;if(n.isSmall){if(0===i)return u[0];if(1===i)return this;if(-1===i)return this.negate();if((t=Math.abs(i))<v)return new p(N(r,t),e);i=m(t)}return n=r.length,t=i.length,new p((0<-.012*n-.012*t+15e-6*n*t?function e(t,n){if((r=Math.max(t.length,n.length))<=30)return M(t,n);var r=Math.ceil(r/2),i=t.slice(r),s=t.slice(0,r),o=n.slice(r),a=n.slice(0,r),t=e(s,a),n=e(i,o),o=e(b(s,i),b(a,o)),r=b(b(t,E(S(S(o,t),n),r)),E(n,2*r));return g(r),r}:M)(r,i),e)},f.prototype._multiplyBySmall=function(e){return h(e.value*this.value)?new f(e.value*this.value):a(Math.abs(e.value),m(Math.abs(this.value)),this.sign!==e.sign)},p.prototype._multiplyBySmall=function(e){return 0===e.value?u[0]:1===e.value?this:-1===e.value?this.negate():a(Math.abs(e.value),this.value,this.sign!==e.sign)},f.prototype.times=f.prototype.multiply=function(e){return z(e)._multiplyBySmall(this)},p.prototype.square=function(){return new p(q(this.value),!1)},f.prototype.square=function(){var e=this.value*this.value;return h(e)?new f(e):new p(q(m(Math.abs(this.value))),!1)},f.prototype.divmod=p.prototype.divmod=function(e){e=A(this,e);return{quotient:e[0],remainder:e[1]}},f.prototype.over=f.prototype.divide=p.prototype.over=p.prototype.divide=function(e){return A(this,e)[0]},f.prototype.remainder=f.prototype.mod=p.prototype.remainder=p.prototype.mod=function(e){return A(this,e)[1]},p.prototype.pow=function(e){var t,n,r,i=z(e),e=this.value,s=i.value;if(0===s)return u[1];if(0===e)return u[0];if(1===e)return u[1];if(-1===e)return i.isEven()?u[1]:u[-1];if(i.sign)return u[0];if(!i.isSmall)throw new Error(\"The exponent \"+i.toString()+\" is too large.\");if(this.isSmall&&h(t=Math.pow(e,s)))return new f(d(t));for(n=this,r=u[1];!0&s&&(r=r.times(n),--s),0!==s;)s/=2,n=n.square();return r},f.prototype.pow=p.prototype.pow,f.prototype.modPow=p.prototype.modPow=function(e,t){if(e=z(e),(t=z(t)).isZero())throw new Error(\"Cannot take modPow with modulus 0\");for(var n=u[1],r=this.mod(t);e.isPositive();){if(r.isZero())return u[0];e.isOdd()&&(n=n.multiply(r).mod(t)),e=e.divide(2),r=r.square().mod(t)}return n},p.prototype.compareAbs=function(e){var t=z(e),n=this.value,e=t.value;return t.isSmall?1:C(n,e)},f.prototype.compareAbs=function(e){var t=z(e),n=Math.abs(this.value),e=t.value;return t.isSmall?n===(e=Math.abs(e))?0:e<n?1:-1:-1},p.prototype.compareTo=p.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=z(e),n=this.value,e=t.value;return this.sign!==t.sign?t.sign?1:-1:t.isSmall?this.sign?-1:1:C(n,e)*(this.sign?-1:1)},f.prototype.compareTo=f.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=z(e),n=this.value,e=t.value;return t.isSmall?n==e?0:e<n?1:-1:n<0!==t.sign?n<0?-1:1:n<0?1:-1},f.prototype.eq=f.prototype.equals=p.prototype.eq=p.prototype.equals=function(e){return 0===this.compare(e)},f.prototype.neq=f.prototype.notEquals=p.prototype.neq=p.prototype.notEquals=function(e){return 0!==this.compare(e)},f.prototype.gt=f.prototype.greater=p.prototype.gt=p.prototype.greater=function(e){return 0<this.compare(e)},f.prototype.lt=f.prototype.lesser=p.prototype.lt=p.prototype.lesser=function(e){return this.compare(e)<0},f.prototype.geq=f.prototype.greaterOrEquals=p.prototype.geq=p.prototype.greaterOrEquals=function(e){return 0<=this.compare(e)},f.prototype.leq=f.prototype.lesserOrEquals=p.prototype.leq=p.prototype.lesserOrEquals=function(e){return this.compare(e)<=0},p.prototype.isEven=function(){return 0==(1&this.value[0])},f.prototype.isEven=function(){return 0==(1&this.value)},p.prototype.isOdd=function(){return 1==(1&this.value[0])},f.prototype.isOdd=function(){return 1==(1&this.value)},p.prototype.isPositive=function(){return!this.sign},f.prototype.isPositive=function(){return 0<this.value},p.prototype.isNegative=function(){return this.sign},f.prototype.isNegative=function(){return this.value<0},p.prototype.isUnit=function(){return!1},f.prototype.isUnit=function(){return 1===Math.abs(this.value)},p.prototype.isZero=function(){return!1},f.prototype.isZero=function(){return 0===this.value},f.prototype.isDivisibleBy=p.prototype.isDivisibleBy=function(e){var t=z(e),e=t.value;return 0!==e&&(1===e||(2===e?this.isEven():this.mod(t).equals(u[0])))},f.prototype.isPrime=p.prototype.isPrime=function(e){var t=L(this);if(t!==o)return t;var n=this.abs(),t=n.bitLength();if(t<=64)return I(n,[2,325,9375,28178,450775,9780504,1795265022]);for(var t=Math.log(2)*t,r=Math.ceil(!0===e?2*Math.pow(t,2):t),i=[],s=0;s<r;s++)i.push(Q(s+2));return I(n,i)},f.prototype.isProbablePrime=p.prototype.isProbablePrime=function(e){var t=L(this);if(t!==o)return t;for(var n=this.abs(),r=e===o?5:e,i=[],s=0;s<r;s++)i.push(Q.randBetween(2,n.minus(2)));return I(n,i)},f.prototype.modInv=p.prototype.modInv=function(e){for(var t,n,r=Q.zero,i=Q.one,s=z(e),o=this.abs();!o.equals(Q.zero);)t=s.divide(o),n=s,s=o,i=r.subtract(t.multiply(r=i)),o=n.subtract(t.multiply(o));if(!s.equals(1))throw new Error(this.toString()+\" and \"+e.toString()+\" are not co-prime\");return-1===r.compare(0)&&(r=r.add(e)),this.isNegative()?r.negate():r},p.prototype.next=function(){var e=this.value;return this.sign?s(e,1,this.sign):new p(i(e,1),this.sign)},f.prototype.next=function(){var e=this.value;return e+1<t?new f(e+1):new p(n,!1)},p.prototype.prev=function(){var e=this.value;return this.sign?new p(i(e,1),!0):s(e,1,this.sign)},f.prototype.prev=function(){var e=this.value;return-t<e-1?new f(e-1):new p(n,!0)};for(var U=[1];2*U[U.length-1]<=v;)U.push(2*U[U.length-1]);var _=U.length,O=U[_-1];function R(e){return(\"number\"==typeof e||\"string\"==typeof e)&&+Math.abs(e)<=v||e instanceof p&&e.value.length<=1}function T(e,t,n){t=z(t);for(var r=e.isNegative(),i=t.isNegative(),s=r?e.not():e,o=i?t.not():t,a=0,u=0,l=null,c=null,p=[];!s.isZero()||!o.isZero();)a=(l=A(s,O))[1].toJSNumber(),r&&(a=O-1-a),u=(c=A(o,O))[1].toJSNumber(),s=l[0],o=c[0],p.push(n(a,u=i?O-1-u:u));for(var f=0!==n(r?1:0,i?1:0)?Q(-1):Q(0),h=p.length-1;0<=h;--h)f=f.multiply(O).add(Q(p[h]));return f}f.prototype.shiftLeft=p.prototype.shiftLeft=function(e){if(!R(e))throw new Error(String(e)+\" is too large for shifting.\");if((e=+e)<0)return this.shiftRight(-e);var t=this;if(t.isZero())return t;for(;_<=e;)t=t.multiply(O),e-=_-1;return t.multiply(U[e])},f.prototype.shiftRight=p.prototype.shiftRight=function(e){var t;if(!R(e))throw new Error(String(e)+\" is too large for shifting.\");if((e=+e)<0)return this.shiftLeft(-e);for(var n=this;_<=e;){if(n.isZero()||n.isNegative()&&n.isUnit())return n;n=(t=A(n,O))[1].isNegative()?t[0].prev():t[0],e-=_-1}return(t=A(n,U[e]))[1].isNegative()?t[0].prev():t[0]},f.prototype.not=p.prototype.not=function(){return this.negate().prev()},f.prototype.and=p.prototype.and=function(e){return T(this,e,function(e,t){return e&t})},f.prototype.or=p.prototype.or=function(e){return T(this,e,function(e,t){return e|t})},f.prototype.xor=p.prototype.xor=function(e){return T(this,e,function(e,t){return e^t})};var P=1<<30,k=(v&-v)*(v&-v)|P;function D(e){e=e.value,e=\"number\"==typeof e?e|P:e[0]+e[1]*v|k;return e&-e}function F(e,t){return e=z(e),t=z(t),e.greater(t)?e:t}function B(e,t){return e=z(e),t=z(t),e.lesser(t)?e:t}function G(e,t){if(e=z(e).abs(),t=z(t).abs(),e.equals(t))return e;if(e.isZero())return t;if(t.isZero())return e;for(var n,r,i=u[1];e.isEven()&&t.isEven();)n=Math.min(D(e),D(t)),e=e.divide(n),t=t.divide(n),i=i.multiply(n);for(;e.isEven();)e=e.divide(D(e));do{for(;t.isEven();)t=t.divide(D(t))}while(e.greater(t)&&(r=t,t=e,e=r),!(t=t.subtract(e)).isZero());return i.isUnit()?e:e.multiply(i)}f.prototype.bitLength=p.prototype.bitLength=function(){var e=this;return 0===(e=e.compareTo(Q(0))<0?e.negate().subtract(Q(1)):e).compareTo(Q(0))?Q(0):Q(function e(t,n){if(n.compareTo(t)<=0){var r=e(t,n.square(n)),i=r.p,r=r.e,n=i.multiply(n);return n.compareTo(t)<=0?{p:n,e:2*r+1}:{p:i,e:2*r}}return{p:Q(1),e:0}}(e,Q(2)).e).add(Q(1))};var V=function(e,t){for(var n=e.length,r=Math.abs(t),i=0;i<n;i++){var s=e[i].toLowerCase();if(\"-\"!==s&&/[a-z0-9]/.test(s))if(/[0-9]/.test(s)&&r<=+s){if(\"1\"!==s||1!==r)throw new Error(s+\" is not a valid digit in base \"+t+\".\")}else if(s.charCodeAt(0)-87>=r)throw new Error(s+\" is not a valid digit in base \"+t+\".\")}if(2<=t&&t<=36&&n<=c/Math.log(t)){var o=parseInt(e,t);if(isNaN(o))throw new Error(s+\" is not a valid digit in base \"+t+\".\");return new f(parseInt(e,t))}t=z(t);var a=[],o=\"-\"===e[0];for(i=o?1:0;i<e.length;i++){var u=(s=e[i].toLowerCase()).charCodeAt(0);if(48<=u&&u<=57)a.push(z(s));else if(97<=u&&u<=122)a.push(z(s.charCodeAt(0)-87));else{if(\"<\"!==s)throw new Error(s+\" is not a valid character\");for(u=i;\">\"!==e[++i];);a.push(z(e.slice(u+1,i)))}}return H(a,t,o)};function H(e,t,n){for(var r=u[0],i=u[1],s=e.length-1;0<=s;s--)r=r.add(e[s].times(i)),i=i.times(t);return n?r.negate():r}function j(e){return e<=35?\"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(e):\"<\"+e+\">\"}function X(e,t){if((t=Q(t)).isZero()){if(e.isZero())return{value:[0],isNegative:!1};throw new Error(\"Cannot convert nonzero numbers to base 0.\")}if(t.equals(-1)){if(e.isZero())return{value:[0],isNegative:!1};if(e.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-e)).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var n=Array.apply(null,Array(+e-1)).map(Array.prototype.valueOf,[0,1]);return n.unshift([1]),{value:[].concat.apply([],n),isNegative:!1}}n=!1;if(e.isNegative()&&t.isPositive()&&(n=!0,e=e.abs()),t.equals(1))return e.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(+e)).map(Number.prototype.valueOf,1),isNegative:n};for(var r=[],i=e;i.isNegative()||0<=i.compareAbs(t);){var i=(s=i.divmod(t)).quotient,s=s.remainder;s.isNegative()&&(s=t.minus(s).abs(),i=i.next()),r.push(s.toJSNumber())}return r.push(i.toJSNumber()),{value:r.reverse(),isNegative:n}}function $(e,t){t=X(e,t);return(t.isNegative?\"-\":\"\")+t.value.map(j).join(\"\")}function Z(e){if(h(+e)){var t=+e;if(t===d(t))return new f(t);throw new Error(\"Invalid integer: \"+e)}var n=\"-\"===e[0],r=(e=n?e.slice(1):e).split(/e/i);if(2<r.length)throw new Error(\"Invalid integer: \"+r.join(\"e\"));if(2===r.length){var i=r[1];if((i=+(i=\"+\"===i[0]?i.slice(1):i))!==d(i)||!h(i))throw new Error(\"Invalid integer: \"+i+\" is not a valid exponent.\");t=r[0],r=t.indexOf(\".\");if(0<=r&&(i-=t.length-r-1,t=t.slice(0,r)+t.slice(r+1)),i<0)throw new Error(\"Cannot include negative exponent part for integers\");e=t+=new Array(i+1).join(\"0\")}if(!/^([0-9][0-9]*)$/.test(e))throw new Error(\"Invalid integer: \"+e);for(var s=[],o=e.length,a=l,u=o-a;0<o;)s.push(+e.slice(u,o)),(u-=a)<0&&(u=0),o-=a;return g(s),new p(s,n)}function z(e){return\"number\"==typeof e?function(e){if(h(e)){if(e!==d(e))throw new Error(e+\" is not an integer.\");return new f(e)}return Z(e.toString())}(e):\"string\"==typeof e?Z(e):e}p.prototype.toArray=function(e){return X(this,e)},f.prototype.toArray=function(e){return X(this,e)},p.prototype.toString=function(e){if(10!==(e=e===o?10:e))return $(this,e);for(var t,n=this.value,r=n.length,i=String(n[--r]);0<=--r;)t=String(n[r]),i+=\"0000000\".slice(t.length)+t;return(this.sign?\"-\":\"\")+i},f.prototype.toString=function(e){return 10!=(e=e===o?10:e)?$(this,e):String(this.value)},p.prototype.toJSON=f.prototype.toJSON=function(){return this.toString()},p.prototype.toJSNumber=p.prototype.valueOf=function(){return parseInt(this.toString(),10)},f.prototype.toJSNumber=f.prototype.valueOf=function(){return this.value};for(var e=0;e<1e3;e++)u[e]=new f(e),0<e&&(u[-e]=new f(-e));return u.one=u[1],u.zero=u[0],u.minusOne=u[-1],u.max=F,u.min=B,u.gcd=G,u.lcm=function(e,t){return e=z(e).abs(),t=z(t).abs(),e.divide(G(e,t)).multiply(t)},u.isInstance=function(e){return e instanceof p||e instanceof f},u.randBetween=function(e,t){var n=B(e=z(e),t=z(t)),r=F(e,t).subtract(n).add(1);if(r.isSmall)return n.add(Math.floor(Math.random()*r));for(var i=[],s=!0,o=r.value.length-1;0<=o;o--){var a=s?r.value[o]:v,u=d(Math.random()*a);i.unshift(u),u<a&&(s=!1)}return i=w(i),n.add(\"number\"==typeof i?new f(i):new p(i,!1))},u.fromArray=function(e,t,n){return H(e.map(z),z(t||10),n)},u}();return\"undefined\"!=typeof module&&module.hasOwnProperty(\"exports\")&&(module.exports=Q),\"function\"==typeof define&&define.amd&&define(\"big-integer\",[],function(){return Q}),Q}(),bigDec:function(e){\"use strict\";var c,L,t,s,o=9e15,m=1e9,g=\"0123456789abcdef\",r=\"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\",i=\"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\",a={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-o,maxE:o,crypto:!1},y=!0,u=\"[DecimalError] \",d=u+\"Invalid argument: \",l=u+\"Precision limit exceeded\",p=u+\"crypto unavailable\",I=Math.floor,v=Math.pow,f=/^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,h=/^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,w=/^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,b=/^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,U=1e7,_=7,S=r.length-1,M=i.length-1,N={name:\"[object Decimal]\"};function E(e){var t,n,r,i=e.length-1,s=\"\",o=e[0];if(0<i){for(s+=o,t=1;t<i;t++)r=e[t]+\"\",(n=_-r.length)&&(s+=V(n)),s+=r;o=e[t],(n=_-(r=o+\"\").length)&&(s+=V(n))}else if(0===o)return\"0\";for(;o%10==0;)o/=10;return s+o}function q(e,t,n){if(e!==~~e||e<t||n<e)throw Error(d+e)}function x(e,t,n,r){for(var i,s,o=e[0];10<=o;o/=10)--t;return--t<0?(t+=_,i=0):(i=Math.ceil((t+1)/_),t%=_),o=v(10,_-t),s=e[i]%o|0,null==r?t<3?(0==t?s=s/100|0:1==t&&(s=s/10|0),n<4&&99999==s||3<n&&49999==s||5e4==s||0==s):(n<4&&s+1==o||3<n&&s+1==o/2)&&(e[i+1]/o/100|0)==v(10,t-2)-1||(s==o/2||0==s)&&0==(e[i+1]/o/100|0):t<4?(0==t?s=s/1e3|0:1==t?s=s/100|0:2==t&&(s=s/10|0),(r||n<4)&&9999==s||!r&&3<n&&4999==s):((r||n<4)&&s+1==o||!r&&3<n&&s+1==o/2)&&(e[i+1]/o/1e3|0)==v(10,t-3)-1}function A(e,t,n){for(var r,i,s=[0],o=0,a=e.length;o<a;){for(i=s.length;i--;)s[i]*=t;for(s[0]+=g.indexOf(e.charAt(o++)),r=0;r<s.length;r++)s[r]>n-1&&(void 0===s[r+1]&&(s[r+1]=0),s[r+1]+=s[r]/n|0,s[r]%=n)}return s.reverse()}N.absoluteValue=N.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),P(e)},N.ceil=function(){return P(new this.constructor(this),this.e+1,2)},N.comparedTo=N.cmp=function(e){var t,n,r=this,i=r.d,s=(e=new r.constructor(e)).d,o=r.s,a=e.s;if(!i||!s)return o&&a?o!==a?o:i===s?0:!i^o<0?1:-1:NaN;if(!i[0]||!s[0])return i[0]?o:s[0]?-a:0;if(o!==a)return o;if(r.e!==e.e)return r.e>e.e^o<0?1:-1;for(t=0,n=(r=i.length)<(e=s.length)?r:e;t<n;++t)if(i[t]!==s[t])return i[t]>s[t]^o<0?1:-1;return r===e?0:e<r^o<0?1:-1},N.cosine=N.cos=function(){var e,t,n=this,r=n.constructor;return n.d?n.d[0]?(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+_,r.rounding=1,n=function(e,t){var n,r=t.d.length,r=r<32?(1/Y(4,n=Math.ceil(r/3))).toString():(n=16,\"2.3283064365386962890625e-10\");e.precision+=n,t=Q(e,1,t.times(r),new e(1));for(var i=n;i--;){var s=t.times(t);t=s.times(s).minus(s).times(8).plus(1)}return e.precision-=n,t}(r,W(r,n)),r.precision=e,r.rounding=t,P(2==s||3==s?n.neg():n,e,t,!0)):new r(1):new r(NaN)},N.cubeRoot=N.cbrt=function(){var e,t,n,r,i,s,o,a,u,l,c=this,p=c.constructor;if(!c.isFinite()||c.isZero())return new p(c);for(y=!1,(s=c.s*v(c.s*c,1/3))&&Math.abs(s)!=1/0?r=new p(s.toString()):(n=E(c.d),(s=((e=c.e)-n.length+1)%3)&&(n+=1==s||-2==s?\"0\":\"00\"),s=v(n,1/3),e=I((e+1)/3)-(e%3==(e<0?-1:2)),(r=new p(n=s==1/0?\"5e\"+e:(n=s.toExponential()).slice(0,n.indexOf(\"e\")+1)+e)).s=c.s),o=(e=p.precision)+3;;)if(l=(u=(a=r).times(a).times(a)).plus(c),r=C(l.plus(c).times(a),l.plus(u),o+2,1),E(a.d).slice(0,o)===(n=E(r.d)).slice(0,o)){if(\"9999\"!=(n=n.slice(o-3,o+1))&&(i||\"4999\"!=n)){+n&&(+n.slice(1)||\"5\"!=n.charAt(0))||(P(r,e+1,1),t=!r.times(r).times(r).eq(c));break}if(!i&&(P(a,e+1,0),a.times(a).times(a).eq(c))){r=a;break}o+=4,i=1}return y=!0,P(r,e,p.rounding,t)},N.decimalPlaces=N.dp=function(){var e,t=this.d,n=NaN;if(t){if(n=((e=t.length-1)-I(this.e/_))*_,e=t[e])for(;e%10==0;e/=10)n--;n<0&&(n=0)}return n},N.dividedBy=N.div=function(e){return C(this,new this.constructor(e))},N.dividedToIntegerBy=N.divToInt=function(e){var t=this.constructor;return P(C(this,new t(e),0,1,1),t.precision,t.rounding)},N.equals=N.eq=function(e){return 0===this.cmp(e)},N.floor=function(){return P(new this.constructor(this),this.e+1,3)},N.greaterThan=N.gt=function(e){return 0<this.cmp(e)},N.greaterThanOrEqualTo=N.gte=function(e){e=this.cmp(e);return 1==e||0===e},N.hyperbolicCosine=N.cosh=function(){var e,t,n,r=(a=this).constructor,i=new r(1);if(!a.isFinite())return new r(a.s?1/0:NaN);if(a.isZero())return i;t=r.precision,n=r.rounding,r.precision=t+Math.max(a.e,a.sd())+4,r.rounding=1;for(var s,o=(o=a.d.length)<32?(1/Y(4,e=Math.ceil(o/3))).toString():(e=16,\"2.3283064365386962890625e-10\"),a=Q(r,1,a.times(o),new r(1),!0),u=e,l=new r(8);u--;)s=a.times(a),a=i.minus(s.times(l.minus(s.times(l))));return P(a,r.precision=t,r.rounding=n,!0)},N.hyperbolicSine=N.sinh=function(){var e,t,n,r=(o=this).constructor;if(!o.isFinite()||o.isZero())return new r(o);if(e=r.precision,t=r.rounding,r.precision=e+Math.max(o.e,o.sd())+4,r.rounding=1,(n=o.d.length)<3)o=Q(r,2,o,o,!0);else for(var i,s=16<(s=1.4*Math.sqrt(n))?16:0|s,o=Q(r,2,o=o.times(1/Y(5,s)),o,!0),a=new r(5),u=new r(16),l=new r(20);s--;)i=o.times(o),o=o.times(a.plus(i.times(u.times(i).plus(l))));return P(o,r.precision=e,r.rounding=t,!0)},N.hyperbolicTangent=N.tanh=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+7,r.rounding=1,C(n.sinh(),n.cosh(),r.precision=e,r.rounding=t)):new r(n.s)},N.inverseCosine=N.acos=function(){var e=this,t=e.constructor,n=e.abs().cmp(1),r=t.precision,i=t.rounding;return-1!==n?0===n?e.isNeg()?B(t,r,i):new t(0):new t(NaN):e.isZero()?B(t,r+4,i).times(.5):(t.precision=r+6,t.rounding=1,e=e.asin(),n=B(t,r+4,i).times(.5),t.precision=r,t.rounding=i,n.minus(e))},N.inverseHyperbolicCosine=N.acosh=function(){var e,t,n=this,r=n.constructor;return n.lte(1)?new r(n.eq(1)?0:NaN):n.isFinite()?(e=r.precision,t=r.rounding,r.precision=e+Math.max(Math.abs(n.e),n.sd())+4,r.rounding=1,y=!1,n=n.times(n).minus(1).sqrt().plus(n),y=!0,r.precision=e,r.rounding=t,n.ln()):new r(n)},N.inverseHyperbolicSine=N.asinh=function(){var e,t,n=this,r=n.constructor;return!n.isFinite()||n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+2*Math.max(Math.abs(n.e),n.sd())+6,r.rounding=1,y=!1,n=n.times(n).plus(1).sqrt().plus(n),y=!0,r.precision=e,r.rounding=t,n.ln())},N.inverseHyperbolicTangent=N.atanh=function(){var e,t,n,r=this,i=r.constructor;return r.isFinite()?0<=r.e?new i(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(e=i.precision,t=i.rounding,n=r.sd(),Math.max(n,e)<2*-r.e-1?P(new i(r),e,t,!0):(i.precision=n=n-r.e,r=C(r.plus(1),new i(1).minus(r),n+e,1),i.precision=e+4,i.rounding=1,r=r.ln(),i.precision=e,i.rounding=t,r.times(.5))):new i(NaN)},N.inverseSine=N.asin=function(){var e,t,n,r=this,i=r.constructor;return r.isZero()?new i(r):(e=r.abs().cmp(1),t=i.precision,n=i.rounding,-1!==e?0===e?((e=B(i,t+4,n).times(.5)).s=r.s,e):new i(NaN):(i.precision=t+6,i.rounding=1,r=r.div(new i(1).minus(r.times(r)).sqrt().plus(1)).atan(),i.precision=t,i.rounding=n,r.times(2)))},N.inverseTangent=N.atan=function(){var e,t,n,r,i,s,o,a,u,l=this,c=l.constructor,p=c.precision,f=c.rounding;if(l.isFinite()){if(l.isZero())return new c(l);if(l.abs().eq(1)&&p+4<=M)return(o=B(c,p+4,f).times(.25)).s=l.s,o}else{if(!l.s)return new c(NaN);if(p+4<=M)return(o=B(c,p+4,f).times(.5)).s=l.s,o}for(c.precision=a=p+10,c.rounding=1,e=n=Math.min(28,a/_+2|0);e;--e)l=l.div(l.times(l).plus(1).sqrt().plus(1));for(y=!1,t=Math.ceil(a/_),r=1,u=l.times(l),o=new c(l),i=l;-1!==e;)if(i=i.times(u),s=o.minus(i.div(r+=2)),i=i.times(u),void 0!==(o=s.plus(i.div(r+=2))).d[t])for(e=t;o.d[e]===s.d[e]&&e--;);return n&&(o=o.times(2<<n-1)),y=!0,P(o,c.precision=p,c.rounding=f,!0)},N.isFinite=function(){return!!this.d},N.isInteger=N.isInt=function(){return!!this.d&&I(this.e/_)>this.d.length-2},N.isNaN=function(){return!this.s},N.isNegative=N.isNeg=function(){return this.s<0},N.isPositive=N.isPos=function(){return 0<this.s},N.isZero=function(){return!!this.d&&0===this.d[0]},N.lessThan=N.lt=function(e){return this.cmp(e)<0},N.lessThanOrEqualTo=N.lte=function(e){return this.cmp(e)<1},N.logarithm=N.log=function(e){var t,n,r,i,s,o,a,u,l=this.constructor,c=l.precision,p=l.rounding;if(null==e)e=new l(10),t=!0;else{if(n=(e=new l(e)).d,e.s<0||!n||!n[0]||e.eq(1))return new l(NaN);t=e.eq(10)}if(n=this.d,this.s<0||!n||!n[0]||this.eq(1))return new l(n&&!n[0]?-1/0:1!=this.s?NaN:n?0:1/0);if(t)if(1<n.length)s=!0;else{for(i=n[0];i%10==0;)i/=10;s=1!==i}if(y=!1,o=$(this,a=c+5),r=t?F(l,a+10):$(e,a),x((u=C(o,r,a,1)).d,i=c,p))do{if(o=$(this,a+=10),r=t?F(l,a+10):$(e,a),u=C(o,r,a,1),!s){+E(u.d).slice(i+1,i+15)+1==1e14&&(u=P(u,c+1,0));break}}while(x(u.d,i+=10,p));return y=!0,P(u,c,p)},N.minus=N.sub=function(e){var t,n,r,i,s,o,a,u,l,c,p,f=this,h=f.constructor;if(e=new h(e),!f.d||!e.d)return f.s&&e.s?f.d?e.s=-e.s:e=new h(e.d||f.s!==e.s?f:NaN):e=new h(NaN),e;if(f.s!=e.s)return e.s=-e.s,f.plus(e);if(l=f.d,p=e.d,a=h.precision,u=h.rounding,!l[0]||!p[0]){if(p[0])e.s=-e.s;else{if(!l[0])return new h(3===u?-0:0);e=new h(f)}return y?P(e,a,u):e}if(n=I(e.e/_),f=I(f.e/_),l=l.slice(),s=f-n){for(o=(c=s<0)?(t=l,s=-s,p.length):(t=p,n=f,l.length),s>(r=Math.max(Math.ceil(a/_),o)+2)&&(s=r,t.length=1),t.reverse(),r=s;r--;)t.push(0);t.reverse()}else{for((c=(r=l.length)<(o=p.length))&&(o=r),r=0;r<o;r++)if(l[r]!=p[r]){c=l[r]<p[r];break}s=0}for(c&&(t=l,l=p,p=t,e.s=-e.s),o=l.length,r=p.length-o;0<r;--r)l[o++]=0;for(r=p.length;s<r;){if(l[--r]<p[r]){for(i=r;i&&0===l[--i];)l[i]=U-1;--l[i],l[r]+=U}l[r]-=p[r]}for(;0===l[--o];)l.pop();for(;0===l[0];l.shift())--n;return l[0]?(e.d=l,e.e=D(l,n),y?P(e,a,u):e):new h(3===u?-0:0)},N.modulo=N.mod=function(e){var t,n=this,r=n.constructor;return e=new r(e),!n.d||!e.s||e.d&&!e.d[0]?new r(NaN):!e.d||n.d&&!n.d[0]?P(new r(n),r.precision,r.rounding):(y=!1,9==r.modulo?(t=C(n,e.abs(),0,3,1)).s*=e.s:t=C(n,e,0,r.modulo,1),t=t.times(e),y=!0,n.minus(t))},N.naturalExponential=N.exp=function(){return X(this)},N.naturalLogarithm=N.ln=function(){return $(this)},N.negated=N.neg=function(){var e=new this.constructor(this);return e.s=-e.s,P(e)},N.plus=N.add=function(e){var t,n,r,i,s,o,a,u,l=this,c=l.constructor;if(e=new c(e),!l.d||!e.d)return l.s&&e.s?l.d||(e=new c(e.d||l.s===e.s?l:NaN)):e=new c(NaN),e;if(l.s!=e.s)return e.s=-e.s,l.minus(e);if(a=l.d,u=e.d,s=c.precision,o=c.rounding,!a[0]||!u[0])return u[0]||(e=new c(l)),y?P(e,s,o):e;if(c=I(l.e/_),l=I(e.e/_),a=a.slice(),r=c-l){for(i=r<0?(n=a,r=-r,u.length):(n=u,l=c,a.length),r>(i=(c=Math.ceil(s/_))>i?c+1:i+1)&&(r=i,n.length=1),n.reverse();r--;)n.push(0);n.reverse()}for((i=a.length)-(r=u.length)<0&&(r=i,n=u,u=a,a=n),t=0;r;)t=(a[--r]=a[r]+u[r]+t)/U|0,a[r]%=U;for(t&&(a.unshift(t),++l),i=a.length;0==a[--i];)a.pop();return e.d=a,e.e=D(a,l),y?P(e,s,o):e},N.precision=N.sd=function(e){var t;if(void 0!==e&&e!==!!e&&1!==e&&0!==e)throw Error(d+e);return this.d?(t=G(this.d),e&&this.e+1>t&&(t=this.e+1)):t=NaN,t},N.round=function(){var e=this.constructor;return P(new e(this),this.e+1,e.rounding)},N.sine=N.sin=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+_,r.rounding=1,n=function(e,t){var n,r=t.d.length;if(r<3)return Q(e,2,t,t);n=16<(n=1.4*Math.sqrt(r))?16:0|n,t=Q(e,2,t=t.times(1/Y(5,n)),t);for(var i,s=new e(5),o=new e(16),a=new e(20);n--;)i=t.times(t),t=t.times(s.plus(i.times(o.times(i).minus(a))));return t}(r,W(r,n)),r.precision=e,r.rounding=t,P(2<s?n.neg():n,e,t,!0)):new r(NaN)},N.squareRoot=N.sqrt=function(){var e,t,n,r,i,s,o=this,a=o.d,u=o.e,l=o.s,c=o.constructor;if(1!==l||!a||!a[0])return new c(!l||l<0&&(!a||a[0])?NaN:a?o:1/0);for(y=!1,r=0==(l=Math.sqrt(+o))||l==1/0?(((t=E(a)).length+u)%2==0&&(t+=\"0\"),l=Math.sqrt(t),u=I((u+1)/2)-(u<0||u%2),new c(t=l==1/0?\"5e\"+u:(t=l.toExponential()).slice(0,t.indexOf(\"e\")+1)+u)):new c(l.toString()),n=(u=c.precision)+3;;)if(r=(s=r).plus(C(o,s,n+2,1)).times(.5),E(s.d).slice(0,n)===(t=E(r.d)).slice(0,n)){if(\"9999\"!=(t=t.slice(n-3,n+1))&&(i||\"4999\"!=t)){+t&&(+t.slice(1)||\"5\"!=t.charAt(0))||(P(r,u+1,1),e=!r.times(r).eq(o));break}if(!i&&(P(s,u+1,0),s.times(s).eq(o))){r=s;break}n+=4,i=1}return y=!0,P(r,u,c.rounding,e)},N.tangent=N.tan=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+10,r.rounding=1,(n=n.sin()).s=1,n=C(n,new r(1).minus(n.times(n)).sqrt(),e+10,0),r.precision=e,r.rounding=t,P(2==s||4==s?n.neg():n,e,t,!0)):new r(NaN)},N.times=N.mul=function(e){var t,n,r,i,s,o,a,u,l,c=this.constructor,p=this.d,f=(e=new c(e)).d;if(e.s*=this.s,!(p&&p[0]&&f&&f[0]))return new c(!e.s||p&&!p[0]&&!f||f&&!f[0]&&!p?NaN:p&&f?0*e.s:e.s/0);for(n=I(this.e/_)+I(e.e/_),(u=p.length)<(l=f.length)&&(s=p,p=f,f=s,o=u,u=l,l=o),s=[],r=o=u+l;r--;)s.push(0);for(r=l;0<=--r;){for(t=0,i=u+r;r<i;)a=s[i]+f[r]*p[i-r-1]+t,s[i--]=a%U|0,t=a/U|0;s[i]=(s[i]+t)%U|0}for(;!s[--o];)s.pop();return t?++n:s.shift(),e.d=s,e.e=D(s,n),y?P(e,c.precision,c.rounding):e},N.toBinary=function(e,t){return J(this,2,e,t)},N.toDecimalPlaces=N.toDP=function(e,t){var n=this.constructor,r=new n(this);return void 0===e?r:(q(e,0,m),void 0===t?t=n.rounding:q(t,0,8),P(r,e+r.e+1,t))},N.toExponential=function(e,t){var n=this,r=n.constructor,e=void 0===e?k(n,!0):(q(e,0,m),void 0===t?t=r.rounding:q(t,0,8),k(n=P(new r(n),e+1,t),!0,e+1));return n.isNeg()&&!n.isZero()?\"-\"+e:e},N.toFixed=function(e,t){var n=this,r=n.constructor,i=void 0===e?k(n):(q(e,0,m),void 0===t?t=r.rounding:q(t,0,8),k(i=P(new r(n),e+n.e+1,t),!1,e+i.e+1));return n.isNeg()&&!n.isZero()?\"-\"+i:i},N.toFraction=function(e){var t,n,r,i,s,o,a,u,l,c,p=this,f=p.d,h=p.constructor;if(!f)return new h(p);if(u=n=new h(1),r=a=new h(0),l=(s=(t=new h(r)).e=G(f)-p.e-1)%_,t.d[0]=v(10,l<0?_+l:l),null==e)e=0<s?t:u;else{if(!(o=new h(e)).isInt()||o.lt(u))throw Error(d+o);e=o.gt(t)?0<s?t:u:o}for(y=!1,o=new h(E(f)),l=h.precision,h.precision=s=f.length*_*2;c=C(o,t,0,1,1),1!=(i=n.plus(c.times(r))).cmp(e);)n=r,r=i,u=a.plus(c.times(i=u)),a=i,t=o.minus(c.times(i=t)),o=i;return i=C(e.minus(n),r,0,1,1),a=a.plus(i.times(u)),n=n.plus(i.times(r)),a.s=u.s=p.s,p=C(u,r,s,1).minus(p).abs().cmp(C(a,n,s,1).minus(p).abs())<1?[u,r]:[a,n],h.precision=l,y=!0,p},N.toHexadecimal=N.toHex=function(e,t){return J(this,16,e,t)},N.toNearest=function(e,t){var n=(r=this).constructor,r=new n(r);if(null==e){if(!r.d)return r;e=new n(1),t=n.rounding}else{if(e=new n(e),void 0===t?t=n.rounding:q(t,0,8),!r.d)return e.s?r:e;if(!e.d)return e.s&&(e.s=r.s),e}return e.d[0]?(y=!1,r=C(r,e,0,t,1).times(e),y=!0,P(r)):(e.s=r.s,r=e),r},N.toNumber=function(){return+this},N.toOctal=function(e,t){return J(this,8,e,t)},N.toPower=N.pow=function(e){var t,n,r,i,s,o,a=this,u=a.constructor,l=+(e=new u(e));if(!(a.d&&e.d&&a.d[0]&&e.d[0]))return new u(v(+a,l));if((a=new u(a)).eq(1))return a;if(r=u.precision,s=u.rounding,e.eq(1))return P(a,r,s);if((t=I(e.e/_))>=e.d.length-1&&(n=l<0?-l:l)<=9007199254740991)return i=H(u,a,n,r),e.s<0?new u(1).div(i):P(i,r,s);if((o=a.s)<0){if(t<e.d.length-1)return new u(NaN);if(0==(1&e.d[t])&&(o=1),0==a.e&&1==a.d[0]&&1==a.d.length)return a.s=o,a}return(t=0!=(n=v(+a,l))&&isFinite(n)?new u(n+\"\").e:I(l*(Math.log(\"0.\"+E(a.d))/Math.LN10+a.e+1)))>u.maxE+1||t<u.minE-1?new u(0<t?o/0:0):(y=!1,u.rounding=a.s=1,n=Math.min(12,(t+\"\").length),(i=X(e.times($(a,r+n)),r)).d&&x((i=P(i,r+5,1)).d,r,s)&&(+E((i=P(X(e.times($(a,(t=r+10)+n)),t),t+5,1)).d).slice(r+1,r+15)+1==1e14&&(i=P(i,r+1,0))),i.s=o,y=!0,P(i,r,u.rounding=s))},N.toPrecision=function(e,t){var n=this,r=n.constructor,e=void 0===e?k(n,n.e<=r.toExpNeg||n.e>=r.toExpPos):(q(e,1,m),void 0===t?t=r.rounding:q(t,0,8),k(n=P(new r(n),e,t),e<=n.e||n.e<=r.toExpNeg,e));return n.isNeg()&&!n.isZero()?\"-\"+e:e},N.toSignificantDigits=N.toSD=function(e,t){var n=this.constructor;return void 0===e?(e=n.precision,t=n.rounding):(q(e,1,m),void 0===t?t=n.rounding:q(t,0,8)),P(new n(this),e,t)},N.toString=function(){var e=this.constructor,e=k(this,this.e<=e.toExpNeg||this.e>=e.toExpPos);return this.isNeg()&&!this.isZero()?\"-\"+e:e},N.truncated=N.trunc=function(){return P(new this.constructor(this),this.e+1,1)},N.valueOf=N.toJSON=function(){var e=this.constructor,e=k(this,this.e<=e.toExpNeg||this.e>=e.toExpPos);return this.isNeg()?\"-\"+e:e};var C=function(e,t,n,r,i,s){var o,a,u,l,c,p,f,h,m,g,d,v,w,y,b,S,M,N,E,q=e.constructor,x=e.s==t.s?1:-1,A=e.d,C=t.d;if(!(A&&A[0]&&C&&C[0]))return new q(e.s&&t.s&&(A?!C||A[0]!=C[0]:C)?A&&0==A[0]||!C?0*x:x/0:NaN);for(a=s?(c=1,e.e-t.e):(s=U,I(e.e/(c=_))-I(t.e/c)),N=C.length,S=A.length,m=(x=new q(x)).d=[],u=0;C[u]==(A[u]||0);u++);if(C[u]>(A[u]||0)&&a--,null==n?(w=n=q.precision,r=q.rounding):w=i?n+(e.e-t.e)+1:n,w<0)m.push(1),p=!0;else{if(w=w/c+2|0,u=0,1==N){for(C=C[l=0],w++;(u<S||l)&&w--;u++)y=l*s+(A[u]||0),m[u]=y/C|0,l=y%C|0;p=l||u<S}else{for(1<(l=s/(C[0]+1)|0)&&(C=O(C,l,s),A=O(A,l,s),N=C.length,S=A.length),d=(g=A.slice(0,b=N)).length;d<N;)g[d++]=0;for((E=C.slice()).unshift(0),M=C[0],C[1]>=s/2&&++M;l=0,(o=R(C,g,N,d))<0?(v=g[0],1<(l=(v=N!=d?v*s+(g[1]||0):v)/M|0)?1==(o=R(f=O(C,l=s<=l?s-1:l,s),g,h=f.length,d=g.length))&&(l--,T(f,N<h?E:C,h,s)):(0==l&&(o=l=1),f=C.slice()),(h=f.length)<d&&f.unshift(0),T(g,f,d,s),-1==o&&(o=R(C,g,N,d=g.length))<1&&(l++,T(g,N<d?E:C,d,s)),d=g.length):0===o&&(l++,g=[0]),m[u++]=l,o&&g[0]?g[d++]=A[b]||0:(g=[A[b]],d=1),(b++<S||void 0!==g[0])&&w--;);p=void 0!==g[0]}m[0]||m.shift()}if(1==c)x.e=a,L=p;else{for(u=1,l=m[0];10<=l;l/=10)u++;x.e=u+a*c-1,P(x,i?n+x.e+1:n,r,p)}return x};function O(e,t,n){var r,i=0,s=e.length;for(e=e.slice();s--;)r=e[s]*t+i,e[s]=r%n|0,i=r/n|0;return i&&e.unshift(i),e}function R(e,t,n,r){var i,s;if(n!=r)s=r<n?1:-1;else for(i=s=0;i<n;i++)if(e[i]!=t[i]){s=e[i]>t[i]?1:-1;break}return s}function T(e,t,n,r){for(var i=0;n--;)e[n]-=i,i=e[n]<t[n]?1:0,e[n]=i*r+e[n]-t[n];for(;!e[0]&&1<e.length;)e.shift()}function P(e,t,n,r){var i,s,o,a,u,l,c,p,f=e.constructor;e:if(null!=t){if(!(c=e.d))return e;for(i=1,a=c[0];10<=a;a/=10)i++;if((s=t-i)<0)s+=_,u=(l=c[p=0])/v(10,i-(o=t)-1)%10|0;else if((p=Math.ceil((s+1)/_))>=(a=c.length)){if(!r)break e;for(;a++<=p;)c.push(0);l=u=0,o=(s%=_)-_+(i=1)}else{for(l=a=c[p],i=1;10<=a;a/=10)i++;u=(o=(s%=_)-_+i)<0?0:l/v(10,i-o-1)%10|0}if(r=r||t<0||void 0!==c[p+1]||(o<0?l:l%v(10,i-o-1)),u=n<4?(u||r)&&(0==n||n==(e.s<0?3:2)):5<u||5==u&&(4==n||r||6==n&&(0<s?0<o?l/v(10,i-o):0:c[p-1])%10&1||n==(e.s<0?8:7)),t<1||!c[0])return c.length=0,u?(t-=e.e+1,c[0]=v(10,(_-t%_)%_),e.e=-t||0):c[0]=e.e=0,e;if(0==s?(c.length=p,a=1,p--):(c.length=p+1,a=v(10,_-s),c[p]=0<o?(l/v(10,i-o)%v(10,o)|0)*a:0),u)for(;;){if(0==p){for(s=1,o=c[0];10<=o;o/=10)s++;for(o=c[0]+=a,a=1;10<=o;o/=10)a++;s!=a&&(e.e++,c[0]==U&&(c[0]=1));break}if(c[p]+=a,c[p]!=U)break;c[p--]=0,a=1}for(s=c.length;0===c[--s];)c.pop()}return y&&(e.e>f.maxE?(e.d=null,e.e=NaN):e.e<f.minE&&(e.e=0,e.d=[0])),e}function k(e,t,n){if(!e.isFinite())return Z(e);var r,i=e.e,s=E(e.d),o=s.length;return t?(n&&0<(r=n-o)?s=s.charAt(0)+\".\"+s.slice(1)+V(r):1<o&&(s=s.charAt(0)+\".\"+s.slice(1)),s=s+(e.e<0?\"e\":\"e+\")+e.e):i<0?(s=\"0.\"+V(-i-1)+s,n&&0<(r=n-o)&&(s+=V(r))):o<=i?(s+=V(i+1-o),n&&0<(r=n-i-1)&&(s=s+\".\"+V(r))):((r=i+1)<o&&(s=s.slice(0,r)+\".\"+s.slice(r)),n&&0<(r=n-o)&&(i+1===o&&(s+=\".\"),s+=V(r))),s}function D(e,t){var n=e[0];for(t*=_;10<=n;n/=10)t++;return t}function F(e,t,n){if(S<t)throw y=!0,n&&(e.precision=n),Error(l);return P(new e(r),t,1,!0)}function B(e,t,n){if(M<t)throw Error(l);return P(new e(i),t,n,!0)}function G(e){var t=e.length-1,n=t*_+1;if(t=e[t]){for(;t%10==0;t/=10)n--;for(t=e[0];10<=t;t/=10)n++}return n}function V(e){for(var t=\"\";e--;)t+=\"0\";return t}function H(e,t,n,r){var i,s=new e(1),o=Math.ceil(r/_+4);for(y=!1;;){if(n%2&&K((s=s.times(t)).d,o)&&(i=!0),0===(n=I(n/2))){n=s.d.length-1,i&&0===s.d[n]&&++s.d[n];break}K((t=t.times(t)).d,o)}return y=!0,s}function j(e){return 1&e.d[e.d.length-1]}function n(e,t,n){for(var r,i=new e(t[0]),s=0;++s<t.length;){if(!(r=new e(t[s])).s){i=r;break}i[n](r)&&(i=r)}return i}function X(e,t){var n,r,i,s,o,a,u,l=0,c=0,p=0,f=e.constructor,h=f.rounding,m=f.precision;if(!e.d||!e.d[0]||17<e.e)return new f(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(u=null==t?(y=!1,m):t,a=new f(.03125);-2<e.e;)e=e.times(a),p+=5;for(u+=r=Math.log(v(2,p))/Math.LN10*2+5|0,n=s=o=new f(1),f.precision=u;;){if(s=P(s.times(e),u,1),n=n.times(++c),E((a=o.plus(C(s,n,u,1))).d).slice(0,u)===E(o.d).slice(0,u)){for(i=p;i--;)o=P(o.times(o),u,1);if(null!=t)return f.precision=m,o;if(!(l<3&&x(o.d,u-r,h,l)))return P(o,f.precision=m,h,y=!0);f.precision=u+=10,n=s=a=new f(1),c=0,l++}o=a}}function $(e,t){var n,r,i,s,o,a,u,l,c,p,f,h=1,m=e,g=m.d,d=m.constructor,v=d.rounding,w=d.precision;if(m.s<0||!g||!g[0]||!m.e&&1==g[0]&&1==g.length)return new d(g&&!g[0]?-1/0:1!=m.s?NaN:g?0:m);if(c=null==t?(y=!1,w):t,d.precision=c+=10,r=(n=E(g)).charAt(0),!(Math.abs(s=m.e)<15e14))return l=F(d,c+2,w).times(s+\"\"),m=$(new d(r+\".\"+n.slice(1)),c-10).plus(l),d.precision=w,null==t?P(m,w,v,y=!0):m;for(;r<7&&1!=r||1==r&&3<n.charAt(1);)r=(n=E((m=m.times(e)).d)).charAt(0),h++;for(s=m.e,1<r?(m=new d(\"0.\"+n),s++):m=new d(r+\".\"+n.slice(1)),u=o=m=C((p=m).minus(1),m.plus(1),c,1),f=P(m.times(m),c,1),i=3;;){if(o=P(o.times(f),c,1),E((l=u.plus(C(o,new d(i),c,1))).d).slice(0,c)===E(u.d).slice(0,c)){if(u=u.times(2),0!==s&&(u=u.plus(F(d,c+2,w).times(s+\"\"))),u=C(u,new d(h),c,1),null!=t)return d.precision=w,u;if(!x(u.d,c-10,v,a))return P(u,d.precision=w,v,y=!0);d.precision=c+=10,l=o=m=C(p.minus(1),p.plus(1),c,1),f=P(m.times(m),c,1),i=a=1}u=l,i+=2}}function Z(e){return String(e.s*e.s/0)}function z(e,t){var n,r,i;for(0<(r=(t=-1<(n=t.indexOf(\".\"))?t.replace(\".\",\"\"):t).search(/e/i))?(n<0&&(n=r),n+=+t.slice(r+1),t=t.substring(0,r)):n<0&&(n=t.length),r=0;48===t.charCodeAt(r);r++);for(i=t.length;48===t.charCodeAt(i-1);--i);if(t=t.slice(r,i)){if(i-=r,e.e=n=n-r-1,e.d=[],r=(n+1)%_,n<0&&(r+=_),r<i){for(r&&e.d.push(+t.slice(0,r)),i-=_;r<i;)e.d.push(+t.slice(r,r+=_));t=t.slice(r),r=_-t.length}else r-=i;for(;r--;)t+=\"0\";e.d.push(+t),y&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function Q(e,t,n,r,i){var s,o,a,u,l=e.precision,c=Math.ceil(l/_);for(y=!1,u=n.times(n),a=new e(r);;){if(o=C(a.times(u),new e(t++*t++),l,1),a=i?r.plus(o):r.minus(o),r=C(o.times(u),new e(t++*t++),l,1),void 0!==(o=a.plus(r)).d[c]){for(s=c;o.d[s]===a.d[s]&&s--;);if(-1==s)break}s=a,a=r,r=o,o=s}return y=!0,o.d.length=c+1,o}function Y(e,t){for(var n=e;--t;)n*=e;return n}function W(e,t){var n=t.s<0,r=B(e,e.precision,1),i=r.times(.5);if((t=t.abs()).lte(i))return s=n?4:1,t;if((e=t.divToInt(r)).isZero())s=n?3:2;else{if((t=t.minus(e.times(r))).lte(i))return s=j(e)?n?2:3:n?4:1,t;s=j(e)?n?1:4:n?3:2}return t.minus(r).abs()}function J(e,t,n,r){var i,s,o,a,u,l,c,p,f=e.constructor,h=void 0!==n;if(h?(q(n,1,m),void 0===r?r=f.rounding:q(r,0,8)):(n=f.precision,r=f.rounding),e.isFinite()){for(h?(i=2,16==t?n=4*n-3:8==t&&(n=3*n-2)):i=t,0<=(o=(l=k(e)).indexOf(\".\"))&&(l=l.replace(\".\",\"\"),(p=new f(1)).e=l.length-o,p.d=A(k(p),10,i),p.e=p.d.length),s=a=(c=A(l,10,i)).length;0==c[--a];)c.pop();if(c[0]){if(o<0?s--:((e=new f(e)).d=c,e.e=s,c=(e=C(e,p,n,r,0,i)).d,s=e.e,u=L),o=c[n],p=i/2,u=u||void 0!==c[n+1],u=r<4?(void 0!==o||u)&&(0===r||r===(e.s<0?3:2)):p<o||o===p&&(4===r||u||6===r&&1&c[n-1]||r===(e.s<0?8:7)),c.length=n,u)for(;++c[--n]>i-1;)c[n]=0,n||(++s,c.unshift(1));for(a=c.length;!c[a-1];--a);for(o=0,l=\"\";o<a;o++)l+=g.charAt(c[o]);if(h){if(1<a)if(16==t||8==t){for(o=16==t?4:3,--a;a%o;a++)l+=\"0\";for(a=(c=A(l,i,t)).length;!c[a-1];--a);for(o=1,l=\"1.\";o<a;o++)l+=g.charAt(c[o])}else l=l.charAt(0)+\".\"+l.slice(1);l=l+(s<0?\"p\":\"p+\")+s}else if(s<0){for(;++s;)l=\"0\"+l;l=\"0.\"+l}else if(++s>a)for(s-=a;s--;)l+=\"0\";else s<a&&(l=l.slice(0,s)+\".\"+l.slice(s))}else l=h?\"0p+0\":\"0\";l=(16==t?\"0x\":2==t?\"0b\":8==t?\"0o\":\"\")+l}else l=Z(e);return e.s<0?\"-\"+l:l}function K(e,t){return e.length>t&&(e.length=t,1)}function ee(e){return new this(e).abs()}function te(e){return new this(e).acos()}function ne(e){return new this(e).acosh()}function re(e,t){return new this(e).plus(t)}function ie(e){return new this(e).asin()}function se(e){return new this(e).asinh()}function oe(e){return new this(e).atan()}function ae(e){return new this(e).atanh()}function ue(e,t){e=new this(e),t=new this(t);var n,r=this.precision,i=this.rounding,s=r+4;return e.s&&t.s?e.d||t.d?!t.d||e.isZero()?(n=t.s<0?B(this,r,i):new this(0)).s=e.s:!e.d||t.isZero()?(n=B(this,s,1).times(.5)).s=e.s:n=t.s<0?(this.precision=s,this.rounding=1,n=this.atan(C(e,t,s,1)),t=B(this,s,1),this.precision=r,this.rounding=i,e.s<0?n.minus(t):n.plus(t)):this.atan(C(e,t,s,1)):(n=B(this,s,1).times(0<t.s?.25:.75)).s=e.s:n=new this(NaN),n}function le(e){return new this(e).cbrt()}function ce(e){return P(e=new this(e),e.e+1,2)}function pe(e){if(!e||\"object\"!=typeof e)throw Error(u+\"Object expected\");for(var t,n,r=!0===e.defaults,i=[\"precision\",1,m,\"rounding\",0,8,\"toExpNeg\",-o,0,\"toExpPos\",0,o,\"maxE\",0,o,\"minE\",-o,0,\"modulo\",0,9],s=0;s<i.length;s+=3)if(t=i[s],r&&(this[t]=a[t]),void 0!==(n=e[t])){if(!(I(n)===n&&i[s+1]<=n&&n<=i[s+2]))throw Error(d+t+\": \"+n);this[t]=n}if(t=\"crypto\",r&&(this[t]=a[t]),void 0!==(n=e[t])){if(!0!==n&&!1!==n&&0!==n&&1!==n)throw Error(d+t+\": \"+n);if(n){if(\"undefined\"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(p);this[t]=!0}else this[t]=!1}return this}function fe(e){return new this(e).cos()}function he(e){return new this(e).cosh()}function me(e,t){return new this(e).div(t)}function ge(e){return new this(e).exp()}function de(e){return P(e=new this(e),e.e+1,3)}function ve(){var e,t,n=new this(0);for(y=!1,e=0;e<arguments.length;)if((t=new this(arguments[e++])).d)n.d&&(n=n.plus(t.times(t)));else{if(t.s)return y=!0,new this(1/0);n=t}return y=!0,n.sqrt()}function we(e){return e instanceof c||e&&\"[object Decimal]\"===e.name||!1}function ye(e){return new this(e).ln()}function be(e,t){return new this(e).log(t)}function Se(e){return new this(e).log(2)}function Me(e){return new this(e).log(10)}function Ne(){return n(this,arguments,\"lt\")}function Ee(){return n(this,arguments,\"gt\")}function qe(e,t){return new this(e).mod(t)}function xe(e,t){return new this(e).mul(t)}function Ae(e,t){return new this(e).pow(t)}function Ce(e){var t,n,r,i,s=0,o=new this(1),a=[];if(void 0===e?e=this.precision:q(e,1,m),r=Math.ceil(e/_),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(r));s<r;)429e7<=(i=t[s])?t[s]=crypto.getRandomValues(new Uint32Array(1))[0]:a[s++]=i%1e7;else{if(!crypto.randomBytes)throw Error(p);for(t=crypto.randomBytes(r*=4);s<r;)214e7<=(i=t[s]+(t[s+1]<<8)+(t[s+2]<<16)+((127&t[s+3])<<24))?crypto.randomBytes(4).copy(t,s):(a.push(i%1e7),s+=4);s=r/4}else for(;s<r;)a[s++]=1e7*Math.random()|0;for(r=a[--s],e%=_,r&&e&&(i=v(10,_-e),a[s]=(r/i|0)*i);0===a[s];s--)a.pop();if(s<0)a=[n=0];else{for(n=-1;0===a[0];n-=_)a.shift();for(r=1,i=a[0];10<=i;i/=10)r++;r<_&&(n-=_-r)}return o.e=n,o.d=a,o}function Le(e){return P(e=new this(e),e.e+1,this.rounding)}function Ie(e){return(e=new this(e)).d?e.d[0]?e.s:0*e.s:e.s||NaN}function Ue(e){return new this(e).sin()}function _e(e){return new this(e).sinh()}function Oe(e){return new this(e).sqrt()}function Re(e,t){return new this(e).sub(t)}function Te(e){return new this(e).tan()}function Pe(e){return new this(e).tanh()}function ke(e){return P(e=new this(e),e.e+1,1)}return(c=function e(t){var n,r,i;function s(e){var t,n,r,i=this;if(!(i instanceof s))return new s(e);if(e instanceof(i.constructor=s))return i.s=e.s,void(y?!e.d||e.e>s.maxE?(i.e=NaN,i.d=null):e.e<s.minE?(i.e=0,i.d=[0]):(i.e=e.e,i.d=e.d.slice()):(i.e=e.e,i.d=e.d&&e.d.slice()));if(\"number\"==(r=typeof e)){if(0===e)return i.s=1/e<0?-1:1,i.e=0,void(i.d=[0]);if(e<0?(e=-e,i.s=-1):i.s=1,e===~~e&&e<1e7){for(t=0,n=e;10<=n;n/=10)t++;return void(y?s.maxE<t?(i.e=NaN,i.d=null):t<s.minE?(i.e=0,i.d=[0]):(i.e=t,i.d=[e]):(i.e=t,i.d=[e]))}return 0*e!=0?(e||(i.s=NaN),i.e=NaN,void(i.d=null)):z(i,e.toString())}if(\"string\"!=r)throw Error(d+e);return 45===(n=e.charCodeAt(0))?(e=e.slice(1),i.s=-1):(43===n&&(e=e.slice(1)),i.s=1),(b.test(e)?z:function(e,t){var n,r,i,s,o,a,u,l;if(\"Infinity\"===t||\"NaN\"===t)return+t||(e.s=NaN),e.e=NaN,e.d=null,e;if(h.test(t))l=16,t=t.toLowerCase();else if(f.test(t))l=2;else{if(!w.test(t))throw Error(d+t);l=8}for(s=0<=(i=(t=0<(i=t.search(/p/i))?(a=+t.slice(i+1),t.substring(2,i)):t.slice(2)).indexOf(\".\")),n=e.constructor,s&&(i=(o=(t=t.replace(\".\",\"\")).length)-i,r=H(n,new n(l),i,2*i)),i=l=(u=A(t,l,U)).length-1;0===u[i];--i)u.pop();return i<0?new n(0*e.s):(e.e=D(u,l),e.d=u,y=!1,s&&(e=C(e,r,4*o)),a&&(e=e.times(Math.abs(a)<54?v(2,a):c.pow(2,a))),y=!0,e)})(i,e)}if(s.prototype=N,s.ROUND_UP=0,s.ROUND_DOWN=1,s.ROUND_CEIL=2,s.ROUND_FLOOR=3,s.ROUND_HALF_UP=4,s.ROUND_HALF_DOWN=5,s.ROUND_HALF_EVEN=6,s.ROUND_HALF_CEIL=7,s.ROUND_HALF_FLOOR=8,s.EUCLID=9,s.config=s.set=pe,s.clone=e,s.isDecimal=we,s.abs=ee,s.acos=te,s.acosh=ne,s.add=re,s.asin=ie,s.asinh=se,s.atan=oe,s.atanh=ae,s.atan2=ue,s.cbrt=le,s.ceil=ce,s.cos=fe,s.cosh=he,s.div=me,s.exp=ge,s.floor=de,s.hypot=ve,s.ln=ye,s.log=be,s.log10=Me,s.log2=Se,s.max=Ne,s.min=Ee,s.mod=qe,s.mul=xe,s.pow=Ae,s.random=Ce,s.round=Le,s.sign=Ie,s.sin=Ue,s.sinh=_e,s.sqrt=Oe,s.sub=Re,s.tan=Te,s.tanh=Pe,s.trunc=ke,(t=void 0===t?{}:t)&&!0!==t.defaults)for(i=[\"precision\",\"rounding\",\"toExpNeg\",\"toExpPos\",\"maxE\",\"minE\",\"modulo\",\"crypto\"],n=0;n<i.length;)t.hasOwnProperty(r=i[n++])||(t[r]=this[r]);return s.config(t),s}(a)).default=c.Decimal=c,r=new c(r),i=new c(i),\"function\"==typeof define&&define.amd?define(function(){return c}):\"undefined\"!=typeof module&&module.exports?(\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator&&(N[Symbol.for(\"nodejs.util.inspect.custom\")]=N.toString,N[Symbol.toStringTag]=\"Decimal\"),module.exports=c):(e=e||(\"undefined\"!=typeof self&&self&&self.self==self?self:window),t=e.Decimal,c.noConflict=function(){return e.Decimal=t,c},e.Decimal=c),c}(this)});\"undefined\"!=typeof module&&(module.exports=nerdamer),\"undefined\"!=typeof module&&(nerdamer=require(\"./nerdamer.core.js\"),require(\"./Calculus.js\")),function(){\"use strict\";var Z=nerdamer.getCore(),H=Z.PARSER,u=Z.groups.N,c=Z.groups.P,j=Z.groups.S,p=Z.groups.EX,C=Z.groups.FN,y=Z.groups.PL,X=Z.groups.CP,L=Z.groups.CB,I=Z.Utils.keys,U=Z.Utils.even,$=Z.Utils.variables,l=Z.Utils.format,b=Z.Utils.round,z=Z.Frac,_=Z.Utils.isInt,Q=Z.Symbol,Y=Z.Settings.CONST_HASH,f=Z.Utils.importFunctions();Z.Utils.evaluate;function W(e,t,n){if(Z.Utils.isSymbol(e))this.parse(e),this.variable=this.variable||t;else if(isNaN(e))\"string\"==typeof e&&this.parse(H.parse(e));else{if(n=n||0,void 0===t)throw new Z.exceptions.InvalidVariableNameError(\"Polynomial expects a variable name when creating using order\");this.coeffs=[],this.coeffs[n]=e,this.fill(e)}}function O(){this.factors={},this.length=0}function J(e,t,n){this.terms=t||[],this.coeff=e,this.map=n,this.sum=new Z.Frac(0),this.image=void 0}W.fromArray=function(e,t){if(void 0===t)throw new Z.exceptions.InvalidVariableNameError(\"A variable name must be specified when creating polynomial from array\");var n=new W;return n.coeffs=e,n.variable=t,n},W.fit=function(e,t,n,r,i,s){var o=new Array(i+1),a=n-t;o[0]=t,a-=(o[i]=e)*Math.pow(r,i);for(var u=i-1;0<u;u--){var l=Math.pow(r,u),c=a/l,c=Math.sign(c)*Math.floor(Math.abs(c));a-=c*l,o[u]=c}if(0!==a)return null;for(u=0;u<o.length;u++)o[u]=new z(o[u]);return W.fromArray(o,s)},W.prototype={parse:function(e,t){if(this.variable=$(e)[0],!e.isPoly())throw Z.exceptions.NerdamerTypeError(\"Polynomial Expected! Received \"+Z.Utils.text(e));if(t=t||[],(e=!e.power.absEquals(1)?H.expand(e):e).group===Z.groups.N)t[0]=e.multiplier;else if(e.group===Z.groups.S)t[e.power.toDecimal()]=e.multiplier;else for(var n in e.symbols){var r=e.symbols[n],n=r.power;if(Z.Utils.isSymbol(n))throw new Z.exceptions.NerdamerTypeError(\"power cannot be a Symbol\");n=r.group===u?0:n.toDecimal(),r.symbols?this.parse(r,t):t[n]=r.multiplier}this.coeffs=t,this.fill()},fill:function(e){e=Number(e)||0;for(var t=this.coeffs.length,n=0;n<t;n++)void 0===this.coeffs[n]&&(this.coeffs[n]=new z(e));return this},trim:function(){for(var e=this.coeffs.length;e--;){var t=this.coeffs[e],n=t.equals(0);if(!t||!n)break;if(0===e)break;this.coeffs.pop()}return this},modP:function(e){for(var t=this.coeffs.length,n=0;n<t;n++){var r=this.coeffs[n];if(r<0){for(var i,s=n;s<t;s++)if(0<this.coeffs[s]){i=this.coeffs[s];break}if(i){for(;n<s;s--)this.coeffs[s]=this.coeffs[s].subtract(new z(1)),this.coeffs[s-1]=this.coeffs[s-1].add(new z(e));r=this.coeffs[n]}}var o,a=r.mod(e),u=r.subtract(a).divide(e);u.equals(0)||(r=(r=this.coeffs[o=n+1]||new z(0)).add(u),this.coeffs[o]=new z(r),this.coeffs[n]=new z(a))}return this},add:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),n=0;n<t;n++){var r=this.coeffs[n]||new z(0),i=e.coeffs[n]||new z(0);this.coeffs[n]=r.add(i)}return this},subtract:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),n=0;n<t;n++){var r=this.coeffs[n]||new z(0),i=e.coeffs[n]||new z(0);this.coeffs[n]=r.subtract(i)}return this},divide:function(e){for(var t=this.variable,n=Z.Utils.arrayClone(this.coeffs),r=Z.Utils.arrayClone(e.coeffs),i=n.length,s=r.length-1,o=[],a=0;a<i;a++){var u=i-(a+1),l=u-s,c=n[u].divide(r[s]);if(l<0)break;o[l]=c;for(var p=0;p<=s;p++)n[p+l]=n[p+l].subtract(r[p].multiply(c))}e=W.fromArray(n,t||\"x\").trim();return[W.fromArray(o,t||\"x\"),e]},multiply:function(e){for(var t=this.coeffs.length,n=e.coeffs.length,r=[],i=0;i<t;i++)for(var s=this.coeffs[i],o=0;o<n;o++){var a=i+o,u=e.coeffs[o],l=r[a]||new z(0);r[a]=l.add(s.multiply(u))}return this.coeffs=r,this},isZero:function(){for(var e=this.coeffs.length,t=0;t<e;t++)if(!this.coeffs[t].equals(0))return!1;return!0},sub:function(e){for(var t=new z(0),n=this.coeffs.length,r=0;r<n;r++){var i=this.coeffs[r];i.equals(0)||(t=t.add(i.multiply(new z(Math.pow(e,r)))))}return t},clone:function(){var e=new W;return e.coeffs=this.coeffs,e.variable=this.variable,e},deg:function(){return this.trim(),this.coeffs.length-1},lc:function(){return this.coeffs[this.deg()].clone()},monic:function(){for(var e=this.lc(),t=this.coeffs.length,n=0;n<t;n++)this.coeffs[n]=this.coeffs[n].divide(e);return this},gcd:function(e){if(this.coeffs.length-1<e.coeffs.length-1)return e.gcd(this);for(var t=this;!e.isZero();){var n=e.clone();e=(t=t.clone()).divide(n)[1],t=n}var r=Z.Math2.QGCD.apply(null,t.coeffs);if(!r.equals(1))for(var i=t.coeffs.length,s=0;s<i;s++)t.coeffs[s]=t.coeffs[s].divide(r);return t},diff:function(){for(var e=[],t=this.coeffs.length,n=1;n<t;n++)e.push(this.coeffs[n].multiply(new z(n)));return this.coeffs=e,this},integrate:function(){for(var e=[0],t=this.coeffs.length,n=0;n<t;n++){var r=new z(n+1);e[r]=this.coeffs[n].divide(r)}return this.coeffs=e,this},gcf:function(e){for(var t=[],n=0;n<this.coeffs.length;n++){var r=this.coeffs[n];r.equals(0)||-1!==t.indexOf(r)||t.push(r)}var i=[Z.Math2.QGCD.apply(void 0,t),function(e){for(var t=0;t<e.length;t++)if(!e[t].equals(0))return t}(this.coeffs)].toDecimal();return e&&((e=[])[i[1]-1]=i[0],i=W.fromArray(e,this.variable).fill()),i},quad:function(e){var t=[];if(3<this.coeffs.length)throw new Error(\"Cannot calculate quadratic order of \"+(this.coeffs.length-1));if(0===this.coeffs.length)throw new Error(\"Polynomial array has no terms\");var n=this.coeffs[2]||0,r=this.coeffs[1]||0,i=r*r-4*n*this.coeffs[0];return i<0&&!e||(t[0]=(-r+Math.sqrt(i))/(2*n),t[1]=(-r-Math.sqrt(i))/(2*n)),t},squareFree:function(){for(var e=this.clone(),t=1,n=e.clone().diff(),r=e.clone().gcd(n),i=e.divide(r)[0],s=W.fromArray([new z(1)],e.variable);!r.equalsNumber(1);){var o=i.gcd(r),a=i.divide(o)[0];if(!a.equalsNumber(1)&&1<t){for(var u=a.clone(),l=1;l<t;l++)u.multiply(a.clone());a=u}s=s.multiply(a),t++,r=r.divide(i=o)[0]}return[s,i,t]},toSymbol:function(){var e=this.coeffs.length,t=this.variable;if(0===e)return new Z.Symbol(0);for(var n=e-1,r=\"\",i=0;i<e;i++){var s=i===n?\"\":\"+\",o=this.coeffs[i];o.equals(0)||(r+=o+\"*\"+t+\"^\"+i+s)}return H.parse(r)},equalsNumber:function(e){return this.trim(),1===this.coeffs.length&&this.coeffs[0].toDecimal()===String(e)},toString:function(){return this.toSymbol().toString()}},Q.prototype.coeffs=function(e,t){t&&!this.isPoly(!0)&&H.error(\"Polynomial expected when requesting coefficients with order\"),e=e||[];var n,r=this.clone().distributeMultiplier();if(r.isComposite())for(var i in r.symbols){i=r.symbols[i];i.isComposite()?i.clone().distributeMultiplier().coeffs(e,t):t?e[i.isConstant()?0:i.power.toDecimal()]=i.multiplier:e.push(i.multiplier)}else t?e[r.isConstant(!0)?0:r.power.toDecimal()]=r.multiplier:r.group===L&&r.isImaginary()?(n=new Q(r.multiplier),r.each(function(e){(e.isConstant(!0)||e.imaginary)&&(n=H.multiply(n,e))}),e.push(n)):e.push(r.multiplier);if(t)for(var s=0;s<e.length;s++)void 0===e[s]&&(e[s]=new Q(0));return e},Q.prototype.tBase=function(e){if(void 0===e)throw new Error(\"Symbol.tBase requires a map object!\");for(var t=[],n=this.collectSymbols(null,null,null,!0),r=n.length,i=0;i<r;i++){var s=n[i],o=s.group,a=new J(s.multiplier,[],e);if(o===L)for(var u in s.symbols){var l=s.symbols[u];a.terms[e[u]]=l.power}else a.terms[e[s.value]]=s.power;t.push(a.fill()),a.updateCount()}return t},Q.prototype.altVar=function(e){var t=this.multiplier.toString(),n=this.power.toString();return(\"1\"===t?\"\":t+\"*\")+e+(\"1\"===n?\"\":\"^\"+n)},Q.prototype.sameVars=function(e){if(!this.symbols&&this.group!==e.group)return!1;for(var t in this.symbols){var n=this.symbols[t],t=e.symbols[t];if(!t)return!1;if(n.value!==t.value)return!1}return!0},Q.prototype.groupTerms=function(r){var i,s,o;r=String(r);var a=[];return this.each(function(e){if(e.group===y){o=e.groupTerms(r);for(var t=0;t<o.length;t++){var n=o[t];n&&(a[t]=n)}}else i=Z.Utils.decompose_fn(e,r,!0),s=i.x.value===r?Number(i.x.power):0,a[s]=H.add(a[s]||new Q(0),i.a)}),a},Q.prototype.collectFactors=function(){var t=[];return this.group===L?this.each(function(e){t.push(e.clone())}):t.push(this.clone()),t},O.prototype.getNumberSymbolics=function(){var t=0;return this.each(function(e){e.isConstant(!0)||t++}),t},O.prototype.add=function(e){if(e.equals(0))return this;if(e.equals(-1)&&0<this.length){var t=Z.Utils.firstObject(this.factors,null,!0);return this.add(H.symfunction(Z.Settings.PARENTHESIS,[t.obj]).negate()),delete this.factors[t.key],this.length--,this}if(e.group===L){var n=this;e.multiplier.equals(1)||n.add(new Q(e.multiplier)),e.each(function(e){n.add(e)})}else{this.preAdd&&(e=this.preAdd(e));t=(e=this.pFactor?H.pow(e,new Q(this.pFactor)):e).isConstant();if(t&&e.equals(1))return this;t=t?e.value:e.text();t in this.factors?(this.factors[t]=H.multiply(this.factors[t],e),this.factors[t].equals(1)&&(delete this.factors[t],this.length--)):(this.factors[t]=e,this.length++)}return this},O.prototype.toSymbol=function(){for(var e=new Q(1),t=Object.values(this.factors).sort(function(e,t){return e.group>t.group}),n=0,r=t.length;n<r;n++)var i=t[n],i=i.power.equals(1)&&\"\"!==i.fname?H.symfunction(Z.PARENTHESIS,[i]):i,e=H.multiply(e,i);return e=\"\"===e.fname?Q.unwrapPARENS(e):e},O.prototype.merge=function(e){for(var t in e)t in this.factors?this.factors[t]=H.multiply(this.factors[t],e[t]):this.factors[t]=e[t];return this},O.prototype.each=function(e){for(var t in this.factors){var n=this.factors[t];n.fname===Z.PARENTHESIS&&n.isLinear()&&(n=n.args[0]),e.call(this,n,t)}return this},O.prototype.count=function(){return I(this.factors).length},O.prototype.clean=function(){try{var e=Z.Settings.CONST_HASH;this.factors[e].lessThan(0)&&(this.factors[e].equals(-1)?delete this.factors[e]:this.factors[e].negate(),this.each(function(e){e.negate()}))}catch(e){}},O.prototype.toString=function(){return this.toSymbol().toString()},J.prototype.updateCount=function(){this.count=this.count||0;for(var e=0;e<this.terms.length;e++)this.terms[e].equals(0)||this.count++;return this},J.prototype.getVars=function(){for(var e=[],t=0;t<this.terms.length;t++){var n=this.terms[t];this.getRevMap();n.equals(0)||e.push(this.rev_map[t])}return e.join(\" \")},J.prototype.len=function(){return void 0===this.count&&this.updateCount(),this.count},J.prototype.toSymbol=function(e){e=e||this.getRevMap();for(var t=new Q(this.coeff),n=0;n<this.terms.length;n++){var r=e[n],i=this.terms[n];i.equals(0)||r===Y||((r=new Q(r)).power=i,t=H.multiply(t,r))}return t},J.prototype.getRevMap=function(){if(this.rev_map)return this.rev_map;var e,t={};for(e in this.map)t[this.map[e]]=e;return this.rev_map=t},J.prototype.generateImage=function(){return this.image=this.terms.join(\" \"),this},J.prototype.getImg=function(){return this.image||this.generateImage(),this.image},J.prototype.fill=function(){for(var e=this.map.length,t=0;t<e;t++)void 0===this.terms[t]?this.terms[t]=new Z.Frac(0):this.sum=this.sum.add(this.terms[t]);return this},J.prototype.divide=function(e){for(var t=this.coeff.divide(e.coeff),n=this.terms.length,r=new J(t,[],this.map),i=0;i<n;i++)r.terms[i]=this.terms[i].subtract(e.terms[i]),r.sum=r.sum.add(r.terms[i]);return r},J.prototype.multiply=function(e){for(var t=this.coeff.multiply(e.coeff),n=this.terms.length,r=new J(t,[],this.map),i=0;i<n;i++)r.terms[i]=this.terms[i].add(e.terms[i]),r.sum=r.sum.add(r.terms[i]);return r},J.prototype.isZero=function(){return this.coeff.equals(0)},J.prototype.toString=function(){return\"{ coeff: \"+this.coeff.toString()+\", terms: [\"+this.terms.join(\",\")+\"]: sum: \"+this.sum.toString()+\", count: \"+this.count+\"}\"},Z.Utils.toMapObj=function(e){for(var t=0,n={},r=0;r<e.length;r++){var i=e[r];void 0===n[i]&&(n[i]=t,t++)}return n.length=t,n},Z.Utils.filledArray=function(e,t,n){for(var r=[];t--;)r[t]=n?new n(e):e;return r},Z.Utils.arrSum=function(e){for(var t=0,n=e.length,r=0;r<n;r++)t+=e[r];return t},Z.Utils.haveIntersection=function(e,t){var n;return t.length>e.length&&(n=t,t=e,e=n),e.some(function(e){return-1<t.indexOf(e)})},Z.Utils.subFunctions=function(e,r){r=r||{};var i=[];return e.each(function(e){var t,n;e.group===C||e.previousGroup===C?(t=Z.Utils.text(e,\"hash\"),(n=r[t])?i.push(e.altVar(n)):(n=e.fname+I(r).length,r[t]=n,i.push(e.altVar(n)))):e.group===L||e.group===y||e.group===X?i.push(Z.Utils.subFunctions(e,r)):i.push(e.text())}),e.group===X||e.group===y?e.altVar(Z.Utils.inBrackets(i.join(\"+\"))):e.group===L?e.altVar(Z.Utils.inBrackets(i.join(\"*\"))):e.text()},Z.Utils.getFunctionsSubs=function(e){var t,n={};for(t in e)n[e[t]]=H.parse(t);return n};var R=Z.Algebra={version:\"1.4.6\",proots:function(e,l){l=l||7;function t(e,t,n){for(var r=function(e,t){var n=e.slice(0);if(e.unshift(t),100<t)throw new Z.exceptions.ValueLimitExceededError(\"This utility accepts polynomials of degree up to 100. \");var r=[],e={};for(e.Degree=t,p=0;p<t;p++)r.push(0);var i=r.slice(0);function V(e,t,n,r,i,s){i[0]=s.b=r[0],i[1]=s.a=-(t*s.b)+r[1];for(var o=2;o<e;o++)i[o]=-(t*s.a+n*s.b)+r[o],s.b=s.a,s.a=i[o]}function H(e,t,n,r,i,s,o,a,u){var l=new Object,c=3;return l.b=l.a=0,V(t,o,a,s,u,l),i.c=l.a,i.d=l.b,Math.abs(i.c)<=100*e*Math.abs(s[t-1])&&Math.abs(i.d)<=100*e*Math.abs(s[t-2])||(i.h=a*r,Math.abs(i.d)>=Math.abs(i.c)?(c=2,i.e=n/i.d,i.f=i.c/i.d,i.g=o*r,i.a3=i.e*(i.g+n)+i.h*(r/i.d),i.a1=-n+i.f*r,i.a7=i.h+(i.f+o)*n):(c=1,i.e=n/i.c,i.f=i.d/i.c,i.g=i.e*o,i.a3=i.e*n+(i.g+i.h/i.c)*r,i.a1=-(n*(i.d/i.c))+r,i.a7=i.g*i.d+i.h*i.f+n)),c}function j(e,t,n,r,i,s,o,a,u){if(3!=n)if(r=1==n?i:r,Math.abs(s.a1)>10*e*Math.abs(r)){s.a7/=s.a1,s.a3/=s.a1,o[0]=u[0],o[1]=-(u[0]*s.a7)+u[1];for(l=2;l<t;l++)o[l]=-(u[l-1]*s.a7)+a[l-2]*s.a3+u[l]}else{o[0]=0,o[1]=-(u[0]*s.a7);for(l=2;l<t;l++)o[l]=-(u[l-1]*s.a7)+a[l-2]*s.a3}else{o[1]=o[0]=0;for(var l=2;l<t;l++)o[l]=a[l-2]}}function X(e,t,n,r,i,s,o,a,u,l,c,p,f,h,m,g,d){var v;t.b=t.a=0,3!=e&&(a=2!=e?(v=n+f*o+p*l,a+(f+h*l)*u):(v=(n+c)*l+p,(l+f)*a+h*u),u=-(m[g-1]/d[g]),0!=(v=-(i=h*(m=-(m[g-2]+u*d[g-1])/d[g])*r-((d=u*s)+(g=u*u*i)))+a+u*v)&&(t.a=-(f*(g+d)+h*(u*r+m*s))/v+f,t.b=h*(1+i/v)))}function $(e,t,n,r){var i,s,o;(r.sr=r.si=r.lr=r.li=0)!=e?0!=n?(i=t/2,s=Math.abs(i)<Math.abs(n)?(o=-(o=0<=n?e:-e)+i*(i/Math.abs(n)),Math.sqrt(Math.abs(o))*Math.sqrt(Math.abs(n))):(o=-e/i*(n/i)+1,Math.sqrt(Math.abs(o))*Math.abs(i)),0<=o?(r.lr=(-i+(s=0<=i?-s:s))/e,r.sr=0!=r.lr?n/r.lr/e:r.sr):(r.lr=r.sr=-i/e,r.si=Math.abs(s/e),r.li=-r.si)):r.lr=-t/e:r.sr=0!=t?-n/t:r.sr}function G(e,t,n,r,i,s,o,a,u,l,c,p){var f,h,m,g,d,v,w,y,b,S,M,N,E,q,x,A,C,L,I,U,_,O,R,T,P,k=new Object,D=new Object,F=new Array(t),B=new Array(t),G=1;for(p.NZ=0,g=m=.25,d=r,y=i,k.b=k.a=0,V(u,c,i,a,l,k),f=k.a,h=k.b,D.h=D.g=D.f=D.e=D.d=D.c=D.a7=D.a3=D.a1=0,R=H(e,o,f,h,D,s,c,i,F),U=0;U<n;U++){if(L=1,j(e,o,R,f,h,D,s,F,l),X(R=H(e,o,f,h,D,s,c,i,F),k,f,D.a1,D.a3,D.a7,h,D.c,D.d,D.f,D.g,D.h,c,i,s,o,a),x=k.a,C=A=k.b,S=0!=s[o-1]?-(a[o]/s[o-1]):0,M=E=1,0!=U&&3!=R&&(T=(q=(E=0!=C?Math.abs((C-y)/C):E)<w?E*w:1)<g?1:0,(_=(N=(M=0!=S?Math.abs((S-d)/S):M)<v?M*v:1)<m?1:0)||T)){for(I=0;I<o;I++)B[I]=s[I];for(b=S,O=P=0;;){if(!L||0!=(L=0)||!_||T&&!(N<q)){if(!function(e,t,n,r,i,s,o,a,u,l,c,p){var f,h,m,g,d,v,w,y,b,S=new Object,M=0,N=0;n.NZ=0,g=r,v=i;do{if(S.li=S.lr=S.si=S.sr=0,$(1,g,v,S),n.szr=S.sr,n.szi=S.si,n.lzr=S.lr,n.lzi=S.li,Math.abs(Math.abs(n.szr)-Math.abs(n.lzr))>.01*Math.abs(n.lzr))break;for(V(o,g,v,u,s,a),w=Math.abs(-(n.szr*a.b)+a.a)+Math.abs(n.szi*a.b),y=Math.sqrt(Math.abs(v)),f=2*Math.abs(s[0]),d=-(n.szr*a.b),b=1;b<t;b++)f=f*y+Math.abs(s[b]);if(w<=20*(f=(9*(f=f*y+Math.abs(d+a.a))+2*Math.abs(d)-7*(Math.abs(a.a+d)+y*Math.abs(a.b)))*e)){n.NZ=2;break}if(20<++M)break;if(2<=M&&m<=.01&&h<=w&&!N){for(V(o,g-=g*(m=m<e?Math.sqrt(e):Math.sqrt(m)),v+=v*m,u,s,a),b=0;b<5;b++)j(e,t,H(e,t,a.a,a.b,c,p,g,v,l),a.a,a.b,c,p,l,s);N=1,M=0}}while(h=w,j(e,t,H(e,t,a.a,a.b,c,p,g,v,l),a.a,a.b,c,p,l,s),X(H(e,t,a.a,a.b,c,p,g,v,l),a,a.a,c.a1,c.a3,c.a7,a.b,c.c,c.d,c.f,c.g,c.h,g,v,p,t,u),d=a.a,0!=(w=a.b)&&(m=Math.abs((-v+w)/w),g=d,v=w),0!=w)}(e,o,p,x,A,l,u,k,a,F,D,s),f=k.a,h=k.b,0<p.NZ)return;if(G=P=1,g*=.25,O||!_)G=0;else for(I=0;I<o;I++)s[I]=B[I]}if(0!=G){if(k.a=b,G=function(e,t,n,r,i,s,o,a,u){var l,c,p,f,h,m,g,d,v,w,y,b=r-1;for(t.NZ=y=v=0,g=n.a;;){for(m=i[0],o[0]=m,w=1;w<s;w++)o[w]=m=m*g+i[w];for(p=Math.abs(m),f=Math.abs(g),l=.5*Math.abs(o[0]),w=1;w<s;w++)l=l*f+Math.abs(o[w]);if(p<=20*e*(2*l-p)){t.NZ=1,t.szr=g,t.szi=0;break}if(10<++y)break;if(2<=y&&Math.abs(d)<=.001*Math.abs(-d+g)&&h<p){v=1,t.a=g;break}for(h=p,u[0]=c=a[0],w=1;w<r;w++)u[w]=c=c*g+a[w];if(Math.abs(c)>10*Math.abs(a[b])*e)for(d=-m/c,a[0]=o[0],w=1;w<r;w++)a[w]=d*u[w-1]+o[w];else for(a[0]=0,w=1;w<r;w++)a[w]=u[w-1];for(c=a[0],w=1;w<r;w++)c=c*g+a[w];g+=d=Math.abs(c)>10*Math.abs(a[b])*e?-m/c:0}return v}(e,p,k,o,a,u,l,s,F),b=k.a,0<p.NZ)return;if(O=1,m*=.25,0!=G){x=-(b+b),A=b*b;continue}}for(I=0;I<o;I++)s[I]=B[I];if(!T||P)break}V(u,c,i,a,l,k),R=H(e,o,f=k.a,h=k.b,D,s,c,i,F)}y=C,d=S,w=E,v=M}}!function(e,t,n,r){for(var i,s,o,a,u,l,c,p,f,h,m,g,d,v,w=e.Degree,y=.017453292519943295,b=Math.LN2,S=e.Degree+1,M=new Array(S),N=new Array(S),E=new Array(S),q=new Array(S),x=new Object,A=new Object,C=1;i=C,1<(l=1+(C/=2)););var L=Number.MIN_VALUE/i,I=Math.cos(94*y),U=Math.sin(94*y),_=Math.sqrt(.5),O=-_;for(A.NZ=f=0,A.szr=A.szi=A.lzr=A.lzi=0;0==t[w];)n[f]=r[f]=0,w--,f++;for(d=w+1;1<=w;){if(w<=2){w<2?(n[e.Degree-1]=-(t[1]/t[0]),r[e.Degree-1]=0):($(t[x.li=x.lr=x.si=x.sr=0],t[1],t[2],x),n[e.Degree-2]=x.sr,r[e.Degree-2]=x.si,n[e.Degree-1]=x.lr,r[e.Degree-1]=x.li);break}for(a=0,u=Number.MAX_VALUE,R=0;R<d;R++)a<(T=Math.abs(t[R]))&&(a=T),0!=T&&T<u&&(u=T);if(((m=L/u)<=1&&10<=a||1<m&&Number.MAX_VALUE/m>=a)&&(m=0==m?Number.MIN_VALUE:m,m=Math.floor(Math.log(m)/b+.5),1!=(o=Math.pow(2,m))))for(R=0;R<d;R++)t[R]*=o;for(var R=0;R<d;R++)N[R]=Math.abs(t[R]);N[w]=-N[w],g=w-1,T=Math.exp((Math.log(-N[w])-Math.log(N[0]))/w),P=T=0!=N[g]?(P=-N[w]/N[g])<T?P:T:T;do{for(var T,P=.1*(T=P),k=N[0],R=1;R<d;R++)k=k*P+N[R]}while(0<k);0;do{for(var D=k=N[0],R=1;R<w;R++)D=T*D+(k=T*k+N[R])}while(T-=s=(k=T*k+N[w])/D,.005<Math.abs(s/T));for(var F=T,R=1;R<w;R++)M[R]=(w-R)*t[R]/w;for(M[0]=t[0],C=t[w],l=t[g],v=0==M[g]?1:0,h=0;h<5;h++)if(c=M[g],v){for(R=0;R<g;R++)M[f=g-R]=M[f-1];v=(M[0]=0)==M[g]?1:0}else{for(var B=-C/c,R=0;R<g;R++)M[f=g-R]=B*M[f-1]+t[f];M[0]=t[0],v=Math.abs(M[g])<=Math.abs(l)*i*10?1:0}for(R=0;R<w;R++)q[R]=M[R];for(h=1;h<=20;h++){if(p=-U*O+I*_,O=U*_+I*O,G(i,S,20*h,p=F*(_=p),F,M,w,t,d,E,-2*p,A),0!=A.NZ){n[f=e.Degree-w]=A.szr,r[f]=A.szi;for(w=(d-=A.NZ)-1,R=0;R<d;R++)t[R]=E[R];1!=A.NZ&&(n[f+1]=A.lzr,r[f+1]=A.lzi);break}for(R=0;R<w;R++)M[R]=q[R]}if(20<h){e.Degree-=w;break}}}(e,n,i,r);var s=r.length;for(p=0;p<s;p++){var o=b(r[p],l+8),a=b(i[p],l+8);a=2<l-String(a).length?a:i[p];var u=o<0?\"-\":\"\";0===a&&(a=\"\"),0===o&&(o=\"\"),o=1===Math.abs(o)?u+\"i\":o?o+\"*i\":\"\";o=a&&o?a+\"+\"+o:a+o;i[p]=o.replace(/\\+\\-/g,\"-\")}return i}(e,n).concat(s),i=0;i<0;i++)r.unshift(0);return r}var n,s=[];if(e instanceof Q&&e.isPoly()){if(e.distributeMultiplier(),e.group===y&&(n=Z.Utils.arrayMin(I(e.symbols)),n=e.symbols[n].clone().toUnitMultiplier(),e=H.expand(H.divide(e,n)),s.push(0)),e.group===Z.groups.S)return[0];e.group===Z.groups.PL&&(a=I(e.symbols),r=Z.Utils.arrayMin(a),e=Z.PARSER.divide(e,Z.PARSER.parse(e.value+\"^\"+r)));for(var r=I(e.symbols).sort().pop(),i=e.group===Z.groups.PL?e.symbols:e.symbols[r],o=i.group,a=o===j?[i.power.toDecimal()]:I(i.symbols),u=[],c=Z.Utils.arrayMax(a),p=1;p<=c;p++){var f=0;-1!==a.indexOf(p+\"\")&&(f=(o===j?i:i.symbols[p]).multiplier),u.unshift(f)}return u.push(e.symbols[Y].multiplier),i.group===j&&(u[0]=i.multiplier),t(u,0,c)}if(Z.Utils.isArray(e)){for(var h=e,u=[],a=[],m=0,p=0;p<h.length;p++){for(var g=h[p][0],d=h[p][1],v=d-m-1,w=0;w<v;w++)u.unshift(0);u.unshift(g),0!==d&&a.push(d),m=d}return t(u,0,c=Math.max.apply(void 0,a))}throw new Z.exceptions.NerdamerTypeError(\"Cannot calculate roots. Symbol must be a polynomial!\")},roots:function(e){if(e.isConstant(!0,!0))return Z.Utils.nroots(e);e=R.proots(e).map(function(e){return H.parse(e)});return Z.Vector.fromArray(e)},froot:function(a,e,u){return function(e){for(var t=u||Z.Utils.build(Z.Calculus.diff(a.clone())),n=a instanceof Function?a:Z.Utils.build(a),r=!1,i=0;!r;){var s=e-n(e)/t(e),o=Math.abs(s)-Math.abs(e);e=s,Math.abs(o)<1e-12?r=!0:1e4<i&&(r=!(e=null)),i++}return e}(Number(e))},quad:function(e,t,n){function r(e,t,n,r){return H.parse(\"-(\"+t+\"+\"+r+\"*sqrt((\"+t+\")^2-4*(\"+e+\")*(\"+n+\")))/(2*\"+e+\")\")}return[r(e,t,n,1),r(e,t,n,-1)]},sumProd:function(e,t){return R.quad(-t,e,-1).map(function(e){return e.invert()})},coeffs:function(e,t,n){t=String(t),e=H.expand(e),n=n||[new Q(0)],e.group===p&&e.contains(t,!0)&&H.error(\"Unable to get coefficients using expression \"+e.toString());var r,i=$(e);if(1!==i.length||i[0]!==t||e.isImaginary())t||H.error(\"Polynomial contains more than one variable. Please specify which variable is to be used!\"),-1===i.indexOf(t)?n[0]=H.add(e,n[0]):(n=n||[new Q(0)],e.group===L?((r=e.symbols[t])||H.error(\"Expression is not a polynomial!\"),i=Number(r.power),((l=H.divide(e.clone(),r.clone())).contains(t,!0)||i<0||!_(i))&&H.error(\"Expression is not a polynomial!\"),(u=n[i])&&(l=H.add(u,l)),n[i]=l):e.group===X&&e.each(function(e){R.coeffs(e.clone(),t,n)},!0));else for(var s=new W(e).coeffs.map(function(e){return new Q(e)}),o=0,a=s.length;o<a;o++){var u,l=s[o];(u=n[o])&&(l=H.add(u,l)),n[o]=l}for(o=0,a=n.length;o<a;o++)void 0===n[o]&&(n[o]=new Q(0));return n},polyPowers:function(e,t,n){if(n=n||[],(s=e.group)===y&&t===e.value)n=n.concat(I(e.symbols));else if(s===X)for(var r in e.symbols){var i=e.symbols[r],s=i.group,r=i.value;s===j&&t===r?n.push(i.power):s===y||s===X?n=R.polyPowers(i,t,n):s===L&&i.contains(t)?(i=i.symbols[t])&&n.push(i.power):s!==u&&t===r||n.push(0)}else s===L&&e.contains(t)&&n.push(Z.Utils.decompose_fn(e,t,!0).x.power);return Z.Utils.arrayUnique(n).sort()},Factor:{split:function(e){var n=new Q(1),r=new Q(1);return R.Factor.factor(e,new O).each(function(e){var t=H.parse(e);e.isConstant(!0)?n=H.multiply(n,t):r=H.multiply(r,t)}),[n,r]},mix:function(e,t){for(var n=I(e),r=n.length,i=[],s=0;s<r;s++){for(var o=n[s],a=e[o],u=i.length,l=0;l<u;l++){var c=i[l]*o;i.push(c),t&&i.push(-c)}for(l=1;l<=a;l++)i.push(Math.pow(o,l))}return i},common:function(e,t){try{if(e.group===X){for(var n=H.expand(e.clone(),!0).collectSymbols(null,null,function(e,t){return(t.length||1)-(e.length||1)}),r={},i=[],s=0;s<n.length;s++){var o=n[s];i.push(o.multiplier.clone()),o.each(function(e){var t=Number(e.power);if(isNaN(t))throw new Error(\"exiting\");e.value in r?(t<r[e.value][0]&&(r[e.value][0]=t),r[e.value][1].push(e)):r[e.value]=[t,[e]]})}var a,u=new Q(1);for(a in r)r[a][1].length===n.length&&(u=H.multiply(u,H.pow(new Q(a),new Q(r[a][0]))));var l=Z.Math2.QGCD.apply(null,i);if(!l.equals(1)){t.add(new Q(l));for(s=0;s<n.length;s++)n[s].multiplier=n[s].multiplier.divide(l)}if(!u.equals(1)){t.add(u),e=new Q(0);for(s=0;s<n.length;s++)e=H.add(e,H.divide(n[s],u.clone()))}}}catch(e){}return e},zeroes:function(e,t){function n(){throw new Z.exceptions.ValueLimitExceededError(\"Exiting\")}try{for(var r,i,s,o=(e=H.expand(e.clone())).toString(),a=$(e),u=new Q(0),l=[],c=[],p=0,f=a.length;p<a.length;p++){for(var h={},m=0;m<f;m++)p!==m&&(h[a[m]]=0);var g,d=(g=H.parse(o,h)).power;_(d)||n(),l.push(g),c.push(g.power)}Z.Utils.allSame(c)?(i=e.length,2===(s=l.length)&&(r=new z(c[0]/(i-1))),3===s&&(r=new z(c[0]/Math.round((Math.sqrt(8*i-1)-3)/2)))):r=Z.Math2.QGCD.apply(null,c),_(r)||n();for(p=0;p<l.length;p++){var v=l[p],w=v.power.clone().divide(r);v.multiplier=new z(Math.pow(v.multiplier,1/w)),v.power=r.clone(),u=H.add(u,v)}if(u.group!==X)return e;for(;;){var y=R.div(e.clone(),u.clone());if(!y[1].equals(0))break;if(e=y[0],t.add(u.clone()),e.equals(1))break}}catch(o){}return e},factor:function(e,t){if(e.isConstant())return Z.Math2.factor(e);var n,r,i=H.parse(e),t=R.Factor._factor(i,t);return t.equals(e)||t.group===L&&(n=new Q(1),e=H.parse(t.power),r=H.parse(t.multiplier),t.toUnitMultiplier(),t.multiplier.lessThan(0)&&(n.negate(),t.negate()),t.each(function(e){e=H.parse(R.Factor._factor(e));e.group===L?(r=H.multiply(r,Q.create(e.multiplier)),e.each(function(e){e=H.parse(R.Factor._factor(e));n=H.multiply(n,e),e.group===L&&(r=H.multiply(r,Q.create(e.multiplier)))})):n=H.multiply(n,e)}),t=H.pow(H.multiply(r,n),e)),t},quadFactor:function(e,t){if(e.isPoly()&&R.degree(e.equals(2))){var n=Z.Utils.variables(e)[0],r=R.coeffs(e,n),i=R.Factor._factor(r[2].clone());if(i.group===L){var s=i.collectSymbols();if(2<s.length)return e;var o=H.multiply(H.parse(r[0]),H.parse(s[0])),a=H.parse(r[1]).negate(),i=H.parse(s[1]),o=R.quad(i,a,o).filter(function(e){if(Z.Utils.isInt(e))return e});1===o.length&&(o=o[0],r=H.divide(r[0],H.parse(o)),Z.Utils.isInt(r)&&(t.add(H.parse(l(\"({0})*({1})+({2})\",s[1],n,r))),t.add(H.parse(l(\"({0})*({1})+({2})\",s[0],n,o))),e=new Q(1)))}}return e},cubeFactor:function(e,t){var n,r,i,s,o,a;return!e.isComposite()||2===(a=e.collectSymbols()).length&&(n=a[0].sign(),r=a[0].clone().abs(),i=a[1].sign(),s=a[1].clone().abs(),r.isCube()&&s.isCube()&&(n<i&&([n,i]=[i,n],[r,s]=[s,r]),o=H.parse(r.getNth(3)),a=H.parse(s.getNth(3)),o=H.multiply(H.expand(H.pow(r.clone().toUnitMultiplier(),H.parse(\"1/3\"))),o),a=H.multiply(H.expand(H.pow(s.clone().toUnitMultiplier(),H.parse(\"1/3\"))),a),1===n&&-1===i?(t.add(H.parse(l(\"(({0})-({1}))\",o,a))),t.add(H.parse(l(\"(({0})^2+({0})*({1})+({1})^2)\",o,a))),e=Q(1)):1===n&&1===i&&(t.add(H.parse(l(\"(({0})+({1}))\",o,a))),t.add(H.parse(l(\"(({0})^2-({0})*({1})+({1})^2)\",o,a))),e=Q(1)))),e},_factor:function(e,t){var n;e.group;if(e.group===C){var r=e.args[0];if(r.group===j&&r.isSimple())return e}else if(e.group===j&&e.isSimple())return e;e.group===X&&(e.distributeMultiplier(!0),n=new Q(0),e.each(function(e){(e.group===X&&e.power.greaterThan(1)||e.group===L)&&(e=H.expand(e)),n=H.add(n,e)}),n.power=e.power,e=n);r=(e=e.group===C&&\"sqrt\"!==e.fname?Z.Utils.evaluate(e):e).clone();try{if(e.group===L){var i=H.parse(e.power),s=R.Simplify.strip(e.getDenom()),o=R.Simplify.strip(e.getNum()),a=s.pop(),u=o.pop();if(u.equals(e))return e;var l=R.Factor.factor(u),c=R.Factor.factor(a),p=R.Simplify.unstrip(o,l),f=R.Simplify.unstrip(s,c);return A=H.divide(p,f)}if(e.group===j)return e;if(e.isConstant())return e.equals(1)?e.clone():Z.Math2.factor(e);i=e.power.clone();if(!_(i)||i.lessThan(0)&&e.group===C)return e;var h=i.sign();e.toLinear(),t=t||new O;var m={};e=H.parse(Z.Utils.subFunctions(e,m)),0<I(m).length&&(t.preAdd=function(e){return H.parse(e,Z.Utils.getFunctionsSubs(m))}),e.isLinear()||(t.pFactor=e.power.toString(),e.toLinear());var g=$(e);e.isImaginary()&&g.push(Z.Settings.IMAGINARY);var d=1<g.length;if(d){var v=!0,w=!0;if(e.each(function(e){e.group!==j&&(v=!1),e.multiplier.equals(1)||(w=!1)}),v&&w)return H.pow(H.parse(e,Z.Utils.getFunctionsSubs(m)),H.parse(i))}var y=new O;e=R.Factor.coeffFactor(e,y),y.each(function(e){U(i)&&e.lessThan(0)&&e.negate(),h<0&&e.invert(),t.add(e)});var b=new O;if(e=R.Factor.powerFactor(e,b),b.each(function(e){h<0&&e.invert(),t.add(e)}),d)e=R.Factor.cubeFactor(e,t),e=R.Factor.mfactor(e,t),t.each(function(e){h<0&&e.power.negate()});else{var S=g[0];e=R.Factor.squareFree(e,t,S);var M=new O;e=R.Factor.trialAndError(e,M,S);var N,E=M.toSymbol();if(E.equals(r))return E;for(N in M.factors){var q=M.factors[N];t.add(H.pow(q,H.parse(i)))}e.equals(r)&&(e=R.Factor.quadFactor(e,t))}e=H.parse(e,Z.Utils.getFunctionsSubs(m));var x=1===t.length;t.add(H.pow(e,H.parse(i)));var A=t.toSymbol();return A=x&&e.equals(1)&&A.isLinear()?H.pow(A,H.parse(i)):A}catch(e){return r}},reduce:function(e,t){if(e.group===X&&2===e.length){var n=e.collectSymbols().sort(function(e,t){return t.multiplier-e.multiplier});if(n[0].power.equals(n[1].power)){var r=H.parse(n[0].power),i=n[0].clone().toLinear(),s=n[1].clone().toLinear();t.add(H.add(i.clone(),s.clone())),s.negate();for(var o=Number(r),a=new Q(0),u=1;u<=o;u++)var l=H.pow(i.clone(),H.subtract(r.clone(),new Q(u))),c=H.pow(s.clone(),H.subtract(new Q(u),new Q(1))),a=H.add(a,H.multiply(l,c));return a}}return e},squareFree:function(e,t,n){if(e.isConstant()||e.group===j)return e;var r=new W(e,n).squareFree(),n=r[2];if(1===n)return e;e=r[1].toSymbol();return e.power=e.power.multiply(new z(n)),t.add(R.Factor.factor(e)),R.Factor.squareFree(r[0].toSymbol(),t)},powerFactor:function(e,t){if(e.group!==y||e.previousGroup===p)return e;var n=I(e.symbols);if(!Z.Utils.allNumeric(n))return e;var n=Z.Utils.arrayMin(n),r=new Q(0),i=H.parse(e.value+\"^\"+n);return e.each(function(e){e=H.divide(e,i.clone()),r=H.add(r,e)}),t.add(i),r},coeffFactor:function(e,t){var n,r,i,s;return e.isComposite()&&((n=Z.Math2.QGCD.apply(null,e.coeffs())).equals(1)?((r=function(e){var t;return e.group===L?(t=0,e.each(function(e){t+=e.power})):t=Number(e.power),t})(s=(i=e.collectSymbols(null,null,null,!0).sort(function(e,t){return e.isConstant(!0)?1:t.power-e.power}))[0])>r(i[1])||i[1].isConstant(!0))&&s.multiplier.lessThan(0)&&(t.add(new Q(-1)),e.each(function(e){e.negate()},!0)):(e.each(function(e){e.isComposite()?e.each(function(e){e.multiplier=e.multiplier.divide(n)}):e.multiplier=e.multiplier.divide(n)}),e.updateHash()),t&&t.add(new Q(n))),e},trialAndError:function(e,t,n){var r=e.clone();try{var i=[];if(e.isConstant()||e.group===j)return e;for(var s=new W(e,n),o=s.coeffs[0],a=Z.Math2.ifactor(o),u=R.proots(e),l=0;l<u.length;l++){var c=u[l],p=1;if(!isNaN(c)){for(var f in a){var h=Z.Utils.round(Math.log(f)/Math.log(Math.abs(c)),8);if(_(h)){c=f,p=h;break}}var m=new z(c),g=[new z(m.num).negate()];g[p]=new z(m.den);var d=W.fromArray(g,s.variable).fill(),v=s.divide(d);v[1].equalsNumber(0)&&(s=v[0],i.push(d.toSymbol()))}}return s.equalsNumber(1)||(s=R.Factor.search(s,t)),i.forEach(function(e){t.add(e)}),s.toSymbol()}catch(e){return r}},search:function(i,s,o){o=o||10;function e(e,t,n,r){if((n=W.fit(e,t,n,o,r,a))&&1<n.coeffs.length){r=i.divide(n);if(r[1].equalsNumber(0))return s.add(n.toSymbol()),[r[0],n]}return null}var a=i.variable,t=i.coeffs[0],n=Z.Math2.ifactor(t),r=i.lc(),u=Z.Math2.ifactor(r),l=i.sub(o),c=Z.Math2.ifactor(l),p=R.Factor.mix(c,l<0),f=Math.ceil(i.coeffs.length/2),h=r.lessThan(0),m=t.lessThan(0);for(n[u[1]=1]=1;f--;)for(var g in u)for(var d in n)for(var v=0;v<p.length;v++){var w=e(g,d,p[v],f);if(w)return i=w[0],i=!Z.Utils.isPrime(i.sub(o))?R.Factor.search(i,s):i;w||(h&&m?w=e(-g,-d,p[v],f):h?w=e(-g,d,p[v],f):m&&(w=e(g,-d,p[v],f)))}return i},mSqfrFactor:function(e,t){if(e.group!==C)for(var n=$(e).reverse(),r=0;r<n.length;r++)do{if(n[r]!==e.value){var i=Z.Calculus.diff(e,n[r]),s=R.Factor.coeffFactor(i);if(s.equals(0))break;var o=!0;if(s.isConstant()&&e.isComposite()&&e.each(function(e){e.multiplier%s!=0&&(o=!1)},!0),o){var a=R.div(e,s.clone()),u=a[1].equals(0);if(e.equals(a[0])&&a[1].equals(0))break;if(a[0].isConstant()){t.add(a[0]);break}}else u=!1;u&&(t.add(a[0]),e=s)}else t.add(e),e=new Q(1)}while(u);return e},sqdiff:function(e,t){if(e.isConstant(\"all\"))return e;try{var n,r,i,s,o,a=function(e){return Z.Utils.block(\"POSITIVE_MULTIPLIERS\",function(){return Q.unwrapPARENS(f.sqrt(f.abs(e)))},!0)},u=Z.Utils.separate(e.clone()),l=[];for(n in u)\"constants\"!==n&&l.push(u[n]);if(l.sort(function(e,t){return t.power-e.power}),2===l.length){if(o=l.pop(),r=l.pop(),U(o.power)&&U(r.power)&&o.sign()===r.sign()&&o.group===j&&r.group===j)throw new Error(\"Unable to factor\");o.isComposite()&&r.power.equals(2)?(r=a(r),(i=R.Factor.factor(H.add(o,u.constants))).power.equals(2)&&(i.toLinear(),t.add(H.subtract(i.clone(),r.clone())),t.add(H.add(i,r)),e=new Q(1))):(o=o.powSimp(),r=r.powSimp(),o.group!==j&&\"\"!==o.fname||!o.power.equals(2)||r.group!==j&&\"\"!==r.fname||!r.power.equals(2)||u.constants||(o.multiplier.lessThan(0)&&(s=r,r=o,o=s),o.multiplier.greaterThan(0)&&(o=a(o),r=a(r)),t.add(H.subtract(o.clone(),r.clone())),t.add(H.add(o,r)),e=new Q(1)))}}catch(e){}return e},mfactor:function(t,e){if(t.group===C){var n,r;\"sqrt\"===t.fname?(n=new O,r=R.Factor.common(t.args[0].clone(),n),r=R.Factor.coeffFactor(r,n),t=H.multiply(H.symfunction(\"sqrt\",[r]),H.parse(t.multiplier)),n.each(function(e){t=H.multiply(t,H.parse(Z.Utils.format(\"sqrt({0})\",e)))})):e.add(t)}else{t=R.Factor.mSqfrFactor(t,e);for(var i,s=$(t),o=t.collectSymbols().map(function(e){return Q.unwrapSQRT(e)}),a={},u={},l=s.length,c=o.length,p=0;p<l;p++){var f=s[p];a[f]=new Q(0);for(var h=0;h<c;h++){var m,g=o[h];g.contains(f)&&(m=(g.value===f?g:g.symbols[f]).power.toDecimal(),(!u[f]||m<u[f])&&(u[f]=m),a[f]=H.add(a[f],g.clone()))}}for(i in a){var d=H.parse(i+\"^\"+u[i]),v=H.divide(a[i],d),w=H.expand(v);if(w.equals(1))break;v=R.div(t.clone(),w);if(v[0].equals(0))break;if(v[1].equals(0)){var y=!1;if(v[0].each(function(e){_(e.multiplier)||(y=!0)}),y){v[1]=H.expand(H.multiply(v[1],w));break}}w=_(w)&&w.lessThan(0);if(v[1].equals(0)&&!w){w=R.div(t.clone(),v[0].clone());if((d=w[0]).equals(0))return t;if(t=w[1],d.equals(-1)&&!t.equals(0))return t;w=v[0];if(t.equals(w)){v=R.Factor.reduce(w,e);return t.equals(v)?v:R.Factor.mfactor(v,e)}return(e.add(w),t.equals(0))?d:d.isConstant(\"all\")?(e.add(d),d):R.Factor.mfactor(d,e)}}}return t=R.Factor.sqdiff(t,e),t=R.Factor.zeroes(t,e)}},allLinear:function(e){for(var t=e.length,n=0;n<t;n++)if(!R.isLinear(e[n]))return!1;return!0},isLinear:function(e){var t=!1,n=e.group;if(n===y||n===X)for(var r in t=!0,e.symbols){var i=e.symbols[r],r=i.group;if(r!==C&&r!==p||(t=!1),r===L)t=1===$(i).length;else if(r===y||r===X)t=R.isLinear(i);else if(i.group!==u&&\"1\"!==i.power.toString()){t=!1;break}}else n===j&&1===e.power&&(t=!0);return t},gcd:function(){var e=1===arguments.length&&arguments[0]instanceof Z.Vector?arguments[0].elements:Z.Utils.arguments2Array(arguments);if(0===e.length)return new Q(1);if(1===e.length)return e[0];for(var t=[],n=!1,r=0;r<e.length;r++)if(e[r].group===C&&\"gcd\"===e[r].fname)(e=e.concat(arguments[r].args)).splice(r,1);else{var i=$(e[r]);if(Z.Utils.haveIntersection(i,t)){n=!0;break}t=t.concat(i)}if(n||0===t.length){if(e.every(function(e){return e.getDenom().equals(1)})){for(var s=e[0],r=1;r<e.length;r++)s=R.gcd_(e[r],s);return s}return H.divide(R.gcd.apply(null,e.map(function(e){return e.getNum()})),R.lcm.apply(null,e.map(function(e){return e.getDenom()})))}return H.symfunction(\"gcd\",e)},gcd_:function(e,t){if(e.group!==C&&e.group!==c||(e=Z.Utils.block(\"PARSE2NUMBER\",function(){return H.parse(e)})),t.group===C&&(t=Z.Utils.block(\"PARSE2NUMBER\",function(){return H.parse(t)})),e.isConstant()&&t.isConstant())return new Q(Z.Math2.QGCD(new z(+e),new z(+t)));var n=H.multiply(e.getDenom()||new Q(1),t.getDenom()||new Q(1)).invert();if(e=H.multiply(e.clone(),n.clone()),t=H.multiply(t.clone(),n.clone()),e=H.expand(e),t=H.expand(t),e.group===L||t.group===L){var r=H.divide(e.clone(),t.clone());if(!(u=H.multiply(t.clone(),r.getDenom().invert())).equals(1))return u}if(e.group===p||t.group===p){var r=new Q(Z.Math2.GCD(e.multiplier,t.multiplier)),i=R.gcd_(e.value===Y?new Q(1):H.parse(e.value),t.value===Y?new Q(1):H.parse(t.value)),s=R.gcd_(H.parse(e.power),H.parse(t.power));return H.multiply(r,H.pow(i,s))}e.length<t.length&&(u=e,e=t,t=u);i=$(e),s=$(t);if(i.length===s.length&&1===i.length&&i[0]===s[0]||1===i.length&&0===s.length||0===i.length&&1===s.length)return e=new W(e),t=new W(t),H.divide(e.gcd(t).toSymbol(),n);var o,a=[];for(e.each(function(e){a.push(e.multiplier)}),t.each(function(e){a.push(e.multiplier)});!t.equals(0);){var u=t.clone();if(e=e.clone(),o=R.div(e,u),t=o[1],o[0].equals(0))return H.divide(new Q(Z.Math2.QGCD(e.multiplier,t.multiplier)),n);e=u}var l=Z.Math2.QGCD.apply(void 0,a);return l.equals(1)||e.each(function(e){e.multiplier=e.multiplier.divide(l)}),!e.equals(1)||e.isConstant()||t.isConstant()?H.divide(e,n):H.divide(H.symfunction(\"gcd\",arguments),n)},lcm:function(){var e;1===arguments.length?arguments[0]instanceof Z.Vector?e=arguments[0].elements:H.error(\"lcm expects either 1 vector or 2 or more arguments\"):e=Z.Utils.arguments2Array(arguments);var t=e.reduce(function(e,t){return H.multiply(e,t.clone())},new Q(1)),n=function(e,t){t=Number(t);for(var n,r,i=[],s=Math.pow(2,e.length),o=t;o<s;o++){for(n=[],r=e.length-1;0!=(o&1<<r)&&n.push(e[r]),r--;);n.length===t&&i.push(n)}return i}(arguments,arguments.length-1).map(function(e){return e.reduce(function(e,t){return H.multiply(e,t.clone())},new Q(1))}),n=e.every(function(e){return Z.Utils.isVariableSymbol(e)})?H.symfunction(\"gcd\",Z.Utils.arrayUnique(n)):R.gcd.apply(null,n);return H.divide(t,n)},divide:function(e,t){var n=Z.Algebra.Factor.factor(e.clone()),r=n.getDenom();return r.isConstant(\"all\")?r=new Q(1):e=H.expand(Q.unwrapPARENS(H.multiply(n,r.clone()))),e=R.div(e,t),t=H.divide(e[1],t),H.divide(H.add(e[0],t),r)},div:function(e,t){var n,r,i=[new Q(0),e.clone()];try{if(t.isConstant(\"all\"))return e.each(function(e){e.multiplier=e.multiplier.divide(t.multiplier)}),[e,new Q(0)];if(e=H.expand(e),t=H.expand(t),e.group===j&&t.group===X){var s=e.value,o=Z.Utils.decompose_fn(t.clone(),s,!0);if(e.isLinear()&&o.x&&o.x.isLinear()&&t.isLinear()){var a=Q.create(e.multiplier);return[H.divide(a.clone(),o.a.clone()),H.divide(H.multiply(a,o.b),o.a).negate()]}}if(e.group===j&&t.group===j){var u=H.divide(e.clone(),t.clone());return u.isConstant()?[u,new Q(0)]:[new Q(0),e.clone()]}var l,c,p=e.hasFunc(),f=t.hasFunc(),h=!1;(p||f)&&(h=!0,l={},e=H.parse(Z.Utils.subFunctions(e,l)),t=H.parse(Z.Utils.subFunctions(t,l)),c=Z.Utils.getFunctionsSubs(l));var m=Z.Utils.arrayUnique($(e).concat($(t)));if((e.isImaginary()||t.isImaginary())&&m.push(Z.Settings.IMAGINARY),1===m.length)var g=(F=new W(e).divide(new W(t)))[0].toSymbol(),d=F[1].toSymbol();else{m.push(Y);var v=function(e){for(var t=new Q(0),n=0;n<e.length;n++)var r=e[n].toSymbol(),t=H.add(t,r);return t},b=function(e,t){var n,r=Math.max.apply(null,e.terms),i=0;if(!t)for(var s=0;s<e.terms.length;s++)if(e.terms[s].equals(r)&&(n=s,i++),1<i)return;if(t)for(s=0;s<e.terms.length;s++)if(e.terms[s].equals(r)){n=s;break}return[r,n,e]},S=function(e,t){var n=e[t=t||0],r=e.length;if(n){for(var i,s=b(n),o=t+1;o<r;o++){var a=e[o],u=n.sum.equals(a.sum);if(!u&&s)break;if(u){for(var l,c,p,f,h=n.terms.length,m=0;m<h;m++){var g=n.terms[m],d=a.terms[m];void 0!==l&&!g.greaterThan(l)||(l=g,p=m),void 0!==c&&!d.greaterThan(c)||(c=d,f=m)}var v=l.subtract(a.terms[p]),u=c.subtract(n.terms[f]);if(v<u){s=[c,f,a];break}if(u<v){s=[l,p,n];break}}else if(s=b(a))break;s=b(a)}if(!s)return b(e[0],!0);for(o=0;o<E.length;o++){var w,y=E[o].terms;if((w=s[1])===y.length-1)return;if(!(i=y[w]).equals(0))break}return i.equals(0)?S(e,++t):s}},w=Z.Utils.toMapObj(m),y=function(e,t){return t.sum.subtract(e.sum)},M=function(e,t){if(!e||!t)return!1;for(var n=0;n<e.terms.length;n++)if(e.terms[n].lessThan(t.terms[n]))return!1;return!0},N=e.tBase(w).sort(y),E=t.tBase(w).sort(y),q=M(N[0],E[0])&&N[0].count>E[0].count?E:N,x=S(q),A=[];if(x){var C=x[1],L=function(e,t){var n=e.len(),r=t.len(),t=t.terms[C],e=e.terms[C];return n<r&&t.greaterThan(e)?r-n:t.subtract(e)},C=function(e,t){for(var n=[],r=0;r<e.length;r++)for(var i=e[r],s=0;s<i.terms.length;s++){var o=n[s],a=i.terms[s];0===r?n[s]=a:o&&!o.equals(a)&&(n[s]=void 0)}for(r=0;r<n.length;r++)if((i=n[r])&&!i.equals(0))return r;return t}(N,C);N.sort(L),E.sort(L);var I=E[0],U=N[0],_=new J(new z(1),[],U.map);if(I.sum.greaterThan(U.sum)&&1<U.len())for(var O=0;O<U.terms.length;O++){var R=I.terms[O].subtract(U.terms[O]);if(R.equals(0))_.terms[O]=new z(0);else{var T=R.add(new z(1));_.terms[O]=R;for(var P=0;P<N.length;P++)N[P].terms[O]=N[P].terms[O].add(T)}}for(var k=M(N[0],E[0]),D=0;k&&(r=E,!(n=N)[0].sum.equals(r[0].sum)||n.length>=r.length);){if(200<D++)throw new Z.exceptions.InfiniteLoopError(\"Unable to compute!\");var F=N[0].divide(E[0]);A.push(F),N.shift();for(O=1;O<E.length;O++){var B=E[O].multiply(F).generateImage(),G=N.length;0===G&&(B.coeff=B.coeff.neg(),N.push(B),N.sort(L));for(P=0;P<G;P++){var V=N[P];if(V.getImg()===B.getImg()){V.coeff=V.coeff.subtract(B.coeff),V.coeff.equals(0)&&(Z.Utils.remove(N,P),P--);break}P===G-1&&(B.coeff=B.coeff.neg(),N.push(B),N.sort(L))}}if(!(k=M(N[0],E[0]))&&N.length>=E.length)for(O=1;O<N.length;O++)if(k=M(N[O],E[0])){N.unshift(Z.Utils.remove(N,O));break}}}g=v(A),d=v(N),void 0!==_&&(_=_.toSymbol(),g=H.divide(g,_.clone()),d=H.divide(d,_))}return h&&(g=H.parse(g.text(),c),d=H.parse(d.text(),c)),[g,d]}catch(e){return i}},line:function(e,t,n){Z.Utils.isArray(e)&&(e=Z.Utils.convertToVector(e)),Z.Utils.isArray(t)&&(t=Z.Utils.convertToVector(t)),n=H.parse(n||\"x\"),Z.Utils.isVector(e)&&Z.Utils.isVector(t)||H.error('Line expects a vector! Received \"'+e+'\" & \"'+t+'\"');var r=H.subtract(t.e(1).clone(),e.e(1).clone()),t=H.subtract(t.e(2).clone(),e.e(2).clone()),r=H.divide(t,r),n=H.multiply(n,r.clone()),r=H.multiply(e.e(1).clone(),r);return H.add(H.subtract(n,r),e.e(2).clone())},PartFrac:{createTemplate:function(r,e,t,n){(r=R.Factor.factor(r)).each(function(e,t){var n;e.group===C&&\"\"===e.fname&&e.args[0].group===j&&(n=e.args[0],this.symbols?(delete this.symbols[t],this.symbols[n.value]=n):r=e.args[0])});for(var i=e.collectFactors(),s=[],o=[],a=new Q(1),u=0;u<i.length;u++){var l=Q.unwrapPARENS(i[u]);if(l.power.greaterThan(1))for(var c=Number(l.power),p=l.clone().toLinear(),f=Number(R.degree(p,n)),h=0;h<c;h++){var m=H.pow(p.clone(),new Q(h+1));t.push(m.clone());var g=H.divide(r.clone(),m.clone());o.push(f),s.push(g)}else{f=Number(R.degree(l,n)),t.push(l);g=H.divide(r.clone(),l.clone());g=H.expand(Q.unwrapPARENS(g)),o.push(f),s.push(g)}}return[t=t.map(function(e){return H.multiply(e,a.clone())}),s,o]},partfrac:function(t,o,n){var e=$(t);o=o||H.parse(e[0]);try{var a,r,i,u,l,c,s,p,f,h,m,g,d,v,w=H.expand(t.getNum()),y=H.expand(t.getDenom().toUnitMultiplier());if(w.multiplier=t.multiplier,i=w.groupTerms(o),Number(R.degree(w,o))>=Number(R.degree(y,o))?(p=(s=R.div(w.clone(),H.expand(y.clone())))[0],i=(w=s[1]).groupTerms(o)):p=new Q(0),1===Number(R.degree(y,o))){var b=H.divide(w,y);return n?[p,b]:H.add(p,b)}r=R.Factor.factor(y),m=R.PartFrac.createTemplate(y.clone(),r,[],o),g=m[0],f=m[1],u=m[2],c=[i.length],l=[],a=[],h=[],f.map(function(e,t){d=g[t],v=u[t];for(var n=0;n<v;n++){a.push(d.clone());var r=Q.create(o,n),i=H.expand(H.multiply(e,r.clone())).groupTerms(o),s=i.length;c.push(s),l.push(i),h.push(r.clone())}});for(var S=Z.Utils.arrayMax(c),M=new Z.Matrix(Z.Utils.fillHoles(i,S)).transpose(),N=new Z.Matrix,E=0;E<l.length;E++)N.elements.push(Z.Utils.fillHoles(l[E],S));var q=H.multiply(N.transpose().invert(),M),x=n?[p]:p;return q.each(function(e,t){t=H.multiply(h[t],H.divide(e,a[t]));n?x.push(t):x=H.add(x,t)}),x}catch(e){try{if(t.isComposite()){var A={};t.each(function(e){var t=e.getDenom(),n=e.getNum(),e=A[t];A[t]=e?H.add(e,n):n});var C,L=new Q(0);for(C in A)L=H.add(L,H.divide(A[C],H.parse(C)));t=L}}catch(e){}}return t}},degree:function(e,t,n){if(n=n||{nd:[],sd:[],depth:0},!t){var r=$(e);if(1<r.length)throw new Error(\"You must specify the variable for multivariate polynomials!\");if(0===r.length)return new Q(0);t=H.parse(r[0])}r=e.group;e.isComposite()?((e=e.clone()).distributeExponent(),e.each(function(e){n.depth++,R.degree(e,t,n),n.depth--})):e.group===L?e.each(function(e){n.depth++,R.degree(e,t,n),n.depth++}):r===p&&e.value===t.value?n.sd.push(e.power.clone()):r===j&&e.value===t.value?n.nd.push(H.parse(e.power)):n.nd.push(new Q(0));e=0<n.nd.length?Z.Utils.arrayMax(n.nd):void 0;return 0===n.depth&&0<n.sd.length?(void 0!==e&&n.sd.unshift(e),H.symfunction(\"max\",n.sd)):Z.Utils.isSymbol(e)?e:H.parse(e)},sqComplete:function(e,t,n){Z.Utils.isSymbol(t)||(t=H.parse(t));var r,i,s,o,a,u=function(e){throw new Z.exceptions.ValueLimitExceededError(e=e||\"Stopping\")};return e.isPoly(!0)||u(\"Must be a polynomial!\"),o=Z.Utils.inBrackets,e=e.clone(),(r=Z.Algebra.degree(e,t)).equals(2)||u(\"Cannot complete square for degree \"+r),a=(s=Z.Algebra.coeffs(e,t))[2],u=s[1].sign(),r=H.divide(s[1],new Q(2)),e=H.pow(r.clone(),new Q(2)),n?[a,r,i]:(a=f.sqrt(a),e=H.divide(f.sqrt(e),a.clone()),i=H.subtract(s[0],H.pow(e.clone(),new Q(2))),{a:e=H.parse(o(a.clone()+\"*\"+t+(u<0?\"-\":\"+\")+e)),c:i,f:H.add(H.pow(e.clone(),new Q(2)),i.clone())})},Simplify:{strip:function(e){var t=H.parse(e.multiplier);e.toUnitMultiplier();var n=H.parse(e.power);return e.toLinear(),[t,n,e]},unstrip:function(e,t){var n=e[0],e=e[1];return H.multiply(n,H.pow(t,e))},complexSimp:function(e,t){var n=e.realpart(),r=e.imagpart(),i=t.realpart(),s=t.imagpart(),e=H.multiply(n.clone(),i.clone()),t=H.multiply(r.clone(),s.clone()),r=H.multiply(i.clone(),r),n=H.multiply(n,s.clone()),s=H.add(H.pow(i,new Q(2)),H.pow(s,new Q(2)));return H.divide(H.add(H.add(e,t),H.multiply(H.subtract(r,n),Q.imaginary())),s)},trigSimp:function(e){var t,n,r,i,s,o;return e.containsFunction([\"cos\",\"sin\",\"tan\"])&&(e=e.clone(),n=(e=(t=R.Simplify.strip(e)).pop()).clone(),e.group===X?(r=new Q(0),e.each(function(e){e=R.Simplify.trigSimp(e.fnTransform());r=H.add(r,e)},!0),n=H.pow(H.multiply(new Q(e.multiplier),r),new Q(e.power))):e.group===L&&(i=e.getNum(),s=e.getDenom(),(n=\"sin\"===i.fname&&\"cos\"===s.fname&&i.args[0].equals(s.args[0])&&i.power.equals(s.power)?H.parse(Z.Utils.format(\"({0})*({1})*tan({2})^({3})\",s.multiplier,i.multiplier,i.args[0],i.power)):n).group===L&&(o=new Q(1),n.each(function(e){\"tan\"===e.fname&&(e=H.parse(Z.Utils.format(\"({0})*sin({1})^({2})/cos({1})^({2})\",e.multiplier,R.Simplify.simplify(e.args[0]),e.power))),o=H.multiply(o,e)}),n=o)),e=n=R.Simplify.unstrip(t,n).distributeMultiplier()),e},fracSimp:function(e){var t=e.getDenom();if((e=(a=e.getNum()).isImaginary()&&t.isImaginary()?R.Simplify.complexSimp(a,t):e).isComposite()){for(var n,r,i,s,o,a,u=(e=1<e.power?H.expand(e):e).collectSymbols(),l=u.pop();u.length;)o=u.pop(),s=H.parse(l.getDenom()),i=H.parse(o.getDenom()),n=l.getNum(),r=o.getNum(),o=H.multiply(s.clone(),i.clone()),i=H.multiply(n,i),s=H.multiply(r,s),s=H.add(i,s),l=H.divide(s,o);return t=H.expand(l.getDenom()),(t=(a=H.expand(l.getNum())).isImaginary()&&t.isImaginary()?R.Simplify.complexSimp(a,t):H.divide(a,t)).equals(e)?e:R.Simplify.simplify(t)}return e},ratSimp:function(e){var t,n;return e.group===L&&(t=e.getDenom(),n=e.getNum().distributeMultiplier(),t=R.Simplify.fracSimp(t),n=R.Simplify.fracSimp(n),e=H.divide(n,t)),e},sqrtSimp:function(e,t){if(e.isSQRT()){var n,r,i=R.Factor.factor(e.args[0].clone()),s=H.parse(i.multiplier),o=s.sign(),a=H.sqrt(s.abs());if(_(a))return i.group===L?(n=new Q(1),i.each(function(e){var t;e.group===u?(t=H.sqrt(e.clone()),_(t)?a=H.multiply(a,t):n=H.multiply(n,e)):n=H.multiply(n,e)}),o=H.multiply(n,H.parse(o)),(r=H.sqrt(o.clone())).isImaginary&&(r=H.sqrt(H.expand(o.clone())))):r=H.sqrt(i.clone().toUnitMultiplier()),H.multiply(a,r)}else e.isComposite()&&e.isLinear()?(a=new Q(0),e.each(function(e){a=H.add(a,R.Simplify.sqrtSimp(e))},!0),a=H.multiply(a,H.parse(e.multiplier))):e.group===L&&(a=H.parse(e.multiplier),e.each(function(e){e=R.Simplify.sqrtSimp(e);a=H.multiply(a,e)},!0),a=H.pow(a,H.parse(e.power)));return a||H.parse(e)},patternSub:function(n){var r={},i=function(e){var t=!1;return e.each(function(e){e.group===X?t=!0:e.symbols&&(t=i(e))}),t},s=function(e){e.each(function(e){var t;!e.symbols&&e.group!==C||(i(e)?s(e):r[e.value]||(t=Z.Utils.getU(n),r[e.value]=t,n=n.sub(e.value,t)))},!0)};return s(n),[n,r]},simplify:function(e){var t=R.Simplify.strip(e);if(e=t.pop(),(e=R.Simplify.fracSimp(e)).isConstant()||e.group===Z.groups.S)return t.push(e),R.Simplify.unstrip(t,e);var n,r=e.clone(),r=R.Simplify.trigSimp(r);return r=R.Simplify.ratSimp(r),(r=R.Factor.factor(r)).group===Z.groups.CP&&r.isLinear()&&(e=r.multiplier.clone(),r.toUnitMultiplier(),n=new Q(0),r.each(function(e){e=R.Simplify.simplify(e);n=H.add(n,e)}),(r=n).multiplier=n.multiplier.multiply(e)),R.Simplify.unstrip(t,r)}},Classes:{Polynomial:W,Factors:O,MVTerm:J}};Z.Expression.prototype.simplify=function(){return R.Simplify.simplify(this.symbol)},nerdamer.useAlgebraDiv=function(){var n=R.divideFn=H.divide,r=0;H.divide=function(e,t){t=1===++r?Z.Algebra.divide(e,t):n(e,t);return r=0,t}},nerdamer.useParserDiv=function(){R.divideFn&&(H.divide=R.divideFn),delete R.divideFn},nerdamer.register([{name:\"factor\",visible:!0,numargs:1,build:function(){return R.Factor.factor}},{name:\"simplify\",visible:!0,numargs:1,build:function(){return R.Simplify.simplify}},{name:\"gcd\",visible:!0,numargs:[1],build:function(){return R.gcd}},{name:\"lcm\",visible:!0,numargs:[1],build:function(){return R.lcm}},{name:\"roots\",visible:!0,numargs:-1,build:function(){return R.roots}},{name:\"divide\",visible:!0,numargs:2,build:function(){return R.divide}},{name:\"div\",visible:!0,numargs:2,build:function(){return R.div}},{name:\"partfrac\",visible:!0,numargs:[1,2],build:function(){return R.PartFrac.partfrac}},{name:\"deg\",visible:!0,numargs:[1,2],build:function(){return R.degree}},{name:\"coeffs\",visible:!0,numargs:[1,2],build:function(){return function(){var e=R.coeffs.apply(R,arguments);return new Z.Vector(e)}}},{name:\"line\",visible:!0,numargs:[2,3],build:function(){return R.line}},{name:\"sqcomp\",visible:!0,numargs:[1,2],build:function(){return function(t,e){try{return e=e||$(t)[0],R.sqComplete(t.clone(),e).f}catch(e){return t}}}}]),nerdamer.updateAPI()}(),\"undefined\"!=typeof module&&void 0===nerdamer&&(nerdamer=require(\"./nerdamer.core.js\"),require(\"./Algebra.js\")),function(){\"use strict\";var ct=nerdamer.getCore(),pt=ct.PARSER,ft=ct.Frac,ht=ct.Settings,mt=ct.Utils.isSymbol,gt=ct.groups.FN,dt=ct.Symbol,m=ct.Utils.text,vt=ct.Utils.inBrackets,wt=ct.Utils.isInt,yt=ct.Utils.format,bt=ct.Utils.even,k=ct.Utils.evaluate,g=ct.groups.N,St=ct.groups.S,gt=ct.groups.FN,Mt=ct.groups.PL,Nt=ct.groups.CP,Et=ct.groups.CB,qt=ct.groups.EX,d=ct.groups.P,xt=ht.LOG,At=\"sqrt\",Ct=\"sin\",Lt=\"cos\",It=\"tan\",Ut=\"sec\",_t=\"csc\",Ot=\"cot\",Rt=\"asin\",Tt=\"atan\",Pt=\"sinh\",kt=\"cosh\",Dt=\"tanh\";function Ft(e){this.message=e||\"\"}Ft.prototype=new Error,dt.prototype.hasIntegral=function(){return this.containsFunction(\"integrate\")},dt.prototype.fnTransform=function(){if(this.group!==gt)return this;var e,t,n,r=this.args[0],i=new dt(this.multiplier),s=this.clone().toUnitMultiplier();if(this.isLinear())switch(this.fname){case Pt:n=pt.parse(yt(\"(e^({0})-e^(-({0})))/2\",r));break;case kt:n=pt.parse(yt(\"(e^({0})+e^(-({0})))/2\",r));break;case Dt:n=pt.parse(yt(\"(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))\",r));break;case It:n=pt.parse(yt(\"sin({0})/cos({0})\",r));break;case _t:n=pt.parse(yt(\"1/sin({0})\",r));break;case Ut:n=pt.parse(yt(\"1/cos({0})\",r));break;default:n=s}else if(this.power.equals(2))switch(this.fname){case Ct:n=pt.parse(yt(\"1/2-cos(2*({0}))/2\",r));break;case Lt:n=pt.parse(yt(\"1/2+cos(2*({0}))/2\",r));break;case It:n=pt.parse(yt(\"sin({0})^2/cos({0})^2\",r));break;case kt:n=pt.parse(yt(\"1/2+cosh(2*({0}))/2\",r));break;case Pt:n=pt.parse(yt(\"-1/2+cosh(2*({0}))/2\",r));break;case Dt:n=pt.parse(yt(\"(1+cosh(2*({0})))/(-1+cosh(2*({0})))\",r));break;case Ut:n=pt.parse(yt(\"(1-cos(2*({0})))/(1+cos(2*({0})))+1\",r));break;default:n=s}else this.fname===Ut?n=pt.parse(yt(\"1/cos({0})^({1})\",this.args[0],this.power)):this.fname===_t?n=pt.parse(yt(\"1/sin({0})^({1})\",this.args[0],this.power)):this.fname===It?n=this.power.lessThan(0)?pt.parse(yt(\"cos({0})^(-({1}))/sin({0})^({1})\",this.args[0],this.power.negate())):pt.parse(yt(\"sin({0})^({1})/cos({0})^({1})\",this.args[0],this.power)):this.fname===Ct&&this.power.lessThan(0)?n=pt.parse(yt(\"csc({0})^(-({1}))\",this.args[0],this.power.negate())):this.fname===Lt&&this.power.lessThan(0)?n=pt.parse(yt(\"sec({0})^(-({1}))\",this.args[0],this.power.negate())):this.fname===Ct&&this.power.equals(3)?n=pt.parse(yt(\"(3*sin({0})-sin(3*({0})))/4\",this.args[0])):this.fname===Lt&&this.power.equals(3)?n=pt.parse(yt(\"(cos(3*({0}))+3*cos({0}))/4\",this.args[0])):this.fname!==Lt&&this.fname!==Ct||!bt(this.power)?n=s:(t=this.power/2,e=pt.pow(this.clone().toLinear(),pt.parse(2)).fnTransform(),t=pt.expand(pt.pow(e,pt.parse(t))),n=new dt(0),t.each(function(e){e=e.fnTransform();n=pt.add(n,e)},!0));return pt.multiply(n,i)},dt.prototype.hasTrig=function(){if(this.isConstant(!0)||this.group===St)return!1;if(this.fname&&(ct.Utils.in_trig(this.fname)||ct.Utils.in_inverse_trig(this.fname)))return!0;if(this.symbols)for(var e in this.symbols)if(this.symbols[e].hasTrig())return!0;return!1},ct.Expression.prototype.hasIntegral=function(){return this.symbol.hasIntegral()},ct.Utils.toCommonDenominator=function(e){if(e.isComposite()&&e.isLinear()){var t=new dt(e.multiplier),n=new dt(1),r=new dt(0);return e.each(function(e){n=pt.multiply(n,e.getDenom())},!0),e.each(function(e){var t=e.getNum(),e=e.getDenom(),e=pt.multiply(t,pt.divide(n.clone(),e));r=pt.add(r,e)}),pt.multiply(t,ct.Algebra.divide(pt.expand(r),pt.expand(n)))}return e},ct.Utils.in_inverse_trig=function(e){return-1!==[Rt,\"acos\",Tt,\"acsc\",\"asec\",\"acot\"].indexOf(e)},ct.Utils.in_trig=function(e){return-1!==[Lt,Ct,It,Ut,_t,Ot].indexOf(e)},ct.Utils.in_htrig=function(e){return-1!==[Pt,kt,Dt,\"acsch\",\"asech\",\"acoth\"].indexOf(e)},ct.Matrix.jacobian=function(e,t){var i=new ct.Matrix;return(t=t||ct.Utils.arrayGetVariables(e)).forEach(function(n,r){e.forEach(function(e,t){e=ct.Calculus.diff(e.clone(),n);i.set(t,r,e)})}),i},ct.Matrix.prototype.max=function(){var t=new dt(0);return this.each(function(e){e=e.abs();e.gt(t)&&(t=e)}),t},ct.Matrix.cMatrix=function(n,e){var r=new ct.Matrix;return e.forEach(function(e,t){r.set(t,0,pt.parse(n))}),r};var Bt=ct.Utils.all_functions=function(e){for(var t=0,n=e.length;t<n;t++)if(e[t].group!==gt)return!1;return!0},l=ct.Utils.cosAsinBtranform=function(e,t){e=e.args[0],t=t.args[0];return pt.parse(yt(\"(sin(({0})+({1}))-sin(({0})-({1})))/2\",e,t))},c=ct.Utils.cosAsinAtranform=function(e,t){if(1!==Number(t.power))return pt.multiply(e,t);e=e.args[0];return pt.parse(yt(\"(sin(2*({0})))/2\",e))},p=ct.Utils.cosAsinBtranform=function(e,t){e=e.args[0],t=t.args[0];return pt.parse(yt(\"(cos(({0})+({1}))-cos(({0})-({1})))/2\",e,t))},Gt=ct.Utils.trigTransform=function(e){for(var t,n,r,i,s={},o=new dt(1),a=0,u=e.length;a<u;a++)(r=e[a]).group===gt?(n=r.fname)===Lt&&s.sin?(t=(s.sin.args[0].toString()!==r.args[0].toString()?l:c)(r,s.sin),delete s.sin,o=pt.multiply(o,t)):n===Ct&&s.cos?(t=(s.cos.args[0].toString()!==r.args[0].toString()?l:c)(r,s.cos),delete s.cos,o=pt.multiply(o,t)):n===Ct&&s.sin?(t=s.sin.args[0].toString()!==r.args[0].toString()?p(r,s.sin):pt.multiply(r,s.sin),delete s.sin,o=t):s[n]=r:o=pt.multiply(o,r);for(i in s)o=pt.multiply(o,s[i]);return o};ct.Settings.integration_depth=10,ct.Settings.max_lim_depth=10;var Vt=ct.Calculus={version:\"1.4.6\",sum:function(s,o,a,u){if(o.group!==ct.groups.S)throw new ct.exceptions.NerdamerTypeError(\"Index must be symbol. \"+m(o)+\" provided\");var e;return o=o.value,ct.Utils.isNumericSymbol(a)&&ct.Utils.isNumericSymbol(u)?(e=u-a<200?\"\":\"PARSE2NUMBER\",a=Number(a),u=Number(u),ct.Utils.block(e,function(){for(var e=s.text(),t={\"~\":!0},n=new ct.Symbol(0),r=a;r<=u;r++){t[o]=new dt(r);var i=pt.parse(e,t),n=pt.add(n,i)}return n})):pt.symfunction(\"sum\",arguments)},product:function(i,s,o,a){if(s.group!==ct.groups.S)throw new ct.exceptions.NerdamerTypeError(\"Index must be symbol. \"+m(s)+\" provided\");return s=s.value,ct.Utils.isNumericSymbol(o)&&ct.Utils.isNumericSymbol(a)?ct.Utils.block(a-o<200?\"\":\"PARSE2NUMBER\",function(){o=Number(o),a=Number(a.multiplier);for(var e=i.text(),t={},n=new ct.Symbol(1),r=o;r<=a;r++)t[s]=new dt(r),n=pt.multiply(n,pt.parse(e,t));return n}):pt.symfunction(\"product\",arguments)},diff:function(e,l,r){if(ct.Utils.isVector(e)){var t=new ct.Vector([]);return e.each(function(e){t.elements.push(Vt.diff(e,l,r))}),t}if(ct.Utils.isMatrix(e)){var i=new ct.Matrix;return e.each(function(e,t,n){i.set(t,n,Vt.diff(e,l,r))}),i}var n,s,c=mt(l)?l.text():l;return r=mt(r)?r.multiplier:r||1,void 0===c&&(c=ct.Utils.variables(e)[0]),e.group===gt&&e.fname===At&&(s=e.args[0],n=e.power.clone(),s.group===g&&s.group===d||(s.power=mt(s.power)?pt.multiply(s.power,pt.multiply(new dt(.5)),n):s.power.multiply(new ft(.5)).multiply(n),s.multiplier=s.multiplier.multiply(e.multiplier)),e=s),e=e.group!==gt||mt(e.power)?f(e):(n=f(pt.parse(e)),s=Vt.diff(e.args[0].clone(),c),pt.multiply(n,s)),e=1<r?Vt.diff(e,l,--r):e;function p(e){return e.value!==c&&!e.contains(c,!0)||(e.multiplier=e.multiplier.multiply(e.power),e.power=e.power.subtract(new ft(1)),e.power.equals(0)&&(e=dt(e.multiplier))),e}function f(e){var t=e.group;if(t===g||t===St&&e.value!==c||t===d)e=dt(0);else if(t===St)e=p(e);else{if(t===Et){var n=e.multiplier.clone();e.toUnitMultiplier();var r=pt.multiply(function(e){for(var t=e.collectSymbols(),n=new dt(0),r=t.length,i=0;i<r;i++){for(var s=Vt.diff(t[i].clone(),c),o=0;o<r;o++)i!==o&&(s=pt.multiply(s,t[o].clone()));n=pt.add(n,s)}return n}(e),p(e));return r.multiplier=r.multiplier.multiply(n),r}if(t===gt&&e.power.equals(1))switch(e.fname){case xt:s=e.clone(),(e=e.args[0].clone()).power=e.power.negate(),e.multiplier=s.multiplier.divide(e.multiplier);break;case Lt:e.fname=Ct,e.multiplier.negate();break;case Ct:e.fname=Lt;break;case It:e.fname=Ut,e.power=new ft(2);break;case Ut:e=h(e,It);break;case _t:e=h(e,\"-cot\");break;case Ot:e.fname=_t,e.multiplier.negate(),e.power=new ft(2);break;case Rt:e=pt.parse(\"(sqrt(1-(\"+m(e.args[0])+\")^2))^(-1)\");break;case\"acos\":e=pt.parse(\"-(sqrt(1-(\"+m(e.args[0])+\")^2))^(-1)\");break;case Tt:e=pt.parse(\"(1+(\"+m(e.args[0])+\")^2)^(-1)\");break;case\"abs\":n=e.multiplier.clone(),e.toUnitMultiplier(),(o=e.args[0].clone()).toUnitMultiplier(),(e=pt.parse(vt(m(e.args[0]))+\"/abs\"+vt(m(o)))).multiplier=n;break;case\"parens\":e=dt(1);break;case\"cosh\":e.fname=\"sinh\";break;case\"sinh\":e.fname=\"cosh\";break;case Dt:e.fname=\"sech\",e.power=new ft(2);break;case\"sech\":e=h(e,\"-tanh\");break;case\"csch\":var i=String(e.args[0]);return pt.parse(\"-coth(\"+i+\")*csch(\"+i+\")\");case\"coth\":i=String(e.args[0]);return pt.parse(\"-csch(\"+i+\")^2\");case\"asinh\":e=pt.parse(\"(sqrt(1+(\"+m(e.args[0])+\")^2))^(-1)\");break;case\"acosh\":e=pt.parse(\"(sqrt(-1+(\"+m(e.args[0])+\")^2))^(-1)\");break;case\"atanh\":e=pt.parse(\"(1-(\"+m(e.args[0])+\")^2)^(-1)\");break;case\"asech\":i=String(e.args[0]);e=pt.parse(\"-1/(sqrt(1/(\"+i+\")^2-1)*(\"+i+\")^2)\");break;case\"acoth\":e=pt.parse(\"-1/((\"+e.args[0]+\")^2-1)\");break;case\"acsch\":i=String(e.args[0]);e=pt.parse(\"-1/(sqrt(1/(\"+i+\")^2+1)*(\"+i+\")^2)\");break;case\"asec\":i=String(e.args[0]);e=pt.parse(\"1/(sqrt(1-1/(\"+i+\")^2)*(\"+i+\")^2)\");break;case\"acsc\":i=String(e.args[0]);e=pt.parse(\"-1/(sqrt(1-1/(\"+i+\")^2)*(\"+i+\")^2)\");break;case\"acot\":e=pt.parse(\"-1/((\"+e.args[0]+\")^2+1)\");break;case\"S\":i=String(e.args[0]);e=pt.parse(\"sin((pi*(\"+i+\")^2)/2)\");break;case\"C\":i=String(e.args[0]);e=pt.parse(\"cos((pi*(\"+i+\")^2)/2)\");break;case\"Si\":i=e.args[0];e=pt.parse(\"sin(\"+i+\")/(\"+i+\")\");break;case\"Shi\":i=e.args[0];e=pt.parse(\"sinh(\"+i+\")/(\"+i+\")\");break;case\"Ci\":i=e.args[0];e=pt.parse(\"cos(\"+i+\")/(\"+i+\")\");break;case\"Chi\":i=e.args[0];e=pt.parse(\"cosh(\"+i+\")/(\"+i+\")\");break;case\"Ei\":i=e.args[0];e=pt.parse(\"e^(\"+i+\")/(\"+i+\")\");break;case\"Li\":i=e.args[0];e=pt.parse(\"1/\"+ht.LOG+\"(\"+i+\")\");break;case\"erf\":e=pt.parse(\"(2*e^(-(\"+e.args[0]+\")^2))/sqrt(pi)\");break;case\"atan2\":var s=String(e.args[0]),i=String(e.args[1]);e=pt.parse(\"(\"+i+\")/((\"+i+\")^2+(\"+s+\")^2)\");break;case\"sign\":e=new dt(0);break;case\"sinc\":e=pt.parse(yt(\"(({0})*cos({0})-sin({0}))*({0})^(-2)\",e.args[0]));break;case ht.LOG10:e=pt.parse(\"1/((\"+e.args[0]+\")*\"+ht.LOG+\"(10))\");break;default:e=pt.symfunction(\"diff\",[e,l])}else if(t===qt||t===gt&&mt(e.power)){var r=t===qt?e.value:t===gt&&e.contains(c)?e.fname+vt(m(e.args[0])):e.value+vt(m(e.args[0])),o=(pt.multiply(pt.parse(xt+vt(r)),e.power.clone()),Vt.diff(pt.multiply(pt.parse(xt+vt(r)),e.power.clone()),c));e=pt.multiply(e,o)}else if(t!==gt||e.power.equals(1)){if(t===Nt||t===Mt){var a,t=e.clone(),u=new dt(0);for(a in e.symbols)u=pt.add(u,Vt.diff(e.symbols[a].clone(),c));e=pt.multiply(p(t),u)}}else(o=e.clone()).toLinear(),o.toUnitMultiplier(),e=pt.multiply(p(e.clone()),f(o))}return e.updateHash(),e}function h(e,t,n){return pt.multiply(e,pt.parse(t+vt(n||m(e.args[0]))))}},integration:{u_substitution:function(e,i){function t(e,t,n){var r=Vt.diff(t,i),r=n?n(e,t):pt.divide(e.clone(),r);return r.contains(i,!0)?null:r}function n(e,t){e=Vt.integrate(pt.symfunction(e,[new dt(u)]),u,0);return(e=e.sub(new dt(u),t)).updateHash(),e}var r,s=e[0].clone(),o=e[1].clone(),a=s.group,e=o.group,u=\"__u__\";if(a===gt&&e!==gt)return(r=t(o,(c=s.args[0]).clone()))?pt.multiply(r,n(s.fname,c)):(r=t(o,s))?Vt.integration.poly_integrate(s):void 0;if(e===gt&&a!==gt){if(r=t(s,(c=o.args[0]).clone()))return pt.multiply(r,n(o.fname,c))}else{if(a===gt&&e===gt)return(r=t(s.clone(),o.clone()))||(r=t(o.clone(),s.clone()))?pt.multiply(Vt.integration.poly_integrate(o),r):void 0;if(a===qt&&e!==qt){if(!(r=t(o,(p=s.power).clone()))){var l=Vt.integration.decompose_arg(p.clone(),i),c=Vt.diff(l[2].clone(),i),c=Vt.integration.decompose_arg(c.clone(),i);if(pt.multiply(l[1],c[1]).power.equals(o.power)){c=pt.divide(l[0].clone(),c[0].clone()),c=pt.multiply(c.clone(),pt.pow(new dt(s.value),pt.multiply(l[0],new dt(u)))),c=pt.multiply(c,new dt(u));return Vt.integration.by_parts(c,u,0,{}).sub(u,l[1].clone())}}l=Vt.integrate(s.sub(p.clone(),new dt(u)),u,0);return pt.multiply(l.sub(new dt(u),p),r)}if(e===qt&&a!==qt){r=t(s,(p=o.power).clone());l=Vt.integrate(o.sub(p,new dt(u)),u,0);return pt.multiply(l.sub(new dt(u),p),r)}if(s.isComposite()||o.isComposite()){var a=function(e,t){t=Vt.diff(t,i),e=ct.Algebra.Factor.factor(e),t=ct.Algebra.Factor.factor(t);return pt.divide(e,t)},l=s.isComposite()?s.clone().toLinear():s.clone(),p=o.isComposite()?o.clone().toLinear():o.clone();return(r=t(l.clone(),p.clone(),a))?pt.multiply(Vt.integration.poly_integrate(o),r):(r=t(p.clone(),l.clone(),a))?pt.multiply(Vt.integration.poly_integrate(s),r):void 0}}},poly_integrate:function(e){var t=e.power.toString(),n=e.multiplier.toDecimal(),e=e.toUnitMultiplier().toLinear();return-1===Number(t)?pt.multiply(new dt(n),pt.symfunction(xt,[e])):pt.parse(yt(\"({0})*({1})^(({2})+1)/(({2})+1)\",n,e,t))},stop:function(e){throw ct.Utils.warn(e=e||\"Unable to compute integral!\"),new Ft(e)},partial_fraction:function(e,t,n,r){var i;return mt(t)||(t=pt.parse(t)),i=new dt(0),(e=ct.Algebra.PartFrac.partfrac(e,t)).group===Et&&e.isLinear()?(e.each(function(e){e.isLinear()||Vt.integration.stop()}),e.each(function(e){i=pt.add(i,Vt.integrate(e,t,n,r))})):i=pt.add(i,Vt.integrate(e,t,n,r)),i},get_udv:function(e){function t(e){var t,n=e.group;n===gt?(t=e.fname,ct.Utils.in_trig(t)||ct.Utils.in_htrig(t)?r[3].push(e):ct.Utils.in_inverse_trig(t)?r[1].push(e):t===xt?r[0].push(e):Vt.integration.stop()):n===St||e.isComposite()&&e.isLinear()||n===Et&&e.isLinear()?r[2].push(e):n===qt||e.isComposite()&&!e.isLinear()?r[4].push(e):Vt.integration.stop()}var r=[[],[],[],[],[]];e.group===Et?e.each(function(e){t(dt.unwrapSQRT(e,!0))}):t(e);for(var n,i=new dt(1),s=0;s<5;s++){var o=r[s],a=o.length;if(0<a){if(1<a)for(var u=new dt(1),l=0;l<a;l++)u=pt.multiply(u,o[l].clone());else u=o[0].clone();n?i=pt.multiply(i,u):(n=u).multiplier=n.multiplier.multiply(e.multiplier)}}return[n,i]},trig_sub:function(e,t,n,r,i,s){(i=i||Vt.integration.decompose_arg(e.clone().toLinear(),t))[3],i[2];var o=i[0],a=i[1];if(a.power.equals(2)&&o.greaterThan(0)){t=ct.Utils.getU(e),i=pt.parse(It+vt(t)),o=pt.parse(Ut+vt(t)+\"^2\"),o=pt.multiply(e.sub(a,i),o),a=Vt.integrate(o,t,n,r).sub(i,a);return ct.Utils.clearU(i),a}},by_parts:function(e,t,n,r){var i,s,o,a,u,l;return r.previous=r.previous||[],o=(s=Vt.integration.get_udv(e))[0],i=s[1],u=(a=dt.unwrapSQRT(pt.expand(Vt.diff(o.clone(),t)),!0)).clone().stripVar(t),a=pt.divide(a,u.clone()),e=Vt.integrate(i.clone(),t,n||0),a=(s=pt.multiply(e.clone(),a)).toString(),-1!==r.previous.indexOf(a)&&ct.Utils.in_trig(o.fname)&&i.isE()?(r.is_cyclic=!0,new dt(1)):(r.previous.push(a),o=pt.multiply(o,e),e=s.multiplier.clone(),s.toUnitMultiplier(),(u=pt.multiply(Vt.integrate(s.clone(),t,n,r),u)).multiplier=u.multiplier.multiply(e),u=pt.subtract(o,u),r.is_cyclic&&(r.previous.pop(),0===r.previous.length&&(u=pt.expand(u),l=new dt(0),u.each(function(e){e.contains(t)||(l=pt.add(l,e.clone()))}),u=pt.divide(pt.subtract(u,l.clone()),pt.subtract(new dt(1),l)))),u)},decompose_arg:ct.Utils.decompose_fn},integrate:function(ot,at,ut,lt){var e;if(at||(e=ct.Utils.variables(ot),at=(at=1===e.length?e[0]:at)||\"x\"),ct.Utils.isVector(ot)){var t=new ct.Vector([]);return ot.each(function(e){t.elements.push(Vt.integrate(e,at))}),t}return isNaN(at)||pt.error(\"variable expected but received \"+at),ot.isConstant(!0)?pt.multiply(ot.clone(),pt.parse(at)):(lt=lt||{},ct.Utils.block(\"PARSE2NUMBER\",function(){ut=ut||0;var t,n=mt(at)?at.toString():at,e=(ce=dt.unwrapSQRT(ot.clone(),!0)).group;try{if(++ut>ct.Settings.integration_depth&&Vt.integration.stop(\"Maximum depth reached. Exiting!\"),ce.contains(n,!0)){if(e===St)t=Vt.integration.poly_integrate(ce,n,ut);else if(e===qt)if(ce.previousGroup===gt&&\"sqrt\"!==ce.fname&&ce.fname!==ht.PARENTHESIS&&Vt.integration.stop(),ce.contains(n)&&ce.previousGroup!==gt)ce.power.contains(n)?Vt.integration.stop():((We=Vt.diff(ce.clone().toLinear(),n)).contains(n)&&Vt.integration.stop(),t=Vt.integration.poly_integrate(ce,n,ut));else{if((f=Vt.diff(ce.power.clone(),n)).contains(n)){var r=f.stripVar(n);if((h=pt.divide(f.clone(),r.clone())).group===St&&h.isLinear())return r.multiplier=r.multiplier.divide(new ft(2)),pt.parse(yt(\"({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))\",r,n,ce.multiplier));Vt.integration.stop()}ce.isE()?f.isLinear()?t=ce:f.isE()&&f.power.group===St&&f.power.power.equals(1)?t=pt.multiply(pt.symfunction(\"Ei\",[ce.power.clone()]),ce.power):Vt.integration.stop():(g=pt.symfunction(xt,[pt.parse(ce.value)]),t=pt.divide(ce,g)),t=pt.divide(t,f)}else if(ce.isComposite()&&ce.isLinear()){var i=pt.parse(ce.multiplier);ce.toUnitMultiplier(),t=new dt(0),ce.each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))}),t=pt.multiply(i,t)}else if(e===Nt)if((ce=ce.power.greaterThan(1)?pt.expand(ce):ce).power.equals(1))t=new dt(0),ce.each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))},!0);else{var s=Number(ce.power),i=ce.multiplier.clone();ce.toUnitMultiplier();var o,a,u,l=ce.clone().toLinear(),c=(Ve=Vt.integration.decompose_arg(l,n))[3],p=Ve[2],f=Ve[0],h=Ve[1];if(-1===s&&h.group!==Mt&&h.power.equals(2)){var m,g,d,v,w,y,b,S,M,N,E,q=!wt(c)||0<c;t=h.group===St&&h.power.equals(2)&&q?(m=function(e){var t=new dt(1);return e.each(function(e){t=pt.multiply(t,\"abs\"===e.fname?e.args[0]:e)}),t},d=f.clone(),v=c.clone(),d=pt.pow(d,new dt(.5)),v=pt.pow(v,new dt(.5)),g=pt.multiply(m(v),m(d)),R=pt.symfunction(Tt,[pt.divide(pt.multiply(f,h.toLinear()),g.clone())]),pt.divide(R,g)):h.group===St&&h.isLinear()?pt.divide(Vt.integration.poly_integrate(ce),f):h.power.equals(4)?(E=vt,d=pt.parse(At+E(f)+\"*\"+n+\"^2\"),v=pt.parse(At+E(2)+\"*\"+E(f)+\"^\"+E(\"1/4\")+\"*\"+E(c)+\"^\"+E(\"1/4\")+\"*\"+n),w=pt.parse(At+E(c)),P=pt.add(pt.add(d.clone(),v.clone()),w.clone()),X=pt.add(pt.subtract(d,v),w),y=pt.parse(At+E(2)+\"*\"+E(c)+\"^\"+E(\"3/4\")),b=pt.parse(At+E(c)+\"*\"+E(c)+\"^\"+E(\"1/4\")+\"*\"+n),S=pt.parse(\"2*\"+E(c)+\"*\"+At+E(2)+\"*\"+E(c)+\"^\"+E(\"1/4\")),M=pt.divide(pt.subtract(y.clone(),b.clone()),pt.multiply(S.clone(),X)),N=pt.divide(pt.add(y,b),pt.multiply(S,P.clone())),pt.add(Vt.integrate(M,n,ut,lt),Vt.integrate(N,n,ut,lt))):Vt.integration.partial_fraction(ce,n,ut)}else if(-.5===s)h.group===St&&h.power.equals(2)&&p.multiplier.lessThan(0)&&!c.multiplier.lessThan(0)?(f.negate(),t=c.isConstant()&&f.isConstant()?(g=pt.symfunction(At,[f.clone()]),o=pt.symfunction(At,[pt.multiply(f.clone(),c)]),pt.divide(pt.symfunction(Rt,[pt.divide(p.toLinear(),o)]),g)):(a=pt.symfunction(At,[f]),u=pt.multiply(a.clone(),h.clone().toLinear()),pt.divide(pt.symfunction(Tt,[pt.divide(u,pt.symfunction(At,[l.clone()]))]),a))):Vt.integration.stop();else if(.5===s&&h.power.equals(2)&&f.greaterThan(0))Vt.integration.stop();else if(h.isLinear()&&h.group!==Mt)t=pt.divide(Vt.integration.poly_integrate(ce),f);else{if(h.power.equals(2)&&f.greaterThan(0)){var x=pt.parse(At+vt(f)),A=pt.parse(At+vt(c)),C=pt.multiply(x.clone(),A.clone()).invert(),L=pt.pow(c,new dt(ce.power)),I=ct.Utils.getU(ce);Ze=pt.multiply(C,h.clone().toLinear());var U=pt.parse(Tt+vt(Ze)),_=2*(Math.abs(ce.power)-1),O=Vt.integrate(pt.parse(Lt+vt(I)+\"^\"+_));return ct.Utils.clearU(I),pt.multiply(O.sub(I,U),L)}if(ce.group===Et||ce.power.lessThan(0)){var R=ce.clone().toLinear(),T=ct.Algebra.Factor.factor(R).toString()!==R.toString();if(ct.Algebra.degree(R,pt.parse(n)).equals(2)&&!T)try{var P,k,D=ct.Algebra.sqComplete(R,n);Ze=ct.Utils.getU(R),P=D.f.sub(D.a,Ze),k=pt.pow(P,pt.parse(ce.power)),t=Vt.integrate(k,Ze).sub(Ze,D.a)}catch(e){Vt.integration.stop()}else t=Vt.integration.partial_fraction(ce,n,ut,lt)}else t=Vt.integration.by_parts(ce,n,ut,lt)}t.multiplier=t.multiplier.multiply(i)}else if(e===gt){var F=ce.args[0],i=ce.multiplier.clone();ce.toUnitMultiplier();var B,G,V,H,j,X,$,Z,z,f=(Ve=Vt.integration.decompose_arg(F,n))[0],h=Ve[1],Q=ce.fname;if(Q===xt||Q===Rt||\"acos\"===Q||Q===Tt&&h.isLinear()){var Y,s=ce.power.toString();wt(s)&&(ut-=s),t=F.isComposite()?(Ze=ct.Utils.getU(ce),R=pt.pow(pt.parse(xt+vt(Ze)),new dt(s)),Ce=Vt.diff(F,n),Y=pt.multiply(R,Ce),O=Vt.integrate(Y,Ze,ut,lt),pt.multiply(pt.parse(i),O.sub(Ze,F))):pt.multiply(pt.parse(i),Vt.integration.by_parts(ce,n,ut,lt))}else{if(Q===It&&ce.power.lessThan(0))return(Je=ce.clone()).power.negate(),Je.fname=Ot,pt.multiply(pt.parse(i),Vt.integrate(Je,n,ut));if(!f.contains(n,!0)&&ce.isLinear())if(\"abs\"===Q)(h=pt.divide(F.clone(),f.clone())).group!==St||h.power.lessThan(0)?Vt.integration.stop():t=ct.Utils.even(h.power)?Vt.integrate(F,n,ut):((z=Vt.integrate(h,n,ut)).power=z.power.subtract(new ft(1)),pt.multiply(pt.multiply(pt.symfunction(\"abs\",[h.toLinear()]),z),f));else{var W=ce.args[0].group,J=Vt.integration.decompose_arg(F,n);switch((W!==Nt&&W!==St&&W!==Et||!J[1].power.equals(1)||F.hasFunc())&&Vt.integration.stop(),Q){case Lt:t=pt.symfunction(Ct,[F]);break;case Ct:(t=pt.symfunction(Lt,[F])).negate();break;case It:t=pt.parse(yt(ht.LOG+\"(sec({0}))\",F));break;case Ut:t=pt.parse(yt(ht.LOG+\"(tan({0})+sec({0}))\",F));break;case _t:t=pt.parse(yt(\"-\"+ht.LOG+\"(csc({0})+cot({0}))\",F));break;case Ot:t=pt.parse(yt(ht.LOG+\"(sin({0}))\",F));break;case Pt:t=pt.symfunction(kt,[F]);break;case kt:t=pt.symfunction(Pt,[F]);break;case Dt:t=pt.parse(yt(ht.LOG+\"(cosh({0}))\",F));break;case\"asec\":case\"acsc\":case\"acot\":case\"asech\":case\"acsch\":case\"acoth\":t=Vt.integration.by_parts(ce,n,ut,lt);break;case\"sech\":t=pt.parse(yt(\"atan(sinh({0}))\",F));break;case\"csch\":t=pt.parse(yt(ht.LOG+\"(tanh(({0})/2))\",F));break;case\"coth\":t=pt.parse(yt(ht.LOG+\"(sinh({0}))\",F));break;case\"exp\":t=Vt.integrate(pt.parse(yt(\"e^({0})\",F)),n,ut);break;case\"S\":var F=ce.args[0].clone(),K=(Se=Vt.integration.decompose_arg(F,n))[1],ee=Se[0],te=Se[3];t=pt.parse(yt(\"(cos((1/2)*pi*(({1})+({0})*({2}))^2)+pi*(({1})+({0})*({2}))*S(({1})+({0})*({2})))/(({0})*pi)\",ee,te,h));break;case\"C\":F=ce.args[0].clone(),K=(Se=Vt.integration.decompose_arg(F,n))[1],ee=Se[0],te=Se[3];t=pt.parse(yt(\"(pi*(({1})+({0})*({2}))*C(({1})+({0})*({2}))-sin((1/2)*pi*(({1})+({0})*({2}))^2))/(({0})*pi)\",ee,te,K));break;case\"erf\":F=ce.args[0].clone(),K=(Se=Vt.integration.decompose_arg(F,n))[1],ee=Se[0];t=pt.parse(yt(\"e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))\",ee,K,F));break;case\"sign\":t=pt.multiply(ce.clone(),F.clone());break;default:Vt.integration.stop()}t=pt.divide(t,f)}else h.isLinear()?Q===Lt||Q===Ct?(s=Number(ce.power),t=s<0?(ce.fname=Q===Ct?_t:Ut,ce.invert().updateHash(),Vt.integrate(ce,n,ut)):(F=ce.args[0],B=ce.clone(),G=ce.clone(),Ie=new dt((s-1)/s),V=pt.multiply(f.clone(),new dt(s)).invert(),B.power=B.power.subtract(new ft(1)),G.power=G.power.subtract(new ft(2)),We=pt.symfunction(Q===Lt?Ct:Lt,[F.clone()]),Q===Ct&&We.negate(),pt.add(pt.multiply(pt.multiply(V,B),We),pt.multiply(Ie,Vt.integrate(pt.parse(G),n,ut))))):Q===It||Q===Ot?ce.args[0].isLinear(n)&&(_=ce.power.subtract(new ft(1)).toString(),nt=ce.clone().toUnitMultiplier(),Z=pt.parse(yt((Q===Ot?\"-\":\"\")+\"1/({2}*{0})*{3}({1})^({0})\",_,F,f,Q)),nt.power=nt.power.subtract(new ft(2)),nt.power.equals(0)&&(nt=pt.parse(nt)),t=pt.subtract(Z,Vt.integrate(nt,n,ut))):Q===Ut||Q===_t?(H=ce.power.subtract(new ft(1)).toString(),j=ce.power.subtract(new ft(2)).toString(),X=Q===Ut?It:Ot,nt=ce.clone().toUnitMultiplier(),$=yt((Q===_t?\"-\":\"\")+\"1/({0}*{1})*{4}({3})^({2})*{5}({3})\",f,H,j,F,Q,X),Z=pt.parse($),nt.power=nt.power.subtract(new ft(2)),nt.power.equals(0)&&(nt=pt.parse(nt)),t=pt.add(Z,pt.multiply(new dt(j/H),Vt.integrate(nt,n,ut)))):Q!==kt&&Q!==Pt||!ce.power.equals(2)?Vt.integration.stop():t=Vt.integrate(ce.fnTransform(),n,ut):Vt.integration.stop();t.multiplier=t.multiplier.multiply(i)}}else if(e===Mt)t=Vt.integration.partial_fraction(ce,n,ut);else if(e===Et){var ne=(ce=ce.getDenom().group===St?pt.expand(ce):ce).stripVar(n),re=pt.divide(ce.clone(),ne.clone());if(ne.contains(n)&&(re=pt.multiply(re,ne),ne=new dt(1)),re.group!==Et){if(re.equals(1))return Vt.integrate(pt.expand(ce),n,ut);re.clone().toLinear().isPoly(!0)&&1<ct.Utils.variables(re).length&&(re=ct.Algebra.Factor.factor(re)),t=Vt.integrate(re,n,ut)}else{var ie=re.collectSymbols().sort(function(e,t){return e.group===t.group?Number(e.power)===Number(t.power)?e<t?1:-1:t.power-e.power:t.group-e.group}).map(function(e){e=dt.unwrapSQRT(e,!0);return\"exp\"===e.fname?pt.parse(yt(\"({1})*e^({0})\",e.args[0],e.multiplier)):e}),se=ie.length;if(ce.power<0){if(2===se)return Vt.integrate(pt.expand(ce),n,ut,lt)}else if(2===se){try{t=Vt.integration.u_substitution(ie,n)}catch(e){}if(!t){var oe,ae,ue,le,ce,pe,fe,he,me,ge,de,ve,we,ye,be,Se,Me,Ne,Ee,qe,xe,Ae,Ce,Le,Ie,Ue,_e,Oe,Re,Te,Pe=ie[0].group,ke=ie[1].group,De=ie[0],Fe=ie[1],Be=De.fname,Ge=Fe.fname;if(ce=pt.multiply(De.clone(),Fe.clone()),Pe===gt&&ke===gt)if(Be===xt||Ge===xt)t=Vt.integration.by_parts(ce.clone(),n,ut,lt);else{ie.sort(function(e,t){return t.fname>e.fname});var Ve,He=De.args[0];He.isLinear()&&(He.group===Nt||He.group===Et||He.group===St)||Vt.integration.stop(),h=(Ve=Vt.integration.decompose_arg(He,n))[1],f=Ve[0],h.isLinear()||Vt.integration.stop();var je,Xe=Fe.args[0];if(He.equals(Xe))if(Be===Ct&&Ge===Lt||Be===Lt&&Ge===Ct)if(De.power.lessThan(0)&&Vt.integration.stop(),Be===Ct&&De.power.add(Fe.power).equals(0))De.fname=It,De.updateHash(),t=Vt.integrate(De,n,ut);else if(bt(De.power)&&Ge===Lt&&Fe.power.lessThan(0)){var _=Number(De.power)/2,$e=pt.parse(yt(\"(1-cos({0})^2)^({1})\",De.args[0],_));t=Vt.integrate(pt.expand(pt.multiply($e,Fe.clone())),n,ut,lt)}else if(bt(De.power)&&Ge===Ct&&Fe.power.lessThan(0)){_=Number(De.power)/2,$e=pt.parse(yt(\"(1-sin({0})^2)^({1})\",De.args[0],_));t=Vt.integrate(pt.expand(pt.multiply($e,Fe.clone())),n,ut,lt)}else{var Ze,ze=ct.Utils.even(De.power),Qe=ct.Utils.even(Fe.power);if(t=new dt(0),ze&&Qe){var Ye=function(e){var t=e.power/2,t=e.fname===Lt?\"((1/2)+(cos(2*(\"+e.args[0]+\"))/2))^\"+t:\"((1/2)-(cos(2*(\"+e.args[0]+\"))/2))^\"+t;return pt.parse(t)},f=Ye(De),c=Ye(Fe),We=pt.multiply(f,c);return(Je=pt.expand(We)).each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))}),pt.multiply(t,ne)}nt=ze?(Ze=De,Fe):(Ze=Fe,De);var Je,Ke=Ze.fname===Lt?-1:1,et=((_=nt.power)-1)/2,tt=pt.parse(\"(1-\"+Ze.fname+ct.Utils.inBrackets(He)+\"^2)^\"+et);(Je=pt.expand(pt.multiply(new dt(Ke),pt.multiply(Ze.clone(),tt)))).each(function(e){t=pt.add(t,Vt.integration.poly_integrate(e.clone()))})}else Be===Ut&&Ge===It&&h.isLinear()&&Fe.isLinear()?t=pt.parse(yt(\"sec({0})^({1})/({1})\",De.args[0],De.power)):Be===It&&Ge===Ut&&h.isLinear()?De.isLinear()&&Fe.isLinear()?t=pt.divide(pt.symfunction(Ut,[He.clone()]),f):bt(De.power)?(s=Number(De.power)/2,We=pt.parse(yt(\"(sec({0})^2-1)^({1})\",De.args[0],s)),t=Vt.integrate(pt.expand(pt.multiply(We,Fe)),n,ut)):Vt.integration.stop():t=Be===Ut&&Ge===Lt?(De.fname=Lt,De.invert().updateHash(),Vt.integrate(pt.multiply(De,Fe),n,ut)):Be===Ct&&Ge===_t?(Fe.fname=Ct,Fe.invert().updateHash(),Vt.integrate(pt.multiply(De,Fe),n,ut)):(We=Be!==It||Ge!==Lt&&Ge!==Ct||!Fe.power.lessThan(0)?pt.multiply(De.fnTransform(),Fe.fnTransform()):pt.multiply(De.fnTransform(),Fe),Vt.integrate(pt.expand(We),n,ut));else Be!==Ct&&Be!==Lt||Ge!==Ct&&Ge!==Lt?Vt.integration.stop():De.isLinear()&&Fe.isLinear()?t=De.args[0].isLinear()&&Fe.args[0].isLinear()?(Ge===Ct?(p=De.args[0],je=Fe.args[0]):(je=De.args[0],p=Fe.args[0]),R=pt.parse(yt(\"(sin(({1})+({0}))+sin(({1})-({0})))/2\",p.toString(),je.toString())),Vt.integrate(R,n,ut)):(st=Gt(ie),Vt.integrate(pt.expand(st),n,ut)):(st=new dt(1),ie.map(function(e){e=e.fnTransform();st=pt.multiply(st,e)}),We=pt.expand(st),(t=Vt.integrate(We,n,ut)).hasIntegral()&&(t=Vt.integrate(Gt(st.collectSymbols()),n,ut)))}else Pe===gt&&ke===St?(oe=De.isLinear(),De.fname===Lt&&oe&&Fe.power.equals(-1)?t=pt.symfunction(\"Ci\",[De.args[0]]):De.fname===Lt&&Fe.power.equals(-1)?t=Vt.integrate(pt.multiply(De.fnTransform(),Fe.clone()),n,ut):De.fname===kt&&oe&&Fe.power.equals(-1)?t=pt.symfunction(\"Chi\",[De.args[0]]):De.fname===kt&&Fe.power.equals(-1)?t=Vt.integrate(pt.multiply(De.fnTransform(),Fe.clone()),n,ut):De.fname===Ct&&oe&&Fe.power.equals(-1)?t=pt.symfunction(\"Si\",[De.args[0]]):De.fname===Ct&&Fe.power.equals(-1)?t=Vt.integrate(pt.multiply(De.fnTransform(),Fe.clone()),n,ut):De.fname===Pt&&oe&&Fe.power.equals(-1)?t=pt.symfunction(\"Shi\",[De.args[0]]):De.fname===Pt&&Fe.power.equals(-1)?t=Vt.integrate(pt.multiply(De.fnTransform(),Fe.clone()),n,ut):De.fname===xt&&Fe.power.equals(-1)?t=Vt.integration.poly_integrate(De,n,ut):\"erf\"===De.fname?Fe.power.equals(1)&&(ee=(Se=Vt.integration.decompose_arg(De.args[0],n))[0],K=Se[1],F=De.args[0].toString(),t=pt.parse(yt(\"(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)\",ee,K,F))):t=Vt.integration.by_parts(ce,n,ut,lt)):Pe===qt&&ke===St?(h=Be===xt?Vt.integration.decompose_arg(De.args[0],n)[1]:null,t=De.isE()&&(De.power.group===St||De.power.group===Et)&&Fe.power.equals(-1)?pt.symfunction(\"Ei\",[De.power.clone()]):Be===xt&&h.value===Fe.value?Vt.integration.poly_integrate(De,n,ut):Vt.integration.by_parts(ce,n,ut,lt)):Pe===Mt&&ke===St?(ce=Fe.value===De.value&&De.power.equals(-1)?(ae=Math.min.apply(null,ct.Utils.keys(De.symbols)),ue=Math.min(ae,Fe.power),(le=Fe.clone()).power=new ft(ue),Fe=pt.divide(Fe,le.clone()),We=new dt(0),De.each(function(e){We=pt.add(We,pt.divide(e.clone(),le.clone()))}),We.multiplier=De.multiplier,pt.divide(Fe,We)):pt.expand(ce),t=Vt.integration.partial_fraction(ce,n,ut)):Pe===Nt&&ke===St?(R=De.clone().toLinear(),pe=ct.Algebra.degree(R,pt.parse(n)).equals(1),De.power.equals(-.5)?(f=(Ve=Vt.integration.decompose_arg(De.clone().toLinear(),n))[0].negate(),h=Ve[1],c=Ve[3],xe=Number(De.power),Ae=Number(Fe.power),wt(Ae)&&ct.Utils.even(Ae)&&h.power.equals(2)?(Me=pt.divide(pt.multiply(pt.pow(c.clone(),new dt(2)),pt.symfunction(At,[pt.divide(c.clone(),f.clone())])),pt.pow(f.clone(),new dt(2))),Me=pt.multiply(Me,pt.symfunction(At,[c]).invert()),(fe=pt.parse(\"sin(u)\")).power=fe.power.multiply(Fe.power),O=Vt.integrate(fe,\"u\",ut),he=pt.parse(\"asin(sqrt(\"+f+\"/\"+c+\")*\"+n+\")\"),t=pt.multiply(Me,O.sub(new dt(\"u\"),he))):-.5===xe&&(me=function(e,t){t=pt.parse(Vt.integrate(e,n,ut,lt).sub(n,yt(t,n)));if(!t.hasIntegral())return t},-1===Ae?t=me(pt.expand(pt.expand(pt.pow(pt.multiply(De.invert(),Fe.invert()),new dt(2)))).invert(),\"sqrt(1-1/({0})^2)\"):-2===Ae&&(t=me(pt.sqrt(pt.expand(pt.divide(pt.pow(ce,new dt(2)).invert(),pt.pow(new dt(n),new dt(2))).negate())).invert(),\"sqrt(1-1/({0})^2)\")))):De.power.equals(-1)&&Fe.isLinear()&&pe?t=Vt.integration.partial_fraction(ce,n,ut):!De.power.lessThan(0)&&wt(De.power)?(ge=pt.expand(De),t=new dt(0),ge.each(function(e){e.group===Mt?e.each(function(e){t=pt.add(t,Vt.integrate(pt.multiply(Fe.clone(),e),n,ut))}):t=pt.add(t,Vt.integrate(pt.multiply(Fe.clone(),e),n,ut))})):De.power.lessThan(-2)?t=Vt.integration.by_parts(ce,n,ut,lt):De.power.lessThan(0)&&Fe.power.greaterThan(1)?(f=(Ve=Vt.integration.decompose_arg(De.clone().toLinear(),n))[0].negate(),h=Ve[1],c=Ve[3],l=De.clone().toLinear(),t=h.group!==Mt&&h.isLinear()?(s=Number(Fe.power),Ze=new dt(Ce=\"_u_\"),de=pt.expand(pt.divide(pt.pow(pt.subtract(Ze.clone(),c.clone()),new dt(s)),Ze.clone())),(ve={})[Ce]=l,we=pt.parse(de,ve),Vt.integrate(we,n,0)):Fe.power.greaterThan(h.power)||Fe.power.equals(h.power)?(ye=new ct.Algebra.Classes.Factors,De=ct.Algebra.Factor.coeffFactor(De.invert(),ye),(be=ct.Algebra.divide(Fe,De)).group!==Et?(t=new dt(0),be.each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))}),ye.each(function(e){t=pt.divide(t,e)}),pt.expand(t)):Vt.integration.by_parts(ce,n,ut,lt)):Vt.integration.partial_fraction(ce,n,ut)):De.power.den.equals(2)?(f=(Se=Vt.integration.decompose_arg(De.clone().toLinear(),n))[3],h=Se[1],c=Se[0],je=Se[2],t=h.power.equals(2)&&c.lessThan(0)?(f.equals(1)||(ne=pt.multiply(ne,pt.pow(f,new dt(2)))),Ze=n,Me=pt.divide(pt.pow(c.clone().negate(),new dt(.5)),pt.pow(f,new dt(.5))),Ce=pt.symfunction(Lt,[new dt(Ze)]),Ne=pt.pow(pt.symfunction(Lt,[new dt(Ze)]),new dt(De.power.num)),Ee=pt.pow(pt.symfunction(Ct,[new dt(Ze)]),new dt(Fe.power)),qe=pt.multiply(pt.multiply(Ne,Ce),Ee),(O=Vt.integrate(qe,Ze,ut)).sub(Ze,pt.symfunction(Rt,[pt.multiply(new dt(n),Me)]))):Vt.integration.partial_fraction(ce,n,ut,lt)):pe&&(t=Vt.integration.partial_fraction(ce,n,ut))):De.isComposite()&&Fe.isComposite()?(t=new dt(0),De.power.greaterThan(0)&&Fe.power.greaterThan(0)?(Je=pt.expand(ce)).each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))},!0):(xe=Number(De.power),Ae=Number(Fe.power),xe<0&&0<Ae&&(We=De,De=Fe,Fe=We),-1===xe&&-1===Ae?t=Vt.integration.partial_fraction(ce,n):De.each(function(e){e=pt.multiply(e,Fe.clone()),e=Vt.integrate(e,n,ut);t=pt.add(t,e)}))):Pe===Nt&&ie[0].power.greaterThan(0)?(De=pt.expand(De),t=new dt(0),De.each(function(e){t=pt.add(t,Vt.integrate(pt.multiply(e,Fe.clone()),n,ut))},!0)):Pe===gt&&ke===qt&&ct.Utils.in_htrig(De.fname)?(De=De.fnTransform(),t=Vt.integrate(pt.expand(pt.multiply(De,Fe)),n,ut)):Pe===gt&&ke===Nt||ke===gt&&Pe===Nt?(ke===gt&&Pe===Nt&&(We=De,De=Fe,Fe=We),Ce=dt.unwrapSQRT(Vt.diff(De.clone(),n),!0),Le=dt.unwrapSQRT(Fe,!0),Ce.power.equals(Le.power)?(s=new dt(Fe.power),Ue=Ce.clone().toLinear(),_e=Fe.clone().toLinear(),(Ie=ct.Algebra.divide(Ue.toLinear(),_e)).isConstant()&&(Oe=pt.pow(Ie,s.negate()),t=pt.multiply(Oe,Vt.integration.poly_integrate(De.clone())))):t=Vt.integration.by_parts(ce,n,ut,lt)):(Re=De.clone().toLinear(),Te=Fe.clone().toLinear(),t=Pe===qt&&ke===qt&&De.power.contains(n)&&Fe.power.contains(n)&&!Re.contains(n)&&!Te.contains(n)?pt.parse(yt(\"(({0})^(({2})*({4}))*({1})^(({3})*({4})))/(log(({0})^({2}))+log(({1})^({3})))\",Re.toString(),Te.toString(),De.power.multiplier.toString(),Fe.power.multiplier.toString(),n)):Vt.integration.by_parts(ce,n,ut,lt))}}else if(3===se&&(ie[2].group===St&&ie[2].power.lessThan(2)||ie[0].group===Nt)){var nt,rt=ie[0];rt.group===Nt?(rt.power.greaterThan(1)&&(rt=pt.expand(rt)),nt=pt.multiply(ie[1],ie[2]),t=new dt(0),rt.each(function(e){e=pt.multiply(e,nt.clone()),e=Vt.integrate(e,n,ut);t=pt.add(t,e)},!0)):t=Vt.integration.by_parts(ce,n,ut,lt)}else if(Bt(ie)){for(var We=new dt(1),it=0,se=ie.length;it<se;it++)We=pt.multiply(We,ie[it].fnTransform());We=pt.expand(We),t=Vt.integrate(We,n,ut)}else{var st=Gt(ie);t=Vt.integrate(pt.expand(st),n,ut)}}t=pt.multiply(t,ne)}}else t=pt.multiply(ce.clone(),pt.parse(n));if(t)return t}catch(e){if(!(e instanceof Ft||e instanceof ct.exceptions.DivisionByZero))throw e}return pt.symfunction(\"integrate\",[ot,at])},!1))},defint:function(e,t,n,r){r=r||\"x\";function i(t,e,n){try{return pt.parse(t,e)}catch(e){return Vt.Limit.limit(t,r,n)}}var s,o,a=ct.Utils.variables(e),u=e.hasTrig();return 1!==a.length||r||(r=a[0]),u||(s=Vt.integrate(e,r)),u||s.hasIntegral()?1===a.length&&t.isConstant()&&n.isConstant()?(o=ct.Utils.build(e),new dt(ct.Math2.num_integrate(o,Number(t),Number(n)))):pt.symfunction(\"defint\",[e,t,n,r]):(o={},(e={})[r]=n,o[r]=t,n=i(s,e,n),t=i(s,o,t),pt.subtract(n,t))},Limit:{interval:function(e,t){return pt.parse(yt(\"[{0}, {1}]\",e,t))},diverges:function(){return Vt.Limit.interval(\"-Infinity\",\"Infinity\")},divide:function(e,t,n,r,i){if(!(i++>ht.max_lim_depth)){e.clone();var s=t.clone();if(\"abs\"===t.fname){var o=e.sign(),a=r.sign();if(r.isInfinity)return pt.multiply(new dt(o),new dt(a));if(r.equals(0)){var a=pt.parse(e.multiplier),u=pt.parse(t.multiplier);return pt.divide(pt.multiply(a,Vt.Limit.interval(\"-1\",\"1\")),u)}Vt.Limit.diverges()}var l=function(e){if(ct.Utils.isVector(e)){for(var t=0;t<e.elements.length;t++)if(!e.elements[t].isInfinity)return!1;return!0}return e.isInfinity},c=function(e,t){return!ct.Utils.isVector(e)&&e.equals(t)};do{var p,f,h=k(Vt.Limit.limit(e.clone(),n,r,i)),m=k(Vt.Limit.limit(t.clone(),n,r,i)),g=l(h)&&l(m)||c(h,0)&&c(m,0)}while(g&&(p=Vt.diff(e.clone(),n),f=Vt.diff(t.clone(),n),e=(f=pt.expand(pt.divide(p,f))).getNum(),t=f.getDenom()),g);u=m.equals(0),s=Number(s.power);return r.isConstant(!0)&&u?dt.infinity(ct.Utils.even(s)&&h.lessThan(0)?-1:void 0):u?Vt.Limit.diverges():pt.divide(h,m)}},rewriteToLog:function(e){var t=e.power.clone();return e.toLinear(),pt.pow(new dt(\"e\"),pt.multiply(t,pt.symfunction(ht.LOG+\"\",[e])))},getSubbed:function(t,e,n){var r;t.group===qt&&(t=Vt.rewriteToLog(t));try{r=t.sub(e,n)}catch(e){r=t}return r},isInterval:function(e){return ct.Utils.isVector(e)},isConvergent:function(e){return!(Vt.Limit.isInterval(e)&&e.elements[0].isInfinity&&e.elements[1].isInfinity||e.containsFunction(\"limit\"))},limit:function(t,n,r,i){if(t.isLinear()&&t.isComposite()){var s=new dt(0);return t.each(function(e){s=pt.add(s,Vt.Limit.limit(e,n,r,i))},!0),s}if(t=ct.Algebra.Simplify.simplify(t),i=i||1,!(i++>ht.max_lim_depth)){var e=pt.parse(t.multiplier);t.toUnitMultiplier();try{if(t.isConstant(!0))d=t;else{var o={};o[n]=r;try{var a=pt.parse(t.sub(n,r),o);(a.isConstant(!0)||a.isInfinity)&&(d=a)}catch(e){}if(!d){var u,l=t.getNum(),c=t.getDenom();if(c.isConstant(!0)){if(t.group===qt){var p,f,h,m,g,d,v=t.clone().toLinear(),w=(t.power.clone(),v.getNum()),y=v.getDenom(),b=ct.Utils.decompose_fn(y,n,!0);d=w.group===St&&w.multiplier.isOne()&&b.ax.group===St&&b.b.isConstant(!0)&&b.a.isOne()&&b.b.isConstant(!0)?pt.parse(yt(\"(1/e^({0}))\",b.b)):(f=(p=Vt.Limit.rewriteToLog(t.clone())).power.clone(),h=p.clone().toLinear(),m=Vt.Limit.limit(h,n,r,i),g=Vt.Limit.limit(f,n,r,i),pt.pow(m,g))}else if(t.group===gt&&1===t.args.length){var S,M=Vt.Limit.limit(t.args[0],n,r,i);if(ct.Utils.isVector(M))return d=M.map(function(e){return t.clone().args[0]=e,Vt.Limit.limit(pt.symfunction(t.fname,[e]),n,r,i)}),pt.multiply(e,d);if(M.isConstant(!0)){var N=pt.symfunction(t.fname,[M]);try{k(N),S=!0}catch(e){S=!1}}if(S)d=N;else if(Vt.Limit.isConvergent(M))if(t.fname===xt)switch(M.toString()){case\"0\":d=dt.infinity().negate();break;case\"Infinity\":case\"-Infinity\":d=dt.infinity()}else if(t.fname!==Lt&&t.fname!==Ct||!r.isInfinity){if(t.fname===It){var E=t.args[0],q=E.getNum(),x=E.getDenom(),A=q.toUnitMultiplier();(r.isInfinity||A.equals(\"pi\")&&x.equals(2))&&(d=divergent())}else if(t.fname===ht.FACTORIAL&&M.isInfinity)return dt.infinity()}else d=Vt.Limit.interval(-1,1)}else if(t.group===St){if(0<t.power)return pt.parse(t,o);d=ct.Utils.even(t.power)?dt.infinity():Vt.Limit.diverges()}else if(t.group===Et){for(var v=(U=t.collectSymbols().sort(function(e,t){return e.group-t.group})).pop(),C=k(Vt.Limit.limit(v,n,r,i));U.length;){var L=U.pop(),I=k(Vt.Limit.limit(L,n,r,i));C.isInfinity||!Vt.Limit.isConvergent(C)&&I.equals(0)||C.equals(0)&&Vt.Limit.isConvergent(I)?((L=L.containsFunction(xt)?[v,v=L][0]:L).invert(),C=C.isInfinity&&I.isInfinity?dt.infinity():Vt.Limit.divide(v,L,n,r,i)):(C=pt.multiply(C,I),v=pt.multiply(v,L))}d=C}else if(t.isComposite()){t.isLinear()||(t=pt.expand(t)),d=new dt(0);for(var U=t.collectSymbols().sort(function(e,t){return t.group-e.group}),_=[],O=new dt(0),R=0,T=U.length;R<T;R++)(P=U[R].clone()).group===gt||P.group===Et&&P.hasFunc()?O=pt.add(O,P):_.push(P);_.unshift(O),1!==_.length&&(U=_);for(R=0,T=U.length;R<T;R++){var P=U[R];try{u=Vt.Limit.limit(P,n,r,i)}catch(e){u=Vt.Limit.diverges()}try{d=pt.add(d,u)}catch(e){if(i++>ht.max_lim_depth)return;d=Vt.Limit.limit(Vt.diff(t,n),n,r,i)}}}}else d=Vt.Limit.divide(l,c,n,r,i)}}d=d||pt.symfunction(\"limit\",[t,n,r])}catch(e){d=pt.symfunction(\"limit\",[t,n,r])}return pt.multiply(e,d)}}},Fresnel:{S:function(e){return e.isConstant(!0)?Vt.defint(pt.parse(\"sin(pi*x^2/2)\"),dt(0),e,\"x\"):pt.symfunction(\"S\",arguments)},C:function(e){return e.isConstant(!0)?Vt.defint(pt.parse(\"cos(pi*x^2/2)\"),dt(0),e,\"x\"):pt.symfunction(\"C\",arguments)}}};nerdamer.register([{name:\"diff\",visible:!0,numargs:[1,3],build:function(){return Vt.diff}},{name:\"sum\",visible:!0,numargs:4,build:function(){return Vt.sum}},{name:\"product\",visible:!0,numargs:4,build:function(){return Vt.product}},{name:\"integrate\",visible:!0,numargs:[1,2],build:function(){return Vt.integrate}},{name:\"defint\",visible:!0,numargs:[3,4],build:function(){return Vt.defint}},{name:\"S\",visible:!0,numargs:1,build:function(){return Vt.Fresnel.S}},{name:\"C\",visible:!0,numargs:1,build:function(){return Vt.Fresnel.C}},{name:\"limit\",visible:!0,numargs:[3,4],build:function(){return Vt.Limit.limit}}]),nerdamer.updateAPI()}(),\"undefined\"!=typeof module&&(nerdamer=require(\"./nerdamer.core.js\"),require(\"./Calculus.js\"),require(\"./Algebra.js\")),function(){var t,H=nerdamer.getCore(),j=H.PARSER,X=H.Algebra,$=H.Calculus,Z=$.integration.decompose_arg,z=H.Utils.evaluate,q=H.Utils.remove,c=H.Utils.format,Q=H.Utils.build,f=H.Utils.knownVariable,Y=H.Symbol,W=H.Utils.isSymbol,l=H.Utils.variables,J=H.groups.S,K=H.groups.PL,ee=H.groups.CB,te=H.groups.CP,ne=H.groups.FN,re=H.Settings,s=H.Utils.range,ie=H.Utils.isArray;function se(e,t){if(t.isConstant()&&e.isConstant()&&!e.equals(t)||e.equals(H.Settings.IMAGINARY)&&t.isConstant(!0)||t.equals(H.Settings.IMAGINARY)&&e.isConstant(!0))throw new H.exceptions.NerdamerValueError(e.toString()+\" does not equal \"+t.toString());this.LHS=e,this.RHS=t}H.Settings.SOLVE_RADIUS=1e3,H.Settings.ROOTS_PER_SIDE=10,H.Settings.make_pi_conversions=!1,H.Settings.STEP_SIZE=.1,H.Settings.EPSILON=1e-13,H.Settings.MAX_NEWTON_ITERATIONS=200,H.Settings.MAX_NON_LINEAR_TRIES=12,H.Settings.NON_LINEAR_JUMP_AT=50,H.Settings.NON_LINEAR_JUMP_SIZE=100,H.Settings.NON_LINEAR_START=.01,H.Settings.NEWTON_SLICES=200,H.Settings.NEWTON_EPSILON=2*Number.EPSILON,H.Settings.SOLUTION_PROXIMITY=1e-14,H.Settings.FILTER_SOLUTIONS=!0,H.Settings.MAX_SOLVE_DEPTH=10,H.Settings.ZERO_EPSILON=1e-9,H.Settings.MAX_BISECTION_ITER=2e3,H.Settings.BI_SECTION_EPSILON=1e-12,H.Symbol.prototype.hasTrig=function(){return this.containsFunction([\"cos\",\"sin\",\"tan\",\"cot\",\"csc\",\"sec\"])},H.Symbol.prototype.hasNegativeTerms=function(){if(this.isComposite())for(var e in this.symbols){var t=this.symbols[e];if(t.group===K&&t.hasNegativeTerms()||this.symbols[e].power.lessThan(0))return!0}return!1},se.prototype={toString:function(){return this.LHS.toString()+\"=\"+this.RHS.toString()},text:function(e){return this.LHS.text(e)+\"=\"+this.RHS.text(e)},toLHS:function(e){var t=(n=(e=void 0===e)?this.removeDenom():this.clone()).LHS,n=n.RHS;t.isConstant(!0)&&!n.isConstant(!0)&&([t,n]=[n,t]);n=j.subtract(t,n);return new se(e?j.expand(n):n,new Y(0)).removeDenom().LHS},removeDenom:function(){var e=this.LHS.clone(),t=this.RHS.clone(),n=j.multiply(e.getDenom(),t.getDenom());if(e=j.expand(j.multiply(e,n.clone())),(t=j.expand(j.multiply(t,n))).group===te&&t.group!==te&&(r=e,e=t,t=r),e.group===ee){var r=new Y(e.multiplier),i=t.clone();e.each(function(e){e.power.lessThan(0)?i=j.divide(i,e):r=j.multiply(r,e)}),e=r,t=i}else if(e.group===te)for(var s in e.symbols){var o=e.symbols[s];if(o.group===ee)for(var a in o.symbols){a=o.symbols[a];if(a.power.lessThan(0))return new se(j.expand(j.multiply(a.clone().toLinear(),e)),j.expand(j.multiply(a.clone().toLinear(),t)))}}return new se(e,t)},clone:function(){return new se(this.LHS.clone(),this.RHS.clone())},sub:function(e,t){var n=this.clone();return n.LHS=n.LHS.sub(e.clone(),t.clone()),n.RHS=n.RHS.sub(e.clone(),t.clone()),n},isZero:function(){return H.Utils.evaluate(this.toLHS()).equals(0)},latex:function(e){return[this.LHS.latex(e),this.RHS.latex(e)].join(\"=\")}},j.equals=function(e,t){return new se(e,t)},t=j.functions.simplify[0],j.functions.simplify[0]=function(e){return e instanceof se?(e.LHS=t(e.LHS),e.RHS=t(e.RHS),e):t(e)},H.Expression.prototype.equals=function(e){return e instanceof H.Expression&&(e=e.symbol),new se(this.symbol,e)},H.Expression.prototype.solveFor=function(e){var t;if(this.symbol instanceof se){if(this.symbol.LHS.isConstant()&&this.symbol.RHS.equals(e))return new H.Expression(this.symbol.LHS);if(this.symbol.RHS.isConstant()&&this.symbol.LHS.equals(e))return new H.Expression(this.symbol.RHS);t=this.symbol.toLHS()}else t=this.symbol;return ue(t,e).map(function(e){return new H.Expression(e)})},H.Expression.prototype.expand=function(){if(this.symbol instanceof se){var e=this.symbol.clone();return e.RHS=j.expand(e.RHS),e.LHS=j.expand(e.LHS),new H.Expression(e)}return new H.Expression(j.expand(this.symbol))},H.Expression.prototype.variables=function(){return this.symbol instanceof se?H.Utils.arrayUnique(l(this.symbol.LHS).concat(l(this.symbol.RHS))):l(this.symbol)};function e(e,t){return j.equals(e,t)}H.Equation=se;var oe=H.Utils.checkAll=function(e,t){for(var n=0;n<e.length;n++)if(t(e[n]))return!1;return!0},ae=H.Solve={version:\"2.0.3\",solutions:[],solve:function(e,t){t=ue(e,String(t));return new H.Vector(t)},toLHS:function(e,t){return W(e)?e:(e instanceof se||((n=e.split(\"=\"))[1]=n[1]||\"0\",e=new se(j.parse(n[0]),j.parse(n[1]))),e.toLHS(t));var n},solveCircle:function(e,t){for(var n=t.map(function(e){return j.parse(e)}),r=[],i=[],s=0;s<e.length;s++){for(var o=[],a=0;a<n.length;a++)o.push(Number(H.Algebra.degree(e[s],n[a])));o.push(H.Utils.arraySum(o,!0)),r.push(o)}var u,l,c=e[0],p=e[1];return r[0][2]>r[1][2]&&([p,c]=[c,p],[r[1],r[0]]=[r[0],r[1]]),1===r[0][0]&&2===r[0][2]&&2===r[1][0]&&4===r[1][2]&&(u=t[0],l=t[1],t=ue(j.parse(p,f(u,ue(j.parse(c),u)[0])),l).map(function(e){return e.toString()}),p=[ue(j.parse(c,f(l,t[0])))[0].toString()],t[1]&&p.push(ue(j.parse(c,f(l,t[1])))[0].toString()),re.SOLUTIONS_AS_OBJECT?((i={})[u]=p,i[l]=t):(t.unshift(l),p.unshift(u),i=[p,t])),i},solveNonLinearSystem:function(e,t,r){if(t<0)return[];r=void 0===r?H.Settings.NON_LINEAR_START:r;var i=H.Settings.MAX_NON_LINEAR_TRIES,s=Math.floor(i/2);t=void 0===t?i:t;var o,a,u,l,c,p=H.Settings.NON_LINEAR_JUMP_AT,f=H.Settings.NON_LINEAR_JUMP_SIZE,h=!0,m=H.Utils.arrayGetVariables(e),i=H.Matrix.jacobian(e,m,function(e){return Q(e,m)},!0),g=H.Settings.MAX_NEWTON_ITERATIONS,d=e.map(function(e){return Q(e,m)}),v=i.map(function(e){return Q(e,m)},!0),w=H.Matrix.cMatrix(0,m),y=H.Matrix.cMatrix(r,m),b=0;do{if(g<b)break;o=function(e,n){return e.map(function(e,t){return Number(n.get(t,0))})}(m,y),l=y.clone(),d.forEach(function(e,t){y.set(t,0,e.apply(null,o))});var S=new H.Matrix;if(v.each(function(e,t,n){e=e.apply(null,o);S.set(t,n,e)}),S=S.invert(),c=(a=j.multiply(S,y).negate()).subtract(w,function(e){return j.parse(Number(e))}),w=l.add(a,function(e){return j.parse(Number(e))}),y=w,p<=b&&1<u){t===s&&(r=0);var M=s<t?1:-1;return n=t%Math.floor(s)+1,r+=M*n*f,ae.solveNonLinearSystem(e,--t,r)}}while((M=u,b++,u=c.max(),Number(u)!==Number(M))&&Number(u)>=Number.EPSILON);return h?ae.systemSolutions(y,m,!0,function(e){return H.Utils.round(Number(e),14)}):[]},systemSolutions:function(e,r,i,s){var o=H.Settings.SOLUTIONS_AS_OBJECT?{}:[];return e.each(function(e,t){var n=(i?j.expand(e):e).valueOf();s&&(n=s.call(e,n));t=r[t];H.Settings.SOLUTIONS_AS_OBJECT?o[t]=n:o.push([t,n])}),o},solveSystemBySubstitution:function(e){var t=l(e[0]),n=l(e[1]);return 2===e.length&&2===t.length&&H.Utils.arrayEqual(t,n)?ae.solveCircle(e,t):[]},solveSystem:function(e,t){for(var n=0;n<e.length;n++)e[n]=ae.toLHS(e[n]);var r,i=e.length,s=new H.Matrix,o=new H.Matrix,a=!1;if(void 0===t){if(!X.allLinear(e))try{return ae.solveNonLinearSystem(e)}catch(c){if(c instanceof H.exceptions.DivisionByZero)return ae.solveSystemBySubstitution(e)}if(1===(r=H.Utils.arrayGetVariables(e)).length){var u,l=0;do{var c=e[l].clone()}while(0<l&&(c=c.sub(r[0],u[0])),u=ue(c,r[0]),++l<e.length);return re.SOLUTIONS_AS_OBJECT?(h={})[r[0]]=u:h=0===u.length?u:[r[0],u],h}if(r.length<e.length){for(var p=[],l=e.length,n=0;n<l-1;n++)p.push(j.parse(e[n]));var f={},h=ae.solveSystem(p,r);Array.isArray(h)?h.forEach(function(e){f[e[0]]=e[1]}):f=h;for(var m=!0,n=l-1;n<l;n++)j.parse(e[n],f).equals(0)||(m=!1);if(m)return h}for(n=0;n<r.length;n++)nerdamer.setVar(r[n],\"delete\");for(n=0;n<i;n++){for(var c=e[n],g=0;g<r.length;g++){var d=r[g],v=[];c.each(function(e){e.contains(d)&&(v=v.concat(e.coeffs()))});var w=H.Utils.arraySum(v);s.set(n,g,w)}var y=c.clone();r.map(function(e){y=y.stripVar(e,!0)}),o.set(n,0,y.negate())}}else for(r=t,a=!0,n=0;n<i;n++){o.set(n,0,new Y(0));for(c=j.expand(e[n]).collectSymbols(),g=0;g<t.length;g++){s.set(n,g,new Y(0));for(var d=t[g],b=0;b<c.length;b++){for(var S,M=c[b],N=!1,E=0;E<t.length;E++)M.contains(t[E])&&(N&&H.err(\"Multiple variables found for term \"+M),N=!0);M.contains(d)&&(S=Z(q(c,b),d),s.set(n,g,j.add(s.get(n,g),S[0])))}}for(b=0;b<c.length;b++)o.set(n,0,j.add(o.get(n,0),c[b]))}if(r.length!==e.length||s.determinant().equals(0))throw new H.exceptions.SolveError(\"System does not have a distinct solution\");h=(s=s.invert()).multiply(o);return H.Utils.isArray(t)&&h.each(function(e){return e.negate()}),ae.systemSolutions(h,r,a)},quad:function(e,t,n){e=j.subtract(j.pow(t.clone(),Y(2)),j.multiply(j.multiply(n.clone(),e.clone()),Y(4))),e=j.expand(e),e=j.pow(e,Y(.5)),n=j.parse(j.multiply(new Y(2),n.clone()));return[j.parse(c(\"(-({0})+({1}))/({2})\",t,e,n)),j.parse(c(\"(-({0})-({1}))/({2})\",t,e,n))]},cubic:function(e,t,n,r){r=r.text(),n=n.text(),t=t.text(),e=`(-(${n})^3/(27*(${r})^3)+(${n})*(${t})/(6*(${r})^2)-(${e.text()})/(2*(${r})))`,t=`((${t})/(3*(${r}))-(${n})^2/(9*(${r})^2))`,n=`((${e})+sqrt((${e})^2+(${t})^3))^(1/3)+((${e})-sqrt((${e})^2+(${t})^3))^(1/3)-(${`(${n})/(3*(${r}))`})`,r=\"1/2+sqrt(3)/2*i\";return[j.parse(n),j.parse(`(${n})(${r})`),j.parse(`(${n})(${r})^2`)]},quartic:function(e,t,n,r,i){var s,o,a,u={};return H.Utils.arrayUnique(l(i).concat(l(r)).concat(l(n)).concat(l(t)).concat(l(e))).map(function(e){u[e]=1}),i=i.toString(),r=r.toString(),n=n.toString(),t=t.toString(),e=e.toString(),s=j.parse(c(\"(8*({0})*({2})-3*({1})^2)/(8*({0})^2)\",i,r,n)).toString(),o=j.parse(c(\"(({1})^3-4*({0})*({1})*({2})+8*({0})^2*({3}))/(8*({0})^3)\",i,r,n,t)).toString(),a=j.parse(c(\"12*({0})*({4})-3*({1})*({3})+({2})^2\",i,r,n,t,e)).toString(),e=j.parse(c(\"2*({2})^3-9*({1})*({2})*({3})+27*({1})^2*({4})+27*({0})*({3})^2-72*({0})*({2})*({4})\",i,r,n,t,e)).toString(),e=j.parse(c(\"((({1})+(({1})^2-4*({0})^3)^(1/2))/2)^(1/3)\",a,e)).toString(),J=j.parse(c(\"(1/2)*(-(2/3)*({1})+(1/(3*({0}))*(({2})+(({3})/({2})))))^(1/2)\",i,s,e,a)).toString(),[j.parse(c(\"-(({1})/(4*({0})))-({4})+(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))\",i,r,s,o,J)),j.parse(c(\"-(({1})/(4*({0})))-({4})-(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))\",i,r,s,o,J)),j.parse(c(\"-(({1})/(4*({0})))+({4})+(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))\",i,r,s,o,J)),j.parse(c(\"-(({1})/(4*({0})))+({4})-(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))\",i,r,s,o,J))]},divideAndConquer:function(e,t){var n=[],e=H.Algebra.Factor.factor(e);return e.group===ee&&e.each(function(e){e=Y.unwrapPARENS(e),n=n.concat(ue(e,t))}),n},csolve:function(u,l){return H.Utils.block(\"IGNORE_E\",function(){var e=[],t=H.Utils.decompose_fn(u,l,!0);if(t.x.group===J)for(var n,r=j.parse(t.x.power),i=Number(r),s=j.pow(j.divide(t.b.negate(),t.a),r.invert()),s=(t=Y.toPolarFormArray(s))[0],o=(t[1],s.toString()),a=(r.toString(),0);a<i;a++)n=c(\"({0})*e^(2*{1}*pi*{2}*{3})\",o,a,r,H.Settings.IMAGINARY),n=j.parse(n),e.push(n);return e},!0)},getPoints:function(e,t,u){t=t||.01,u=u||[];var l=Q(e),n=Math.round(0),r=l(n),c=r/Math.abs(r),i=H.Settings.ROOTS_PER_SIDE,r=i;u.push(Math.floor(n/2)),u.push(Math.abs(n)),u.push(n),e.each(function(e){e.containsFunction(H.Settings.LOG)&&u.push(.1)});e=s(-H.Settings.SOLVE_RADIUS,n,t),n=s(n,H.Settings.SOLVE_RADIUS,t),t=function(e,t){for(var n,r,i,s=[],o=0,a=e.length;o<a;o++)n=e[o],i=(r=l(n))/Math.abs(r),isNaN(r)||!isFinite(r)||s.length>t||(i!==c&&s.push(n),c=i);u=u.concat(s)};return t(e,r),t(n,i),u},bisection:function(e,t){var n=e-1,r=e+1;if(Math.sign(t(n))!==Math.sign(t(r))){var i,s,o=0;do{if(i=Math.abs(r-n),o++>H.Settings.MAX_BISECTION_ITER||isNaN(i))return}while(s=(n+r)/2,0<t(n)*t(s)?n=s:r=s,i>=re.EPSILON);var a=(n+r)/2,e=t(a);if(!isNaN(e)&&Math.abs(e)<=H.Settings.BI_SECTION_EPSILON)return H.Utils.round(a,13)}},Newton:function(e,t,n){var r=H.Settings.MAX_NEWTON_ITERATIONS,i=0,s=e;do{var o=t(s);if(0===s&&0===o){a=0;break}if(r<++i)return;var a=s-o/n(s),o=Math.abs(a-s),s=a}while(o>re.NEWTON_EPSILON);if(Math.abs(t(a))<=re.EPSILON)return a},rewrite:function(e,t,n){var r,i;t=t||new Y(0),e.isComposite()&&e.isLinear()?(r=[],i=[],e.each(function(e){(\"sqrt\"===(e=e.clone()).fname&&e.contains(n)?r:i).push(e)},!0),1===r.length&&(t=j.expand(j.pow(j.subtract(t,H.Utils.arraySum(i)),new Y(2))),e=j.expand(j.pow(Y.unwrapSQRT(r[0]),new Y(2))))):e=Y.unwrapSQRT(j.expand(e));var s=0,o=e.length;if(e.group===te&&e.contains(n)&&e.isLinear()){e.distributeMultiplier();var a=new Y(0);return e.each(function(e){e.contains(n)?(s++,a=j.add(a,e.clone())):t=j.subtract(t,e.clone())}),e=a,s!==o?ae.rewrite(e,t,n):[e,t]}if(e.group===ee&&e.contains(n)&&e.isLinear()){if(e.multiplier.lessThan(0)&&(e.multiplier=e.multiplier.multiply(new H.Frac(-1)),t.multiplier=t.multiplier.multiply(new H.Frac(-1))),t.equals(0))return new Y(0);a=new Y(1);return e.each(function(e){e.contains(n)?a=j.multiply(a,e.clone()):t=j.divide(t,e.clone())}),ae.rewrite(e=a,t,n)}if(!e.isLinear()&&e.contains(n)){o=j.parse(e.power.clone().invert());return e=j.pow(e,o.clone()),t=j.pow(j.expand(t),o.clone()),ae.rewrite(e,t,n)}if(e.group===ne||e.group===J||e.group===K)return[e,t]},sqrtSolve:function(n,r){var t=new Y(0),i=new Y(0);if(n.isComposite()&&(n.each(function(e){\"sqrt\"===e.fname&&e.contains(r)?t=j.add(t,e.clone()):i=j.add(i,e.clone())}),!t.equals(0))){var e=j.expand(j.multiply(j.parse(n.multiplier),j.subtract(j.pow(i,new Y(2)),j.pow(t,new Y(2)))));return ue(e,r).filter(function(e){if(e.isImaginary())return e;var t={};return t[r]=e,z(n,t).equals(0)?e:void 0})}}},ue=function(n,p,i,t,e){if(t=t||0,t++>re.MAX_SOLVE_DEPTH)return i;if(n instanceof se){if(n.isZero())return[new Y(0)];if(n.LHS.equals(p)&&!n.RHS.contains(p))return[n.RHS];if(n.RHS.equals(p)&&!n.LHS.contains(p))return[n.LHS]}if(n instanceof H.Vector&&(n=n.elements),p=p||\"x\",ie(n))return ae.solveSystem.apply(void 0,arguments);i=i||[];var s={},r={};if(r[p]=0,W(n)&&!0===z(n.getDenom(),r).equals(0))return i;var o=function(e,t){var n,r=W(e);void 0===e||\"number\"==typeof e&&isNaN(e)||(ie(e)?e.forEach(function(e){o(e)}):\"null\"!==e.valueOf()&&(\"function\"==typeof H.Settings.PRE_ADD_SOLUTION&&(e=H.Settings.PRE_ADD_SOLUTION(e)),r||(e=j.parse(e)),H.Settings.make_pi_conversions&&t&&(r=(n=j.divide(e.clone(),new Y(Math.PI))).multiplier,t=Math.abs(r.num),r=Math.abs(r.den),t<10&&r<10&&(e=j.multiply(n,new Y(\"pi\")))),n=e.toString(),s[n]||i.push(e),s[n]=!0))};if(n.group===J&&n.contains(p)){try{var a={};a[p]=0,z(e,a,\"numer\"),o(new Y(0))}catch(e){}return i}if(n.group===ee){var u=n.getNum();if(u.group!==ee)return ue(u,p,i,t,e);var l=String(p);return u.each(function(e){e.contains(l)&&ue(e,p,i,t,n)}),i}n.group===ne&&\"sqrt\"===n.fname&&(n=j.pow(Y.unwrapSQRT(n),new Y(2)));var c=(H.Utils.isSymbol(n)?n:ae.toLHS(n,!1)).getNum(),r=H.Utils.variables(c),a=r.length;if((c=H.Utils.isInt(c.power)&&0<c.power?j.parse(c).toLinear():c).group===J||c.group===ee&&c.contains(p))return[new Y(0)];function f(e){var t=new Y(0),n=new Y(0);return e.each(function(e){e.contains(p,!0)?t=j.add(t,e.clone()):n=j.subtract(n,e.clone())}),[t,n]}var h,m={},g=function(n){var e=(n=j.expand(n,{expand_denominator:!0,expand_functions:!0})).clone();if(n.symbols)for(var t in n.symbols){var r=n.symbols[t],i=r.getDenom();if(!i.isConstant(!0)&&n.isComposite()){var s=new Y(0);return n.each(function(e){s=j.add(s,j.multiply(e,i.clone()))}),g(j.multiply(j.parse(n.multiplier),s))}var o=Z(r,p),a=o[1].fname===H.Settings.SQRT,u=Y.unwrapSQRT(o[1]),t=u.power.clone();if(!W(t)&&!t.equals(.5))if(t.den.gt(1)){if(a)return n=j.subtract(n,r.clone()),n=j.add(n,j.multiply(o[0].clone(),u)),g(n);u=m[t.den];m[t.den]=u?u++:1}else{if(-1===t.sign()){var l=j.parse(p+\"^\"+Math.abs(t));return n.each(function(e,t){e.contains(p)&&(n.symbols[t]=j.multiply(e,l.clone()))}),m={},g(j.parse(n))}if(r.group===K){r=H.Utils.arrayMin(H.Utils.keys(r.symbols));if(r<0){var l=j.parse(p+\"^\"+Math.abs(r)),c=new Y(0);return e.each(function(e){c=j.add(c,j.multiply(e.clone(),l.clone()))},!0),c}}}}return n};if(ae.inverseFunctionSolve=function(e,t,n){var r=Z(t.args[0],p);if(r[1].group===J)return j.divide(j.symfunction(e,[j.divide(n,j.parse(t.multiplier))]),r[0])},(c=g(c)).equals(0))return[c];var d,v,u=H.Utils.keys(m);if(1===u.length&&(h=u[0],c.each(function(e,t){var n,r;!e.contains(p)||(e=(r=(n=Z(e,p))[1]).power).den.gt(1)&&(r.power=e.multiply(new H.Frac(h)),c.symbols[t]=j.multiply(r,n[0]))}),c=j.parse(c)),o(ae.sqrtSolve(c,p)),1===a)if(c.isPoly(!0)){var w=new H.Algebra.Classes.Factors;if(H.Algebra.Factor.factor(c,w),1<w.getNumberSymbolics())for(var y in w.factors)o(ue(w.factors[y],p));else{var b,S,M=(b=H.Utils.getCoeffs(c,p)).length-1,a=!1;r[0]===p&&(oe(b,function(e){return e.group!==H.groups.N})&&(r=H.Algebra.proots(c),oe(r,function(e){return!H.Utils.isInt(e)})&&(a=!0,r.map(function(e){o(new Y(e))}))),a||((n=j.parse(n))instanceof H.Equation&&(n=n.toLHS()),1===M?o(j.divide(b[0],b[1].negate())):2===M?o(j.expand(ae.quad.apply(void 0,b))):3===M?(i=[],S=H.Algebra.Factor.factor(n),0<(i=[]).length?o(i):o(ae.cubic.apply(void 0,b))):X.proots(c).map(o)))}}else try{for(var N,E,q=c.hasTrig(),x=ae.getPoints(c,.1),A=ae.getPoints(c,.05),C=ae.getPoints(c,.01),L=H.Utils.arrayUnique(x.concat(A).concat(C)).sort(function(e,t){return e-t}),I=Q(c.clone()),U=[],_=0;_<L.length;_++)N=L[_],void 0!==(E=ae.bisection(N,I))?o(E,q):U.push(N);var L=U,O=$.diff(c.clone()),R=Q(O);for(_=0;_<L.length;_++)N=L[_],o(ae.Newton(N,I,R),q);i.sort()}catch(e){console.log(e)}else if(!c.hasFunc(p)&&c.isComposite())try{if((S=H.Algebra.Factor.factor(c.clone())).group===ee)S.each(function(e){o(ue(e,p))});else{switch(M=(b=H.Utils.getCoeffs(c,p)).length-1){case 0:var T,P,k,D=(T=f(c))[0],F=T[1];D.group===H.groups.EX&&(k=`${P=H.Settings.LOG}((${F})/(${D.multiplier}))/${P}(${D.value})/${D.power.multiplier}`,o(j.parse(k)));break;case 1:o(j.divide(b[0],b[1].negate()));break;case 2:o(ae.quad.apply(void 0,b));break;case 3:o(ae.cubic.apply(void 0,b));break;case 4:o(ae.quartic.apply(void 0,b));break;default:o(ae.csolve(c,p)),0===i.length&&o(ae.divideAndConquer(c,p))}0===i.length&&o(ue(S,p,i,t))}}catch(e){}else try{var B,G=ae.rewrite(c,null,p),D=G[0],F=G[1];if(D.group===ne)\"abs\"===D.fname?o([F.clone(),F.negate()]):\"sin\"===D.fname?o(ae.inverseFunctionSolve(\"asin\",D,F)):\"cos\"===D.fname?o(ae.inverseFunctionSolve(\"acos\",D,F)):\"tan\"===D.fname?o(ae.inverseFunctionSolve(\"atan\",D,F)):D.fname===H.Settings.LOG?(y=(B=Z(D.args[0],p))[1]).group===J&&(c=new se(y,F=j.divide(j.subtract(j.pow(1<D.args.length?D.args[1]:new Y(\"e\"),j.divide(F,j.parse(D.multiplier))),B[3]),B[0])).toLHS(),o(ue(c,p))):o(j.subtract(D,F));else{var V=new se(D,F).toLHS();if(V.equals(c))throw new Error(\"Stopping. No stop condition exists\");o(ue(V,p))}}catch(e){try{c.group===ee?o(0):c.group===te&&(D=(T=f(c))[0],F=T[1],D.group===H.groups.EX&&D.value===p&&(d=D.power.clone().invert(),o(j.pow(F,d))))}catch(e){}}return h&&(i=i.map(function(e){return j.pow(e,new Y(h))})),W(n)&&(v={},i=i.filter(function(e){try{v[p]=e;var t=Number(z(n,v));return isNaN(t)?!0:!0}catch(e){return!1}})),i};nerdamer.register([{name:\"solveEquations\",parent:\"nerdamer\",numargs:-1,visible:!0,build:function(){return ue}},{name:\"solve\",parent:\"Solve\",numargs:2,visible:!0,build:function(){return H.Solve.solve}},{name:\"setEquation\",parent:\"Solve\",visible:!0,build:function(){return e}}]),nerdamer.updateAPI()}(),\"undefined\"!=typeof module&&(nerdamer=require(\"./nerdamer.core.js\"),require(\"./Calculus\"),require(\"./Algebra\")),function(){\"use strict\";var x=nerdamer.getCore(),A=x.PARSER,C=x.Symbol,L=x.Utils.format,a=x.Utils.isVector,u=x.Utils.isArray,I=(x.Vector,x.groups.S),U=(x.groups.EX,x.groups.CP),_=x.groups.CB,l=x.groups.FN;x.Settings.Laplace_integration_depth=40,C.prototype.findFunction=function(e){if(this.group===l&&this.fname===e)return this.clone();var t;if(this.symbols)for(var n in this.symbols)if(t=this.symbols[n].findFunction(e))break;return t};var O=x.Extra={version:\"1.4.2\",LaPlace:{transform:function(n,r,i){n=n.clone(),r=r.toString();var e=(n=C.unwrapSQRT(n,!0)).stripVar(r),t=n.group;if((n=A.divide(n,e.clone())).isConstant()||!n.contains(r,!0))o=A.parse(L(\"({0})/({1})\",n,i));else if(t===I&&x.Utils.isInt(n.power))var s=String(n.power),o=A.parse(L(\"factorial({0})/({1})^({0}+1)\",s,i));else if(n.group===I&&n.power.equals(.5))o=A.parse(L(\"sqrt(pi)/(2*({0})^(3/2))\",i));else if(n.isComposite())o=new C(0),n.each(function(e){o=A.add(o,O.LaPlace.transform(e,r,i))},!0);else if(!n.isE()||n.power.group!==I&&n.power.group!==_)if(n.group!==l||-1===[\"sin\",\"cos\",\"sinh\",\"cosh\"].indexOf(n.fname)||n.args[0].group!==I&&n.args[0].group!==_){var a,s=x.Settings.integration_depth<x.Settings.Laplace_integration_depth;s&&(a=x.Settings.integration_depth,x.Settings.integration_depth=x.Settings.Laplace_integration_depth),x.Utils.block(\"PARSE2NUMBER\",function(){var e=r,t=n.sub(r,e),t=A.parse(\"e^(-\"+i+\"*\"+e+\")*\"+t);if((o=x.Calculus.integrate(t,e)).hasIntegral())return A.symfunction(\"laplace\",arguments);o=o.sub(r,0),o=(o=A.expand(A.multiply(o,new C(-1)))).sub(e,r)},!1),o=x.Utils.block(\"PARSE2NUMBER\",function(){return A.parse(o)},!0),s&&(x.Settings.integration_depth=a)}else{u=n.args[0].stripVar(r);switch(n.fname){case\"sin\":o=A.parse(L(\"({0})/(({1})^2+({0})^2)\",u,i));break;case\"cos\":o=A.parse(L(\"({1})/(({1})^2+({0})^2)\",u,i));break;case\"sinh\":o=A.parse(L(\"({0})/(({1})^2-({0})^2)\",u,i));break;case\"cosh\":o=A.parse(L(\"({1})/(({1})^2-({0})^2)\",u,i))}}else{var u=n.power.stripVar(r);o=A.parse(L(\"1/(({1})-({0}))\",u,i))}return A.multiply(o,e)},inverse:function(M,N,E){var q=M.clone();return x.Utils.block(\"POSITIVE_MULTIPLIERS\",function(){if((M=M.group===_?x.Algebra.PartFrac.partfrac(A.expand(M),N):M).group===I||M.group===_||M.isComposite()){var e,t,n,r,i,s,o,a,u,l,c,p,f,h,m,g=function(){(s=A.multiply(s,e)).multiplier=s.multiplier.multiply(M.multiplier),s=A.divide(s,r.a)},d=M.multiplier.clone();if(M.toUnitMultiplier(),e=M.getNum(),(t=M.getDenom().toUnitMultiplier()).group===U?(i=t.power.clone(),t.toLinear()):i=new x.Frac(1),n=N.toString(),r=x.Utils.decompose_fn(t,n,!0),x.Utils.decompose_fn(A.expand(e.clone()),n,!0),e.multiplier=e.multiplier.multiply(d),(t.group===I||t.group===_)&&r.x.value===n&&r.b.equals(0)&&x.Utils.isInt(r.x.power))p=r.x.power-1,f=x.Math2.factorial(p),s=A.divide(A.pow(E,new C(p)),new C(f)),g();else if(t.group===U&&i.equals(1))r.x.group===x.groups.PL&&x.Algebra.degree(t).equals(2)?(u=x.Algebra.sqComplete(t,n),l=x.Utils.getU(t),h=x.Utils.decompose_fn(u.a,n,!0).b,c=O.LaPlace.inverse(A.parse(`1/((${l})^2+(${u.c}))`),l,E),s=A.multiply(c,A.parse(`(${d})*e^(-(${h})*(${E}))`))):r.x.isLinear()&&!e.contains(n)?(E=A.divide(E,r.a.clone()),s=A.parse(L(\"(({0})^({3}-1)*e^(-(({2})*({0}))/({1})))/(({4})*({1})^({3}))\",E,r.a,r.b,i,f=0===(p=i-1)||1===p?\"1\":`(${i}-1)!`)),g()):r.x.group===I&&r.x.power.equals(2)&&(e.contains(n)?(h=new C(1),e.group===_&&(o=new C(1),e.each(function(e){e.contains(n)?o=A.multiply(o,e):h=A.multiply(h,e)}),e=o),u=(a=x.Utils.decompose_fn(e,n,!0)).a,l=a.b,c=u.containsFunction(\"sin\"),p=u.containsFunction(\"cos\"),f=l.containsFunction(\"cos\"),g=l.containsFunction(\"sin\"),a.x.value===n&&a.x.isLinear()&&!(c&&f||p||g)?s=A.parse(L(\"(({1})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})\",E,a.a,r.a,r.b)):c&&f&&(c=u.findFunction(\"sin\"),f=l.findFunction(\"cos\"),c.args[0].equals(f.args[0])&&!c.args[0].contains(n)&&(v=A.divide(l,f.toUnitMultiplier()).toString(),f=c.args[0].toString(),m=r.b,c=A.divide(u,c.toUnitMultiplier()),s=A.parse(L(\"(({1})*({2})*cos({3})*sin(sqrt({4})*({0})))/sqrt({4})+({1})*sin({3})*({5})*cos(sqrt({4})*({0}))\",E,h,v,f,m,c))))):s=A.parse(L(\"(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/sqrt(({2})*({3}))\",E,e,r.a,r.b)));else if(r.x.power.num&&r.x.power.num.equals(3)&&r.x.power.den.equals(2)&&e.contains(\"sqrt(pi)\")&&!e.contains(n)&&e.isLinear()){var v=A.divide(e.clone(),A.parse(\"sqrt(pi)\"));s=A.parse(L(\"(2*({2})*sqrt({0}))/({1})\",E,r.a,v,e))}else if(i.equals(2)&&r.x.power.equals(2))if(e.contains(n))if((a=x.Utils.decompose_fn(A.expand(e.clone()),n,!0)).x.isComposite()){var w=[],y=e.collectSymbols(function(e){e=C.unwrapPARENS(e);var t=x.Utils.decompose_fn(e,n,!0);return t.symbol=e,t}).sort(function(e,t){e=e.x.value!==n?0:e.x.power;return(t.x.value!==n?0:t.x.power)-e});h=new C(-1);for(var b=0;b<y.length;b++){var S=y[b];S.x.value===n?w.push(S):h=A.multiply(h,S.symbol)}w[0].x.power.equals(2)&&w[1].x.power.equals(1)&&w[1].b.equals(0)&&!w[0].b.equals(0)&&(v=w[0].a.negate(),s=A.parse(L(\"-(({1})*({2})*({5})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))/(2*({4})^2*sqrt(({4})*({5})))-(({1})*({3})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))/(2*({4})*sqrt(({4})*({5})))+(({1})*({2})*cos((sqrt(({4})*({5}))*({0}))/({4})))/({4})^2\",E,h,v,w[0].b,r.a,r.b)))}else a.x.isLinear()?(h=A.divide(a.a,new C(2)),s=A.parse(L(\"(({1})*({0})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))\",E,h,r.a,r.b))):a.x.power.equals(2)&&(s=a.b.equals(0)?(h=A.divide(a.a,new C(2)),A.parse(L(\"(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2\",E,h,r.a,r.b))):(h=A.divide(a.a,new C(2)),m=a.b.negate(),A.parse(L(\"-((({2})*({4})-2*({1})*({3}))*sin((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3})*sqrt(({2})*({3})))+(({4})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3}))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2\",E,h,r.a,r.b,m))));else h=A.divide(e,new C(2)),s=A.parse(L(\"(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({3})*sqrt(({2})*({3})))-(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*({3}))\",E,h,r.a,r.b));else M.isComposite()&&(i.equals(2)&&r.x.group===I?s=A.parse(`(${d})*(${E})*e^(-(${r.b})*(${E}))`):(s=new C(0),M.each(function(e){s=A.add(s,O.LaPlace.inverse(e,N,E))},!0)))}return s=s||A.symfunction(\"ilt\",[q,N,E])},!0)}},Statistics:{frequencyMap:function(e){for(var t={},n=0,r=e.length;n<r;n++){var i=e[n].toString();t[i]||(t[i]=0),t[i]++}return t},sort:function(e){return e.sort(function(e,t){return e.isConstant()&&t.isConstant()||A.error(\"Unable to sort! All values must be numeric\"),e.multiplier.subtract(t.multiplier)})},count:function(e){return new C(e.length)},sum:function(e,t){for(var n=new C(0),r=0,i=e.length;r<i;r++)var s=e[r].clone(),n=t?A.add(A.pow(A.subtract(s,t.clone()),new C(2)),n):A.add(s,n);return n},mean:function(){var e=[].slice.call(arguments);return a(e[0])?O.Statistics.mean.apply(this,e[0].elements):A.divide(O.Statistics.sum(e),O.Statistics.count(e))},median:function(){var t=[].slice.call(arguments);if(a(t[0]))return O.Statistics.median.apply(this,t[0].elements);try{var e,n,r=O.Statistics.sort(t),i=t.length;n=x.Utils.even(i)?(e=i/2,O.Statistics.mean(r[e-1],r[e])):r[Math.floor(i/2)]}catch(e){n=A.symfunction(\"median\",t)}return n},mode:function(){var e=[].slice.call(arguments);if(a(e[0]))return O.Statistics.mode.apply(this,e[0].elements);var t=O.Statistics.frequencyMap(e);if(1===x.Utils.keys(t).length)o=e[0];else{var n,r={};for(n in t){var i,s=t[n];s in r?(i=r[s],u(i)?i.push(n):r[s]=[n,r[s]]):r[s]=n}var e=r[Math.max.apply(null,x.Utils.keys(r))],o=u(e)?A.symfunction(\"mode\",e.sort()):A.parse(e)}return o},gVariance:function(e,t){var n=O.Statistics.mean.apply(O.Statistics,t),n=O.Statistics.sum(t,n);return A.multiply(e,n)},variance:function(){var e=[].slice.call(arguments);if(a(e[0]))return O.Statistics.variance.apply(this,e[0].elements);var t=A.divide(new C(1),O.Statistics.count(e));return O.Statistics.gVariance(t,e)},sampleVariance:function(){var e=[].slice.call(arguments);if(a(e[0]))return O.Statistics.sampleVariance.apply(this,e[0].elements);var t=A.divide(new C(1),A.subtract(O.Statistics.count(e),new C(1)));return O.Statistics.gVariance(t,e)},standardDeviation:function(){var e=[].slice.call(arguments);return a(e[0])?O.Statistics.standardDeviation.apply(this,e[0].elements):A.pow(O.Statistics.variance.apply(O.Statistics,e),new C(.5))},sampleStandardDeviation:function(){var e=[].slice.call(arguments);return a(e[0])?O.Statistics.sampleStandardDeviation.apply(this,e[0].elements):A.pow(O.Statistics.sampleVariance.apply(O.Statistics,e),new C(.5))},zScore:function(e,t,n){return A.divide(A.subtract(e,t),n)}},Units:{table:{foot:\"12 inch\",meter:\"100 cm\",decimeter:\"10 cm\"}}};nerdamer.register([{name:\"laplace\",visible:!0,numargs:3,build:function(){return O.LaPlace.transform}},{name:\"ilt\",visible:!0,numargs:3,build:function(){return O.LaPlace.inverse}},{name:\"mean\",visible:!0,numargs:-1,build:function(){return O.Statistics.mean}},{name:\"median\",visible:!0,numargs:-1,build:function(){return O.Statistics.median}},{name:\"mode\",visible:!0,numargs:-1,build:function(){return O.Statistics.mode}},{name:\"smpvar\",visible:!0,numargs:-1,build:function(){return O.Statistics.sampleVariance}},{name:\"variance\",visible:!0,numargs:-1,build:function(){return O.Statistics.variance}},{name:\"smpstdev\",visible:!0,numargs:-1,build:function(){return O.Statistics.sampleStandardDeviation}},{name:\"stdev\",visible:!0,numargs:-1,build:function(){return O.Statistics.standardDeviation}},{name:\"zscore\",visible:!0,numargs:3,build:function(){return O.Statistics.zScore}}]),nerdamer.updateAPI()}(),\"undefined\"!=typeof module&&(module.exports=nerdamer);","/*\r\n * Author : Martin Donk\r\n * Website : http://www.nerdamer.com\r\n * Email : martin.r.donk@gmail.com\r\n * Source : https://github.com/jiggzson/nerdamer\r\n */\r\n\r\n/* global trig, trigh, Infinity, define, arguments2Array, NaN */\r\n//externals ====================================================================\r\n/* BigInterger.js v1.6.40 https://github.com/peterolson/BigInteger.js/blob/master/LICENSE */\r\n//var nerdamerBigInt = typeof nerdamerBigInt !== 'undefined' ? nerdamerBigInt : require(\"big-integer\");\r\n/* big.js v5.2.2 https://github.com/MikeMcl/big.js/LICENCE */\r\n//var nerdamerBigDecimal = typeof nerdamerBigDecimal !== 'undefined' ? nerdamerBigDecimal : require('big.js');\r\n\r\nvar nerdamer = (function (imports) {\r\n    \"use strict\"; \r\n\r\n//version ======================================================================\r\n    var version = '1.1.13';\r\n\r\n//inits ========================================================================\r\n    var _ = new Parser(); //nerdamer's parser\r\n\r\n    //import bigInt\r\n    var bigInt = imports.bigInt;\r\n    var bigDec = imports.bigDec;\r\n\r\n    //set the precision to js precision\r\n    bigDec.set({\r\n        precision: 250\r\n    });\r\n\r\n    var Groups = {};\r\n\r\n    //container of pregenerated primes\r\n    var PRIMES = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113\r\n                , 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251,\r\n        257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397,\r\n        401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557,\r\n        563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701,\r\n        709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863,\r\n        877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031,\r\n        1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171,\r\n        1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303,\r\n        1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471,\r\n        1481, 1483, 1487, 1489, 1493, 1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597, 1601, 1607,\r\n        1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753,\r\n        1759, 1777, 1783, 1787, 1789, 1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931,\r\n        1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083];\r\n\r\n//Settings =====================================================================\r\n    var CUSTOM_OPERATORS = {};\r\n\r\n    var Settings = {\r\n        //Enables/Disables call peekers. False means callPeekers are disabled and true means callPeekers are enabled.\r\n        callPeekers: false,\r\n\r\n        //the max number up to which to cache primes. Making this too high causes performance issues\r\n        init_primes: 1000,\r\n\r\n        exclude: [],\r\n        //If you don't care about division by zero for example then this can be set to true.\r\n        //Has some nasty side effects so choose carefully.\r\n        suppress_errors: false,\r\n        //the global used to invoke the libary to parse to a number. Normally cos(9) for example returns\r\n        //cos(9) for convenience but parse to number will always try to return a number if set to true.\r\n        PARSE2NUMBER: false,\r\n        //this flag forces the a clone to be returned when add, subtract, etc... is called\r\n        SAFE: false,\r\n        //the symbol to use for imaginary symbols\r\n        IMAGINARY: 'i',\r\n        //the modules used to link numeric function holders\r\n        FUNCTION_MODULES: [Math],\r\n        //Allow certain characters\r\n        ALLOW_CHARS: ['π'],\r\n        //Allow nerdamer to convert multi-character variables\r\n        USE_MULTICHARACTER_VARS: true,\r\n        //Allow changing of power operator\r\n        POWER_OPERATOR: '^',\r\n        //The variable validation regex\r\n        //VALIDATION_REGEX: /^[a-z_][a-z\\d\\_]*$/i\r\n        VALIDATION_REGEX: /^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,\r\n        // The regex used to determine which characters should be included in implied multiplication\r\n        IMPLIED_MULTIPLICATION_REGEX: /([\\+\\-\\/\\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\\+\\-\\/\\*]*)/gi,\r\n        //Aliases\r\n        ALIASES: {\r\n            'π': 'pi',\r\n            '∞': 'Infinity'\r\n        },\r\n        POSITIVE_MULTIPLIERS: false,\r\n        //Cached items\r\n        CACHE: {},\r\n        //Print out warnings or not\r\n        SILENCE_WARNINGS: false,\r\n        // Precision\r\n        PRECISION: 21,\r\n        // The Expression defaults to this value for decimal places\r\n        EXPRESSION_DECP: 19,\r\n        // The text function defaults to this value for decimal places\r\n        DEFAULT_DECP: 16,\r\n        //function mappings\r\n        VECTOR: 'vector',\r\n        PARENTHESIS: 'parens',\r\n        SQRT: 'sqrt',\r\n        ABS: 'abs',\r\n        FACTORIAL: 'factorial',\r\n        DOUBLEFACTORIAL: 'dfactorial',\r\n        //reference pi and e\r\n        LONG_PI: '3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214' +\r\n                '808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196',\r\n        LONG_E: '2.718281828459045235360287471352662497757247093699959574966967627724076630353547594571382178525166427427466' +\r\n                '39193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901',\r\n        PI: Math.PI,\r\n        E: Math.E,\r\n        LOG: 'log',\r\n        LOG10: 'log10',\r\n        LOG10_LATEX: 'log_{10}',\r\n        MAX_EXP: 200000,\r\n        //The number of scientific place to round to\r\n        SCIENTIFIC_MAX_DECIMAL_PLACES: 14,\r\n        //True if ints should not be converted to\r\n        SCIENTIFIC_IGNORE_ZERO_EXPONENTS: true\r\n    };\r\n\r\n    (function () {\r\n        Settings.CACHE.roots = {};\r\n        var x = 40,\r\n                y = 40;\r\n        for(var i = 2; i <= x; i++) {\r\n            for(var j = 2; j <= y; j++) {\r\n                var nthpow = bigInt(i).pow(j);\r\n                Settings.CACHE.roots[nthpow + '-' + j] = i;\r\n            }\r\n        }\r\n    })();\r\n\r\n    //Add the groups. These have been reorganized as of v0.5.1 to make CP the highest group\r\n    //The groups that help with organizing during parsing. Note that for FN is still a function even\r\n    //when it's raised to a symbol, which typically results in an EX\r\n    var N = Groups.N = 1, // A number\r\n            P = Groups.P = 2, // A number with a rational power e.g. 2^(3/5).\r\n            S = Groups.S = 3, // A single variable e.g. x.\r\n            EX = Groups.EX = 4, // An exponential\r\n            FN = Groups.FN = 5, // A function\r\n            PL = Groups.PL = 6, // A symbol/expression having same name with different powers e.g. 1/x + x^2\r\n            CB = Groups.CB = 7, // A symbol/expression composed of one or more variables through multiplication e.g. x*y\r\n            CP = Groups.CP = 8; // A symbol/expression composed of one variable and any other symbol or number x+1 or x+y\r\n\r\n    var CONST_HASH = Settings.CONST_HASH = '#';\r\n\r\n    var PARENTHESIS = Settings.PARENTHESIS;\r\n\r\n    var SQRT = Settings.SQRT;\r\n\r\n    var ABS = Settings.ABS;\r\n\r\n    var FACTORIAL = Settings.FACTORIAL;\r\n\r\n    var DOUBLEFACTORIAL = Settings.DOUBLEFACTORIAL;\r\n\r\n    //the storage container \"memory\" for parsed expressions\r\n    var EXPRESSIONS = [];\r\n\r\n    //variables\r\n    var VARS = {};\r\n\r\n    //the container used to store all the reserved functions\r\n    var RESERVED = [];\r\n\r\n    var WARNINGS = [];\r\n\r\n    /**\r\n     * Use this when errors are suppressible\r\n     * @param {String} msg\r\n     * @param {object} ErrorObj\r\n     */\r\n    var err = function (msg, ErrorObj) {\r\n        if(!Settings.suppress_errors) {\r\n            if(ErrorObj)\r\n                throw new ErrorObj(msg);\r\n            else\r\n                throw new Error(msg);\r\n        }\r\n    };\r\n\r\n//Utils ========================================================================\r\n    var customError = function (name) {\r\n        var E = function (message) {\r\n            this.name = name;\r\n            this.message = message !== undefined ? message : '';\r\n            var error = new Error(this.message);\r\n            error.name = this.name;\r\n            this.stack = error.stack;\r\n        }; //create an empty error\r\n        E.prototype = Object.create(Error.prototype);\r\n        return E;\r\n    };\r\n\r\n    /**\r\n     * Checks to see if value is one of nerdamer's reserved names\r\n     * @param {String} value\r\n     * @return boolean\r\n     */\r\n    var isReserved = function (value) {\r\n        return RESERVED.indexOf(value) !== -1;\r\n    };\r\n\r\n    /**\r\n     * Checks to see that all symbols in array are the same\r\n     * @param {Symbol[]} arr\r\n     * @returns {bool}\r\n     */\r\n    var allSame = function (arr) {\r\n        var last = arr[0];\r\n        for(var i = 1, l = arr.length; i < l; i++)\r\n            if(!arr[i].equals(last))\r\n                return false;\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Used to pass warnings or low severity errors about the library\r\n     * @param msg\r\n     */\r\n    var warn = function (msg) {\r\n        WARNINGS.push(msg);\r\n        if(Settings.SHOW_WARNINGS && console && console.warn) {\r\n            console.warn(msg);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Enforces rule: \"must start with a letter or underscore and\r\n     * can have any number of underscores, letters, and numbers thereafter.\"\r\n     * @param name The name of the symbol being checked\r\n     * @param {String} typ - The type of symbols that's being validated\r\n     * @throws {Exception}  - Throws an exception on fail\r\n     */\r\n    var validateName = function (name, typ) {\r\n        typ = typ || 'variable';\r\n        if(Settings.ALLOW_CHARS.indexOf(name) !== -1)\r\n            return;\r\n        var regex = Settings.VALIDATION_REGEX;\r\n        if(!(regex.test(name))) {\r\n            throw new InvalidVariableNameError(name + ' is not a valid ' + typ + ' name');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Convert number from scientific format to decimal format\r\n     * @param {Number} num\r\n     */\r\n    var scientificToDecimal = function (num) {\r\n        var nsign = Math.sign(num);\r\n        //remove the sign\r\n        num = Math.abs(num);\r\n        //if the number is in scientific notation remove it\r\n        if(/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num)) {\r\n            var zero = '0',\r\n                    parts = String(num).toLowerCase().split('e'), //split into coeff and exponent\r\n                    e = parts.pop(), //store the exponential part\r\n                    l = Math.abs(e), //get the number of zeros\r\n                    sign = e / l,\r\n                    coeff_array = parts[0].split('.');\r\n            if(sign === -1) {\r\n                l = l - coeff_array[0].length;\r\n                if(l < 0) {\r\n                    num = coeff_array[0].slice(0, l) + '.' + coeff_array[0].slice(l) + (coeff_array.length === 2 ? coeff_array[1] : '');\r\n                }\r\n                else {\r\n                    num = zero + '.' + new Array(l + 1).join(zero) + coeff_array.join('');\r\n                }\r\n            }\r\n            else {\r\n                var dec = coeff_array[1];\r\n                if(dec)\r\n                    l = l - dec.length;\r\n                if(l < 0) {\r\n                    num = coeff_array[0] + dec.slice(0, l) + '.' + dec.slice(l);\r\n                }\r\n                else {\r\n                    num = coeff_array.join('') + new Array(l + 1).join(zero);\r\n                }\r\n            }\r\n        }\r\n\r\n        return nsign < 0 ? '-' + num : num;\r\n    };\r\n    /**\r\n     * Checks if number is a prime number\r\n     * @param {Number} n - the number to be checked\r\n     */\r\n    var isPrime = function (n) {\r\n        var q = Math.floor(Math.sqrt(n));\r\n        for(var i = 2; i <= q; i++) {\r\n            if(n % i === 0)\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Generates an object with known variable value for evaluation\r\n     * @param {String} variable\r\n     * @param {any} value Any stringifyable object\r\n     * @returns {Object} \r\n     */\r\n    var knownVariable = function (variable, value) {\r\n        var o = {};\r\n        o[variable] = value;\r\n        return o;\r\n    };\r\n\r\n    /**\r\n     * Checks if n is a number\r\n     * @param {any} n\r\n     */\r\n    var isNumber = function (n) {\r\n        return /^\\d+\\.?\\d*$/.test(n);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if an array contains only numeric values\r\n     * @param {Array} arr\r\n     */\r\n    var allNumeric = function (arr) {\r\n        for(var i = 0; i < arr.length; i++)\r\n            if(!isNumber(arr[i]))\r\n                return false;\r\n        return true;\r\n    };\r\n    /**\r\n     * Checks to see if a number or Symbol is a fraction\r\n     * @param {Number|Symbol} num\r\n     * @returns {boolean}\r\n     */\r\n    var isFraction = function (num) {\r\n        if(isSymbol(num))\r\n            return isFraction(num.multiplier.toDecimal());\r\n        return (num % 1 !== 0);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if the object provided is a Symbol\r\n     * @param {Object} obj\r\n     */\r\n    var isSymbol = function (obj) {\r\n        return (obj instanceof Symbol);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if the object provided is an Expression\r\n     * @param {Object} obj\r\n     */\r\n    var isExpression = function (obj) {\r\n        return (obj instanceof Expression);\r\n    };\r\n\r\n    /**\r\n     * This method traverses the symbol structure and grabs all the variables in a symbol. The variable\r\n     * names are then returned in alphabetical order.\r\n     * @param {Symbol} obj\r\n     * @param {Boolean} poly\r\n     * @param {Object} vars - An object containing the variables. Do not pass this in as it generated\r\n     * automatically. In the future this will be a Collector object.\r\n     * @returns {String[]} - An array containing variable names\r\n     */\r\n    var variables = function (obj, poly, vars) {\r\n        vars = vars || {\r\n            c: [],\r\n            add: function (value) {\r\n                if(this.c.indexOf(value) === -1 && isNaN(value))\r\n                    this.c.push(value);\r\n            }\r\n        };\r\n\r\n        if(isSymbol(obj)) {\r\n            var group = obj.group,\r\n                    prevgroup = obj.previousGroup;\r\n            if(group === EX)\r\n                variables(obj.power, poly, vars);\r\n\r\n            if(group === CP || group === CB || prevgroup === CP || prevgroup === CB) {\r\n                for(var x in obj.symbols) {\r\n                    variables(obj.symbols[x], poly, vars);\r\n                }\r\n            }\r\n            else if(group === S || prevgroup === S) {\r\n                //very crude needs fixing. TODO\r\n                if(!(obj.value === 'e' || obj.value === 'pi' || obj.value === Settings.IMAGINARY))\r\n                    vars.add(obj.value);\r\n            }\r\n            else if(group === PL || prevgroup === PL) {\r\n                variables(firstObject(obj.symbols), poly, vars);\r\n            }\r\n            else if(group === EX) {\r\n                if(!isNaN(obj.value))\r\n                    vars.add(obj.value);\r\n                variables(obj.power, poly, vars);\r\n            }\r\n            else if(group === FN && !poly) {\r\n                for(var i = 0; i < obj.args.length; i++) {\r\n                    variables(obj.args[i], poly, vars);\r\n                }\r\n            }\r\n        }\r\n\r\n        return vars.c.sort();\r\n    };\r\n\r\n    /**\r\n     * Returns the sum of an array\r\n     * @param {Array} arr\r\n     * @param {boolean} toNumber\r\n     * @returns {Symbol}\r\n     */\r\n    var arraySum = function (arr, toNumber) {\r\n        var sum = new Symbol(0);\r\n        for(var i = 0; i < arr.length; i++) {\r\n            var x = arr[i];\r\n            // Convert to symbol if not\r\n            sum = _.add(sum, !isSymbol(x) ? _.parse(x) : x);\r\n        }\r\n\r\n        return toNumber ? Number(sum) : sum;\r\n    };\r\n\r\n    /**\r\n     * Separates out the variables into terms of variabls.\r\n     * e.g. x+y+x*y+sqrt(2)+pi returns\r\n     * {x: x, y: y, x y: x*y, constants: sqrt(2)+pi\r\n     * @param {type} symbol\r\n     * @param {type} o\r\n     * @returns {undefined}\r\n     * @throws {Error} for expontentials\r\n     */\r\n    var separate = function (symbol, o) {\r\n        symbol = _.expand(symbol);\r\n        o = o || {};\r\n        var insert = function (key, sym) {\r\n            if(!o[key])\r\n                o[key] = new Symbol(0);\r\n            o[key] = _.add(o[key], sym.clone());\r\n        };\r\n        symbol.each(function (x) {\r\n            if(x.isConstant('all')) {\r\n                insert('constants', x);\r\n            }\r\n            else if(x.group === S) {\r\n                insert(x.value, x);\r\n            }\r\n            else if(x.group === FN && (x.fname === ABS || x.fname === '')) {\r\n                separate(x.args[0]);\r\n            }\r\n            else if(x.group === EX || x.group === FN) {\r\n                throw new Error('Unable to separate. Term cannot be a function!');\r\n            }\r\n            else {\r\n                insert(variables(x).join(' '), x);\r\n            }\r\n        });\r\n\r\n        return o;\r\n    };\r\n\r\n    /**\r\n     * Fills holes in an array with zero symbol or generates one with n zeroes\r\n     * @param {Array} arr\r\n     * @param {Number} n\r\n     */\r\n    var fillHoles = function (arr, n) {\r\n        n = n || arr.length;\r\n        for(var i = 0; i < n; i++) {\r\n            var sym = arr[i];\r\n            if(!sym)\r\n                arr[i] = new Symbol(0);\r\n        }\r\n        return arr;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Checks to see if the object provided is a Vector\r\n     * @param {Object} obj\r\n     */\r\n    var isVector = function (obj) {\r\n        return (obj instanceof Vector);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if the object provided is a Matrix\r\n     * @param {Object} obj\r\n     */\r\n    var isMatrix = function (obj) {\r\n        return (obj instanceof Matrix);\r\n    };\r\n\r\n    var isSet = function (obj) {\r\n        return (obj instanceof Set);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a symbol is in group N\r\n     * @param {Symbol} symbol\r\n     */\r\n    var isNumericSymbol = function (symbol) {\r\n        return symbol.group === N || symbol.group === P;\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a symbol is a variable with no multiplier nor power\r\n     * @param {Symbol} symbol\r\n     */\r\n    var isVariableSymbol = function (symbol) {\r\n        return symbol.group === S && symbol.multiplier.equals(1) && symbol.power.equals(1);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if the object provided is an Array\r\n     * @param {Object} arr\r\n     */\r\n    var isArray = function (arr) {\r\n        return Array.isArray(arr);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a number is an integer\r\n     * @param {Number} num\r\n     */\r\n    var isInt = function (num) {\r\n        return /^[-+]?\\d+e?\\+?\\d*$/gim.test(num.toString());\r\n    };\r\n\r\n    /**\r\n     * @param {Number|Symbol} obj\r\n     * @returns {boolean}\r\n     */\r\n    var isNegative = function (obj) {\r\n        if(isSymbol(obj)) {\r\n            obj = obj.multiplier;\r\n        }\r\n        return obj.lessThan(0);\r\n    };\r\n    /**\r\n     * Safely stringify object\r\n     * @param o\r\n     */\r\n    var stringify = function (o) {\r\n        if(!o)\r\n            return o;\r\n        return String(o);\r\n    };\r\n\r\n    /**\r\n     * @param {String} str\r\n     * @returns {String} - returns a formatted string surrounded by brackets\r\n     */\r\n    var inBrackets = function (str) {\r\n        return '(' + str + ')';\r\n    };\r\n\r\n    /**\r\n     * A helper function to replace parts of string\r\n     * @param {String} str - The original string\r\n     * @param {Integer} from - The starting index\r\n     * @param {Integer} to - The ending index\r\n     * @param {String} with_str - The replacement string\r\n     * @returns {String} - A formatted string\r\n     */\r\n    var stringReplace = function (str, from, to, with_str) {\r\n        return str.substr(0, from) + with_str + str.substr(to, str.length);\r\n    };\r\n\r\n    /**\r\n     * the Parser uses this to check if it's allowed to convert the obj to type Symbol\r\n     * @param {Object} obj\r\n     * @returns {boolean}\r\n     */\r\n    var customType = function (obj) {\r\n        return obj !== undefined && obj.custom;\r\n    };\r\n\r\n    /**\r\n     * Checks to see if numbers are both negative or are both positive\r\n     * @param {Number} a\r\n     * @param {Number} b\r\n     * @returns {boolean}\r\n     */\r\n    var sameSign = function (a, b) {\r\n        return (a < 0) === (b < 0);\r\n    };\r\n\r\n    /**\r\n     * A helper function to replace multiple occurences in a string. Takes multiple arguments\r\n     * @example format('{0} nice, {0} sweet', 'something')\r\n     * //returns 'something nice, something sweet'\r\n     */\r\n    var format = function () {\r\n        var args = [].slice.call(arguments),\r\n                str = args.shift();\r\n        var new_str = str.replace(/{(\\d+)}/g, function (match, index) {\r\n            var arg = args[index];\r\n            return typeof arg === 'function' ? arg() : arg;\r\n        });\r\n\r\n        return new_str;\r\n    };\r\n\r\n    /**\r\n     * Generates an array with values within a range. Multiplies by a step if provided\r\n     * @param {Number} start\r\n     * @param {Number} end\r\n     * @param {Number} step\r\n     */\r\n    var range = function (start, end, step) {\r\n        var arr = [];\r\n        step = step || 1;\r\n        for(var i = start; i <= end; i++)\r\n            arr.push(i * step);\r\n        return arr;\r\n    };\r\n\r\n    /**\r\n     * Returns an array of all the keys in an array\r\n     * @param {Object} obj\r\n     * @returns {Array}\r\n     */\r\n    var keys = Object.keys;\r\n\r\n    /**\r\n     * Returns the first encountered item in an object. Items do not have a fixed order in objects\r\n     * so only use if you need any first random or if there's only one item in the object\r\n     * @param {Object} obj\r\n     * @param {String} key Return this key as first object\r\n     * @param {Boolean} both\r\n     * @returns {*}\r\n     */\r\n    var firstObject = function (obj, key, both) {\r\n        for(var x in obj)\r\n            break;\r\n        if(key)\r\n            return x;\r\n        if(both)\r\n            return {\r\n                key: x,\r\n                obj: obj[x]\r\n            };\r\n        return obj[x];\r\n    };\r\n\r\n    /**\r\n     * Substitutes out variables for two symbols, parses them to a number and them compares them numerically\r\n     * @param {Symbol} sym1\r\n     * @param {Symbol} sym2\r\n     * @param {String[]} vars - an optional array of variables to use\r\n     * @returns {bool}\r\n     */\r\n    var compare = function (sym1, sym2, vars) {\r\n        var n = 5; //a random number between 1 and 5 is good enough\r\n        var scope = {}; // scope object with random numbers generated using vars\r\n        var comparison;\r\n        for(var i = 0; i < vars.length; i++)\r\n            scope[vars[i]] = new Symbol(Math.floor(Math.random() * n) + 1);\r\n        block('PARSE2NUMBER', function () {\r\n            comparison = _.parse(sym1, scope).equals(_.parse(sym2, scope));\r\n        });\r\n        return comparison;\r\n    };\r\n\r\n    /**\r\n     * Is used to set a user defined function using the function assign operator\r\n     * @param {String} name\r\n     * @param {String[]} params_array\r\n     * @param {String} body\r\n     * @returns {Boolean}\r\n     */\r\n    var setFunction = function (name, params_array, body) {\r\n        validateName(name);\r\n        if(!isReserved(name)) {\r\n            params_array = params_array || variables(_.parse(body));\r\n            // The function gets set to PARSER.mapped function which is just\r\n            // a generic function call.\r\n            _.functions[name] = [_.mapped_function, params_array.length, {\r\n                    name: name,\r\n                    params: params_array,\r\n                    body: body\r\n                }];\r\n\r\n            return body;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Returns the minimum number in an array\r\n     * @param {Array} arr\r\n     * @returns {Number}\r\n     */\r\n    var arrayMax = function (arr) {\r\n        return Math.max.apply(undefined, arr);\r\n    };\r\n\r\n    /**\r\n     * Returns the maximum number in an array\r\n     * @param {Array} arr\r\n     * @returns {Number}\r\n     */\r\n    var arrayMin = function (arr) {\r\n        return Math.min.apply(undefined, arr);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if two arrays are equal\r\n     * @param {Array} arr1 \r\n     * @param {Array} arr2 \r\n     */\r\n    var arrayEqual = function (arr1, arr2) {\r\n        arr1.sort();\r\n        arr2.sort();\r\n\r\n        // The must be of the same length\r\n        if(arr1.length === arr2.length) {\r\n            for(var i = 0; i < arr1.length; i++) {\r\n                // If any two items don't match we're done\r\n                if(arr1[i] !== arr2[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n            // Otherwise they're equal\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Clones array with clonable items\r\n     * @param {Array} arr\r\n     * @returns {Array}\r\n     */\r\n    var arrayClone = function (arr) {\r\n        var new_array = [], l = arr.length;\r\n        for(var i = 0; i < l; i++)\r\n            new_array[i] = arr[i].clone();\r\n        return new_array;\r\n    };\r\n\r\n    /**\r\n     * Fills numbers between array values\r\n     * @param {Numbers[]} arr\r\n     * @param {Integer} slices\r\n     */\r\n    var arrayAddSlices = function (arr, slices) {\r\n        slices = slices || 20;\r\n        var retval = [];\r\n        var c, delta, e;\r\n        retval.push(arr[0]); //push the beginning\r\n        for(var i = 0; i < arr.length - 1; i++) {\r\n            c = arr[i];\r\n            delta = arr[i + 1] - c; //get the difference\r\n            e = delta / slices; //chop it up in the desired number of slices\r\n            for(var j = 0; j < slices; j++) {\r\n                c += e; //add the mesh to the last slice\r\n                retval.push(c);\r\n            }\r\n        }\r\n\r\n        return retval;\r\n    };\r\n\r\n    /**\r\n     * Gets nth roots of a number\r\n     * @param {Symbol} symbol\r\n     * @returns {Vector}\r\n     */\r\n    var nroots = function (symbol) {\r\n        var a, b;\r\n\r\n        if(symbol.group === FN && symbol.fname === '') {\r\n            a = Symbol.unwrapPARENS(_.parse(symbol).toLinear());\r\n            b = _.parse(symbol.power);\r\n        }\r\n        else if(symbol.group === P) {\r\n            a = _.parse(symbol.value);\r\n            b = _.parse(symbol.power);\r\n        }\r\n\r\n        if(a && b && (a.group === N) && b.group === N && a.multiplier.isNegative()) {\r\n            var _roots = [];\r\n\r\n            var parts = Symbol.toPolarFormArray(evaluate(symbol));\r\n            var r = parts[0];\r\n\r\n            //var r = _.parse(a).abs().toString();\r\n\r\n            //https://en.wikipedia.org/wiki/De_Moivre%27s_formula\r\n            var x = _.arg(a);\r\n            var n = b.multiplier.den.toString();\r\n            var p = b.multiplier.num.toString();\r\n\r\n            var formula = '(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})';\r\n\r\n            for(var i = 0; i < n; i++) {\r\n                var t = evaluate(_.parse(format(\"(({0})+2*pi*({1}))/({2})\", x, i, n))).multiplier.toDecimal();\r\n                _roots.push(evaluate(_.parse(format(formula, r, n, Settings.IMAGINARY, t, p))));\r\n            }\r\n            return Vector.fromArray(_roots);\r\n        }\r\n        else if(symbol.isConstant(true, true)) {\r\n            var sign = symbol.sign();\r\n            var x = evaluate(symbol.abs());\r\n            var root = _.sqrt(x);\r\n\r\n            var _roots = [root.clone(), root.negate()];\r\n\r\n            if(sign < 0)\r\n                _roots = _roots.map(function (x) {\r\n                    return _.multiply(x, Symbol.imaginary());\r\n                });\r\n\r\n        }\r\n        else {\r\n            _roots = [_.parse(symbol)];\r\n        }\r\n\r\n        return Vector.fromArray(_roots);\r\n    };\r\n\r\n    /**\r\n     * Sorts and array given 2 parameters\r\n     * @param {String} a\r\n     * @param {String} b\r\n     */\r\n    var comboSort = function (a, b) {\r\n        var l = a.length,\r\n                combined = []; //the linker\r\n        for(var i = 0; i < a.length; i++) {\r\n            combined.push([a[i], b[i]]); //create the map\r\n        }\r\n\r\n        combined.sort(function (x, y) {\r\n            return x[0] - y[0];\r\n        });\r\n\r\n        var na = [], nb = [];\r\n\r\n        for(i = 0; i < l; i++) {\r\n            na.push(combined[i][0]);\r\n            nb.push(combined[i][1]);\r\n        }\r\n\r\n        return [na, nb];\r\n    };\r\n    /**\r\n     * TODO: Pick a more descriptive name and better description\r\n     * Breaks a function down into it's parts wrt to a variable, mainly coefficients\r\n     * Example a*x^2+b wrt x\r\n     * @param {Symbol} fn\r\n     * @param {String} wrt\r\n     * @param {bool} as_obj\r\n     */\r\n    var decompose_fn = function (fn, wrt, as_obj) {\r\n        wrt = String(wrt); //convert to string\r\n        var ax, a, x, b;\r\n        if(fn.group === CP) {\r\n            var t = _.expand(fn.clone()).stripVar(wrt);\r\n            ax = _.subtract(fn.clone(), t.clone());\r\n            b = t;\r\n        }\r\n        else\r\n            ax = fn.clone();\r\n        a = ax.stripVar(wrt);\r\n        x = _.divide(ax.clone(), a.clone());\r\n        b = b || new Symbol(0);\r\n        if(as_obj)\r\n            return {\r\n                a: a,\r\n                x: x,\r\n                ax: ax,\r\n                b: b\r\n            };\r\n        return [a, x, ax, b];\r\n    };\r\n    /**\r\n     * Rounds a number up to x decimal places\r\n     * @param {Number} x\r\n     * @param {Number} s\r\n     */\r\n    var nround = function (x, s) {\r\n        if(isInt(x)) {\r\n            if(x >= Number.MAX_VALUE)\r\n                return x.toString();\r\n            return Number(x);\r\n        }\r\n\r\n        s = typeof s === 'undefined' ? 14 : s;\r\n        return Math.round(x * Math.pow(10, s)) / Math.pow(10, s);\r\n    };\r\n\r\n    /**\r\n     * Is used for u-substitution. Gets a suitable u for substitution. If for\r\n     * instance a is used in the symbol then it keeps going down the line until\r\n     * one is found that's not in use. If all letters are taken then it\r\n     * starts appending numbers.\r\n     * IMPORTANT! It assumes that the substitution will be undone\r\n     * beore the user gets to interact with the object again.\r\n     * @param {Symbol} symbol\r\n     */\r\n    var getU = function (symbol) {\r\n        //start with u\r\n        var u = 'u', //start with u\r\n                v = u, //init with u\r\n                c = 0, //postfix number\r\n                vars = variables(symbol);\r\n        //make sure this variable isn't reserved and isn't in the variable list\r\n        while(!(RESERVED.indexOf(v) === - 1 && vars.indexOf(v) === - 1))\r\n            v = u + c++;\r\n        //get an empty slot. It seems easier to just push but the\r\n        //problem is that we may have some which are created by clearU\r\n        for(var i = 0, l = RESERVED.length; i <= l; i++)\r\n            //reserved cannot equals false or 0 so we can safely check for a falsy type\r\n            if(!RESERVED[i]) {\r\n                RESERVED[i] = v; //reserve the variable\r\n                break;\r\n            }\r\n        return v;\r\n    };\r\n\r\n    /**\r\n     * Clears the u variable so it's no longer reserved\r\n     * @param {String} u\r\n     */\r\n    var clearU = function (u) {\r\n        var indx = RESERVED.indexOf(u);\r\n        if(indx !== -1)\r\n            RESERVED[indx] = undefined;\r\n    };\r\n\r\n    /**\r\n     * Loops through each item in object and calls function with item as param\r\n     * @param {Object|Array} obj\r\n     * @param {Function} fn\r\n     */\r\n    var each = function (obj, fn) {\r\n        if(isArray(obj)) {\r\n            var l = obj.length;\r\n            for(var i = 0; i < l; i++)\r\n                fn.call(obj, i);\r\n        }\r\n        else {\r\n            for(var x in obj)\r\n                if(obj.hasOwnProperty(x))\r\n                    fn.call(obj, x);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a number is an even number\r\n     * @param {Number} num\r\n     * @returns {boolean}\r\n     */\r\n    var even = function (num) {\r\n        return num % 2 === 0;\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a fraction is divisible by 2\r\n     * @param {Number} num\r\n     * @returns {boolean}\r\n     */\r\n    var evenFraction = function (num) {\r\n        return 1 / (num % 1) % 2 === 0;\r\n    };\r\n\r\n    /**\r\n     * Strips duplicates out of an array\r\n     * @param {Array} arr\r\n     */\r\n    var arrayUnique = function (arr) {\r\n        var l = arr.length, a = [];\r\n        for(var i = 0; i < l; i++) {\r\n            var item = arr[i];\r\n            if(a.indexOf(item) === -1)\r\n                a.push(item);\r\n        }\r\n        return a;\r\n    };\r\n\r\n    /**\r\n     * Gets all the variables in an array of Symbols\r\n     * @param {Symbol[]} arr \r\n     */\r\n    var arrayGetVariables = function (arr) {\r\n        var vars = variables(arr[0], null, null, true);\r\n\r\n        //get all variables\r\n        for(var i = 1, l = arr.length; i < l; i++)\r\n            vars = vars.concat(variables(arr[i]));\r\n        //remove duplicates\r\n        vars = arrayUnique(vars).sort();\r\n\r\n        //done\r\n        return vars;\r\n    };\r\n\r\n    /**\r\n     * Removes duplicates from an array. Returns a new array\r\n     * @param {Array} arr\r\n     * @param {Function} condition\r\n     */\r\n    var removeDuplicates = function (arr, condition) {\r\n        var conditionType = typeof condition;\r\n\r\n        if(conditionType !== 'function' || conditionType === 'undefined') {\r\n            condition = function (a, b) {\r\n                return a === b;\r\n            };\r\n        }\r\n\r\n        var seen = [];\r\n\r\n        while(arr.length) {\r\n            var a = arr[0];\r\n            //only one element left so we're done\r\n            if(arr.length === 1) {\r\n                seen.push(a);\r\n                break;\r\n            }\r\n            var temp = [];\r\n            seen.push(a); //we already scanned these\r\n            for(var i = 1; i < arr.length; i++) {\r\n                var b = arr[i];\r\n                //if the number is outside the specified tolerance\r\n                if(!condition(a, b))\r\n                    temp.push(b);\r\n            }\r\n            //start over with the remainder\r\n            arr = temp;\r\n        }\r\n\r\n        return seen;\r\n    };\r\n\r\n    /**\r\n     * Reserves the names in an object so they cannot be used as function names\r\n     * @param {Object} obj\r\n     */\r\n    var reserveNames = function (obj) {\r\n        var add = function (item) {\r\n            if(RESERVED.indexOf(item) === -1)\r\n                RESERVED.push(item);\r\n        };\r\n\r\n        if(typeof obj === 'string')\r\n            add(obj);\r\n        else {\r\n            each(obj, function (x) {\r\n                add(x);\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Removes an item from either an array or an object. If the object is an array, the index must be\r\n     * specified after the array. If it's an object then the key must be specified\r\n     * @param {Object|Array} obj\r\n     * @param {Integer} indexOrKey\r\n     */\r\n    var remove = function (obj, indexOrKey) {\r\n        var result;\r\n        if(isArray(obj)) {\r\n            result = obj.splice(indexOrKey, 1)[0];\r\n        }\r\n        else {\r\n            result = obj[indexOrKey];\r\n            delete obj[indexOrKey];\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Creates a temporary block in which one of the global settings is temporarily modified while\r\n     * the function is called. For instance if you want to parse directly to a number rather than have a symbolic\r\n     * answer for a period you would set PARSE2NUMBER to true in the block.\r\n     * @example block('PARSE2NUMBER', function(){//symbol being parsed to number}, true);\r\n     * @param {String} setting - The setting being accessed\r\n     * @param {Function} f\r\n     * @param {boolean} opt - The value of the setting in the block\r\n     * @param {String} obj - The obj of interest. Usually a Symbol but could be any object\r\n     */\r\n    var block = function (setting, f, opt, obj) {\r\n        var current_setting = Settings[setting];\r\n        Settings[setting] = opt === undefined ? true : !!opt;\r\n        var retval = f.call(obj);\r\n        Settings[setting] = current_setting;\r\n        return retval;\r\n    };\r\n\r\n    /**\r\n     * provide a mechanism for accessing functions directly. Not yet complete!!!\r\n     * Some functions will return undefined. This can maybe just remove the\r\n     * function object at some point when all functions are eventually\r\n     * housed in the global function object. Returns ALL parser available\r\n     * functions. Parser.functions may not contain all functions\r\n     */\r\n    var importFunctions = function () {\r\n        var o = {};\r\n        for(var x in _.functions)\r\n            o[x] = _.functions[x][0];\r\n        return o;\r\n    };\r\n\r\n    /**\r\n     * Converts function arguments to an array. Now used by gcd and lcm in Algebra.js :)\r\n     * @param {Array|object} obj\r\n     */\r\n    var arguments2Array = function (obj) {\r\n        return [].slice.call(obj);\r\n    };\r\n\r\n    /**\r\n     * Returns the coefficients of a symbol given a variable. Given ax^2+b^x+c, it divides\r\n     * each nth term by x^n.\r\n     * @param {Symbol} symbol\r\n     * @param {Symbol} wrt\r\n     */\r\n    var getCoeffs = function (symbol, wrt, info) {\r\n        var coeffs = [];\r\n        //we loop through the symbols and stick them in their respective\r\n        //containers e.g. y*x^2 goes to index 2\r\n        symbol.each(function (term) {\r\n            if(term.contains(wrt)) {\r\n                //we want only the coefficient which in this case will be everything but the variable\r\n                //e.g. a*b*x -> a*b if the variable to solve for is x\r\n                var coeff = term.stripVar(wrt),\r\n                        x = _.divide(term.clone(), coeff.clone()),\r\n                        p = x.power.toDecimal();\r\n            }\r\n            else {\r\n                coeff = term;\r\n                p = 0;\r\n            }\r\n            var e = coeffs[p];\r\n            //if it exists just add it to it\r\n            coeffs[p] = e ? _.add(e, coeff) : coeff;\r\n\r\n        }, true);\r\n\r\n        for(var i = 0; i < coeffs.length; i++)\r\n            if(!coeffs[i])\r\n                coeffs[i] = new Symbol(0);\r\n        //fill the holes\r\n        return coeffs;\r\n    };\r\n\r\n    /**\r\n     * As the name states. It forces evaluation of the expression\r\n     * @param {Symbol} symbol\r\n     * @param {Symbol} o\r\n     */\r\n    var evaluate = function (symbol, o) {\r\n        return block('PARSE2NUMBER', function () {\r\n            return _.parse(symbol, o);\r\n        }, true);\r\n    };\r\n\r\n    /**\r\n     * Converts an array to a vector. Consider moving this to Vector.fromArray\r\n     * @param {String[]|String|Symbol|Number|Number[]} x\r\n     */\r\n    var convertToVector = function (x) {\r\n        if(isArray(x)) {\r\n            var vector = new Vector([]);\r\n            for(var i = 0; i < x.length; i++)\r\n                vector.elements.push(convertToVector(x[i]));\r\n            return vector;\r\n        }\r\n        //Ensure that a nerdamer ready object is returned\r\n        if(!isSymbol(x))\r\n            return _.parse(x);\r\n        return x;\r\n    };\r\n\r\n    /**\r\n     * Generates prime numbers up to a specified number\r\n     * @param {Number} upto\r\n     */\r\n    var generatePrimes = function (upto) {\r\n        //get the last prime in the array\r\n        var last_prime = PRIMES[PRIMES.length - 1] || 2;\r\n        //no need to check if we've already encountered the number. Just check the cache.\r\n        for(var i = last_prime; i < upto; i++) {\r\n            if(isPrime(i))\r\n                PRIMES.push(i);\r\n        }\r\n    };\r\n    /**\r\n     * Checks to see if all arguments are numbers\r\n     * @param {object} args\r\n     */\r\n    var allNumbers = function (args) {\r\n        for(var i = 0; i < args.length; i++)\r\n            if(args[i].group !== N)\r\n                return false;\r\n        return true;\r\n    };\r\n    /*\r\n     * Checks if all arguments aren't just all number but if they\r\n     * are constants as well e.g. pi, e.\r\n     * @param {object} args\r\n     */\r\n    var allConstants = function (args) {\r\n        for(var i = 0; i < args.length; i++) {\r\n            if(args[i].isPi() || args[i].isE())\r\n                continue;\r\n            if(!args[i].isConstant(true))\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Used to multiply two expression in expanded form\r\n     * @param {Symbol} a\r\n     * @param {Symbol} b\r\n     */\r\n    var mix = function (a, b, opt) {\r\n        // Flip them if b is a CP or PL and a is not\r\n        if(b.isComposite() && !a.isComposite() || b.isLinear() && !a.isLinear()) {\r\n            [a, b] = [b, a];\r\n        }\r\n        // A temporary variable to hold the expanded terms\r\n        var t = new Symbol(0);\r\n        if(a.isLinear()) {\r\n            a.each(function (x) {\r\n                // If b is not a PL or a CP then simply multiply it\r\n                if(!b.isComposite()) {\r\n                    var term = _.multiply(_.parse(x), _.parse(b));\r\n                    t = _.add(t, _.expand(term, opt));\r\n                }\r\n                // Otherwise multiply out each term.\r\n                else if(b.isLinear()) {\r\n                    b.each(function (y) {\r\n                        var term = _.multiply(_.parse(x), _.parse(y));\r\n                        var expanded = _.expand(_.parse(term), opt);\r\n                        t = _.add(t, expanded);\r\n                    }, true);\r\n                }\r\n                else {\r\n                    t = _.add(t, _.multiply(x, _.parse(b)));\r\n                }\r\n            }, true);\r\n        }\r\n        else {\r\n            // Just multiply them together\r\n            t = _.multiply(a, b);\r\n        }\r\n\r\n        // The expanded function is now t\r\n        return t;\r\n    };\r\n\r\n//Exceptions ===================================================================\r\n    //Is thrown for division by zero\r\n    var DivisionByZero = customError('DivisionByZero');\r\n    // Is throw if an error occured during parsing\r\n    var ParseError = customError('ParseError');\r\n    // Is thrown if the expression results in undefined\r\n    var UndefinedError = customError('UndefinedError');\r\n    // Is throw input is out of the function domain\r\n    var OutOfFunctionDomainError = customError('OutOfFunctionDomainError');\r\n    // Is throw if a function exceeds x amount of iterations\r\n    var MaximumIterationsReached = customError('MaximumIterationsReached');\r\n    // Is thrown if the parser receives an incorrect type\r\n    var NerdamerTypeError = customError('NerdamerTypeError');\r\n    // Is thrown if bracket parity is not correct\r\n    var ParityError = customError('ParityError');\r\n    // Is thrown if an unexpectd or incorrect operator is encountered\r\n    var OperatorError = customError('OperatorError');\r\n    // Is thrown if an index is out of range.\r\n    var OutOfRangeError = customError('OutOfRangeError');\r\n    // Is thrown if dimensions are incorrect. Mostly for matrices\r\n    var DimensionError = customError('DimensionError');\r\n    // Is thrown if variable name violates naming rule\r\n    var InvalidVariableNameError = customError('InvalidVariableNameError');\r\n    // Is thrown if the limits of the library are exceeded for a function\r\n    // This can be that the function become unstable passed a value\r\n    var ValueLimitExceededError = customError('ValueLimitExceededError');\r\n    // Is throw if the value is an incorrect LH or RH value\r\n    var NerdamerValueError = customError('NerdamerValueError');\r\n    // Is thrown if the value is an incorrect LH or RH value\r\n    var SolveError = customError('SolveError');\r\n    // Is thrown for an infinite loop\r\n    var InfiniteLoopError = customError('InfiniteLoopError');\r\n    // Is thrown if an operator is found when there shouldn't be one\r\n    var UnexpectedTokenError = customError('UnexpectedTokenError');\r\n\r\n    var exceptions = {\r\n        DivisionByZero: DivisionByZero,\r\n        ParseError: ParseError,\r\n        OutOfFunctionDomainError: OutOfFunctionDomainError,\r\n        UndefinedError: UndefinedError,\r\n        MaximumIterationsReached: MaximumIterationsReached,\r\n        NerdamerTypeError: NerdamerTypeError,\r\n        ParityError: ParityError,\r\n        OperatorError: OperatorError,\r\n        OutOfRangeError: OutOfRangeError,\r\n        DimensionError: DimensionError,\r\n        InvalidVariableNameError: InvalidVariableNameError,\r\n        ValueLimitExceededError: ValueLimitExceededError,\r\n        NerdamerValueError: NerdamerValueError,\r\n        SolveError: SolveError,\r\n        InfiniteLoopError: InfiniteLoopError,\r\n        UnexpectedTokenError: UnexpectedTokenError\r\n    };\r\n//Math2 ========================================================================\r\n    //This object holds additional functions for nerdamer. Think of it as an extension of the Math object.\r\n    //I really don't like touching objects which aren't mine hence the reason for Math2. The names of the\r\n    //functions within are pretty self-explanatory.\r\n    //NOTE: DO NOT USE INLINE COMMENTS WITH THE MATH2 OBJECT! THIS BREAK DURING COMPILATION OF BUILDFUNCTION.\r\n    var Math2 = {\r\n        csc: function (x) {\r\n            return 1 / Math.sin(x);\r\n        },\r\n        sec: function (x) {\r\n            return 1 / Math.cos(x);\r\n        },\r\n        cot: function (x) {\r\n            return 1 / Math.tan(x);\r\n        },\r\n        acsc: function (x) {\r\n            return Math.asin(1 / x);\r\n        },\r\n        asec: function (x) {\r\n            return Math.acos(1 / x);\r\n        },\r\n        acot: function (x) {\r\n            return (Math.PI / 2) - Math.atan(x);\r\n        },\r\n        // https://gist.github.com/jiggzson/df0e9ae8b3b06ff3d8dc2aa062853bd8\r\n        erf: function (x) {\r\n            var t = 1 / (1 + 0.5 * Math.abs(x));\r\n            var result = 1 - t * Math.exp(-x * x - 1.26551223 +\r\n                    t * (1.00002368 +\r\n                            t * (0.37409196 +\r\n                                    t * (0.09678418 +\r\n                                            t * (-0.18628806 +\r\n                                                    t * (0.27886807 +\r\n                                                            t * (-1.13520398 +\r\n                                                                    t * (1.48851587 +\r\n                                                                            t * (-0.82215223 +\r\n                                                                                    t * (0.17087277)))))))))\r\n                    );\r\n            return x >= 0 ? result : -result;\r\n        },\r\n        diff: function (f) {\r\n            var h = 0.001;\r\n\r\n            var derivative = function (x) {\r\n                return (f(x + h) - f(x - h)) / (2 * h);\r\n            };\r\n\r\n            return derivative;\r\n        },\r\n        median: function (...values) {\r\n            values.sort(function (a, b) {\r\n                return a - b;\r\n            });\r\n\r\n            var half = Math.floor(values.length / 2);\r\n\r\n            if(values.length % 2)\r\n                return values[half];\r\n\r\n            return (values[half - 1] + values[half]) / 2.0;\r\n        },\r\n        /*\r\n         * Reverses continued fraction calculation\r\n         * @param {obj} contd\r\n         * @returns {Number}\r\n         */\r\n        fromContinued: function (contd) {\r\n            var arr = contd.fractions.slice();\r\n            var e = 1 / arr.pop();\r\n            for(var i = 0, l = arr.length; i < l; i++) {\r\n                e = 1 / (arr.pop() + e);\r\n            }\r\n            return contd.sign * (contd.whole + e);\r\n        },\r\n        /*\r\n         * Calculates continued fractions\r\n         * @param {Number} n\r\n         * @param {Number} x The number of places\r\n         * @returns {Number}\r\n         */\r\n        continuedFraction: function (n, x) {\r\n            x = x || 20;\r\n            var sign = Math.sign(n); /*store the sign*/\r\n            var absn = Math.abs(n); /*get the absolute value of the number*/\r\n            var whole = Math.floor(absn); /*get the whole*/\r\n            var ni = absn - whole; /*subtract the whole*/\r\n            var c = 0; /*the counter to keep track of iterations*/\r\n            var done = false;\r\n            var epsilon = 1e-14;\r\n            var max = 1e7;\r\n            var e, w;\r\n            var retval = {\r\n                whole: whole,\r\n                sign: sign,\r\n                fractions: []\r\n            };\r\n            /*start calculating*/\r\n            while(!done && ni !== 0) {\r\n                /*invert and get the whole*/\r\n                e = 1 / ni;\r\n                w = Math.floor(e);\r\n                if(w > max) {\r\n                    /*this signals that we may have already gone too far*/\r\n                    var d = Math2.fromContinued(retval) - n;\r\n                    if(d <= Number.EPSILON)\r\n                        break;\r\n                }\r\n                /*add to result*/\r\n                retval.fractions.push(w);\r\n                /*move the ni to the decimal*/\r\n                ni = e - w;\r\n                /*ni should always be a decimal. If we have a whole number then we're in the rounding errors*/\r\n                if(ni <= epsilon || c >= x - 1)\r\n                    done = true;\r\n                c++;\r\n            }\r\n            /*cleanup 1/(n+1/1) = 1/(n+1) so just move the last digit one over if it's one*/\r\n            var idx = retval.fractions.length - 1;\r\n            if(retval.fractions[idx] === 1) {\r\n                retval.fractions.pop();\r\n                /*increase the last one by one*/\r\n                retval.fractions[--idx]++;\r\n            }\r\n            return retval;\r\n        },\r\n        bigpow: function (n, p) {\r\n            if(!(n instanceof Frac))\r\n                n = Frac.create(n);\r\n            if(!(p instanceof Frac))\r\n                p = Frac.create(p);\r\n            var retval = new Frac(0);\r\n            if(p.isInteger()) {\r\n                retval.num = n.num.pow(p.toString());\r\n                retval.den = n.den.pow(p.toString());\r\n            }\r\n            else {\r\n                var num = Frac.create(Math.pow(n.num, p.num));\r\n                var den = Frac.create(Math.pow(n.den, p.num));\r\n\r\n                retval.num = Math2.nthroot(num, p.den.toString());\r\n                retval.den = Math2.nthroot(den, p.den);\r\n            }\r\n            return retval;\r\n        },\r\n        //http://stackoverflow.com/questions/15454183/how-to-make-a-function-that-computes-the-factorial-for-numbers-with-decimals\r\n        gamma: function (z) {\r\n            var g = 7;\r\n            var C = [\r\n                0.99999999999980993,\r\n                676.5203681218851,\r\n                -1259.1392167224028,\r\n                771.32342877765313,\r\n                -176.61502916214059,\r\n                12.507343278686905,\r\n                -0.13857109526572012,\r\n                9.9843695780195716e-6,\r\n                1.5056327351493116e-7]\r\n                    ;\r\n\r\n            if(z < 0.5)\r\n                return Math.PI / (Math.sin(Math.PI * z) * Math2.gamma(1 - z));\r\n            else {\r\n                z -= 1;\r\n\r\n                var x = C[0];\r\n                for(var i = 1; i < g + 2; i++)\r\n                    x += C[i] / (z + i);\r\n\r\n                var t = z + g + 0.5;\r\n                return Math.sqrt(2 * Math.PI) * Math.pow(t, (z + 0.5)) * Math.exp(-t) * x;\r\n            }\r\n        },\r\n        //factorial\r\n        bigfactorial: function (x) {\r\n            var retval = new bigInt(1);\r\n            for(var i = 2; i <= x; i++)\r\n                retval = retval.times(i);\r\n            return new Frac(retval);\r\n        },\r\n        //https://en.wikipedia.org/wiki/Logarithm#Calculation\r\n        bigLog: function (x) {\r\n            varr\n            if(CACHE[x]) {\r\n                return Frac.quick.apply(null, CACHE[x].split('/'));\r\n            }\r\n            x = new Frac(x);\r\n            var n = 80;\r\n            var retval = new Frac(0);\r\n            var a = x.subtract(new Frac(1));\r\n            var b = x.add(new Frac(1));\r\n            for(var i = 0; i < n; i++) {\r\n                var t = new Frac(2 * i + 1);\r\n                var k = Math2.bigpow(a.divide(b), t);\r\n                var r = t.clone().invert().multiply(k);\r\n                retval = retval.add(r);\r\n\r\n            }\r\n            return retval.multiply(new Frac(2));\r\n        },\r\n        //the factorial function but using the big library instead\r\n        factorial: function (x) {\r\n            var is_int = x % 1 === 0;\r\n\r\n            /*factorial for negative integers is complex infinity according to Wolfram Alpha*/\r\n            if(is_int && x < 0)\r\n                return NaN;\r\n\r\n            if(!is_int)\r\n                return Math2.gamma(x + 1);\r\n\r\n            var retval = 1;\r\n            for(var i = 2; i <= x; i++)\r\n                retval = retval * i;\r\n            return retval;\r\n        },\r\n        //double factorial\r\n        //http://mathworld.wolfram.com/DoubleFactorial.html\r\n        dfactorial: function (x) {\r\n            if(isInt(x)) {\r\n                var even = x % 2 === 0;\r\n                /* If x = even then n = x/2 else n = (x-1)/2*/\r\n                var n = even ? x / 2 : (x + 1) / 2;\r\n                /*the return value*/\r\n                var r = new Frac(1);\r\n                /*start the loop*/\r\n                if(even)\r\n                    for(var i = 1; i <= n; i++)\r\n                        r = r.multiply(new Frac(2).multiply(new Frac(i)));\r\n                else\r\n                    for(var i = 1; i <= n; i++)\r\n                        r = r.multiply(new Frac(2).multiply(new Frac(i)).subtract(new Frac(1)));\r\n            }\r\n            else {\r\n                /*Not yet extended to bigNum*/\r\n                r = Math.pow(2, (1 + 2 * x - Math.cos(Math.PI * x)) / 4) * Math.pow(Math.PI, (Math.cos(Math.PI * x) - 1) / 4) * Math2.gamma(1 + x / 2);\r\n            }\r\n\r\n            /*done*/\r\n            return r;\r\n        },\r\n        GCD: function () {\r\n            var args = arrayUnique([].slice.call(arguments)\r\n                    .map(function (x) {\r\n                        return Math.abs(x);\r\n                    })).sort(),\r\n                    a = Math.abs(args.shift()),\r\n                    n = args.length;\r\n\r\n            while(n-- > 0) {\r\n                var b = Math.abs(args.shift());\r\n                while(true) {\r\n                    a %= b;\r\n                    if(a === 0) {\r\n                        a = b;\r\n                        break;\r\n                    }\r\n                    b %= a;\r\n                    if(b === 0)\r\n                        break;\r\n                    ;\r\n                }\r\n            }\r\n            return a;\r\n        },\r\n        QGCD: function () {\r\n            var args = [].slice.call(arguments);\r\n            var a = args[0];\r\n            for(var i = 1; i < args.length; i++) {\r\n                var b = args[i];\r\n                var sign = a.isNegative() && b.isNegative() ? -1 : 1;\r\n                a = b.gcd(a);\r\n                if(sign < 0)\r\n                    a.negate();\r\n            }\r\n            return a;\r\n        },\r\n        LCM: function (a, b) {\r\n            return (a * b) / Math2.GCD(a, b);\r\n        },\r\n        //pow but with the handling of negative numbers\r\n        //http://stackoverflow.com/questions/12810765/calculating-cubic-root-for-negative-number\r\n        pow: function (b, e) {\r\n            if(b < 0) {\r\n                if(Math.abs(e) < 1) {\r\n                    /*nth root of a negative number is imaginary when n is even*/\r\n                    if(1 / e % 2 === 0)\r\n                        return NaN;\r\n                    return -Math.pow(Math.abs(b), e);\r\n                }\r\n            }\r\n            return Math.pow(b, e);\r\n        },\r\n        factor: function (n) {\r\n            n = Number(n);\r\n            var sign = Math.sign(n); /*store the sign*/\r\n            /*move the number to absolute value*/\r\n            n = Math.abs(n);\r\n            var ifactors = Math2.ifactor(n);\r\n            var factors = new Symbol();\r\n            factors.symbols = {};\r\n            factors.group = CB;\r\n            for(var x in ifactors) {\r\n                var factor = new Symbol(1);\r\n                factor.group = P; /*cheat a little*/\r\n                factor.value = x;\r\n                factor.power = new Symbol(ifactors[x]);\r\n                factors.symbols[x] = factor;\r\n            }\r\n            factors.updateHash();\r\n\r\n            if(n === 1) {\r\n                factors = new Symbol(n);\r\n            }\r\n\r\n            /*put back the sign*/\r\n            if(sign < 0)\r\n                factors.negate();\r\n\r\n            return factors;\r\n        },\r\n        /**\r\n         * Uses trial division\r\n         * @param {Integer} n - the number being factored\r\n         * @param {object} factors -  the factors object\r\n         * @returns {object}\r\n         */\r\n        sfactor: function (n, factors) {\r\n            factors = factors || {};\r\n            var r = Math.floor(Math.sqrt(n));\r\n            var lcprime = PRIMES[PRIMES.length - 1];\r\n            /*a one-time cost... Hopefully ... And don't bother for more than a million*/\r\n            /*takes too long*/\r\n            if(r > lcprime && n < 1e6)\r\n                generatePrimes(r);\r\n            var l = PRIMES.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var prime = PRIMES[i];\r\n                /*trial division*/\r\n                while(n % prime === 0) {\r\n                    n = n / prime;\r\n                    factors[prime] = (factors[prime] || 0) + 1;\r\n                }\r\n            }\r\n            if(n > 1)\r\n                factors[n] = 1;\r\n            return factors;\r\n        },\r\n        /**\r\n         * Pollard's rho\r\n         * @param {Integer} n\r\n         * @returns {object}\r\n         */\r\n        ifactor: function (n) {\r\n            var input = new bigInt(n);\r\n\r\n            n = String(n);\r\n\r\n            if(n === '0')\r\n                return {'0': 1};\r\n            n = new bigInt(n); /*convert to bigInt for safety*/\r\n            var sign = n.sign ? -1 : 1;\r\n            n = n.abs();\r\n            var factors = {}; /*factor object being returned.*/\r\n            if(n.lt('65536')) { /*less than 2^16 just use trial division*/\r\n                factors = Math2.sfactor(n, factors);\r\n            }\r\n            else {\r\n                var add = function (e) {\r\n                    if(!e.isPrime()) {\r\n                        factors = Math2.sfactor(e, factors);\r\n                    }\r\n                    else\r\n                        factors[e] = (factors[e] || 0) + 1;\r\n                };\r\n\r\n                try {\r\n                    //set a safety\r\n                    var max = 1e3;\r\n                    var safety = 0;\r\n\r\n                    while(!n.abs().equals(1)) {\r\n                        if(n.isPrime()) {\r\n                            add(n);\r\n                            break;\r\n                        }\r\n                        else {\r\n                            function rho(c) {\r\n                                var xf = new bigInt(c),\r\n                                        cz = 2,\r\n                                        x = new bigInt(c),\r\n                                        factor = new bigInt(1);\r\n\r\n                                while(factor.equals(1)) {\r\n                                    for(var i = 0; i <= cz && factor.equals(1); i++) {\r\n                                        //trigger the safety\r\n                                        if(safety++ > max)\r\n                                            throw new Error('stopping');\r\n\r\n                                        x = x.pow(2).add(1).mod(n);\r\n                                        factor = bigInt.gcd(x.minus(xf).abs(), n);\r\n                                    }\r\n\r\n                                    cz = cz * 2;\r\n                                    xf = x;\r\n                                }\r\n                                if(factor.equals(n)) {\r\n                                    return rho(c + 1);\r\n                                }\r\n                                return factor;\r\n                            }\r\n                            var factor = rho(2);\r\n                            add(factor);\r\n                            /*divide out the factor*/\r\n                            n = n.divide(factor);\r\n                        }\r\n                    }\r\n                }\r\n                catch(e) {\r\n                    //reset factors\r\n                    factors = {};\r\n                    add(input);\r\n                }\r\n\r\n            }\r\n\r\n            /*put the sign back*/\r\n            if(sign === -1) {\r\n                var sm = arrayMin(keys(factors)); /*/get the smallest number*/\r\n                factors['-' + sm] = factors[sm];\r\n                delete factors[sm];\r\n            }\r\n\r\n            return factors;\r\n        },\r\n        //factors a number into rectangular box. If sides are primes that this will be\r\n        //their prime factors. e.g. 21 -> (7)(3), 133 -> (7)(19)\r\n        boxfactor: function (n, max) {\r\n            max = max || 200; //stop after this number of iterations\r\n            var c, r,\r\n                    d = Math.floor((5 / 12) * n), //the divisor\r\n                    i = 0, //number of iterations\r\n                    safety = false;\r\n            while(true) {\r\n                c = Math.floor(n / d);\r\n                r = n % d;\r\n                if(r === 0)\r\n                    break; //we're done\r\n                if(safety)\r\n                    return [n, 1];\r\n                d = Math.max(r, d - r);\r\n                i++;\r\n                safety = i > max;\r\n            }\r\n            return [c, d, i];\r\n        },\r\n        fib: function (n) {\r\n            var sign = Math.sign(n);\r\n            n = Math.abs(n);\r\n            sign = even(n) ? sign : Math.abs(sign);\r\n            var a = 0, b = 1, f = 1;\r\n            for(var i = 2; i <= n; i++) {\r\n                f = a + b;\r\n                a = b;\r\n                b = f;\r\n            }\r\n            return f * sign;\r\n        },\r\n        mod: function (x, y) {\r\n            return x % y;\r\n        },\r\n        //http://mathworld.wolfram.com/IntegerPart.html\r\n        integer_part: function (x) {\r\n            var sign = Math.sign(x);\r\n            return sign * Math.floor(Math.abs(x));\r\n        },\r\n        simpson: function (f, a, b, step) {\r\n            var get_value = function (f, x, side) {\r\n                var v = f(x);\r\n                var d = 0.000000000001;\r\n                if(isNaN(v)) {\r\n                    v = f(side === 1 ? x + d : x - d);\r\n                }\r\n                return v;\r\n            };\r\n\r\n            step = step || 0.0001;\r\n            //calculate the number of intervals\r\n            var n = Math.abs(Math.floor((b - a) / step));\r\n            //simpson's rule requires an even number of intervals. If it's not then add 1\r\n            if(n % 2 !== 0)\r\n                n++;\r\n            //get the interval size\r\n            var dx = (b - a) / n;\r\n            //get x0\r\n            var retval = get_value(f, a, 1);\r\n\r\n            //get the middle part 4x1+2x2+4x3 ...\r\n            //but first set a flag to see if it's even or odd.\r\n            //The first one is odd so we start there\r\n            var even = false;\r\n            //get x1\r\n            var xi = a + dx;\r\n            //the coefficient\r\n            var c, k;\r\n            //https://en.wikipedia.org/wiki/Simpson%27s_rule\r\n            for(var i = 1; i < n; i++) {\r\n                c = even ? 2 : 4;\r\n                k = c * get_value(f, xi, 1);\r\n                retval += k;\r\n                //flip the even flag\r\n                even = !even;\r\n                //increment xi\r\n                xi += dx;\r\n            }\r\n\r\n            //add xn\r\n            return (retval + get_value(f, xi, 2)) * (dx / 3);\r\n\r\n        },\r\n        /**\r\n         * https://github.com/scijs/integrate-adaptive-simpson\r\n         * @param {Function} f - the function being integrated\r\n         * @param {Number} a - lower bound\r\n         * @param {Number} b - upper bound\r\n         * @param {Number} tol - step width\r\n         * @param {Number} maxdepth\r\n         * @returns {Number}\r\n         */\r\n        num_integrate: function (f, a, b, tol, maxdepth) {\r\n            if(maxdepth < 0)\r\n                throw new Error('max depth cannot be negative');\r\n\r\n            /* This algorithm adapted from pseudocode in:*/\r\n            /* http://www.math.utk.edu/~ccollins/refs/Handouts/rich.pdf*/\r\n            function adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, depth, state) {\r\n                if(state.nanEncountered) {\r\n                    return NaN;\r\n                }\r\n                var h, f1, f2, sl, sr, s2, m, V1, V2, err;\r\n                h = b - a;\r\n                f1 = f(a + h * 0.25);\r\n                f2 = f(b - h * 0.25);\r\n                /* Simple check for NaN:*/\r\n                if(isNaN(f1)) {\r\n                    state.nanEncountered = true;\r\n                    return;\r\n                }\r\n                /* Simple check for NaN:*/\r\n                if(isNaN(f2)) {\r\n                    state.nanEncountered = true;\r\n                    return;\r\n                }\r\n\r\n                sl = h * (fa + 4 * f1 + fm) / 12;\r\n                sr = h * (fm + 4 * f2 + fb) / 12;\r\n                s2 = sl + sr;\r\n                err = (s2 - V0) / 15;\r\n\r\n                if(state.maxDepthCount > 1000 * maxdepth) {\r\n                    return;\r\n                }\r\n\r\n\r\n                if(depth > maxdepth) {\r\n                    state.maxDepthCount++;\r\n                    return s2 + err;\r\n                }\r\n                else if(Math.abs(err) < tol) {\r\n                    return s2 + err;\r\n                }\r\n                else {\r\n                    m = a + h * 0.5;\r\n                    V1 = adsimp(f, a, m, fa, f1, fm, sl, tol * 0.5, maxdepth, depth + 1, state);\r\n                    if(isNaN(V1)) {\r\n                        state.nanEncountered = true;\r\n                        return NaN;\r\n                    }\r\n                    V2 = adsimp(f, m, b, fm, f2, fb, sr, tol * 0.5, maxdepth, depth + 1, state);\r\n\r\n                    if(isNaN(V2)) {\r\n                        state.nanEncountered = true;\r\n                        return NaN;\r\n                    }\r\n\r\n                    return V1 + V2;\r\n                }\r\n            }\r\n\r\n            function integrate(f, a, b, tol, maxdepth) {\r\n                var state = {\r\n                    maxDepthCount: 0,\r\n                    nanEncountered: false\r\n                };\r\n\r\n                if(tol === undefined) {\r\n                    tol = 1e-9;\r\n                }\r\n                if(maxdepth === undefined) {\r\n                    /*Issue #458 - This was lowered because of performance issues. */\r\n                    /*This was suspected from before but is now confirmed with this issue*/\r\n                    maxdepth = 45;\r\n                }\r\n\r\n                var fa = f(a);\r\n                var fm = f(0.5 * (a + b));\r\n                var fb = f(b);\r\n\r\n                var V0 = (fa + 4 * fm + fb) * (b - a) / 6;\r\n\r\n                var result = adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, 1, state);\r\n\r\n                if(state.maxDepthCount > 0) {\r\n                    warn('integrate-adaptive-simpson: Warning: maximum recursion depth (' + maxdepth + ') reached ' + state.maxDepthCount + ' times');\r\n                }\r\n\r\n                if(state.nanEncountered) {\r\n                    throw new Error('Function does not converge over interval!');\r\n                }\r\n\r\n                return result;\r\n            }\r\n            var retval;\r\n\r\n            try {\r\n                retval = integrate(f, a, b, tol, maxdepth);\r\n            }\r\n            catch(e) {\r\n                /*fallback to non-adaptive*/\r\n                return Math2.simpson(f, a, b);\r\n            }\r\n            return nround(retval, 12);\r\n        },\r\n        //https://en.wikipedia.org/wiki/Trigonometric_integral\r\n        //CosineIntegral\r\n        Ci: function (x) {\r\n            var n = 20,\r\n                    /*roughly Euler–Mascheroni*/\r\n                    g = 0.5772156649015329,\r\n                    sum = 0;\r\n            for(var i = 1; i < n; i++) {\r\n                /*cache 2n*/\r\n                var n2 = 2 * i;\r\n                sum += (Math.pow(-1, i) * Math.pow(x, n2)) / (n2 * Math2.factorial(n2));\r\n            }\r\n            return Math.log(x) + g + sum;\r\n        },\r\n        /*SineIntegral*/\r\n        Si: function (x) {\r\n            var n = 20,\r\n                    sum = 0;\r\n            for(var i = 0; i < n; i++) {\r\n                var n2 = 2 * i;\r\n                sum += (Math.pow(-1, i) * Math.pow(x, n2 + 1)) / ((n2 + 1) * Math2.factorial(n2 + 1));\r\n            }\r\n            return sum;\r\n        },\r\n        /*ExponentialIntegral*/\r\n        Ei: function (x) {\r\n            if(Number(x) === 0)\r\n                return -Infinity;\r\n            var n = 30,\r\n                    g = 0.5772156649015328606, /*roughly Euler–Mascheroni*/\r\n                    sum = 0;\r\n            for(var i = 1; i < n; i++) {\r\n                sum += Math.pow(x, i) / (i * Math2.factorial(i));\r\n            }\r\n            return g + Math.abs(Math.log(x)) + sum;\r\n        },\r\n        /*Hyperbolic Sine Integral*/\r\n        /*http://mathworld.wolfram.com/Shi.html*/\r\n        Shi: function (x) {\r\n            var n = 30,\r\n                    sum = 0,\r\n                    k, t;\r\n            for(var i = 0; i < n; i++) {\r\n                k = 2 * i;\r\n                t = k + 1;\r\n                sum += Math.pow(x, t) / (t * t * Math2.factorial(k));\r\n            }\r\n            return sum;\r\n        },\r\n        /*the cosine integral function*/\r\n        Chi: function (x) {\r\n            var dx, g, f;\r\n            dx = 0.001;\r\n            g = 0.5772156649015328606;\r\n            f = function (t) {\r\n                return (Math.cosh(t) - 1) / t;\r\n            };\r\n            return Math.log(x) + g + Math2.num_integrate(f, 0.002, x, dx);\r\n        },\r\n        /*the log integral*/\r\n        Li: function (x) {\r\n            return Math2.Ei(Math2.bigLog(x));\r\n        },\r\n        /*the gamma incomplete function*/\r\n        gamma_incomplete: function (n, x) {\r\n            var t = n - 1,\r\n                    sum = 0,\r\n                    x = x || 0;\r\n            for(var i = 0; i < t; i++) {\r\n                sum += Math.pow(x, i) / Math2.factorial(i);\r\n            }\r\n            return Math2.factorial(t) * Math.exp(-x) * sum;\r\n        },\r\n        /*\r\n         * Heaviside step function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n         * Specification : http://mathworld.wolfram.com/HeavisideStepFunction.html\r\n         * if x > 0 then 1\r\n         * if x == 0 then 1/2\r\n         * if x < 0 then 0\r\n         */\r\n        step: function (x) {\r\n            if(x > 0)\r\n                return 1;\r\n            if(x < 0)\r\n                return 0;\r\n            return 0.5;\r\n        },\r\n        /*\r\n         * Rectangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n         * Specification : http://mathworld.wolfram.com/RectangleFunction.html\r\n         * if |x| > 1/2 then 0\r\n         * if |x| == 1/2 then 1/2\r\n         * if |x| < 1/2 then 1\r\n         */\r\n        rect: function (x) {\r\n            var x = Math.abs(x);\r\n            if(x === 0.5)\r\n                return x;\r\n            if(x > 0.5)\r\n                return 0;\r\n            return 1;\r\n        },\r\n        /*\r\n         * Sinc function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n         * Specification : http://mathworld.wolfram.com/SincFunction.html\r\n         * if x == 0 then 1\r\n         * otherwise sin(x)/x\r\n         */\r\n        sinc: function (x) {\r\n            if(x.equals(0))\r\n                return 1;\r\n            return Math.sin(x) / x;\r\n        },\r\n        /*\r\n         * Triangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n         * Specification : http://mathworld.wolfram.com/TriangleFunction.html\r\n         * if |x| >= 1 then 0\r\n         * if |x| < then 1-|x|\r\n         */\r\n        tri: function (x) {\r\n            x = Math.abs(x);\r\n            if(x >= 1)\r\n                return 0;\r\n            return 1 - x;\r\n        },\r\n        //https://en.wikipedia.org/wiki/Nth_root_algorithm\r\n        nthroot: function (A, n) {\r\n            /*make sure the input is of type Frac*/\r\n            if(!(A instanceof Frac))\r\n                A = new Frac(A.toString());\r\n            if(!(n instanceof Frac))\r\n                n = new Frac(n.toString());\r\n            if(n.equals(1))\r\n                return A;\r\n            /*begin algorithm*/\r\n            var xk = A.divide(new Frac(2)); /*x0*/\r\n            var e = new Frac(1e-15);\r\n            var dk, dk0, d0;\r\n            var a = n.clone().invert(),\r\n                    b = n.subtract(new Frac(1));\r\n            do {\r\n                var powb = Math2.bigpow(xk, b);\r\n                var dk_dec = a.multiply(A.divide(powb).subtract(xk)).toDecimal(25);\r\n                dk = Frac.create(dk_dec);\r\n                if(d0)\r\n                    break;\r\n\r\n                xk = xk.add(dk);\r\n                /*check to see if there's no change from the last xk*/\r\n                var dk_dec = dk.toDecimal();\r\n                d0 = dk0 ? dk0 === dk_dec : false;\r\n                dk0 = dk_dec;\r\n            }\r\n            while(dk.abs().gte(e))\r\n\r\n            return xk;\r\n        },\r\n        /*https://gist.github.com/jiggzson/0c5b33cbcd7b52b36132b1e96573285f*/\r\n        /*Just the square root function but big :)*/\r\n        sqrt: function (n) {\r\n            if(!(n instanceof Frac))\r\n                n = new Frac(n);\r\n            var xn, d, ld, same_delta;\r\n            var c = 0; /*counter*/\r\n            var done = false;\r\n            var delta = new Frac(1e-20);\r\n            xn = n.divide(new Frac(2));\r\n            var safety = 1000;\r\n            do {\r\n                /*break if we're not converging*/\r\n                if(c > safety)\r\n                    throw new Error('Unable to calculate square root for ' + n);\r\n                xn = xn.add(n.divide(xn)).divide(new Frac(2));\r\n                xn = new Frac(xn.decimal(30));\r\n                /*get the difference from the true square*/\r\n                d = n.subtract(xn.multiply(xn));\r\n                /*if the square of the calculated number is close enough to the number*/\r\n                /*we're getting the square root or the last delta was the same as the new delta*/\r\n                /*then we're done*/\r\n                same_delta = ld ? ld.equals(d) : false;\r\n                if(d.clone().abs().lessThan(delta) || same_delta)\r\n                    done = true;\r\n                /*store the calculated delta*/\r\n                ld = d;\r\n                c++; /*increase the counter*/\r\n            }\r\n            while(!done)\r\n\r\n            return xn;\r\n        }\r\n    };\r\n    //link the Math2 object to Settings.FUNCTION_MODULES\r\n    Settings.FUNCTION_MODULES.push(Math2);\r\n    reserveNames(Math2); //reserve the names in Math2\r\n\r\n\r\n//Polyfills ====================================================================\r\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/\r\n    Math.sign = Math.sign || function (x) {\r\n        x = +x; // convert to a number\r\n        if(x === 0 || isNaN(x)) {\r\n            return x;\r\n        }\r\n        return x > 0 ? 1 : -1;\r\n    };\r\n\r\n    Math.cosh = Math.cosh || function (x) {\r\n        var y = Math.exp(x);\r\n        return (y + 1 / y) / 2;\r\n    };\r\n\r\n    Math.sech = Math.sech || function (x) {\r\n        return 1 / Math.cosh(x);\r\n    };\r\n\r\n    Math.csch = Math.csch || function (x) {\r\n        return 1 / Math.sinh(x);\r\n    };\r\n\r\n    Math.coth = Math.coth || function (x) {\r\n        return 1 / Math.tanh(x);\r\n    };\r\n\r\n    Math.sinh = Math.sinh || function (x) {\r\n        var y = Math.exp(x);\r\n        return (y - 1 / y) / 2;\r\n    };\r\n\r\n    Math.tanh = Math.tanh || function (x) {\r\n        if(x === Infinity) {\r\n            return 1;\r\n        }\r\n        else if(x === -Infinity) {\r\n            return -1;\r\n        }\r\n        else {\r\n            var y = Math.exp(2 * x);\r\n            return (y - 1) / (y + 1);\r\n        }\r\n    };\r\n\r\n    Math.asinh = Math.asinh || function (x) {\r\n        if(x === -Infinity) {\r\n            return x;\r\n        }\r\n        else {\r\n            return Math.log(x + Math.sqrt(x * x + 1));\r\n        }\r\n    };\r\n\r\n    Math.acosh = Math.acosh || function (x) {\r\n        return Math.log(x + Math.sqrt(x * x - 1));\r\n    };\r\n\r\n    Math.atanh = Math.atanh || function (x) {\r\n        return Math.log((1 + x) / (1 - x)) / 2;\r\n    };\r\n\r\n    Math.log10 = Math.log10 || function (x) {\r\n        return Math.log(x) * Math.LOG10E;\r\n    };\r\n\r\n    Math.trunc = Math.trunc || function (x) {\r\n        if(isNaN(x)) {\r\n            return NaN;\r\n        }\r\n        if(x > 0) {\r\n            return Math.floor(x);\r\n        }\r\n        return Math.ceil(x);\r\n    };\r\n\r\n//Global functions =============================================================\r\n    /**\r\n     * This method will return a hash or a text representation of a Symbol, Matrix, or Vector.\r\n     * If all else fails it *assumes* the object has a toString method and will call that.\r\n     *\r\n     * @param {Object} obj\r\n     * @param {String} option get is as a hash\r\n     * @param {int} useGroup\r\n     * @returns {String}\r\n     */\r\n    function text(obj, option, useGroup, decp) { \r\n        var asHash = option === 'hash',\r\n                //whether to wrap numbers in brackets\r\n                wrapCondition = undefined,\r\n                opt = asHash ? undefined : option,\r\n                asDecimal = opt === 'decimal' || opt === 'decimals';\r\n\r\n        if(asDecimal && typeof decp === 'undefined')\r\n            decp = Settings.DEFAULT_DECP;\r\n\r\n        function toString(obj) {\r\n            switch(option)\r\n            {\r\n                case 'decimals':\r\n                case 'decimal':\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return false;\r\n                    };\r\n                    return obj.valueOf();\r\n                case 'recurring':\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return str.indexOf(\"'\") !== -1;\r\n                    };\r\n\r\n                    var str = obj.toString();\r\n                    //verify that the string is actually a fraction\r\n                    var frac = /^-?\\d+(?:\\/\\d+)?$/.exec(str);\r\n                    if(frac.length === 0)\r\n                        return str;\r\n\r\n                    //split the fraction into the numerator and denominator\r\n                    var parts = frac[0].split('/');\r\n                    var negative = false;\r\n                    var m = Number(parts[0]);\r\n                    if(m < 0) {\r\n                        m = -m;\r\n                        negative = true;\r\n                    }\r\n                    var n = Number(parts[1]);\r\n                    if(!n)\r\n                        n = 1;\r\n\r\n                    //https://softwareengineering.stackexchange.com/questions/192070/what-is-a-efficient-way-to-find-repeating-decimal#comment743574_192081\r\n                    var quotient = Math.floor(m / n), c = 10 * (m - quotient * n);\r\n                    quotient = quotient.toString() + \".\";\r\n                    while(c && c < n) {\r\n                        c *= 10;\r\n                        quotient += \"0\";\r\n                    }\r\n                    var digits = \"\", passed = [], i = 0;\r\n                    while(true) {\r\n                        if(typeof passed[c] !== 'undefined') {\r\n                            var prefix = digits.slice(0, passed[c]),\r\n                                    cycle = digits.slice(passed[c]),\r\n                                    result = quotient + prefix + \"'\" + cycle + \"'\";\r\n                            return (negative ? \"-\" : \"\") + result.replace(\"'0'\", \"\").replace(/\\.$/, \"\");\r\n                        }\r\n                        var q = Math.floor(c / n), r = c - q * n;\r\n                        passed[c] = i;\r\n                        digits += q.toString();\r\n                        i += 1;\r\n                        c = 10 * r;\r\n                    }\r\n                case 'mixed':\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return str.indexOf('/') !== -1;\r\n                    };\r\n\r\n                    var str = obj.toString();\r\n                    //verify that the string is actually a fraction\r\n                    var frac = /^-?\\d+(?:\\/\\d+)?$/.exec(str);\r\n                    if(frac.length === 0)\r\n                        return str;\r\n\r\n                    //split the fraction into the numerator and denominator\r\n                    var parts = frac[0].split('/');\r\n                    var numer = new bigInt(parts[0]);\r\n                    var denom = new bigInt(parts[1]);\r\n                    if(denom.equals(0))\r\n                        denom = new bigInt(1);\r\n\r\n                    //return the quotient plus the remainder\r\n                    var divmod = numer.divmod(denom);\r\n                    var quotient = divmod.quotient;\r\n                    var remainder = divmod.remainder;\r\n                    var operator = parts[0][0] === '-' || quotient.equals(0) || remainder.equals(0) ? '' : '+';\r\n                    return (quotient.equals(0) ? '' : quotient.toString()) + operator + (remainder.equals(0) ? '' : (remainder.toString() + '/' + parts[1]));\r\n                case 'scientific':\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return false;\r\n                    };\r\n                    return new Scientific(obj.valueOf()).toString(Settings.SCIENTIFIC_MAX_DECIMAL_PLACES);\r\n                default:\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return str.indexOf('/') !== -1;\r\n                    };\r\n\r\n                    return obj.toString();\r\n            }\r\n        }\r\n\r\n        //if the object is a symbol\r\n        if(isSymbol(obj)) {\r\n            var multiplier = '',\r\n                    power = '',\r\n                    sign = '',\r\n                    group = obj.group || useGroup,\r\n                    value = obj.value;\r\n\r\n            //if the value is to be used as a hash then the power and multiplier need to be suppressed\r\n            if(!asHash) {\r\n                //use asDecimal to get the object back as a decimal\r\n                var om = toString(obj.multiplier);\r\n                if(om == '-1' && String(obj.multiplier) === '-1') {\r\n                    sign = '-';\r\n                    om = '1';\r\n                }\r\n                //only add the multiplier if it's not 1\r\n                if(om != '1')\r\n                    multiplier = om;\r\n                //use asDecimal to get the object back as a decimal\r\n                var p = obj.power ? toString(obj.power) : '';\r\n                //only add the multiplier\r\n                if(p != '1') {\r\n                    //is it a symbol\r\n                    if(isSymbol(p)) {\r\n                        power = text(p, opt);\r\n                    }\r\n                    else {\r\n                        power = p;\r\n                    }\r\n                }\r\n            }\r\n\r\n            switch(group) {\r\n                case N:\r\n                    multiplier = '';\r\n                    //round if requested\r\n                    var m = decp && asDecimal ? obj.multiplier.toDecimal(decp) : toString(obj.multiplier);\r\n                    //if it's numerical then all we need is the multiplier\r\n                    value = String(obj.multiplier) == '-1' ? '1' : m;\r\n                    power = '';\r\n                    break;\r\n                case PL:\r\n                    value = obj.collectSymbols().map(function (x) {\r\n                        var txt = text(x, opt, useGroup, decp);\r\n                        if(txt == '0')\r\n                            txt = '';\r\n                        return txt;\r\n                    }).sort().join('+').replace(/\\+\\-/g, '-');\r\n                    break;\r\n                case CP:\r\n                    value = obj.collectSymbols().map(function (x) {\r\n                        var txt = text(x, opt, useGroup, decp);\r\n                        if(txt == '0')\r\n                            txt = '';\r\n                        return txt;\r\n                    }).sort().join('+').replace(/\\+\\-/g, '-');\r\n                    break;\r\n                case CB:\r\n                    value = obj.collectSymbols(function (symbol) {\r\n                        var g = symbol.group;\r\n                        //both groups will already be in brackets if their power is greater than 1\r\n                        //so skip it.\r\n                        if((g === PL || g === CP) && (symbol.power.equals(1) && symbol.multiplier.equals(1))) {\r\n                            return inBrackets(text(symbol, opt));\r\n                        }\r\n                        return text(symbol, opt);\r\n                    }).join('*');\r\n                    break;\r\n                case EX:\r\n                    var pg = obj.previousGroup,\r\n                            pwg = obj.power.group;\r\n\r\n                    //PL are the exception. It's simpler to just collect and set the value\r\n                    if(pg === PL)\r\n                        value = obj.collectSymbols(text, opt).join('+').replace('+-', '-');\r\n                    if(!(pg === N || pg === S || pg === FN) && !asHash) {\r\n                        value = inBrackets(value);\r\n                    }\r\n\r\n                    if((pwg === CP || pwg === CB || pwg === PL || obj.power.multiplier.toString() != '1') && power) {\r\n                        power = inBrackets(power);\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            if(group === FN) {\r\n                value = obj.fname + inBrackets(obj.args.map(function (symbol) {\r\n                    return text(symbol, opt);\r\n                }).join(','));\r\n            }\r\n            //TODO: Needs to be more efficient. Maybe.\r\n            if(group === FN && obj.fname in CUSTOM_OPERATORS) {\r\n                var a = text(obj.args[0]);\r\n                var b = text(obj.args[1]);\r\n                if(obj.args[0].isComposite()) //preserve the brackets\r\n                    a = inBrackets(a);\r\n                if(obj.args[1].isComposite()) //preserve the brackets\r\n                    b = inBrackets(b);\r\n                value = a + CUSTOM_OPERATORS[obj.fname] + b;\r\n            }\r\n            //wrap the power since / is less than ^\r\n            //TODO: introduce method call isSimple\r\n            if(power && group !== EX && wrapCondition(power)) {\r\n                power = inBrackets(power);\r\n            }\r\n\r\n            //the following groups are held together by plus or minus. They can be raised to a power or multiplied\r\n            //by a multiplier and have to be in brackets to preserve the order of precedence\r\n            if(((group === CP || group === PL) && (multiplier && multiplier != '1' || sign === '-'))\r\n                    || ((group === CB || group === CP || group === PL) && (power && power != '1'))\r\n                    || !asHash && group === P && value == -1\r\n                    || obj.fname === PARENTHESIS) {\r\n\r\n                value = inBrackets(value);\r\n            }\r\n\r\n            if(decp && (option === 'decimal' || option === 'decimals' && multiplier)) {\r\n                multiplier = nround(multiplier, decp);\r\n            }\r\n\r\n\r\n            //add the sign back\r\n            var c = sign + multiplier;\r\n\r\n            if(multiplier && wrapCondition(multiplier))\r\n                c = inBrackets(c);\r\n\r\n            if(power < 0)\r\n                power = inBrackets(power);\r\n\r\n            //add the multiplication back\r\n            if(multiplier)\r\n                c = c + '*';\r\n\r\n            if(power) {\r\n                if(value === 'e' && Settings.E_TO_EXP) {\r\n                    return c + 'exp' + inBrackets(power);\r\n                }\r\n                power = Settings.POWER_OPERATOR + power;\r\n            }\r\n\r\n            //this needs serious rethinking. Must fix\r\n            if(group === EX && value.charAt(0) === '-') {\r\n                value = inBrackets(value);\r\n            }\r\n\r\n            var cv = c + value;\r\n\r\n            if(obj.parens) {\r\n                cv = inBrackets(cv);\r\n            }\r\n\r\n            return cv + power;\r\n        }\r\n        else if(isVector(obj)) {\r\n            var l = obj.elements.length,\r\n                    c = [];\r\n            for(var i = 0; i < l; i++)\r\n                c.push(obj.elements[i].text(option));\r\n            return '[' + c.join(',') + ']';\r\n        }\r\n        else {\r\n            try {\r\n                return obj.toString();\r\n            }\r\n            catch(e) {\r\n                return '';\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Calculates prime factors for a number. It first checks if the number\r\n     * is a prime number. If it's not then it will calculate all the primes \r\n     * for that number.\r\n     * @param {int} num\r\n     * @returns {Array}\r\n     */\r\n\r\n    function primeFactors(num) {\r\n        if(isPrime(num)) {\r\n            return [num];\r\n        }\r\n\r\n        var l = num, i = 1, factors = [],\r\n                epsilon = 2.2204460492503130808472633361816E-16;\r\n        while(i < l) {\r\n            var quotient = num / i;\r\n            var whole = Math.floor(quotient);\r\n            var remainder = quotient - whole;\r\n\r\n            if(remainder <= epsilon && i > 1) {\r\n                // If the prime wasn't found but calculated then save it and\r\n                // add it as a factor.\r\n                if(isPrime(i)) {\r\n                    if(PRIMES.indexOf(i) === -1) {\r\n                        PRIMES.push(i);\r\n                    }\r\n                    factors.push(i);\r\n                }\r\n\r\n                // Check if the remainder is a prime\r\n                if(isPrime(whole)) {\r\n                    factors.push(whole);\r\n                    break;\r\n                }\r\n\r\n                l = whole;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        return factors.sort(function (a, b) {\r\n            return a - b;\r\n        });\r\n    }\r\n    ;\r\n    primeFactors(314146179365)\r\n//Expression ===================================================================\r\n    /**\r\n     * This is what nerdamer returns. It's sort of a wrapper around the symbol class and\r\n     * provides the user with some useful functions. If you want to provide the user with extra\r\n     * library functions then add them to this class's prototype.\r\n     * @param {Symbol} symbol\r\n     * @returns {Expression} wraps around the Symbol class\r\n     */\r\n    function Expression(symbol) {\r\n        //we don't want arrays wrapped\r\n        this.symbol = symbol;\r\n    }\r\n    /**\r\n     * Returns stored expression at index. For first index use 1 not 0.\r\n     * @param {bool} asType\r\n     * @param {Integer} expression_number\r\n     */\r\n    Expression.getExpression = function (expression_number, asType) {\r\n        if(expression_number === 'last' || !expression_number)\r\n            expression_number = EXPRESSIONS.length;\r\n        if(expression_number === 'first')\r\n            expression_number = 1;\r\n        var index = expression_number - 1,\r\n                expression = EXPRESSIONS[index],\r\n                retval = expression ? new Expression(expression) : expression;\r\n        return retval;\r\n    };\r\n    Expression.prototype = {\r\n        /**\r\n         * Returns the text representation of the expression\r\n         * @param {String} opt - option of formatting numbers\r\n         * @param {Number} n The number of significant figures\r\n         * @returns {String}\r\n         */\r\n        text: function (opt, n) {\r\n            n = n || Settings.EXPRESSION_DECP;\r\n            opt = opt || 'decimals';\r\n            if(this.symbol.text_)\r\n                return this.symbol.text_(opt);\r\n\r\n            return text(this.symbol, opt, undefined, n);\r\n        },\r\n        /**\r\n         * Returns the latex representation of the expression\r\n         * @param {String} option - option for formatting numbers\r\n         * @returns {String}\r\n         */\r\n        latex: function (option) {\r\n            if(this.symbol.latex)\r\n                return this.symbol.latex(option);\r\n            return LaTeX.latex(this.symbol, option);\r\n        },\r\n        valueOf: function () {\r\n            return this.symbol.valueOf();\r\n        },\r\n\r\n        /**\r\n         * Evaluates the expression and tries to reduce it to a number if possible.\r\n         * If an argument is given in the form of %{integer} it will evaluate that expression.\r\n         * Other than that it will just use it's own text and reparse\r\n         * @returns {Expression}\r\n         */\r\n        evaluate: function () {\r\n\r\n            // Don't evaluate an empty vector\r\n            if(isVector(this.symbol) && this.symbol.dimensions() === 0) {\r\n                return this;\r\n            }\r\n\r\n            var first_arg = arguments[0], expression, idx = 1;\r\n\r\n            //Enable getting of expressions using the % so for example %1 should get the first expression\r\n            if(typeof first_arg === 'string') {\r\n                expression = (first_arg.charAt(0) === '%') ? Expression.getExpression(first_arg.substr(1)).text() : first_arg;\r\n            }\r\n            else if(first_arg instanceof Expression || isSymbol(first_arg)) {\r\n                expression = first_arg.text();\r\n            }\r\n            else {\r\n                expression = this.symbol.text();\r\n                idx--;\r\n            }\r\n\r\n            var subs = arguments[idx] || {};\r\n\r\n            var retval = new Expression(block('PARSE2NUMBER', function () {\r\n                return _.parse(expression, subs);\r\n            }, true));\r\n\r\n            return retval;\r\n        },\r\n        /**\r\n         * Converts a symbol to a JS function. Pass in an array of variables to use that order instead of\r\n         * the default alphabetical order\r\n         * @param vars {Array}\r\n         */\r\n        buildFunction: function (vars) {\r\n            return Build.build(this.symbol, vars);\r\n        },\r\n        /**\r\n         * Checks to see if the expression is just a plain old number\r\n         * @returns {boolean}\r\n         */\r\n        isNumber: function () {\r\n            return isNumericSymbol(this.symbol);\r\n        },\r\n        /**\r\n         * Checks to see if the expression is infinity\r\n         * @returns {boolean}\r\n         */\r\n        isInfinity: function () {\r\n            return Math.abs(this.symbol.multiplier) === Infinity;\r\n        },\r\n        /**\r\n         * Checks to see if the expression contains imaginary numbers\r\n         * @returns {boolean}\r\n         */\r\n        isImaginary: function () {\r\n            return evaluate(_.parse(this.symbol)).isImaginary();\r\n        },\r\n        /**\r\n         * Returns all the variables in the expression\r\n         * @returns {Array}\r\n         */\r\n        variables: function () {\r\n            return variables(this.symbol);\r\n        },\r\n\r\n        toString: function () {\r\n            try {\r\n                if(isArray(this.symbol))\r\n                    return '[' + this.symbol.toString() + ']';\r\n                return this.symbol.toString();\r\n            }\r\n            catch(e) {\r\n                return '';\r\n            }\r\n        },\r\n        //forces the symbol to be returned as a decimal\r\n        toDecimal: function (prec) {\r\n            Settings.precision = prec;\r\n            var dec = text(this.symbol, 'decimals');\r\n            Settings.precision = undefined;\r\n            return dec;\r\n        },\r\n        //checks to see if the expression is a fraction\r\n        isFraction: function () {\r\n            return isFraction(this.symbol);\r\n        },\r\n        //checks to see if the symbol is a multivariate polynomial\r\n        isPolynomial: function () {\r\n            return this.symbol.isPoly();\r\n        },\r\n        //performs a substitution\r\n        sub: function (symbol, for_symbol) {\r\n            return new Expression(this.symbol.sub(_.parse(symbol), _.parse(for_symbol)));\r\n        },\r\n        operation: function (otype, symbol) {\r\n            if(isExpression(symbol))\r\n                symbol = symbol.symbol;\r\n            else if(!isSymbol(symbol))\r\n                symbol = _.parse(symbol);\r\n            return new Expression(_[otype](this.symbol.clone(), symbol.clone()));\r\n        },\r\n        add: function (symbol) {\r\n            return this.operation('add', symbol);\r\n        },\r\n        subtract: function (symbol) {\r\n            return this.operation('subtract', symbol);\r\n        },\r\n        multiply: function (symbol) {\r\n            return this.operation('multiply', symbol);\r\n        },\r\n        divide: function (symbol) {\r\n            return this.operation('divide', symbol);\r\n        },\r\n        pow: function (symbol) {\r\n            return this.operation('pow', symbol);\r\n        },\r\n        expand: function () {\r\n            return new Expression(_.expand(this.symbol));\r\n        },\r\n        each: function (callback, i) {\r\n            if(this.symbol.each)\r\n                this.symbol.each(callback, i);\r\n            else if(isArray(this.symbol)) {\r\n                for(var i = 0; i < this.symbol.length; i++)\r\n                    callback.call(this.symbol, this.symbol[i], i);\r\n            }\r\n            else\r\n                callback.call(this.symbol);\r\n        },\r\n        eq: function (value) {\r\n            if(!isSymbol(value))\r\n                value = _.parse(value);\r\n            try {\r\n                var d = _.subtract(this.symbol.clone(), value);\r\n                return d.equals(0);\r\n            }\r\n            catch(e) {\r\n                return false;\r\n            }\r\n            ;\r\n        },\r\n        lt: function (value) {\r\n            if(!isSymbol(value))\r\n                value = _.parse(value);\r\n            try {\r\n                var d = evaluate(_.subtract(this.symbol.clone(), value));\r\n                return d.lessThan(0);\r\n            }\r\n            catch(e) {\r\n                return false;\r\n            }\r\n            ;\r\n        },\r\n        gt: function (value) {\r\n            if(!isSymbol(value))\r\n                value = _.parse(value);\r\n            try {\r\n                var d = evaluate(_.subtract(this.symbol.clone(), value));\r\n                return d.greaterThan(0);\r\n            }\r\n            catch(e) {\r\n                return false;\r\n            }\r\n        },\r\n        gte: function (value) {\r\n            return this.gt(value) || this.eq(value);\r\n        },\r\n        lte: function (value) {\r\n            return this.lt(value) || this.eq(value);\r\n        },\r\n\r\n        numerator: function () {\r\n            return new Expression(this.symbol.getNum());\r\n        },\r\n        denominator: function () {\r\n            return new Expression(this.symbol.getDenom());\r\n        },\r\n        hasFunction: function (f) {\r\n            return this.symbol.containsFunction(f);\r\n        },\r\n        contains: function (variable) {\r\n            return this.symbol.contains(variable);\r\n        }\r\n    };\r\n    //Aliases\r\n    Expression.prototype.toTeX = Expression.prototype.latex;\r\n\r\n    \r\n//Scientific ===================================================================\r\n    /*\r\n     * Javascript has the toExponential method but this allows you to work with string and therefore any number of digits of your choosing\r\n     * For example Scientific('464589498449496467924197545625247695464569568959124568489548454');\r\n     */\r\n\r\n    function Scientific(num) {\r\n        if(!(this instanceof Scientific))\r\n            return new Scientific(num);\r\n\r\n        num = String(typeof num === 'undefined' ? 0 : num); //convert to a string\r\n\r\n        //remove the sign\r\n        if(num.startsWith('-')) {\r\n            this.sign = -1;\r\n            //remove the sign\r\n            num = num.substr(1, num.length);\r\n        }\r\n        else {\r\n            this.sign = 1;\r\n        }\r\n\r\n        if(Scientific.isScientific(num)) {\r\n            this.fromScientific(num);\r\n        }\r\n        else {\r\n            this.convert(num);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    Scientific.prototype = {\r\n        fromScientific: function (num) {\r\n            var parts = String(num).toLowerCase().split('e');\r\n            this.coeff = parts[0];\r\n            this.exponent = parts[1];\r\n\r\n            return this;\r\n        },\r\n        convert: function (num) {\r\n            //get wholes and decimals\r\n            var parts = num.split('.');\r\n            //make zero go away\r\n            var w = parts[0] || '';\r\n            var d = parts[1] || '';\r\n            //convert zero to blank strings\r\n            w = Scientific.removeLeadingZeroes(w);\r\n            d = Scientific.removeTrailingZeroes(d);\r\n            //find the location of the decimal place which is right after the wholes\r\n            var dot_location = w.length;\r\n            //add them together so we can move the dot\r\n            var n = w + d;\r\n            //find the next number\r\n            var zeroes = Scientific.leadingZeroes(n).length;\r\n            //set the exponent\r\n            this.exponent = dot_location - (zeroes + 1);\r\n            //set the coeff but first remove leading zeroes\r\n            var coeff = Scientific.removeLeadingZeroes(n);\r\n            this.coeff = coeff.charAt(0) + '.' + (coeff.substr(1, coeff.length) || '0');\r\n\r\n            //the coeff decimal places\r\n            var dec = this.coeff.split('.')[1] || ''; //if it's undefined or zero it's going to blank\r\n\r\n            this.decp = dec === '0' ? 0 : dec.length;\r\n            //decimals\r\n            this.dec = d;\r\n            //wholes\r\n            this.wholes = w;\r\n\r\n            return this;\r\n        },\r\n        round: function (num) {\r\n            var n = this.copy();\r\n\r\n            num = Number(num); //cast to number for safety\r\n            //since we know it guaranteed to be in the format {digit}{optional dot}{optional digits}\r\n            //we can round based on this\r\n            if(num === 0)\r\n                n.coeff = n.coeff.charAt(0);\r\n            else {\r\n                //get up to n-1 digits\r\n                var rounded = this.coeff.substring(0, num + 1);\r\n                //get the next two\r\n                var next_two = this.coeff.substring(num + 1, num + 3);\r\n                //the extra digit\r\n                var ed = next_two.charAt(0);\r\n\r\n                if(next_two.charAt(1) > 4)\r\n                    ed++;\r\n\r\n                n.coeff = rounded + ed;\r\n            }\r\n\r\n            return n;\r\n        },\r\n        copy: function () {\r\n            var n = new Scientific(0);\r\n            n.coeff = this.coeff;\r\n            n.exponent = this.exponent;\r\n            n.sign = this.sign;\r\n            return n;\r\n        },\r\n        toString: function (n) {\r\n            var retval;\r\n\r\n            if(Settings.SCIENTIFIC_IGNORE_ZERO_EXPONENTS && this.exponent === 0 && this.decp < n) {\r\n                if(this.decp === 0)\r\n                    retval = this.wholes;\r\n                else\r\n                    retval = this.coeff;\r\n            }\r\n            else {\r\n                var coeff = typeof n === 'undefined' ? this.coeff : Scientific.round(this.coeff, Math.min(n, this.decp || 1));\r\n                retval = this.exponent === 0 ? coeff : coeff + 'e' + this.exponent;\r\n            }\r\n\r\n            return (this.sign === -1 ? '-' : '') + retval;\r\n        }\r\n    };\r\n\r\n    Scientific.isScientific = function (num) {\r\n        return /\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num);\r\n    };\r\n    Scientific.leadingZeroes = function (num) {\r\n        var match = num.match(/^(0*).*$/);\r\n        return match ? match[1] : '';\r\n    };\r\n    Scientific.removeLeadingZeroes = function (num) {\r\n        var match = num.match(/^0*(.*)$/);\r\n        return match ? match[1] : '';\r\n    };\r\n\r\n    Scientific.removeTrailingZeroes = function (num) {\r\n        var match = num.match(/0*$/);\r\n        return match ? num.substring(0, num.length - match[0].length) : '';\r\n    };\r\n\r\n    Scientific.round = function (c, n) {\r\n        var coeff = nround(c, n);\r\n        var m = String(coeff).split('.').pop();\r\n        var d = n - m.length;\r\n        //if we're asking for more significant figures\r\n        if(d > 0) {\r\n            coeff = coeff + (new Array(d + 1).join(0));\r\n        }\r\n        return coeff;\r\n    };\r\n\r\n//Frac =========================================================================\r\n    function Frac(n) {\r\n        if(n instanceof Frac)\r\n            return n;\r\n        if(n === undefined)\r\n            return this;\r\n        try {\r\n            if(isInt(n)) {\r\n                try {\r\n                    this.num = bigInt(n);\r\n                    this.den = bigInt(1);\r\n                }\r\n                catch(e) {\r\n                    return Frac.simple(n);\r\n                }\r\n            }\r\n            else {\r\n                var frac = n instanceof bigDec ? Fraction.quickConversion(n) : Fraction.convert(n);\r\n                this.num = new bigInt(frac[0]);\r\n                this.den = new bigInt(frac[1]);\r\n            }\r\n        }\r\n        catch(e) {\r\n            return Frac.simple(n);\r\n        }\r\n\r\n    }\r\n    //safe to use with negative numbers or other types\r\n    Frac.create = function (n) {\r\n        if(n instanceof Frac)\r\n            return n;\r\n        n = n.toString();\r\n        var is_neg = n.charAt(0) === '-'; //check if it's negative\r\n        if(is_neg)\r\n            n = n.substr(1, n.length - 1); //remove the sign\r\n        var frac = new Frac(n);\r\n        //put the sign back\r\n        if(is_neg)\r\n            frac.negate();\r\n        return frac;\r\n    };\r\n    Frac.isFrac = function (o) {\r\n        return (o instanceof Frac);\r\n    };\r\n    Frac.quick = function (n, d) {\r\n        var frac = new Frac();\r\n        frac.num = new bigInt(n);\r\n        frac.den = new bigInt(d);\r\n        return frac;\r\n    };\r\n    Frac.simple = function (n) {\r\n        var nstr = String(scientificToDecimal(n)),\r\n                m_dc = nstr.split('.'),\r\n                num = m_dc.join(''),\r\n                den = 1,\r\n                l = (m_dc[1] || '').length;\r\n        for(var i = 0; i < l; i++)\r\n            den += '0';\r\n        var frac = Frac.quick(num, den);\r\n        return frac.simplify();\r\n    };\r\n    Frac.prototype = {\r\n        multiply: function (m) {\r\n            if(this.isOne()) {\r\n                return m.clone();\r\n            }\r\n            if(m.isOne()) {\r\n                return this.clone();\r\n            }\r\n\r\n            var c = this.clone();\r\n            c.num = c.num.multiply(m.num);\r\n            c.den = c.den.multiply(m.den);\r\n\r\n            return c.simplify();\r\n        },\r\n        divide: function (m) {\r\n            if(m.equals(0))\r\n                throw new DivisionByZero('Division by zero not allowed!');\r\n            return this.clone().multiply(m.clone().invert()).simplify();\r\n        },\r\n        subtract: function (m) {\r\n            return this.clone().add(m.clone().neg());\r\n        },\r\n        neg: function () {\r\n            this.num = this.num.multiply(-1);\r\n            return this;\r\n        },\r\n        add: function (m) {\r\n            var n1 = this.den, n2 = m.den, c = this.clone();\r\n            var a = c.num, b = m.num;\r\n            if(n1.equals(n2)) {\r\n                c.num = a.add(b);\r\n            }\r\n            else {\r\n                c.num = a.multiply(n2).add(b.multiply(n1));\r\n                c.den = n1.multiply(n2);\r\n            }\r\n\r\n            return c.simplify();\r\n        },\r\n        mod: function (m) {\r\n            var a = this.clone(),\r\n                    b = m.clone();\r\n            //make their denominators even and return the mod of their numerators\r\n            a.num = a.num.multiply(b.den);\r\n            a.den = a.den.multiply(b.den);\r\n            b.num = b.num.multiply(this.den);\r\n            b.den = b.den.multiply(this.den);\r\n            a.num = a.num.mod(b.num);\r\n            return a.simplify();\r\n        },\r\n        simplify: function () {\r\n            var gcd = bigInt.gcd(this.num, this.den);\r\n\r\n            this.num = this.num.divide(gcd);\r\n            this.den = this.den.divide(gcd);\r\n            return this;\r\n        },\r\n        clone: function () {\r\n            var m = new Frac();\r\n            m.num = new bigInt(this.num);\r\n            m.den = new bigInt(this.den);\r\n            return m;\r\n        },\r\n        decimal: function (prec) {\r\n            var sign = this.num.isNegative() ? '-' : '';\r\n            if(this.num.equals(this.den)) {\r\n                return '1';\r\n            }\r\n            //go plus one for rounding\r\n            prec = prec || Settings.PRECISION;\r\n            prec++;\r\n            var narr = [],\r\n                    n = this.num.abs(),\r\n                    d = this.den;\r\n            for(var i = 0; i < prec; i++) {\r\n                var w = n.divide(d), //divide out whole\r\n                        r = n.subtract(w.multiply(d)); //get remainder\r\n\r\n                narr.push(w);\r\n                if(r.equals(0))\r\n                    break;\r\n                n = r.times(10); //shift one dec place\r\n            }\r\n            var whole = narr.shift();\r\n            if(narr.length === 0) {\r\n                return sign + whole.toString();\r\n            }\r\n\r\n            if(i === prec) {\r\n                var lt = [];\r\n                //get the last two so we can round it\r\n                for(var i = 0; i < 2; i++)\r\n                    lt.unshift(narr.pop());\r\n                //put the last digit back by rounding the last two\r\n                narr.push(Math.round(lt.join('.')));\r\n            }\r\n\r\n            var dec = whole.toString() + '.' + narr.join('');\r\n            return sign + dec;\r\n        },\r\n        toDecimal: function (prec) { \r\n            prec = prec || Settings.PRECISION;\r\n            if(prec) {\r\n                return this.decimal(prec);\r\n            }\r\n            else {\r\n                return this.num / this.den;\r\n            }\r\n        },\r\n        qcompare: function (n) {\r\n            return [this.num.multiply(n.den), n.num.multiply(this.den)];\r\n        },\r\n        equals: function (n) {\r\n            if(!isNaN(n))\r\n                n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n\r\n            return q[0].equals(q[1]);\r\n        },\r\n        absEquals: function (n) {\r\n            if(!isNaN(n))\r\n                n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n\r\n            return q[0].abs().equals(q[1]);\r\n        },\r\n        //lazy check to be fixed. Sufficient for now but will cause future problems\r\n        greaterThan: function (n) {\r\n            if(!isNaN(n))\r\n                n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n\r\n            return q[0].gt(q[1]);\r\n        },\r\n        gte: function (n) {\r\n            return this.greaterThan(n) || this.equals(n);\r\n        },\r\n        lte: function (n) {\r\n            return this.lessThan(n) || this.equals(n);\r\n        },\r\n        lessThan: function (n) {\r\n            if(!isNaN(n))\r\n                n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n\r\n            return q[0].lt(q[1]);\r\n        },\r\n        isInteger: function () {\r\n            return this.den.equals(1);\r\n        },\r\n        negate: function () {\r\n            this.num = this.num.multiply(-1);\r\n            return this;\r\n        },\r\n        invert: function () {\r\n            var t = this.den;\r\n            //why invert 0/1? It'll become 1/0 and that's a lie.\r\n            if(!this.num.equals(0)) {\r\n                var isnegative = this.num.isNegative();\r\n                this.den = this.num.abs();\r\n                this.num = t;\r\n                if(isnegative)\r\n                    this.num = this.num.multiply(-1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        isOne: function () {\r\n            return this.num.equals(1) && this.den.equals(1);\r\n        },\r\n        sign: function () {\r\n            return this.num.isNegative() ? -1 : 1;\r\n        },\r\n        abs: function () {\r\n            this.num = this.num.abs();\r\n            return this;\r\n        },\r\n        gcd: function (f) {\r\n            return Frac.quick(bigInt.gcd(f.num, this.num), bigInt.lcm(f.den, this.den));\r\n        },\r\n        toString: function () {\r\n            return !this.den.equals(1) ? this.num.toString() + '/' + this.den.toString() : this.num.toString();\r\n        },\r\n        valueOf: function () {\r\n//            if(this.num == 24) throw new Error(999)\r\n            if(Settings.USE_BIG)\r\n                return new bigDec(this.num.toString()).div(new bigDec(this.den.toString()));\r\n            var retval = this.num / this.den;\r\n            return retval;\r\n        },\r\n        isNegative: function () {\r\n            return this.toDecimal() < 0;\r\n        }\r\n    };\r\n\r\n//Symbol =======================================================================\r\n    /**\r\n     * All symbols e.g. x, y, z, etc or functions are wrapped in this class. All symbols have a multiplier and a group.\r\n     * All symbols except for \"numbers (group N)\" have a power.\r\n     * @class Primary data type for the Parser.\r\n     * @param {String} obj\r\n     * @returns {Symbol}\r\n     */\r\n    function Symbol(obj) {\r\n        var isInfinity = obj === 'Infinity';\r\n        // This enables the class to be instantiated without the new operator\r\n        if(!(this instanceof Symbol)) {\r\n            return new Symbol(obj);\r\n        }\r\n        // Convert big numbers to a string\r\n        if(obj instanceof bigDec) {\r\n            obj = obj.toString();\r\n        }\r\n        //define numeric symbols\r\n        if(/^(\\-?\\+?\\d+)\\.?\\d*e?\\-?\\+?\\d*/i.test(obj) || obj instanceof bigDec) {\r\n            this.group = N;\r\n            this.value = CONST_HASH;\r\n            this.multiplier = new Frac(obj);\r\n        }\r\n        //define symbolic symbols\r\n        else {\r\n            this.group = S;\r\n            validateName(obj);\r\n            this.value = obj;\r\n            this.multiplier = new Frac(1);\r\n            this.imaginary = obj === Settings.IMAGINARY;\r\n            this.isInfinity = isInfinity;\r\n        }\r\n\r\n        //As of 6.0.0 we switched to infinite precision so all objects have a power\r\n        //Although this is still redundant in constants, it simplifies the logic in\r\n        //other parts so we'll keep it\r\n        this.power = new Frac(1);\r\n\r\n        // Added to silence the strict warning.\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns vanilla imaginary symbol\r\n     * @returns {Symbol}\r\n     */\r\n    Symbol.imaginary = function () {\r\n        var s = new Symbol(Settings.IMAGINARY);\r\n        s.imaginary = true;\r\n        return s;\r\n    };\r\n    /**\r\n     * Return nerdamer's representation of Infinity\r\n     * @param {int} negative -1 to return negative infinity\r\n     * @returns {Symbol}\r\n     */\r\n    Symbol.infinity = function (negative) {\r\n        var v = new Symbol('Infinity');\r\n        if(negative === -1)\r\n            v.negate();\r\n        return v;\r\n    };\r\n    Symbol.shell = function (group, value) {\r\n        var symbol = new Symbol(value);\r\n        symbol.group = group;\r\n        symbol.symbols = {};\r\n        symbol.length = 0;\r\n        return symbol;\r\n    };\r\n    //sqrt(x) -> x^(1/2)\r\n    Symbol.unwrapSQRT = function (symbol, all) {\r\n        var p = symbol.power;\r\n        if(symbol.fname === SQRT && (symbol.isLinear() || all)) {\r\n            var t = symbol.args[0].clone();\r\n            t.power = t.power.multiply(new Frac(1 / 2));\r\n            t.multiplier = t.multiplier.multiply(symbol.multiplier);\r\n            symbol = t;\r\n            if(all)\r\n                symbol.power = p.multiply(new Frac(1 / 2));\r\n        }\r\n\r\n        return symbol;\r\n    };\r\n    Symbol.hyp = function (a, b) {\r\n        a = a || new Symbol(0);\r\n        b = b || new Symbol(0);\r\n        return _.sqrt(_.add(_.pow(a.clone(), new Symbol(2)), _.pow(b.clone(), new Symbol(2))));\r\n    };\r\n    //converts to polar form array\r\n    Symbol.toPolarFormArray = function (symbol) {\r\n        var re, im, r, theta;\r\n        re = symbol.realpart();\r\n        im = symbol.imagpart();\r\n        r = Symbol.hyp(re, im);\r\n        theta = re.equals(0) ? _.parse('pi/2') : _.trig.atan(_.divide(im, re));\r\n        return [r, theta];\r\n    };\r\n    //removes parentheses\r\n    Symbol.unwrapPARENS = function (symbol) {\r\n        if(symbol.fname === '') {\r\n            var r = symbol.args[0];\r\n            r.power = r.power.multiply(symbol.power);\r\n            r.multiplier = r.multiplier.multiply(symbol.multiplier);\r\n            if(symbol.fname === '')\r\n                return Symbol.unwrapPARENS(r);\r\n            return r;\r\n        }\r\n        return symbol;\r\n    };\r\n    //quickly creates a Symbol\r\n    Symbol.create = function (value, power) {\r\n        power = power === undefined ? 1 : power;\r\n        return _.parse('(' + value + ')^(' + power + ')');\r\n    };\r\n    Symbol.prototype = {\r\n        /**\r\n         * Gets nth root accounting for rounding errors\r\n         * @param {Number} n\r\n         * @return {Number}\r\n         */\r\n        getNth: function (n) {\r\n            // First calculate the root\r\n            var root = evaluate(_.pow(_.parse(this.multiplier), _.parse(n).invert()));\r\n            // Round of any errors\r\n            var rounded = _.parse(nround(root));\r\n            // Reverse the root\r\n            var e = evaluate(_.pow(rounded, _.parse(n)));\r\n            // If the rounded root equals the original number then we're good \r\n            if(e.equals(_.parse(this.multiplier))) {\r\n                return rounded;\r\n            }\r\n            // Otherwise return the unrounded version\r\n            return root;\r\n        },\r\n        /**\r\n         * Checks if symbol is to the nth power\r\n         * @returns {Boolean}\r\n         */\r\n        isToNth: function (n) {\r\n            // Start by check in the multiplier for squareness\r\n            // First get the root but round it because currently we still depend \r\n            var root = this.getNth(n);\r\n            var nthMultiplier = isInt(root);\r\n            var nthPower;\r\n\r\n            if(this.group === CB) {\r\n                // Start by assuming that all will be square.\r\n                nthPower = true;\r\n                // All it takes is for one of the symbols to not have an even power\r\n                // e.g. x^n1*y^n2 requires that both n1 and n2 are even\r\n                this.each(function (x) {\r\n                    var isNth = x.isToNth(n);\r\n\r\n                    if(!isNth) {\r\n                        nthPower = false;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                // Check if the power is divisible by n if it's not a number.\r\n                nthPower = this.group === N ? true : isInt(_.divide(_.parse(this.power), _.parse(n)));\r\n            }\r\n\r\n            return nthMultiplier && nthPower;\r\n        },\r\n        /**\r\n         * Checks if a symbol is square\r\n         * @return {Boolean}\r\n         */\r\n        isSquare: function () {\r\n            return this.isToNth(2);\r\n        },\r\n        /**\r\n         * Checks if a symbol is cube\r\n         * @return {Boolean}\r\n         */\r\n        isCube: function () {\r\n            return this.isToNth(3);\r\n        },\r\n        /**\r\n         * Checks if a symbol is a bare variable\r\n         * @return {Boolean}\r\n         */\r\n        isSimple: function () {\r\n            return this.power.equals(1) && this.multiplier.equals(1);\r\n        },\r\n        /**\r\n         * Simplifies the power of the symbol\r\n         * @returns {Symbol} a clone of the symbol\r\n         */\r\n        powSimp: function () {\r\n            if(this.group === CB) {\r\n                var powers = [],\r\n                        sign = this.multiplier.sign();\r\n                this.each(function (x) {\r\n                    var p = x.power;\r\n                    //why waste time if I can't do anything anyway\r\n                    if(isSymbol(p) || p.equals(1))\r\n                        return this.clone();\r\n                    powers.push(p);\r\n                });\r\n                var min = new Frac(arrayMin(powers));\r\n\r\n                //handle the coefficient\r\n                //handle the multiplier\r\n                var sign = this.multiplier.sign(),\r\n                        m = this.multiplier.clone().abs(),\r\n                        mfactors = Math2.ifactor(m);\r\n                //if we have a multiplier of 6750 and a min of 2 then the factors are 5^3*5^3*2\r\n                //we can then reduce it to 2*3*5*(15)^2\r\n                var out_ = new Frac(1);\r\n                var in_ = new Frac(1);\r\n\r\n                for(var x in mfactors) {\r\n                    var n = new Frac(mfactors[x]);\r\n                    if(!n.lessThan(min)) {\r\n                        n = n.divide(min).subtract(new Frac(1));\r\n                        in_ = in_.multiply(new Frac(x)); //move the factor inside the bracket\r\n                    }\r\n\r\n                    out_ = out_.multiply(_.parse(inBrackets(x) + '^' + inBrackets(n)).multiplier);\r\n                }\r\n                var t = new Symbol(in_);\r\n                this.each(function (x) {\r\n                    x = x.clone();\r\n                    x.power = x.power.divide(min);\r\n                    t = _.multiply(t, x);\r\n                });\r\n\r\n                var xt = _.symfunction(PARENTHESIS, [t]);\r\n                xt.power = min;\r\n                xt.multiplier = sign < 0 ? out_.negate() : out_;\r\n\r\n                return xt;\r\n            }\r\n            return this.clone();\r\n        },\r\n        /**\r\n         * Checks to see if two functions are of equal value\r\n         * @param {Symbol} symbol\r\n         */\r\n        equals: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.value === symbol.value && this.power.equals(symbol.power)\r\n                    && this.multiplier.equals(symbol.multiplier)\r\n                    && this.group === symbol.group;\r\n        },\r\n        abs: function () {\r\n            var e = this.clone();\r\n            e.multiplier.abs();\r\n            return e;\r\n        },\r\n        // Greater than\r\n        gt: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\r\n        },\r\n        // Greater than\r\n        gte: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.equals(symbol) ||\r\n                    this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\r\n        },\r\n        // Less than\r\n        lt: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\r\n        },\r\n        // Less than\r\n        lte: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.equals(symbol) ||\r\n                    this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\r\n        },\r\n        /**\r\n         * Because nerdamer doesn't group symbols by polynomials but\r\n         * rather a custom grouping method, this has to be\r\n         * reinserted in order to make use of most algorithms. This function\r\n         * checks if the symbol meets the criteria of a polynomial.\r\n         * @param {bool} multivariate\r\n         * @returns {boolean}\r\n         */\r\n        isPoly: function (multivariate) {\r\n            var g = this.group,\r\n                    p = this.power;\r\n            //the power must be a integer so fail if it's not\r\n            if(!isInt(p) || p < 0)\r\n                return false;\r\n            //constants and first orders\r\n            if(g === N || g === S || this.isConstant(true))\r\n                return true;\r\n            var vars = variables(this);\r\n            if(g === CB && vars.length === 1) {\r\n                //the variable is assumed the only one that was found\r\n                var v = vars[0];\r\n                //if no variable then guess what!?!? We're done!!! We have a polynomial.\r\n                if(!v)\r\n                    return true;\r\n                for(var x in this.symbols) {\r\n                    var sym = this.symbols[x];\r\n                    //sqrt(x)\r\n                    if(sym.group === FN && !sym.args[0].isConstant())\r\n                        return false;\r\n                    if(!sym.contains(v) && !sym.isConstant(true))\r\n                        return false;\r\n                }\r\n                return true;\r\n            }\r\n            //PL groups. These only fail if a power is not an int\r\n            //this should handle cases such as x^2*t\r\n            if(this.isComposite() || g === CB && multivariate) {\r\n                //fail if we're not checking for multivariate polynomials\r\n                if(!multivariate && vars.length > 1)\r\n                    return false;\r\n                //loop though the symbols and check if they qualify\r\n                for(var x in this.symbols) {\r\n                    //we've already the symbols if we're not checking for multivariates at this point\r\n                    //so we check the sub-symbols\r\n                    if(!this.symbols[x].isPoly(multivariate))\r\n                        return false;\r\n                }\r\n                return true;\r\n            }\r\n            else\r\n                return false;\r\n\r\n            /*\r\n             //all tests must have passed so we must be dealing with a polynomial\r\n             return true;\r\n             */\r\n        },\r\n        //removes the requested variable from the symbol and returns the remainder\r\n        stripVar: function (x, exclude_x) {\r\n            var retval;\r\n            if((this.group === PL || this.group === S) && this.value === x)\r\n                retval = new Symbol(exclude_x ? 0 : this.multiplier);\r\n            else if(this.group === CB && this.isLinear()) {\r\n                retval = new Symbol(1);\r\n                this.each(function (s) {\r\n                    if(!s.contains(x, true))\r\n                        retval = _.multiply(retval, s.clone());\r\n                });\r\n                retval.multiplier = retval.multiplier.multiply(this.multiplier);\r\n            }\r\n            else if(this.group === CP && !this.isLinear()) {\r\n                retval = new Symbol(this.multiplier);\r\n            }\r\n            else if(this.group === CP && this.isLinear()) {\r\n                retval = new Symbol(0);\r\n                this.each(function (s) {\r\n                    if(!s.contains(x)) {\r\n                        var t = s.clone();\r\n                        t.multiplier = t.multiplier.multiply(this.multiplier);\r\n                        retval = _.add(retval, t);\r\n                    }\r\n                });\r\n                //BIG TODO!!! It doesn't make much sense\r\n                if(retval.equals(0))\r\n                    retval = new Symbol(this.multiplier);\r\n            }\r\n            else if(this.group === EX && this.power.contains(x, true)) {\r\n                retval = new Symbol(this.multiplier);\r\n            }\r\n            else if(this.group === FN && this.contains(x)) {\r\n                retval = new Symbol(this.multiplier);\r\n            }\r\n            else\r\n                //wth? This should technically be the multiplier.\r\n                //Unfortunately this method wasn't very well thought out :`(.\r\n                //should be: retval = new Symbol(this.multiplier);\r\n                //use: ((1+x^2)*sqrt(-1+x^2))^(-1) for correction.\r\n                //this will break a bunch of unit tests so be ready to for the long haul\r\n                retval = this.clone();\r\n\r\n\r\n            return retval;\r\n        },\r\n        //returns symbol in array form with x as base e.g. a*x^2+b*x+c = [c, b, a].\r\n        toArray: function (v, arr) {\r\n            arr = arr || {\r\n                arr: [],\r\n                add: function (x, idx) {\r\n                    var e = this.arr[idx];\r\n                    this.arr[idx] = e ? _.add(e, x) : x;\r\n                }\r\n            };\r\n            var g = this.group;\r\n\r\n            if(g === S && this.contains(v)) {\r\n                arr.add(new Symbol(this.multiplier), this.power);\r\n            }\r\n            else if(g === CB) {\r\n                var a = this.stripVar(v),\r\n                        x = _.divide(this.clone(), a.clone());\r\n                var p = x.isConstant() ? 0 : x.power;\r\n                arr.add(a, p);\r\n            }\r\n            else if(g === PL && this.value === v) {\r\n                this.each(function (x, p) {\r\n                    arr.add(x.stripVar(v), p);\r\n                });\r\n            }\r\n            else if(g === CP) {\r\n                //the logic: they'll be broken into symbols so e.g. (x^2+x)+1 or (a*x^2+b*x+c)\r\n                //each case is handled above\r\n                this.each(function (x) {\r\n                    x.toArray(v, arr);\r\n                });\r\n            }\r\n            else if(this.contains(v)) {\r\n                throw new NerdamerTypeError('Cannot convert to array! Exiting');\r\n            }\r\n            else {\r\n                arr.add(this.clone(), 0); //it's just a constant wrt to v\r\n            }\r\n            //fill the holes\r\n            arr = arr.arr; //keep only the array since we don't need the object anymore\r\n            for(var i = 0; i < arr.length; i++)\r\n                if(!arr[i])\r\n                    arr[i] = new Symbol(0);\r\n            return arr;\r\n        },\r\n        //checks to see if a symbol contans a function\r\n        hasFunc: function (v) {\r\n            var fn_group = this.group === FN || this.group === EX;\r\n            if(fn_group && !v || fn_group && this.contains(v))\r\n                return true;\r\n            if(this.symbols) {\r\n                for(var x in this.symbols) {\r\n                    if(this.symbols[x].hasFunc(v))\r\n                        return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        sub: function (a, b) {\r\n            a = !isSymbol(a) ? _.parse(a) : a.clone();\r\n            b = !isSymbol(b) ? _.parse(b) : b.clone();\r\n            if(a.group === N || a.group === P)\r\n                err('Cannot substitute a number. Must be a variable');\r\n            var same_pow = false,\r\n                    a_is_unit_multiplier = a.multiplier.equals(1),\r\n                    m = this.multiplier.clone(),\r\n                    retval;\r\n            /*\r\n             * In order to make the substitution the bases have to first match take\r\n             * (x+1)^x -> (x+1)=y || x^2 -> x=y^6\r\n             * In both cases the first condition is that the bases match so we begin there\r\n             * Either both are PL or both are not PL but we cannot have PL and a non-PL group match\r\n             */\r\n            if(this.value === a.value && (this.group !== PL && a.group !== PL || this.group === PL && a.group === PL)) {\r\n                //we cleared the first hurdle but a subsitution may not be possible just yet\r\n                if(a_is_unit_multiplier || a.multiplier.equals(this.multiplier)) {\r\n                    if(a.isLinear()) {\r\n                        retval = b;\r\n                    }\r\n                    else if(a.power.equals(this.power)) {\r\n                        retval = b;\r\n                        same_pow = true;\r\n                    }\r\n                    if(a.multiplier.equals(this.multiplier))\r\n                        m = new Frac(1);\r\n                }\r\n            }\r\n            //the next thing is to handle CB\r\n            else if(this.group === CB || this.previousGroup === CB) {\r\n                retval = new Symbol(1);\r\n                this.each(function (x) {\r\n                    var subbed = _.parse(x.sub(a, b)); //parse it again for safety\r\n                    retval = _.multiply(retval, subbed);\r\n\r\n                });\r\n            }\r\n            else if(this.isComposite()) {\r\n                var symbol = this.clone();\r\n\r\n                if(a.isComposite() && symbol.isComposite() && symbol.isLinear() && a.isLinear()) {\r\n                    var find = function (stack, needle) {\r\n                        for(var x in stack.symbols) {\r\n                            var sym = stack.symbols[x];\r\n                            //if the symbol equals the needle or it's within the sub-symbols we're done\r\n                            if(sym.isComposite() && find(sym, needle) || sym.equals(needle))\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    };\r\n                    //go fish\r\n                    for(var x in a.symbols) {\r\n                        if(!find(symbol, a.symbols[x]))\r\n                            return symbol.clone();\r\n                    }\r\n                    retval = _.add(_.subtract(symbol.clone(), a), b);\r\n                }\r\n                else {\r\n                    retval = new Symbol(0);\r\n                    symbol.each(function (x) {\r\n                        retval = _.add(retval, x.sub(a, b));\r\n                    });\r\n                }\r\n            }\r\n            else if(this.group === EX) {\r\n                // the parsed value could be a function so parse and sub\r\n                retval = _.parse(this.value).sub(a, b);\r\n            }\r\n            else if(this.group === FN) {\r\n                var nargs = [];\r\n                for(var i = 0; i < this.args.length; i++) {\r\n                    var arg = this.args[i];\r\n                    if(!isSymbol(arg))\r\n                        arg = _.parse(arg);\r\n                    nargs.push(arg.sub(a, b));\r\n                }\r\n                retval = _.symfunction(this.fname, nargs);\r\n            }\r\n            //if we did manage a substitution\r\n            if(retval) {\r\n                if(!same_pow) {\r\n                    //substitute the power\r\n                    var p = this.group === EX ? this.power.sub(a, b) : _.parse(this.power);\r\n                    //now raise the symbol to that power\r\n                    retval = _.pow(retval, p);\r\n                }\r\n\r\n                //transfer the multiplier\r\n                retval.multiplier = retval.multiplier.multiply(m);\r\n\r\n                //done\r\n                return retval;\r\n            }\r\n            //if all else fails\r\n            return this.clone();\r\n        },\r\n        isMonomial: function () {\r\n            if(this.group === S)\r\n                return true;\r\n            if(this.group === CB) {\r\n                for(var x in this.symbols)\r\n                    if(this.symbols[x].group !== S)\r\n                        return false;\r\n            }\r\n            else\r\n                return false;\r\n            return true;\r\n        },\r\n        isPi: function () {\r\n            return this.group === S && this.value === 'pi';\r\n        },\r\n        sign: function () {\r\n            return this.multiplier.sign();\r\n        },\r\n        isE: function () {\r\n            return this.value === 'e';\r\n        },\r\n        isSQRT: function () {\r\n            return this.fname === SQRT;\r\n        },\r\n        isConstant: function (check_all, check_symbols) {\r\n            if(check_symbols && this.group === CB) {\r\n                for(var x in this.symbols) {\r\n                    if(this.symbols[x].isConstant(true))\r\n                        return true;\r\n                }\r\n            }\r\n\r\n            if(check_all === 'functions' && this.isComposite()) {\r\n                var isConstant = true;\r\n\r\n                this.each(function (x) {\r\n                    if(!x.isConstant(check_all, check_symbols)) {\r\n                        isConstant = false;\r\n                    }\r\n                }, true);\r\n\r\n                return isConstant;\r\n            }\r\n\r\n            if(check_all === 'all' && (this.isPi() || this.isE())) {\r\n                return true;\r\n            }\r\n\r\n            if(check_all && this.group === FN) {\r\n                for(var i = 0; i < this.args.length; i++) {\r\n                    if(!this.args[i].isConstant(check_all))\r\n                        return false;\r\n                }\r\n                return true;\r\n            }\r\n\r\n            if(check_all)\r\n                return isNumericSymbol(this);\r\n            return this.value === CONST_HASH;\r\n        },\r\n        //the symbols is imaginary if\r\n        //1. n*i\r\n        //2. a+b*i\r\n        //3. a*i\r\n        isImaginary: function () {\r\n            if(this.imaginary)\r\n                return true;\r\n            else if(this.symbols) {\r\n                for(var x in this.symbols)\r\n                    if(this.symbols[x].isImaginary())\r\n                        return true;\r\n            }\r\n            return false;\r\n        },\r\n        /**\r\n         * Returns the real part of a symbol\r\n         * @returns {Symbol}\r\n         */\r\n        realpart: function () {\r\n            if(this.isConstant()) {\r\n                return this.clone();\r\n            }\r\n            else if(this.imaginary)\r\n                return new Symbol(0);\r\n            else if(this.isComposite()) {\r\n                var retval = new Symbol(0);\r\n                this.each(function (x) {\r\n                    retval = _.add(retval, x.realpart());\r\n                });\r\n                return retval;\r\n            }\r\n            else if(this.isImaginary())\r\n                return new Symbol(0);\r\n            return this.clone();\r\n        },\r\n        /*\r\n         * Return imaginary part of a symbol\r\n         * @returns {Symbol}\r\n         */\r\n        imagpart: function () {\r\n            if(this.group === S && this.isImaginary())\r\n                return new Symbol(this.multiplier);\r\n            if(this.isComposite()) {\r\n                var retval = new Symbol(0);\r\n                this.each(function (x) {\r\n                    retval = _.add(retval, x.imagpart());\r\n                });\r\n                return retval;\r\n            }\r\n            if(this.group === CB)\r\n                return this.stripVar(Settings.IMAGINARY);\r\n            return new Symbol(0);\r\n        },\r\n        isInteger: function () {\r\n            return this.isConstant() && this.multiplier.isInteger();\r\n        },\r\n        isLinear: function (wrt) {\r\n            if(wrt) {\r\n                if(this.isConstant())\r\n                    return true;\r\n                if(this.group === S) {\r\n                    if(this.value === wrt)\r\n                        return this.power.equals(1);\r\n                    else\r\n                        return true;\r\n                }\r\n\r\n                if(this.isComposite() && this.power.equals(1)) {\r\n                    for(var x in this.symbols) {\r\n                        if(!this.symbols[x].isLinear(wrt))\r\n                            return false;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                if(this.group === CB && this.symbols[wrt])\r\n                    return this.symbols[wrt].isLinear(wrt);\r\n                return false;\r\n            }\r\n            else\r\n                return this.power.equals(1);\r\n        },\r\n        /**\r\n         * Checks to see if a symbol has a function by a specified name or within a specified list\r\n         * @param {String|String[]} names\r\n         * @returns {Boolean}\r\n         */\r\n        containsFunction: function (names) {\r\n            if(typeof names === 'string')\r\n                names = [names];\r\n            if(this.group === FN && names.indexOf(this.fname) !== -1)\r\n                return true;\r\n            if(this.symbols) {\r\n                for(var x in this.symbols) {\r\n                    if(this.symbols[x].containsFunction(names))\r\n                        return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        multiplyPower: function (p2) {\r\n            //leave out 1\r\n            if(this.group === N && this.multiplier.equals(1))\r\n                return this;\r\n\r\n            var p1 = this.power;\r\n\r\n            if(this.group !== EX && p2.group === N) {\r\n                var p = p2.multiplier;\r\n                if(this.group === N && !p.isInteger()) {\r\n                    this.convert(P);\r\n                }\r\n\r\n                this.power = p1.equals(1) ? p.clone() : p1.multiply(p);\r\n\r\n                if(this.group === P && isInt(this.power)) {\r\n                    //bring it back to an N\r\n                    this.value = Math.pow(this.value, this.power);\r\n                    this.toLinear();\r\n                    this.convert(N);\r\n                }\r\n            }\r\n            else {\r\n                if(this.group !== EX) {\r\n                    p1 = new Symbol(p1);\r\n                    this.convert(EX);\r\n                }\r\n                this.power = _.multiply(p1, p2);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        setPower: function (p, retainSign) {\r\n            //leave out 1\r\n            if(this.group === N && this.multiplier.equals(1)) {\r\n                return this;\r\n            }\r\n            if(this.group === EX && !isSymbol(p)) {\r\n                this.group = this.previousGroup;\r\n                delete this.previousGroup;\r\n                if(this.group === N) {\r\n                    this.multiplier = new Frac(this.value);\r\n                    this.value = CONST_HASH;\r\n                }\r\n                else\r\n                    this.power = p;\r\n            }\r\n            else {\r\n                var isSymbolic = false;\r\n                if(isSymbol(p)) {\r\n                    if(p.group === N) {\r\n                        //p should be the multiplier instead\r\n                        p = p.multiplier;\r\n\r\n                    }\r\n                    else {\r\n                        isSymbolic = true;\r\n                    }\r\n                }\r\n                var group = isSymbolic ? EX : P;\r\n                this.power = p;\r\n                if(this.group === N && group)\r\n                    this.convert(group, retainSign);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /**\r\n         * Checks to see if symbol is located in the denominator\r\n         * @returns {boolean}\r\n         */\r\n        isInverse: function () {\r\n            if(this.group === EX)\r\n                return (this.power.multiplier.lessThan(0));\r\n            return this.power < 0;\r\n        },\r\n        /**\r\n         * Make a duplicate of a symbol by copying a predefined list of items.\r\n         * The name 'copy' would probably be a more appropriate name.\r\n         * to a new symbol\r\n         * @param {Symbol} c\r\n         * @returns {Symbol}\r\n         */\r\n        clone: function (c) {\r\n            var clone = c || new Symbol(0),\r\n                    //list of properties excluding power as this may be a symbol and would also need to be a clone.\r\n                    properties = [\r\n                        'value', 'group', 'length', 'previousGroup', 'imaginary', 'fname', 'args', 'isInfinity', 'scientific'],\r\n                    l = properties.length, i;\r\n            if(this.symbols) {\r\n                clone.symbols = {};\r\n                for(var x in this.symbols) {\r\n                    clone.symbols[x] = this.symbols[x].clone();\r\n                }\r\n            }\r\n\r\n            for(i = 0; i < l; i++) {\r\n                if(this[properties[i]] !== undefined) {\r\n                    clone[properties[i]] = this[properties[i]];\r\n                }\r\n            }\r\n\r\n            clone.power = this.power.clone();\r\n            clone.multiplier = this.multiplier.clone();\r\n            //add back the flag to track if this symbol is a conversion symbol\r\n            if(this.isConversion)\r\n                clone.isConversion = this.isConversion;\r\n\r\n            if(this.isUnit)\r\n                clone.isUnit = this.isUnit;\r\n\r\n            return clone;\r\n        },\r\n        /**\r\n         * Converts a symbol multiplier to one.\r\n         * @param {Boolean} keepSign Keep the multiplier as negative if the multiplier is negative and keepSign is true\r\n         * @returns {Symbol}\r\n         */\r\n        toUnitMultiplier: function (keepSign) {\r\n            this.multiplier.num = new bigInt(this.multiplier.num.isNegative() && keepSign ? -1 : 1);\r\n            this.multiplier.den = new bigInt(1);\r\n            return this;\r\n        },\r\n        /**\r\n         * Converts a Symbol's power to one.\r\n         * @returns {Symbol}\r\n         */\r\n        toLinear: function () {\r\n            // Do nothing if it's already linear\r\n            if(this.power.equals(1)) {\r\n                return this;\r\n            }\r\n            this.setPower(new Frac(1));\r\n            return this;\r\n        },\r\n        /**\r\n         * Iterates over all the sub-symbols. If no sub-symbols exist then it's called on itself\r\n         * @param {Function} fn\r\n         * @@param {Boolean} deep If true it will itterate over the sub-symbols their symbols as well\r\n         */\r\n        each: function (fn, deep) {\r\n            if(!this.symbols) {\r\n                fn.call(this, this, this.value);\r\n            }\r\n            else {\r\n                for(var x in this.symbols) {\r\n                    var sym = this.symbols[x];\r\n                    if(sym.group === PL && deep) {\r\n                        for(var y in sym.symbols) {\r\n                            fn.call(x, sym.symbols[y], y);\r\n                        }\r\n                    }\r\n                    else\r\n                        fn.call(this, sym, x);\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * A numeric value to be returned for Javascript. It will try to\r\n         * return a number as far a possible but in case of a pure symbolic\r\n         * symbol it will just return its text representation\r\n         * @returns {String|Number}\r\n         */\r\n        valueOf: function () {\r\n            if(this.group === N)\r\n                return this.multiplier.valueOf();\r\n            else if(this.power === 0) {\r\n                return 1;\r\n            }\r\n            else if(this.multiplier === 0) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return text(this, 'decimals');\r\n            }\r\n        },\r\n        /**\r\n         * Checks to see if a symbols has a particular variable within it.\r\n         * Pass in true as second argument to include the power of exponentials\r\n         * which aren't check by default.\r\n         * @example var s = _.parse('x+y+z'); s.contains('y');\r\n         * //returns true\r\n         * @param {any} variable\r\n         * @param {boolean} all\r\n         * @returns {boolean}\r\n         */\r\n        contains: function (variable, all) {\r\n            //contains expects a string\r\n            variable = String(variable);\r\n            var g = this.group;\r\n            if(this.value === variable)\r\n                return true;\r\n            if(this.symbols) {\r\n                for(var x in this.symbols) {\r\n                    if(this.symbols[x].contains(variable, all))\r\n                        return true;\r\n                }\r\n            }\r\n            if(g === FN || this.previousGroup === FN) {\r\n                for(var i = 0; i < this.args.length; i++) {\r\n                    if(this.args[i].contains(variable, all))\r\n                        return true;\r\n                }\r\n            }\r\n\r\n            if(g === EX) {\r\n                //exit only if it does\r\n                if(all && this.power.contains(variable, all)) {\r\n                    return true;\r\n                }\r\n                if(this.value === variable)\r\n                    return true;\r\n\r\n            }\r\n\r\n            return this.value === variable;\r\n        },\r\n        /**\r\n         * Negates a symbols\r\n         * @returns {boolean}\r\n         */\r\n        negate: function () {\r\n            this.multiplier.negate();\r\n            if(this.group === CP || this.group === PL)\r\n                this.distributeMultiplier();\r\n            return this;\r\n        },\r\n        /**\r\n         * Inverts a symbol\r\n         * @param {boolean} power_only\r\n         * @param {boolean} all\r\n         * @returns {boolean}\r\n         */\r\n        invert: function (power_only, all) {\r\n            //invert the multiplier\r\n            if(!power_only)\r\n                this.multiplier = this.multiplier.invert();\r\n            //invert the rest\r\n            if(isSymbol(this.power)) {\r\n                this.power.negate();\r\n            }\r\n            else if(this.group === CB && all) {\r\n                this.each(function (x) {\r\n                    return x.invert();\r\n                });\r\n            }\r\n            else {\r\n                if(this.power && this.group !== N)\r\n                    this.power.negate();\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * Symbols of group CP or PL may have the multiplier being carried by\r\n         * the top level symbol at any given time e.g. 2*(x+y+z). This is\r\n         * convenient in many cases, however in some cases the multiplier needs\r\n         * to be carried individually e.g. 2*x+2*y+2*z.\r\n         * This method distributes the multiplier over the entire symbol\r\n         * @param {boolean} all\r\n         * @returns {Symbol}\r\n         */\r\n        distributeMultiplier: function (all) {\r\n            var is_one = all ? this.power.absEquals(1) : this.power.equals(1);\r\n            if(this.symbols && is_one && this.group !== CB && !this.multiplier.equals(1)) {\r\n                for(var x in this.symbols) {\r\n                    var s = this.symbols[x];\r\n                    s.multiplier = s.multiplier.multiply(this.multiplier);\r\n                    s.distributeMultiplier();\r\n                }\r\n                this.toUnitMultiplier();\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /**\r\n         * This method expands the exponent over the entire symbol just like\r\n         * distributeMultiplier\r\n         * @returns {Symbol}\r\n         */\r\n        distributeExponent: function () {\r\n            if(!this.power.equals(1)) {\r\n                var p = this.power;\r\n                for(var x in this.symbols) {\r\n                    var s = this.symbols[x];\r\n                    if(s.group === EX) {\r\n                        s.power = _.multiply(s.power, new Symbol(p));\r\n                    }\r\n                    else {\r\n                        this.symbols[x].power = this.symbols[x].power.multiply(p);\r\n                    }\r\n                }\r\n                this.toLinear();\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * This method will attempt to up-convert or down-convert one symbol\r\n         * from one group to another. Not all symbols are convertible from one\r\n         * group to another however. In that case the symbol will remain\r\n         * unchanged.\r\n         * @param {int} group\r\n         * @param {string} imaginary\r\n         */\r\n        convert: function (group, imaginary) {\r\n            if(group > FN) {\r\n                //make a clone of this symbol;\r\n                var cp = this.clone();\r\n\r\n                //attach a symbols object and upgrade the group\r\n                this.symbols = {};\r\n\r\n                if(group === CB) {\r\n                    //symbol of group CB hold symbols bound together through multiplication\r\n                    //because of commutativity this multiplier can technically be anywhere within the group\r\n                    //to keep track of it however it's easier to always have the top level carry it\r\n                    cp.toUnitMultiplier();\r\n                }\r\n                else {\r\n                    //reset the symbol\r\n                    this.toUnitMultiplier();\r\n                }\r\n\r\n                if(this.group === FN) {\r\n                    cp.args = this.args;\r\n                    delete this.args;\r\n                    delete this.fname;\r\n                }\r\n\r\n                //the symbol may originate from the symbol i but this property no longer holds true\r\n                //after copying\r\n                if(this.isImgSymbol)\r\n                    delete this.isImgSymbol;\r\n\r\n                this.toLinear();\r\n                //attach a clone of this symbol to the symbols object using its proper key\r\n                this.symbols[cp.keyForGroup(group)] = cp;\r\n                this.group = group;\r\n                //objects by default don't have a length property. However, in order to keep track of the number\r\n                //of sub-symbols we have to impliment our own.\r\n                this.length = 1;\r\n            }\r\n            else if(group === EX) {\r\n                //1^x is just one so check and make sure\r\n                if(!(this.group === N && this.multiplier.equals(1))) {\r\n                    if(this.group !== EX)\r\n                        this.previousGroup = this.group;\r\n                    if(this.group === N) {\r\n                        this.value = this.multiplier.num.toString();\r\n                        this.toUnitMultiplier();\r\n                    }\r\n                    //update the hash to reflect the accurate hash\r\n                    else\r\n                        this.value = text(this, 'hash');\r\n\r\n                    this.group = EX;\r\n                }\r\n            }\r\n            else if(group === N) {\r\n                var m = this.multiplier.toDecimal();\r\n                if(this.symbols)\r\n                    this.symbols = undefined;\r\n                new Symbol(this.group === P ? m * Math.pow(this.value, this.power) : m).clone(this);\r\n            }\r\n            else if(group === P && this.group === N) {\r\n                this.value = imaginary ? this.multiplier.num.toString() : Math.abs(this.multiplier.num.toString());\r\n                this.toUnitMultiplier(!imaginary);\r\n                this.group = P;\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * This method is one of the principal methods to make it all possible.\r\n         * It performs cleanup and prep operations whenever a symbols is\r\n         * inserted. If the symbols results in a 1 in a CB (multiplication)\r\n         * group for instance it will remove the redundant symbol. Similarly\r\n         * in a symbol of group PL or CP (symbols glued by multiplication) it\r\n         * will remove any dangling zeroes from the symbol. It will also\r\n         * up-convert or down-convert a symbol if it detects that it's\r\n         * incorrectly grouped. It should be noted that this method is not\r\n         * called directly but rather by the 'attach' method for addition groups\r\n         * and the 'combine' method for multiplication groups.\r\n         * @param {Symbol} symbol\r\n         * @param {String} action\r\n         */\r\n        insert: function (symbol, action) {\r\n            //this check can be removed but saves a lot of aggravation when trying to hunt down\r\n            //a bug. If left, you will instantly know that the error can only be between 2 symbols.\r\n            if(!isSymbol(symbol))\r\n                err('Object ' + symbol + ' is not of type Symbol!');\r\n            if(this.symbols) {\r\n                var group = this.group;\r\n                if(group > FN) {\r\n                    var key = symbol.keyForGroup(group);\r\n                    var existing = key in this.symbols ? this.symbols[key] : false; //check if there's already a symbol there\r\n                    if(action === 'add') {\r\n                        var hash = key;\r\n                        if(existing) {\r\n                            //add them together using the parser\r\n                            this.symbols[hash] = _.add(existing, symbol);\r\n                            //if the addition resulted in a zero multiplier remove it\r\n                            if(this.symbols[hash].multiplier.equals(0)) {\r\n                                delete this.symbols[hash];\r\n                                this.length--;\r\n\r\n                                if(this.length === 0) {\r\n                                    this.convert(N);\r\n                                    this.multiplier = new Frac(0);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            this.symbols[key] = symbol;\r\n                            this.length++;\r\n                        }\r\n                    }\r\n                    else {\r\n                        //check if this is of group P and unwrap before inserting\r\n                        if(symbol.group === P && isInt(symbol.power)) {\r\n                            symbol.convert(N);\r\n                        }\r\n\r\n                        //transfer the multiplier to the upper symbol but only if the symbol numeric\r\n                        if(symbol.group !== EX) {\r\n                            this.multiplier = this.multiplier.multiply(symbol.multiplier);\r\n                            symbol.toUnitMultiplier();\r\n                        }\r\n                        else {\r\n                            symbol.parens = symbol.multiplier.lessThan(0);\r\n                            this.multiplier = this.multiplier.multiply(symbol.multiplier.clone().abs());\r\n                            symbol.toUnitMultiplier(true);\r\n                        }\r\n\r\n                        if(existing) {\r\n                            //remove because the symbol may have changed\r\n                            symbol = _.multiply(remove(this.symbols, key), symbol);\r\n                            if(symbol.isConstant()) {\r\n                                this.multiplier = this.multiplier.multiply(symbol.multiplier);\r\n                                symbol = new Symbol(1); //the dirty work gets done down the line when it detects 1\r\n                            }\r\n\r\n                            this.length--;\r\n                            //clean up\r\n                        }\r\n\r\n                        //don't insert the symbol if it's 1\r\n                        if(!symbol.isOne(true)) {\r\n                            this.symbols[key] = symbol;\r\n                            this.length++;\r\n                        }\r\n                        else if(symbol.multiplier.lessThan(0)) {\r\n                            this.negate(); //put back the sign\r\n                        }\r\n                    }\r\n\r\n                    //clean up\r\n                    if(this.length === 0)\r\n                        this.convert(N);\r\n                    //update the hash\r\n                    if(this.group === CP || this.group === CB) {\r\n                        this.updateHash();\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n        //the insert method for addition\r\n        attach: function (symbol) {\r\n            if(isArray(symbol)) {\r\n                for(var i = 0; i < symbol.length; i++)\r\n                    this.insert(symbol[i], 'add');\r\n                return this;\r\n            }\r\n            return this.insert(symbol, 'add');\r\n        },\r\n        //the insert method for multiplication\r\n        combine: function (symbol) {\r\n            if(isArray(symbol)) {\r\n                for(var i = 0; i < symbol.length; i++)\r\n                    this.insert(symbol[i], 'multiply');\r\n                return this;\r\n            }\r\n            return this.insert(symbol, 'multiply');\r\n        },\r\n        /**\r\n         * This method should be called after any major \"surgery\" on a symbol.\r\n         * It updates the hash of the symbol for example if the fname of a\r\n         * function has changed it will update the hash of the symbol.\r\n         */\r\n        updateHash: function () {\r\n            if(this.group === N)\r\n                return;\r\n\r\n            if(this.group === FN) {\r\n                var contents = '',\r\n                        args = this.args,\r\n                        is_parens = this.fname === PARENTHESIS;\r\n                for(var i = 0; i < args.length; i++)\r\n                    contents += (i === 0 ? '' : ',') + text(args[i]);\r\n                var fn_name = is_parens ? '' : this.fname;\r\n                this.value = fn_name + (is_parens ? contents : inBrackets(contents));\r\n            }\r\n            else if(!(this.group === S || this.group === PL)) {\r\n                this.value = text(this, 'hash');\r\n            }\r\n        },\r\n        /**\r\n         * this function defines how every group in stored within a group of\r\n         * higher order think of it as the switchboard for the library. It\r\n         * defines the hashes for symbols.\r\n         * @param {int} group\r\n         */\r\n        keyForGroup: function (group) {\r\n            var g = this.group;\r\n            var key;\r\n\r\n            if(g === N) {\r\n                key = this.value;\r\n            }\r\n            else if(g === S || g === P) {\r\n                if(group === PL)\r\n                    key = this.power.toDecimal();\r\n                else\r\n                    key = this.value;\r\n            }\r\n            else if(g === FN) {\r\n                if(group === PL)\r\n                    key = this.power.toDecimal();\r\n                else\r\n                    key = text(this, 'hash');\r\n            }\r\n            else if(g === PL) {\r\n                //if the order is reversed then we'll assume multiplication\r\n                //TODO: possible future dilemma\r\n                if(group === CB)\r\n                    key = text(this, 'hash');\r\n                else if(group === CP) {\r\n                    if(this.power.equals(1))\r\n                        key = this.value;\r\n                    else\r\n                        key = inBrackets(text(this, 'hash')) + Settings.POWER_OPERATOR + this.power.toDecimal();\r\n                }\r\n                else if(group === PL)\r\n                    key = this.power.toString();\r\n                else\r\n                    key = this.value;\r\n                return key;\r\n            }\r\n            else if(g === CP) {\r\n                if(group === CP) {\r\n                    key = text(this, 'hash');\r\n                }\r\n                if(group === PL)\r\n                    key = this.power.toDecimal();\r\n                else\r\n                    key = this.value;\r\n            }\r\n            else if(g === CB) {\r\n                if(group === PL)\r\n                    key = this.power.toDecimal();\r\n                else\r\n                    key = text(this, 'hash');\r\n            }\r\n            else if(g === EX) {\r\n                if(group === PL)\r\n                    key = text(this.power);\r\n                else\r\n                    key = text(this, 'hash');\r\n            }\r\n\r\n            return key;\r\n        },\r\n        /**\r\n         * Symbols are typically stored in an object which works fine for most\r\n         * cases but presents a problem when the order of the symbols makes\r\n         * a difference. This function simply collects all the symbols and\r\n         * returns them as an array. If a function is supplied then that\r\n         * function is called on every symbol contained within the object.\r\n         * @param {Function} fn\r\n         * @param {Object} opt\r\n         * @param {Function} sort_fn\r\n         * @@param {Boolean} expand_symbol\r\n         * @returns {Array}\r\n         */\r\n        collectSymbols: function (fn, opt, sort_fn, expand_symbol) {\r\n            var collected = [];\r\n            if(!this.symbols)\r\n                collected.push(this);\r\n            else {\r\n                for(var x in this.symbols) {\r\n                    var symbol = this.symbols[x];\r\n                    if(expand_symbol && (symbol.group === PL || symbol.group === CP)) {\r\n                        collected = collected.concat(symbol.collectSymbols());\r\n                    }\r\n                    else\r\n                        collected.push(fn ? fn(symbol, opt) : symbol);\r\n                }\r\n            }\r\n            if(sort_fn === null)\r\n                sort_fn = undefined; //WTF Firefox? Seriously?\r\n\r\n            return collected.sort(sort_fn);//sort hopefully gives us some sort of consistency\r\n        },\r\n        /**\r\n         * Returns the latex representation of the symbol\r\n         * @param {String} option\r\n         * @returns {String}\r\n         */\r\n        latex: function (option) {\r\n            return LaTeX.latex(this, option);\r\n        },\r\n        /**\r\n         * Returns the text representation of a symbol\r\n         * @param {String} option\r\n         * @returns {String}\r\n         */\r\n        text: function (option) {\r\n            return text(this, option);\r\n        },\r\n        /**\r\n         * Checks if the function evaluates to 1. e.g. x^0 or 1 :)\r\n         * @@param {bool} abs Compares the absolute value\r\n         */\r\n        isOne: function (abs) {\r\n            var f = abs ? 'absEquals' : 'equals';\r\n            if(this.group === N)\r\n                return this.multiplier[f](1);\r\n            else\r\n                return this.power.equals(0);\r\n        },\r\n        isComposite: function () {\r\n            var g = this.group,\r\n                    pg = this.previousGroup;\r\n            return g === CP || g === PL || pg === PL || pg === CP;\r\n        },\r\n        isCombination: function () {\r\n            var g = this.group,\r\n                    pg = this.previousGroup;\r\n            return g === CB || pg === CB;\r\n        },\r\n        lessThan: function (n) {\r\n            return this.multiplier.lessThan(n);\r\n        },\r\n        greaterThan: function (n) {\r\n            if(!isSymbol(n)) {\r\n                n = new Symbol(n);\r\n            }\r\n\r\n            // We can't tell for sure if a is greater than be if they're not both numbers\r\n            if(!this.isConstant(true) || !n.isConstant(true)) {\r\n                return false;\r\n            }\r\n\r\n            return this.multiplier.greaterThan(n.multiplier);\r\n        },\r\n        /**\r\n         * Get's the denominator of the symbol if the symbol is of class CB (multiplication)\r\n         * with other classes the symbol is either the denominator or not.\r\n         * Take x^-1+x^-2. If the symbol was to be mixed such as x+x^-2 then the symbol doesn't have have an exclusive\r\n         * denominator and has to be found by looking at the actual symbols themselves.\r\n         */\r\n        getDenom: function () {\r\n            var retval, symbol;\r\n            symbol = this.clone();\r\n            //e.g. 1/(x*(x+1))\r\n            if(this.group === CB && this.power.lessThan(0))\r\n                symbol = _.expand(symbol);\r\n\r\n            //if the symbol already is the denominator... DONE!!!\r\n            if(symbol.power.lessThan(0) || symbol.group === EX && symbol.power.multiplier.lessThan(0)) {\r\n                var d = _.parse(symbol.multiplier.den);\r\n                retval = symbol.toUnitMultiplier();\r\n                retval.power.negate();\r\n                retval = _.multiply(d, retval); //put back the coeff\r\n            }\r\n            else if(symbol.group === CB) {\r\n                retval = _.parse(symbol.multiplier.den);\r\n                for(var x in symbol.symbols) {\r\n                    var s = symbol.symbols[x];\r\n                    if(s.power < 0 || s.group === EX && s.power.multiplier.lessThan(0))\r\n                        retval = _.multiply(retval, symbol.symbols[x].clone().invert());\r\n                }\r\n            }\r\n            else {\r\n                retval = _.parse(symbol.multiplier.den);\r\n            }\r\n            return retval;\r\n        },\r\n        getNum: function () {\r\n            var retval, symbol;\r\n            symbol = this.clone();\r\n            //e.g. 1/(x*(x+1))\r\n            if(symbol.group === CB && symbol.power.lessThan(0))\r\n                symbol = _.expand(symbol);\r\n            //if the symbol already is the denominator... DONE!!!\r\n            if(symbol.power.greaterThan(0) && symbol.group !== CB || symbol.group === EX && symbol.power.multiplier.greaterThan(0)) {\r\n                retval = _.multiply(_.parse(symbol.multiplier.num), symbol.toUnitMultiplier());\r\n            }\r\n            else if(symbol.group === CB) {\r\n                retval = _.parse(symbol.multiplier.num);\r\n                symbol.each(function (x) {\r\n                    if(x.power > 0 || x.group === EX && x.power.multiplier > 0) {\r\n                        retval = _.multiply(retval, x.clone());\r\n                    }\r\n                });\r\n            }\r\n//            else if(symbol.group === EX && this.previousGroup === S) {\r\n//                retval = _.multiply(_.parse(symbol.multiplier.num), symbol.toUnitMultiplier());\r\n//            }\r\n            else {\r\n                retval = _.parse(symbol.multiplier.num);\r\n            }\r\n            return retval;\r\n        },\r\n        toString: function () {\r\n            return this.text();\r\n        }\r\n    };\r\n\r\n//Parser =======================================================================\r\n    //Uses modified Shunting-yard algorithm. http://en.wikipedia.org/wiki/Shunting-yard_algorithm\r\n    function Parser() {\r\n        //Point to the local parser instead of the global one\r\n        var _ = this;\r\n        var bin = {};\r\n        var preprocessors = {names: [], actions: []};\r\n\r\n//Parser.classes ===============================================================\r\n        function Slice(upper, lower) {\r\n            this.start = upper;\r\n            this.end = lower;\r\n        }\r\n        ;\r\n        Slice.prototype.isConstant = function () {\r\n            return this.start.isConstant() && this.end.isConstant();\r\n        };\r\n        Slice.prototype.text = function () {\r\n            return text(this.start) + ':' + text(this.end);\r\n        };\r\n\r\n        /**\r\n         * Class used to collect arguments for functions\r\n         * @returns {Parser.Collection}\r\n         */\r\n        function Collection() {\r\n            this.elements = [];\r\n        }\r\n        Collection.prototype.append = function (e) {\r\n            this.elements.push(e);\r\n        };\r\n        Collection.prototype.getItems = function () {\r\n            return this.elements;\r\n        };\r\n        Collection.prototype.toString = function () {\r\n            return _.pretty_print(this.elements);\r\n        };\r\n        Collection.create = function (e) {\r\n            var collection = new Collection();\r\n            if(e)\r\n                collection.append(e);\r\n            return collection;\r\n        };\r\n\r\n        function Token(node, node_type, column) {\r\n            this.type = node_type;\r\n            this.value = node;\r\n            if(column !== undefined)\r\n                this.column = column + 1;\r\n            if(node_type === Token.OPERATOR) {\r\n                //copy everything over from the operator\r\n                var operator = operators[node];\r\n                for(var x in operator)\r\n                    this[x] = operator[x];\r\n\r\n            }\r\n            else if(node_type === Token.FUNCTION) {\r\n                this.precedence = Token.MAX_PRECEDENCE; //leave enough roon\r\n                this.leftAssoc = false;\r\n            }\r\n        }\r\n        Token.prototype.toString = function () {\r\n            return this.value;\r\n        };\r\n        Token.prototype.toString = function () {\r\n            if(this.is_prefix)\r\n                return '`' + this.value;\r\n            return this.value;\r\n        };\r\n        //some constants\r\n        Token.OPERATOR = 'OPERATOR';\r\n        Token.VARIABLE_OR_LITERAL = 'VARIABLE_OR_LITERAL';\r\n        Token.FUNCTION = 'FUNCTION';\r\n        Token.UNIT = 'UNIT';\r\n        Token.KEYWORD = 'KEYWORD';\r\n        Token.MAX_PRECEDENCE = 999;\r\n        //create link to classes\r\n        this.classes = {\r\n            Collection: Collection,\r\n            Slice: Slice,\r\n            Token: Token\r\n        };\r\n//Parser.modules ===============================================================\r\n        //object for functions which handle complex number\r\n        var complex = {\r\n            prec: undefined,\r\n            cos: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.cos(r) * Math.cosh(i));\r\n                im = _.parse(Math.sin(r) * Math.sinh(i));\r\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sin: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sin(r) * Math.cosh(i));\r\n                im = _.parse(Math.cos(r) * Math.sinh(i));\r\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            tan: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sin(2 * r) / (Math.cos(2 * r) + Math.cosh(2 * i)));\r\n                im = _.parse(Math.sinh(2 * i) / (Math.cos(2 * r) + Math.cosh(2 * i)));\r\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sec: function (r, i) {\r\n                var t = this.removeDen(this.cos(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            csc: function (r, i) {\r\n                var t = this.removeDen(this.sin(r, i));\r\n                return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            cot: function (r, i) {\r\n                var t = this.removeDen(this.tan(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            acos: function (r, i) {\r\n                var symbol, sq, a, b, c, squared;\r\n                symbol = this.fromArray([r, i]);\r\n                squared = _.pow(symbol.clone(), new Symbol(2));\r\n                sq = _.expand(squared); //z*z\r\n                a = _.multiply(sqrt(_.subtract(new Symbol(1), sq)), Symbol.imaginary());\r\n                b = _.expand(_.add(symbol.clone(), a));\r\n                c = log(b);\r\n                return _.expand(_.multiply(Symbol.imaginary().negate(), c));\r\n            },\r\n            asin: function (r, i) {\r\n                return _.subtract(_.parse('pi/2'), this.acos(r, i));\r\n            },\r\n            atan: function (r, i) {\r\n                // Handle i and -i\r\n                if(r.equals(0) && (i.equals(1) || i.equals(-1))) {\r\n                    // Just copy Wolfram Alpha for now. The parenthesis \r\n                    return _.parse(`${Symbol.infinity()}*${Settings.IMAGINARY}*${i}`);\r\n                }\r\n                var a, b, c, symbol;\r\n                symbol = complex.fromArray([r, i]);\r\n                a = _.expand(_.multiply(Symbol.imaginary(), symbol.clone()));\r\n                b = log(_.expand(_.subtract(new Symbol(1), a.clone())));\r\n                c = log(_.expand(_.add(new Symbol(1), a.clone())));\r\n                return _.expand(_.multiply(_.divide(Symbol.imaginary(), new Symbol(2)), _.subtract(b, c)));\r\n            },\r\n            asec: function (r, i) {\r\n                var d = this.removeDen([r, i]);\r\n                d[1].negate();\r\n                return this.acos.apply(this, d);\r\n            },\r\n            acsc: function (r, i) {\r\n                var d = this.removeDen([r, i]);\r\n                d[1].negate();\r\n                return this.asin.apply(this, d);\r\n            },\r\n            acot: function (r, i) {\r\n                var d = this.removeDen([r, i]);\r\n                d[1].negate();\r\n                return this.atan.apply(this, d);\r\n            },\r\n            //Hyperbolic trig\r\n            cosh: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.cosh(r) * Math.cos(i));\r\n                im = _.parse(Math.sinh(r) * Math.sin(i));\r\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sinh: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sinh(r) * Math.cos(i));\r\n                im = _.parse(Math.cosh(r) * Math.sin(i));\r\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            tanh: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sinh(2 * r) / (Math.cos(2 * i) + Math.cosh(2 * r)));\r\n                im = _.parse(Math.sin(2 * i) / (Math.cos(2 * i) + Math.cosh(2 * r)));\r\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sech: function (r, i) {\r\n                var t = this.removeDen(this.cosh(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            csch: function (r, i) {\r\n                var t = this.removeDen(this.sinh(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            coth: function (r, i) {\r\n                var t = this.removeDen(this.tanh(r, i));\r\n                return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            acosh: function (r, i) {\r\n                var a, b, z;\r\n                z = this.fromArray([r, i]);\r\n                a = sqrt(_.add(z.clone(), new Symbol(1)));\r\n                b = sqrt(_.subtract(z.clone(), new Symbol(1)));\r\n                return _.expand(log(_.add(z, _.expand(_.multiply(a, b)))));\r\n            },\r\n            asinh: function (r, i) {\r\n                var a, z;\r\n                z = this.fromArray([r, i]);\r\n                a = sqrt(_.add(new Symbol(1), _.expand(_.pow(z.clone(), new Symbol(2)))));\r\n                return _.expand(log(_.add(z, a)));\r\n            },\r\n            atanh: function (r, i) {\r\n                var a, b, z;\r\n                z = this.fromArray([r, i]);\r\n                a = log(_.add(z.clone(), new Symbol(1)));\r\n                b = log(_.subtract(new Symbol(1), z));\r\n                return _.expand(_.divide(_.subtract(a, b), new Symbol(2)));\r\n            },\r\n            asech: function (r, i) {\r\n                var t = this.removeDen([r, i]);\r\n                t[1].negate();\r\n                return this.acosh.apply(this, t);\r\n            },\r\n            acsch: function (r, i) {\r\n                var t = this.removeDen([r, i]);\r\n                t[1].negate();\r\n                return this.asinh.apply(this, t);\r\n            },\r\n            acoth: function (r, i) {\r\n                var t = this.removeDen([r, i]);\r\n                t[1].negate();\r\n                return this.atanh.apply(this, t);\r\n            },\r\n            sqrt: function (symbol) {\r\n                var re, im, h, a, d;\r\n                re = symbol.realpart();\r\n                im = symbol.imagpart();\r\n                h = Symbol.hyp(re, im);\r\n                a = _.add(re.clone(), h);\r\n                d = sqrt(_.multiply(new Symbol(2), a.clone()));\r\n                return _.add(_.divide(a.clone(), d.clone()), _.multiply(_.divide(im, d), Symbol.imaginary()));\r\n            },\r\n            log: function (r, i) {\r\n                var re, im, phi;\r\n                re = log(Symbol.hyp(r, i));\r\n                phi = Settings.USE_BIG ? Symbol(bigDec.atan2(i.multiplier.toDecimal(), r.multiplier.toDecimal())) : Math.atan2(i, r);\r\n                im = _.parse(phi);\r\n                return _.add(re, _.multiply(Symbol.imaginary(), im));\r\n            },\r\n            erf(symbol, n) {\r\n                //Do nothing for now. Revisit this in the future.\r\n                return _.symfunction('erf', [symbol]);\r\n\r\n                n = n || 30;\r\n\r\n                var f = function (R, I) {\r\n                    return block('PARSE2NUMBER', function () {\r\n                        var retval = new Symbol(0);\r\n                        for(var i = 0; i < n; i++) {\r\n                            var a, b;\r\n                            a = _.parse(bigDec.exp(bigDec(i).toPower(2).neg().dividedBy(bigDec(n).pow(2).plus(bigDec(R).toPower(2).times(4)))));\r\n                            b = _.parse(format('2*({1})-e^(-(2*{0}*{1}*{2}))*(2*{1}*cosh({2}*{3})-{0}*{3}*sinh({3}*{2}))', Settings.IMAGINARY, R, I, i));\r\n                            retval = _.add(retval, _.multiply(a, b));\r\n                        }\r\n                        return _.multiply(retval, new Symbol(2));\r\n                    }, true);\r\n                };\r\n                var re, im, a, b, c, k;\r\n                re = symbol.realpart();\r\n                im = symbol.imagpart();\r\n\r\n                k = _.parse(format('(e^(-{0}^2))/pi', re));\r\n                a = _.parse(format('(1-e^(-(2*{0}*{1}*{2})))/(2*{1})', Settings.IMAGINARY, re, im));\r\n                b = f(re.toString(), im.toString());\r\n\r\n                return _.add(_.parse(Math2.erf(re.toString())), _.multiply(k, _.add(a, b)));\r\n            },\r\n            removeDen: function (symbol) {\r\n                var den, r, i, re, im;\r\n                if(isArray(symbol)) {\r\n                    r = symbol[0];\r\n                    i = symbol[1];\r\n                }\r\n                else {\r\n                    r = symbol.realpart();\r\n                    i = symbol.imagpart();\r\n                }\r\n\r\n                den = Math.pow(r, 2) + Math.pow(i, 2);\r\n                re = _.parse(r / den);\r\n                im = _.parse(i / den);\r\n                return [re, im];\r\n            },\r\n            fromArray: function (arr) {\r\n                return _.add(arr[0], _.multiply(Symbol.imaginary(), arr[1]));\r\n            },\r\n            evaluate: function (symbol, f) {\r\n                var re, im, sign;\r\n\r\n                sign = symbol.power.sign();\r\n                //remove it from under the denominator\r\n                symbol.power = symbol.power.abs();\r\n                //expand\r\n                if(symbol.power.greaterThan(1))\r\n                    symbol = _.expand(symbol);\r\n                //remove the denominator\r\n                if(sign < 0) {\r\n                    var d = this.removeDen(symbol);\r\n                    re = d[0];\r\n                    im = d[1];\r\n                }\r\n                else {\r\n                    re = symbol.realpart();\r\n                    im = symbol.imagpart();\r\n                }\r\n\r\n                if(re.isConstant('all') && im.isConstant('all'))\r\n                    return this[f].call(this, re, im);\r\n\r\n                return _.symfunction(f, [symbol]);\r\n            }\r\n        };\r\n        //object for functions which handle trig\r\n        var trig = this.trig = {\r\n            //container for trigonometric function\r\n            cos: function (symbol) {\r\n                if(symbol.equals('pi') && symbol.multiplier.den.equals(2))\r\n                    return new Symbol(0);\r\n\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.equals(new Symbol(Settings.PI / 2)))\r\n                        return new Symbol(0);\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.cos(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.cos(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'cos');\r\n                    }\r\n                }\r\n                if(symbol.equals(0))\r\n                    return new Symbol(1);\r\n\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        m = symbol.multiplier.abs();\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return for 1 or -1 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval = new Symbol(even(m) ? 1 : -1);\r\n                    }\r\n                    else {\r\n                        var n = Number(m.num), d = Number(m.den);\r\n                        if(d === 2)\r\n                            retval = new Symbol(0);\r\n                        else if(d === 3) {\r\n                            retval = _.parse('1/2');\r\n                            c = true;\r\n                        }\r\n                        else if(d === 4) {\r\n                            retval = _.parse('1/sqrt(2)');\r\n                            c = true;\r\n                        }\r\n                        else if(d === 6) {\r\n                            retval = _.parse('sqrt(3)/2');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.symfunction('cos', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(c && (q === 2 || q === 3))\r\n                    retval.negate();\r\n\r\n                if(!retval)\r\n                    retval = _.symfunction('cos', [symbol]);\r\n\r\n                return retval;\r\n            },\r\n            sin: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        if(symbol % Math.PI === 0) {\r\n                            return new Symbol(0);\r\n                        }\r\n\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.sin(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.sin(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'sin');\r\n                }\r\n\r\n                if(symbol.equals(0))\r\n                    return new Symbol(0);\r\n\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        sign = symbol.multiplier.sign(),\r\n                        m = symbol.multiplier.abs();\r\n                symbol.multiplier = m;\r\n                if(symbol.equals('pi'))\r\n                    retval = new Symbol(0);\r\n                else if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return for 0 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval = new Symbol(0);\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2) {\r\n                            retval = new Symbol(1);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 3) {\r\n                            retval = _.parse('sqrt(3)/2');\r\n                            c = true\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = _.parse('1/sqrt(2)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('1/2');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.multiply(new Symbol(sign), _.symfunction('sin', [symbol]));\r\n                    }\r\n                }\r\n\r\n                if(!retval)\r\n                    retval = _.multiply(new Symbol(sign), _.symfunction('sin', [symbol]));\r\n\r\n                if(c && (q === 3 || q === 4))\r\n                    retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            tan: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol % Math.PI === 0 && symbol.isLinear()) {\r\n                        return new Symbol(0);\r\n                    }\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.tan(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.tan(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'tan');\r\n                }\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        m = symbol.multiplier;\r\n\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return 0 for all multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval = new Symbol(0);\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2)\r\n                            throw new UndefinedError('tan is undefined for ' + symbol.toString());\r\n                        else if(d == 3) {\r\n                            retval = _.parse('sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = new Symbol(1);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('1/sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.symfunction('tan', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(!retval)\r\n                    retval = _.symfunction('tan', [symbol]);\r\n\r\n                if(c && (q === 2 || q === 4))\r\n                    retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            sec: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(new bigDec(1).dividedBy(bigDec.cos(symbol.multiplier.toDecimal())));\r\n                        }\r\n\r\n                        return new Symbol(Math2.sec(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'sec');\r\n                    return _.parse(format('1/cos({0})', symbol));\r\n                }\r\n\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        m = symbol.multiplier.abs();\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return for 1 or -1 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval = new Symbol(even(m) ? 1 : -1);\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2)\r\n                            throw new UndefinedError('sec is undefined for ' + symbol.toString());\r\n                        else if(d == 3) {\r\n                            retval = new Symbol(2);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = _.parse('sqrt(2)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('2/sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.symfunction('sec', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(c && (q === 2 || q === 3))\r\n                    retval.negate();\r\n\r\n                if(!retval)\r\n                    retval = _.symfunction('sec', [symbol]);\r\n\r\n                return retval;\r\n            },\r\n            csc: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(new bigDec(1).dividedBy(bigDec.sin(symbol.multiplier.toDecimal())));\r\n                        }\r\n\r\n                        return new Symbol(Math2.csc(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'csc');\r\n                    return _.parse(format('1/sin({0})', symbol));\r\n                }\r\n\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        sign = symbol.multiplier.sign(),\r\n                        m = symbol.multiplier.abs();\r\n\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return for 0 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        throw new UndefinedError('csc is undefined for ' + symbol.toString());\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2) {\r\n                            retval = new Symbol(1);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 3) {\r\n                            retval = _.parse('2/sqrt(3)');\r\n                            c = true\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = _.parse('sqrt(2)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = new Symbol(2);\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.multiply(new Symbol(sign), _.symfunction('csc', [symbol]));\r\n                    }\r\n                }\r\n\r\n                if(!retval)\r\n                    retval = _.multiply(new Symbol(sign), _.symfunction('csc', [symbol]));\r\n\r\n                if(c && (q === 3 || q === 4))\r\n                    retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            cot: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol % (Math.PI/2) === 0) {\r\n                        return new Symbol(0);\r\n                    }\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(new bigDec(1).dividedBy(bigDec.tan(symbol.multiplier.toDecimal())));\r\n                        }\r\n\r\n                        return new Symbol(Math2.cot(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'cot');\r\n                    return _.parse(format('1/tan({0})', symbol));\r\n                }\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        m = symbol.multiplier;\r\n\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return 0 for all multiples of pi\r\n                    if(isInt(m)) {\r\n                        throw new UndefinedError('cot is undefined for ' + symbol.toString());\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2)\r\n                            retval = new Symbol(0);\r\n                        else if(d == 3) {\r\n                            retval = _.parse('1/sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = new Symbol(1);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.symfunction('cot', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(!retval)\r\n                    retval = _.symfunction('cot', [symbol]);\r\n\r\n                if(c && (q === 2 || q === 4))\r\n                    retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            acos: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        // Handle values in the complex domain\r\n                        if(symbol.gt(1) || symbol.lt(-1)) {\r\n                            var x = symbol.toString();\r\n                            return expand(evaluate(`pi/2-asin(${x})`));\r\n                        }\r\n                        // Handle big numbers\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.acos(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.acos(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'acos');\r\n                }\r\n                return _.symfunction('acos', arguments);\r\n            },\r\n            asin: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        // Handle values in the complex domain\r\n                        if(symbol.gt(1) || symbol.lt(-1)) {\r\n                            var i = Settings.IMAGINARY;\r\n                            var x = symbol.multiplier.toDecimal();\r\n                            return expand(evaluate(`${i}*log(sqrt(1-${x}^2)-${i}*${x})`));\r\n                        }\r\n                        // Handle big numbers\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.asin(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.asin(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'asin');\r\n                }\r\n                return _.symfunction('asin', arguments);\r\n            },\r\n            atan: function (symbol) {\r\n                var retval;\r\n                if(symbol.equals(0))\r\n                    retval = new Symbol(0);\r\n                else if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        // Handle big numbers\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.atan(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.atan(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'atan');\r\n                    return _.symfunction('atan', arguments);\r\n                }\r\n                else if(symbol.equals(-1))\r\n                    retval = _.parse('-pi/4');\r\n                else\r\n                    retval = _.symfunction('atan', arguments);\r\n                return retval;\r\n            },\r\n            asec: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.equals(0)) {\r\n                        throw new OutOfFunctionDomainError('Input is out of the domain of sec!');\r\n                    }\r\n                    if(symbol.isConstant()) {\r\n                        return trig.acos(symbol.invert());\r\n                    }\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'asec');\r\n                    }\r\n                }\r\n                return _.symfunction('asec', arguments);\r\n            },\r\n            acsc: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        return trig.asin(symbol.invert());\r\n                    }\r\n\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'acsc');\r\n                }\r\n                return _.symfunction('acsc', arguments);\r\n            },\r\n            acot: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        return new _.add(_.parse('pi/2'), trig.atan(symbol).negate());\r\n                    }\r\n\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'acot');\r\n                }\r\n                return _.symfunction('acot', arguments);\r\n            },\r\n            atan2: function (a, b) {\r\n                if(a.equals(0) && b.equals(0))\r\n                    throw new UndefinedError('atan2 is undefined for 0, 0');\r\n\r\n                if(Settings.PARSE2NUMBER && a.isConstant() && b.isConstant()) {\r\n                    return new Symbol(Math.atan2(a, b));\r\n                }\r\n                return _.symfunction('atan2', arguments);\r\n            }\r\n        };\r\n        //object for functions which handle hyperbolic trig\r\n        var trigh = this.trigh = {\r\n            //container for hyperbolic trig function\r\n            cosh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.cosh(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'cosh');\r\n                    }\r\n                }\r\n\r\n                return retval = _.symfunction('cosh', arguments);\r\n            },\r\n            sinh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.sinh(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'sinh');\r\n                    }\r\n                }\r\n\r\n                return retval = _.symfunction('sinh', arguments);\r\n            },\r\n            tanh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.tanh(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'tanh');\r\n                    }\r\n                }\r\n\r\n                return retval = _.symfunction('tanh', arguments);\r\n            },\r\n            sech: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        return new Symbol(Math.sech(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'sech');\r\n                    }\r\n                    return _.parse(format('1/cosh({0})', symbol));\r\n                }\r\n\r\n                return retval = _.symfunction('sech', arguments);\r\n            },\r\n            csch: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.csch(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'csch');\r\n                    }\r\n                    return _.parse(format('1/sinh({0})', symbol));\r\n                }\r\n\r\n                return retval = _.symfunction('csch', arguments);\r\n            },\r\n            coth: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.coth(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'coth');\r\n                    }\r\n                    return _.parse(format('1/tanh({0})', symbol));\r\n                }\r\n\r\n                return retval = _.symfunction('coth', arguments);\r\n            },\r\n            acosh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'acosh');\r\n                else if(Settings.PARSE2NUMBER)\r\n                    retval = evaluate(_.parse(format(Settings.LOG + '(({0})+sqrt(({0})^2-1))', symbol.toString())));\r\n                else\r\n                    retval = _.symfunction('acosh', arguments);\r\n                return retval;\r\n            },\r\n            asinh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'asinh');\r\n                else if(Settings.PARSE2NUMBER)\r\n                    retval = evaluate(_.parse(format(Settings.LOG + '(({0})+sqrt(({0})^2+1))', symbol.toString())));\r\n                else\r\n                    retval = _.symfunction('asinh', arguments);\r\n                return retval;\r\n            },\r\n            atanh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'atanh');\r\n                else if(Settings.PARSE2NUMBER) {\r\n                    retval = evaluate(_.parse(format('(1/2)*' + Settings.LOG + '((1+({0}))/(1-({0})))', symbol.toString())));\r\n                }\r\n                else\r\n                    retval = _.symfunction('atanh', arguments);\r\n                return retval;\r\n            },\r\n            asech: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'asech');\r\n                else if(Settings.PARSE2NUMBER)\r\n                    retval = evaluate(log(_.add(symbol.clone().invert(), sqrt(_.subtract(_.pow(symbol, new Symbol(-2)), new Symbol(1))))));\r\n                else\r\n                    retval = _.symfunction('asech', arguments);\r\n                return retval;\r\n            },\r\n            acsch: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'acsch');\r\n                else if(Settings.PARSE2NUMBER)\r\n                    retval = evaluate(_.parse(format(Settings.LOG + '((1+sqrt(1+({0})^2))/({0}))', symbol.toString())));\r\n                else\r\n                    retval = _.symfunction('acsch', arguments);\r\n                return retval;\r\n            },\r\n            acoth: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'acoth');\r\n                else if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.equals(1))\r\n                        retval = Symbol.infinity();\r\n                    else\r\n                        retval = evaluate(\r\n                                _.divide(\r\n                                        log(_.divide(_.add(symbol.clone(), new Symbol(1)), _.subtract(symbol.clone(), new Symbol(1)))),\r\n                                        new Symbol(2)));\r\n                }\r\n                else\r\n                    retval = _.symfunction('acoth', arguments);\r\n                return retval;\r\n            }\r\n        };\r\n        //list of supported units\r\n        this.units = {};\r\n        //list all the supported operators\r\n        var operators = {\r\n            '\\\\': {\r\n                precedence: 8,\r\n                operator: '\\\\',\r\n                action: 'slash',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return e; //bypass the slash\r\n                }\r\n            },\r\n            '!!': {\r\n                precedence: 7,\r\n                operator: '!!',\r\n                action: 'dfactorial',\r\n                prefix: false,\r\n                postfix: true,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return _.symfunction(Settings.DOUBLEFACTORIAL, [e]); //wrap it in a factorial function\r\n                }\r\n            },\r\n            '!': {\r\n                precedence: 7,\r\n                operator: '!',\r\n                action: 'factorial',\r\n                prefix: false,\r\n                postfix: true,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return factorial(e); //wrap it in a factorial function\r\n                }\r\n            },\r\n            '^': {\r\n                precedence: 6,\r\n                operator: '^',\r\n                action: 'pow',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: true\r\n            },\r\n            '**': {\r\n                precedence: 6,\r\n                operator: '**',\r\n                action: 'pow',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: true\r\n            },\r\n            '%': {\r\n                precedence: 4,\r\n                operator: '%',\r\n                action: 'percent',\r\n                prefix: false,\r\n                postfix: true,\r\n                leftAssoc: true,\r\n                overloaded: true,\r\n                overloadAction: 'mod',\r\n                overloadLeftAssoc: false,\r\n                operation: function (x) {\r\n                    return _.divide(x, new Symbol(100));\r\n                }\r\n            },\r\n            '*': {\r\n                precedence: 4,\r\n                operator: '*',\r\n                action: 'multiply',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '/': {\r\n                precedence: 4,\r\n                operator: '/',\r\n                action: 'divide',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '+': {\r\n                precedence: 3,\r\n                operator: '+',\r\n                action: 'add',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: false,\r\n                operation: function (x) {\r\n                    return x;\r\n                }\r\n            },\r\n            'plus': {\r\n                precedence: 3,\r\n                operator: 'plus',\r\n                action: 'add',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: false,\r\n                operation: function (x) {\r\n                    return x;\r\n                }\r\n            },\r\n            '-': {\r\n                precedence: 3,\r\n                operator: '-',\r\n                action: 'subtract',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: false,\r\n                operation: function (x) {\r\n                    return x.negate();\r\n                }\r\n            },\r\n            '=': {\r\n                precedence: 2,\r\n                operator: '=',\r\n                action: 'equals',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '==': {\r\n                precedence: 1,\r\n                operator: '==',\r\n                action: 'eq',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '<': {\r\n                precedence: 1,\r\n                operator: '<',\r\n                action: 'lt',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '<=': {\r\n                precedence: 1,\r\n                operator: '<=',\r\n                action: 'lte',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '>': {\r\n                precedence: 1,\r\n                operator: '>',\r\n                action: 'gt',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '=>': {\r\n                precedence: 1,\r\n                operator: '=>',\r\n                action: 'gte',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            ',': {\r\n                precedence: 0,\r\n                operator: ',',\r\n                action: 'comma',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            ':': {\r\n                precedence: 0,\r\n                operator: ',',\r\n                action: 'assign',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false,\r\n                vectorFn: 'slice'\r\n            },\r\n            ':=': {\r\n                precedence: 0,\r\n                operator: ',',\r\n                action: 'function_assign',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: true\r\n            }\r\n        };\r\n        //brackets\r\n        var brackets = {\r\n            '(': {\r\n                type: 'round',\r\n                id: 1,\r\n                is_open: true,\r\n                is_close: false\r\n            },\r\n            ')': {\r\n                type: 'round',\r\n                id: 2,\r\n                is_open: false,\r\n                is_close: true\r\n            },\r\n            '[': {\r\n                type: 'square',\r\n                id: 3,\r\n                is_open: true,\r\n                is_close: false,\r\n                maps_to: 'vector'\r\n            },\r\n            ']': {\r\n                type: 'square',\r\n                id: 4,\r\n                is_open: false,\r\n                is_close: true\r\n            },\r\n            '{': {\r\n                type: 'curly',\r\n                id: 5,\r\n                is_open: true,\r\n                is_close: false,\r\n                maps_to: 'Set'\r\n            },\r\n            '}': {\r\n                type: 'curly',\r\n                id: 6,\r\n                is_open: false,\r\n                is_close: true\r\n            }\r\n        };\r\n        // Supported functions.\r\n        // Format: function_name: [mapped_function, number_of_parameters]\r\n        var functions = this.functions = {\r\n            'cos': [trig.cos, 1],\r\n            'sin': [trig.sin, 1],\r\n            'tan': [trig.tan, 1],\r\n            'sec': [trig.sec, 1],\r\n            'csc': [trig.csc, 1],\r\n            'cot': [trig.cot, 1],\r\n            'acos': [trig.acos, 1],\r\n            'asin': [trig.asin, 1],\r\n            'atan': [trig.atan, 1],\r\n            'arccos': [trig.acos, 1],\r\n            'arcsin': [trig.asin, 1],\r\n            'arctan': [trig.atan, 1],\r\n            'asec': [trig.asec, 1],\r\n            'acsc': [trig.acsc, 1],\r\n            'acot': [trig.acot, 1],\r\n            'atan2': [trig.atan2, 2],\r\n            'acoth': [trigh.acoth, 1],\r\n            'asech': [trigh.asech, 1],\r\n            'acsch': [trigh.acsch, 1],\r\n            'sinh': [trigh.sinh, 1],\r\n            'cosh': [trigh.cosh, 1],\r\n            'tanh': [trigh.tanh, 1],\r\n            'asinh': [trigh.asinh, 1],\r\n            'sech': [trigh.sech, 1],\r\n            'csch': [trigh.csch, 1],\r\n            'coth': [trigh.coth, 1],\r\n            'acosh': [trigh.acosh, 1],\r\n            'atanh': [trigh.atanh, 1],\r\n            'log10': [, 1],\r\n            'exp': [exp, 1],\r\n            'radians': [radians, 1],\r\n            'degrees': [degrees, 1],\r\n            'min': [min, -1],\r\n            'max': [max, -1],\r\n            'erf': [, 1],\r\n            'floor': [, 1],\r\n            'ceil': [, 1],\r\n            'trunc': [, 1],\r\n            'Si': [, 1],\r\n            'step': [, 1],\r\n            'rect': [, 1],\r\n            'sinc': [sinc, 1],\r\n            'tri': [, 1],\r\n            'sign': [sign, 1],\r\n            'Ci': [, 1],\r\n            'Ei': [, 1],\r\n            'Shi': [, 1],\r\n            'Chi': [, 1],\r\n            'Li': [, 1],\r\n            'fib': [, 1],\r\n            'fact': [factorial, 1],\r\n            'factorial': [factorial, 1],\r\n            'continued_fraction': [continued_fraction, [1, 2]],\r\n            'dfactorial': [, 1],\r\n            'gamma_incomplete': [, [1, 2]],\r\n            'round': [round, [1, 2]],\r\n            'scientific': [scientific, [1, 2]],\r\n            'mod': [mod, 2],\r\n            'pfactor': [pfactor, 1],\r\n            'vector': [vector, -1],\r\n            'matrix': [matrix, -1],\r\n            'Set': [set, -1],\r\n            'imatrix': [imatrix, -1],\r\n            'parens': [parens, -1],\r\n            'sqrt': [sqrt, 1],\r\n            'cbrt': [cbrt, 1],\r\n            'nthroot': [nthroot, 2],\r\n            'log': [log, [1, 2]],\r\n            'expand': [expandall, 1],\r\n            'abs': [abs, 1],\r\n            'invert': [invert, 1],\r\n            'determinant': [determinant, 1],\r\n            'size': [size, 1],\r\n            'transpose': [transpose, 1],\r\n            'dot': [dot, 2],\r\n            'cross': [cross, 2],\r\n            'vecget': [vecget, 2],\r\n            'vecset': [vecset, 3],\r\n            'vectrim': [vectrim, [1, 2]],\r\n            'matget': [matget, 3],\r\n            'matset': [matset, 4],\r\n            'matgetrow': [matgetrow, 2],\r\n            'matsetrow': [matsetrow, 3],\r\n            'matgetcol': [matgetcol, 2],\r\n            'matsetcol': [matsetcol, 3],\r\n            'rationalize': [rationalize, 1],\r\n            'IF': [IF, 3],\r\n            'is_in': [is_in, 2],\r\n            //imaginary support\r\n            'realpart': [realpart, 1],\r\n            'imagpart': [imagpart, 1],\r\n            'conjugate': [conjugate, 1],\r\n            'arg': [arg, 1],\r\n            'polarform': [polarform, 1],\r\n            'rectform': [rectform, 1],\r\n            'sort': [sort, [1, 2]],\r\n            'integer_part': [, 1],\r\n            'union': [union, 2],\r\n            'contains': [contains, 2],\r\n            'intersection': [intersection, 2],\r\n            'difference': [difference, 2],\r\n            'intersects': [intersects, 2],\r\n            'is_subset': [is_subset, 2],\r\n            //system support\r\n            'print': [print, -1]\r\n        };\r\n\r\n        //error handler\r\n        this.error = err;\r\n        //this function is used to comb through the function modules and find a function given its name\r\n        var findFunction = function (fname) {\r\n            var fmodules = Settings.FUNCTION_MODULES,\r\n                    l = fmodules.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var fmodule = fmodules[i];\r\n                if(fname in fmodule)\r\n                    return fmodule[fname];\r\n            }\r\n            err('The function ' + fname + ' is undefined!');\r\n        };\r\n\r\n        /**\r\n         * This method gives the ability to override operators with new methods.\r\n         * @param {String} which\r\n         * @param {Function} with_what\r\n         */\r\n        this.override = function (which, with_what) {\r\n            if(!bin[which])\r\n                bin[which] = [];\r\n            bin[which].push(this[which]);\r\n            this[which] = with_what;\r\n        };\r\n\r\n        /**\r\n         * Restores a previously overridden operator\r\n         * @param {String} what\r\n         */\r\n        this.restore = function (what) {\r\n            if(this[what])\r\n                this[what] = bin[what].pop();\r\n        };\r\n\r\n        /**\r\n         * This method is supposed to behave similarly to the override method but it does not override\r\n         * the existing function rather it only extends it\r\n         * @param {String} what\r\n         * @param {Function} with_what\r\n         * @param {boolean} force_call\r\n         */\r\n        this.extend = function (what, with_what, force_call) {\r\n            var _ = this,\r\n                    extended = this[what];\r\n            if(typeof extended === 'function' && typeof with_what === 'function') {\r\n                var f = this[what];\r\n                this[what] = function (a, b) {\r\n                    if(isSymbol(a) && isSymbol(b) && !force_call)\r\n                        return f.call(_, a, b);\r\n                    else\r\n                        return with_what.call(_, a, b, f);\r\n                };\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Generates library's representation of a function. It's a fancy way of saying a symbol with\r\n         * a few extras. The most important thing is that that it gives a fname and\r\n         * an args property to the symbols in addition to changing its group to FN\r\n         * @param {String} fn_name\r\n         * @param {Array} params\r\n         * @returns {Symbol}\r\n         */\r\n        this.symfunction = function (fn_name, params) {\r\n            //call the proper function and return the result;\r\n            var f = new Symbol(fn_name);\r\n            f.group = FN;\r\n            if(typeof params === 'object')\r\n                params = [].slice.call(params);//ensure an array\r\n            f.args = params;\r\n            f.fname = fn_name === PARENTHESIS ? '' : fn_name;\r\n            f.updateHash();\r\n            return f;\r\n        };\r\n\r\n        /**\r\n         * An internal function call for the Parser. This will either trigger a real\r\n         * function call if it can do so or just return a symbolic representation of the\r\n         * function using symfunction.\r\n         * @param {String} fn_name\r\n         * @param {Array} args\r\n         * @param {int} allowed_args\r\n         * @returns {Symbol}\r\n         */\r\n        this.callfunction = function (fn_name, args, allowed_args) {\r\n            var fn_settings = functions[fn_name];\r\n\r\n            if(!fn_settings)\r\n                err('Nerdamer currently does not support the function ' + fn_name);\r\n\r\n            var num_allowed_args = fn_settings[1] || allowed_args, //get the number of allowed arguments\r\n                    fn = fn_settings[0], //get the mapped function\r\n                    retval;\r\n            //We want to be able to call apply on the arguments or create a symfunction. Both require\r\n            //an array so make sure to wrap the argument in an array.\r\n            if(!(args instanceof Array))\r\n                args = args !== undefined ? [args] : [];\r\n\r\n            if(num_allowed_args !== -1) {\r\n                var is_array = isArray(num_allowed_args),\r\n                        min_args = is_array ? num_allowed_args[0] : num_allowed_args,\r\n                        max_args = is_array ? num_allowed_args[1] : num_allowed_args,\r\n                        num_args = args.length;\r\n\r\n                var error_msg = fn_name + ' requires a {0} of {1} arguments. {2} provided!';\r\n\r\n                if(num_args < min_args)\r\n                    err(format(error_msg, 'minimum', min_args, num_args));\r\n                if(num_args > max_args)\r\n                    err(format(error_msg, 'maximum', max_args, num_args));\r\n            }\r\n\r\n            /*\r\n             * The following are very important to the how nerdamer constructs functions!\r\n             * Assumption 1 - if fn is undefined then handling of the function is purely numeric. This\r\n             *     enables us to reuse Math, Math2, ..., any function from Settings.FUNCTIONS_MODULES entry\r\n             * Assumption 2 - if fn is defined then that function takes care of EVERYTHING including symbolics\r\n             * Assumption 3 - if the user calls symbolics on a function that returns a numeric value then\r\n             *     they are expecting a symbolic output.\r\n             */\r\n            //check if arguments are all numers\r\n            var numericArgs = allNumbers(args);\r\n            //Big number support. Check if Big number is requested and the arguments are all numeric and, not imaginary\r\n//            if (Settings.USE_BIG && numericArgs) {\r\n//                retval = Big[fn_name].apply(undefined, args);\r\n//            }\r\n//            else {\r\n            if(!fn) {\r\n                //Remember assumption 1. No function defined so it MUST be numeric in nature\r\n                fn = findFunction(fn_name);\r\n                if(Settings.PARSE2NUMBER && numericArgs)\r\n                    retval = bigConvert(fn.apply(fn, args));\r\n                else\r\n                    retval = _.symfunction(fn_name, args);\r\n            }\r\n            else {\r\n                //Remember assumption 2. The function is defined so it MUST handle all aspects including numeric values\r\n                retval = fn.apply(fn_settings[2], args);\r\n            }\r\n//            }\r\n\r\n            return retval;\r\n        };\r\n        /**\r\n         * Build a regex based on the operators currently loaded. These operators are to be ignored when\r\n         * substituting spaces for multiplication\r\n         */\r\n        this.operator_filter_regex = (function () {\r\n            //we only want the operators which are singular since those are the ones\r\n            //that nerdamer uses anyway\r\n            var ostr = '^\\\\' + Object.keys(operators).filter(function (x) {\r\n                if(x.length === 1)\r\n                    return x;\r\n            }).join('\\\\');\r\n            //create a regex which captures all spaces between characters except those\r\n            //have an operator on one end\r\n            return new RegExp('([' + ostr + '])\\\\s+([' + ostr + '])');\r\n        })();\r\n\r\n        /**\r\n         * Replaces nerdamer.setOperator\r\n         * @param {object} operator\r\n         * @param {boolean} shift\r\n         */\r\n        this.setOperator = function (operator, action, shift) {\r\n            var name = operator.operator; //take the name to be the symbol\r\n            operators[name] = operator;\r\n            if(action)\r\n                this[operator.action] = action;\r\n            //make the parser aware of the operator\r\n            _[name] = operator.operation;\r\n            //make the action available to the parser if infix\r\n            if(!operator.action && !(operator.prefix || operator.postif)) {\r\n                operator.action = name;\r\n            }\r\n            //if this operator is exclusive then all successive operators should be shifted\r\n            if(shift === 'over' || shift === 'under') {\r\n                var precedence = operator.precedence;\r\n\r\n                for(var x in operators) {\r\n                    var o = operators[x];\r\n                    var condition = shift === 'over' ? o.precedence >= precedence : o.precedence > precedence;\r\n                    if(condition)\r\n                        o.precedence++;\r\n                }\r\n                ;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Gets an opererator by its symbol\r\n         * @param {String} operator\r\n         * @returns {Object}\r\n         */\r\n        this.getOperator = function (operator) {\r\n            return operators[operator];\r\n        };\r\n\r\n        this.aliasOperator = function (o, n) {\r\n            var t = {};\r\n            var operator = operators[o];\r\n            //copy everything over to the new operator\r\n            for(var x in operator) {\r\n                t[x] = operator[x];\r\n            }\r\n            //update the symbol\r\n            t.operator = n;\r\n\r\n            this.setOperator(t);\r\n        };\r\n\r\n        /**\r\n         * Returns the list of operators. Caution! Can break parser!\r\n         * @returns {object}\r\n         */\r\n        this.getOperators = function () {\r\n            //will replace this with some cloning action in the future\r\n            return operators;\r\n        };\r\n\r\n        this.getBrackets = function () {\r\n            return brackets;\r\n        };\r\n        /*\r\n         * Preforms preprocessing on the string. Useful for making early modification before\r\n         * sending to the parser\r\n         * @param {String} e\r\n         */\r\n        var prepare_expression = function (e) {\r\n            /*\r\n             * Since variables cannot start with a number, the assumption is made that when this occurs the\r\n             * user intents for this to be a coefficient. The multiplication symbol in then added. The same goes for\r\n             * a side-by-side close and open parenthesis\r\n             */\r\n            e = String(e);\r\n            //apply preprocessors\r\n            for(var i = 0; i < preprocessors.actions.length; i++)\r\n                e = preprocessors.actions[i].call(this, e);\r\n\r\n            //e = e.split(' ').join('');//strip empty spaces\r\n            //replace multiple spaces with one space\r\n            e = e.replace(/\\s+/g, ' ');\r\n\r\n            //only even bother to check if the string contains e. This regex is painfully slow and might need a better solution. e.g. hangs on (0.06/3650))^(365)\r\n            if(/e/gi.test(e)) {\r\n                e = e.replace(/\\-*\\d+\\.*\\d*e\\+?\\-?\\d+/gi, function (x) {\r\n                    return scientificToDecimal(x);\r\n                });\r\n            }\r\n            //replace scientific numbers\r\n\r\n            //allow omission of multiplication after coefficients\r\n            e = e.replace(Settings.IMPLIED_MULTIPLICATION_REGEX, function () {\r\n                var str = arguments[4],\r\n                        group1 = arguments[1],\r\n                        group2 = arguments[2],\r\n                        start = arguments[3],\r\n                        first = str.charAt(start),\r\n                        before = '',\r\n                        d = '*';\r\n                if(!first.match(/[\\+\\-\\/\\*]/))\r\n                    before = str.charAt(start - 1);\r\n                if(before.match(/[a-z]/i))\r\n                    d = '';\r\n                return group1 + d + group2;\r\n            })\r\n                    .replace(/([a-z0-9_]+)/gi, function (match, a) {\r\n                        if(Settings.USE_MULTICHARACTER_VARS === false && !(a in functions)) {\r\n                            if(!isNaN(a))\r\n                                return a;\r\n                            return a.split('').join('*');\r\n                        }\r\n                        return a;\r\n                    })\r\n                    //allow omission of multiplication sign between brackets\r\n                    .replace(/\\)\\(/g, ')*(') || '0';\r\n            //replace x(x+a) with x*(x+a)\r\n            while(true) {\r\n                var e_org = e; //store the original\r\n                e = e.replace(/([a-z0-9_]+)(\\()|(\\))([a-z0-9]+)/gi, function (match, a, b, c, d) {\r\n                    var g1 = a || c,\r\n                            g2 = b || d;\r\n                    if(g1 in functions) //create a passthrough for functions\r\n                        return g1 + g2;\r\n                    return g1 + '*' + g2;\r\n                });\r\n                //if the original equals the replace we're done\r\n                if(e_org === e)\r\n                    break;\r\n            }\r\n            return e;\r\n        };\r\n        //delay setting of constants until Settings is ready\r\n        this.initConstants = function () {\r\n            this.CONSTANTS = {\r\n                E: new Symbol(Settings.E),\r\n                PI: new Symbol(Settings.PI)\r\n            };\r\n        };\r\n        /*\r\n         * Debugging method used to better visualize vector and arrays\r\n         * @param {object} o\r\n         * @returns {String}\r\n         */\r\n        this.pretty_print = function (o) {\r\n            if(Array.isArray(o)) {\r\n                var s = o.map(x => _.pretty_print(x)).join(', ');\r\n                if(o.type === 'vector')\r\n                    return 'vector<' + s + '>';\r\n                return '(' + s + ')';\r\n            }\r\n            return o.toString();\r\n        };\r\n        this.peekers = {\r\n            pre_operator: [],\r\n            post_operator: [],\r\n            pre_function: [],\r\n            post_function: []\r\n        };\r\n\r\n        this.callPeekers = function (name) {\r\n            if(Settings.callPeekers) {\r\n                var peekers = this.peekers[name];\r\n                //remove the first items and stringify\r\n                var args = arguments2Array(arguments).slice(1).map(stringify);\r\n                //call each one of the peekers\r\n                for(var i = 0; i < peekers.length; i++) {\r\n                    peekers[i].apply(null, args);\r\n                }\r\n            }\r\n        };\r\n        /*\r\n         * Tokenizes the string\r\n         * @param {String} e\r\n         * @returns {Token[]}\r\n         */\r\n        this.tokenize = function (e) {\r\n            //cast to String\r\n            e = String(e);\r\n            //remove multiple white spaces and spaces at beginning and end of string\r\n            e = e.trim().replace(/\\s+/g, ' ');\r\n            //remove spaces before and after brackets\r\n            for(var x in brackets) {\r\n                var regex = new RegExp(brackets[x].is_close ? '\\\\s+\\\\' + x : '\\\\' + x + '\\\\s+', 'g');\r\n                e = e.replace(regex, x);\r\n            }\r\n\r\n            var col = 0; //the column position\r\n            var L = e.length; //expression length\r\n            var lpos = 0; //marks beginning of next token\r\n            var tokens = []; //the tokens container\r\n            var scopes = [tokens]; //initiate with the tokens as the highest scope\r\n            var target = scopes[0]; //the target to which the tokens are added. This can swing up or down\r\n            var depth = 0;\r\n            var open_brackets = [];\r\n            var has_space = false; //marks if an open space character was found\r\n            var SPACE = ' ';\r\n            var EMPTY_STRING = '';\r\n            var COMMA = ',';\r\n            var MINUS = '-';\r\n            var MULT = '*';\r\n            //Possible source of bug. Review\r\n            /*\r\n             //gets the next space\r\n             var next_space = function(from) {\r\n             for(var i=from; i<L; i++) {\r\n             if(e.charAt(i) === ' ')\r\n             return i;\r\n             }\r\n             \r\n             return L; //assume the end of the string instead\r\n             };\r\n             */\r\n            /**\r\n             * Adds a scope to tokens\r\n             * @param {String} scope_type\r\n             * @param {int} column\r\n             * @returns {undefined}\r\n             */\r\n            var addScope = function (scope_type, column) {\r\n                var new_scope = []; //create a new scope\r\n                if(scope_type !== undefined) {\r\n                    new_scope.type = scope_type;\r\n                }\r\n                new_scope.column = column; //mark the column of the scope\r\n                scopes.push(new_scope); //add it to the list of scopes\r\n                target.push(new_scope); //add it to the tokens list since now it's a scope\r\n                target = new_scope; //point to it\r\n                depth++; //go down one in scope\r\n            };\r\n            /**\r\n             * Goes up in scope by one\r\n             * @returns {undefined}\r\n             */\r\n            var goUp = function () {\r\n                scopes.pop(); //remove the scope from the scopes stack\r\n                target = scopes[--depth]; //point the above scope\r\n            };\r\n            /**\r\n             * Extracts all the operators from the expression string starting at postion start_at\r\n             * @param {int} start_at\r\n             * @returns {String}\r\n             */\r\n            var get_operator_str = function (start_at) {\r\n                start_at = start_at !== undefined ? start_at : col;\r\n                //mark the end of the operator as the start since we're just going\r\n                //to be walking along the string\r\n                var end = start_at + 1;\r\n                //just keep moving along\r\n                while(e.charAt(end++) in operators) {\r\n                }\r\n                //remember that we started at one position ahead. The beginning operator is what triggered\r\n                //this function to be called in the first place. String.CharAt is zero based so we now\r\n                //have to correct two places. The initial increment + the extra++ at the end of end during\r\n                //the last iteration.\r\n                return e.substring(start_at, end - 1);\r\n            };\r\n            /**\r\n             * Breaks operator up in to several different operators as defined in operators\r\n             * @param {String} operator_str\r\n             * @returns {String[]}\r\n             */\r\n            var chunkify = function (operator_str) {\r\n                var start = col - operator_str.length; //start of operator\r\n                var _operators = [];\r\n                var operator = operator_str.charAt(0);\r\n                //grab the largest possible chunks but start at 2 since we already know\r\n                //that the first character is an operator\r\n\r\n                for(var i = 1, L = operator_str.length; i < L; i++) {\r\n                    var ch = operator_str.charAt(i);\r\n                    var o = operator + ch;\r\n                    //since the operator now is undefined then the last operator\r\n                    //was the largest possible combination.\r\n                    if(!(o in operators)) {\r\n                        _operators.push(new Token(operator, Token.OPERATOR, start + i));\r\n                        operator = ch;\r\n                    }\r\n                    else\r\n                        operator = o;//now the operator is the larger chunk\r\n                }\r\n                //add the last operator\r\n                _operators.push(new Token(operator, Token.OPERATOR, start + i));\r\n                return _operators;\r\n            };\r\n\r\n            /**\r\n             * Is used to add a token to the tokens array. Makes sure that no empty token is added\r\n             * @param {int} at\r\n             * @param {String} token\r\n             * @returns {undefined}\r\n             */\r\n            var add_token = function (at, token) {\r\n                //grab the token if we're not supplied one\r\n                if(token === undefined)\r\n                    token = e.substring(lpos, at);\r\n                //only add it if it's not an empty string\r\n                if(token in _.units)\r\n                    target.push(new Token(token, Token.UNIT, lpos));\r\n                else if(token !== '')\r\n                    target.push(new Token(token, Token.VARIABLE_OR_LITERAL, lpos));\r\n            };\r\n            /**\r\n             * Adds a function to the output\r\n             * @param {String} f\r\n             * @returns {undefined}\r\n             */\r\n            var add_function = function (f) {\r\n                target.push(new Token(f, Token.FUNCTION, lpos));\r\n            };\r\n            /**\r\n             * Tokens are found between operators so this marks the location of where the last token was found\r\n             * @param {int} position\r\n             * @returns {undefined}\r\n             */\r\n            var set_last_position = function (position) {\r\n                lpos = position + 1;\r\n            };\r\n            /**\r\n             * When a operator is found and added, especially a combo operator, then the column location\r\n             * has to be adjusted to the end of the operator\r\n             * @returns {undefined}\r\n             */\r\n            var adjust_column_position = function () {\r\n                lpos = lpos + operator_str.length - 2;\r\n                col = lpos - 1;\r\n            };\r\n            for(; col < L; col++) {\r\n                var ch = e.charAt(col);\r\n                if(ch in operators) {\r\n                    add_token(col);\r\n                    //is the last token numeric?\r\n                    var last_token_is_numeric = target[0] && isNumber(target[0]);\r\n                    //is this character multiplication?\r\n                    var is_multiplication = last_token_is_numeric && ch === MULT;\r\n                    //if we're in a new scope then go up by one but if the space\r\n                    //is right befor an operator then it makes no sense to go up in scope\r\n                    //consider sin -x. The last position = current position at the minus sign\r\n                    //this means that we're going for sin(x) -x which is wrong\r\n                    //Ignore comma since comma is still part of the existing scope.\r\n                    if(has_space && lpos < col && !(ch === COMMA || is_multiplication)) {\r\n                        has_space = false;\r\n                        goUp();\r\n                    }\r\n                    //mark the last position that a\r\n                    set_last_position(col + 1);\r\n                    var operator_str = get_operator_str(col);\r\n\r\n                    adjust_column_position();\r\n                    target.push.apply(target, chunkify(operator_str));\r\n                }\r\n                else if(ch in brackets) {\r\n                    var bracket = brackets[ch];\r\n\r\n                    if(bracket.is_open) {\r\n                        //mark the bracket\r\n                        open_brackets.push([bracket, lpos]);\r\n                        var f = e.substring(lpos, col);\r\n                        if(f in functions) {\r\n                            add_function(f);\r\n                        }\r\n                        else if(f !== '') {\r\n                            //assume multiplication\r\n                            //TODO: Add the multiplication to stack\r\n                            target.push(new Token(f, Token.VARIABLE_OR_LITERAL, lpos));\r\n                        }\r\n                        //go down one in scope\r\n                        addScope(bracket.maps_to, col);\r\n                    }\r\n                    else if(bracket.is_close) {\r\n                        //get the matching bracket\r\n                        var pair = open_brackets.pop();\r\n                        //throw errors accordingly\r\n                        //missing open bracket\r\n                        if(!pair)\r\n                            throw new ParityError('Missing open bracket for bracket at: ' + (col + 1));\r\n                        //incorrect pair\r\n                        else if(pair[0].id !== bracket.id - 1)\r\n                            throw new ParityError('Parity error');\r\n\r\n                        add_token(col);\r\n                        goUp();\r\n                    }\r\n                    set_last_position(col);\r\n                }\r\n                else if(ch === SPACE) {\r\n                    var prev = e.substring(lpos, col); //look back\r\n                    var nxt = e.charAt(col + 1); //look forward\r\n                    if(has_space) {\r\n\r\n                        if(prev in operators) {\r\n                            target.push(new Token(prev, Token.OPERATOR, col));\r\n                        }\r\n                        else {\r\n                            add_token(undefined, prev);\r\n                            //we're at the closing space\r\n                            goUp(); //go up in scope if we're at a space\r\n\r\n                            //assume multiplication if it's not an operator except for minus\r\n                            var is_operator = nxt in operators;\r\n\r\n                            if((is_operator && operators[nxt].value === MINUS) || !is_operator) {\r\n                                target.push(new Token(MULT, Token.OPERATOR, col));\r\n                            }\r\n                        }\r\n                        has_space = false; //remove the space\r\n                    }\r\n                    else {\r\n                        //we're at the closing space\r\n                        //check if it's a function\r\n                        var f = e.substring(lpos, col);\r\n\r\n                        if(f in functions) {\r\n                            //there's no need to go up in scope if the next character is an operator\r\n                            has_space = true; //mark that a space was found\r\n                            add_function(f);\r\n                            addScope();\r\n                        }\r\n                        else if(f in operators) {\r\n                            target.push(new Token(f, Token.OPERATOR, col));\r\n                        }\r\n                        else {\r\n                            add_token(undefined, f);\r\n                            //peek ahead to the next character\r\n                            var nxt = e.charAt(col + 1);\r\n\r\n                            //If it's a number then add the multiplication operator to the stack but make sure that the next character\r\n                            //is not an operator\r\n\r\n                            if(prev !== EMPTY_STRING && nxt !== EMPTY_STRING && !(prev in operators) && !(nxt in operators))\r\n                                target.push(new Token(MULT, Token.OPERATOR, col));\r\n                        }\r\n                        //Possible source of bug. Review\r\n                        /*\r\n                         //space can mean multiplication so add the symbol if the is encountered\r\n                         if(/\\d+|\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(f)) {\r\n                         var next = e.charAt(col+1);\r\n                         var next_is_operator = next in operators;\r\n                         var ns = next_space(col+1);\r\n                         var next_word = e.substring(col+1, ns);\r\n                         //the next can either be a prefix operator or no operator\r\n                         if((next_is_operator && operators[next].prefix) || !(next_is_operator || next_word in operators))\r\n                         target.push(new Token('*', Token.OPERATOR, col));\r\n                         }\r\n                         */\r\n                    }\r\n                    set_last_position(col); //mark this location\r\n                }\r\n            }\r\n            //check that all brackets were closed\r\n            if(open_brackets.length) {\r\n                var b = open_brackets.pop();\r\n                throw new ParityError('Missing closed bracket for bracket at ' + (b[1] + 1));\r\n            }\r\n            //add the last token\r\n            add_token(col);\r\n\r\n            return tokens;\r\n        };\r\n        /*\r\n         * Puts token array in Reverse Polish Notation\r\n         * @param {Token[]} tokens\r\n         * @returns {Token[]}\r\n         */\r\n        this.toRPN = function (tokens) {\r\n            var fn = tokens.type;\r\n            var l = tokens.length, i;\r\n            var output = [];\r\n            var stack = [];\r\n            var prefixes = [];\r\n            var collapse = function (target, destination) {\r\n                while(target.length)\r\n                    destination.push(target.pop());\r\n            };\r\n            //mark all the prefixes and add them to the stack\r\n            for(i = 0; i < l; i++) {\r\n                var token = tokens[i];\r\n                if(token.type !== Token.OPERATOR)\r\n                    break;\r\n                if(!token.prefix)\r\n                    throw new OperatorError('Not a prefix operator');\r\n                token.is_prefix = true;\r\n                stack.push(token);\r\n            }\r\n            //begin with remaining tokens\r\n            for(; i < l; i++) {\r\n                var e = tokens[i];\r\n                if(e.type === Token.OPERATOR) {\r\n                    var operator = e;\r\n\r\n                    //create the option for the operator being overloaded\r\n                    if(operator.overloaded) {\r\n                        var next = tokens[i + 1];\r\n                        //if it's followed by a number or variable then we assume it's not a postfix operator\r\n                        if(next && next.type === Token.VARIABLE_OR_LITERAL) {\r\n                            operator.postfix = false;\r\n                            //override the original function with the overload function\r\n                            operator.action = operator.overloadAction;\r\n                            operator.leftAssoc = operator.overloadLeftAssoc;\r\n                        }\r\n                    }\r\n\r\n                    //if the stack is not empty\r\n                    while(stack.length) {\r\n                        var last = stack[stack.length - 1];\r\n                        //if (there is an operator at the top of the operator stack with greater precedence)\r\n                        //or (the operator at the top of the operator stack has equal precedence and is left associative)) ~ wikipedia\r\n                        //the !prefixes.length makes sure that the operator on stack isn't prematurely taken fromt he stack.\r\n                        if(!(last.precedence > operator.precedence || !operator.leftAssoc && last.precedence === operator.precedence))\r\n                            break;\r\n                        output.push(stack.pop());\r\n                    }\r\n\r\n                    //change the behavior of the operator if it's a vector and we've been asked to do so\r\n                    if((fn === 'vector' || fn === 'set') && 'vectorFn' in operator)\r\n                        operator.action = operator.vectorFn;\r\n\r\n\r\n                    //if the operator is a postfix operator then we're ready to go since it belongs\r\n                    //to the preceding token. However the output cannot be empty. It must have either\r\n                    //an operator or a variable/literal\r\n                    if(operator.postfix) {\r\n                        var previous = tokens[i - 1];\r\n                        if(!previous)\r\n                            throw new OperatorError(\"Unexpected prefix operator '\" + e.value + \"'! at \" + e.column);\r\n                        else if(previous.type === Token.OPERATOR) {\r\n                            //a postfix can only be followed by a postfix\r\n                            if(!previous.postfix)\r\n                                throw new OperatorError(\"Unexpected prefix operator '\" + previous.value + \"'! at \" + previous.column);\r\n                        }\r\n                    }\r\n                    else {\r\n                        //we must be at an infix so point the operator this\r\n                        do {\r\n                            //the first one is an infix operator all others have to be prefix operators so jump to the end\r\n                            var next = tokens[i + 1]; //take a look ahead\r\n                            var next_is_operator = next ? next.type === Token.OPERATOR : false; //check if it's an operator\r\n                            if(next_is_operator) {\r\n                                //if it's not a prefix operator then it not in the right place\r\n                                if(!next.prefix) {\r\n                                    throw new OperatorError('A prefix operator was expected at ' + next.column);\r\n                                }\r\n                                //mark it as a confirmed prefix\r\n                                next.is_prefix = true;\r\n                                //add it to the prefixes\r\n                                prefixes.push(next);\r\n                                i++;\r\n                            }\r\n                        }\r\n                        while(next_is_operator)\r\n                    }\r\n\r\n                    //if it's a prefix it should be on a special stack called prefixes\r\n                    //we do this to hold on to prefixes because of left associative operators.\r\n                    //they belong to the variable/literal but if placed on either the stack\r\n                    //or output there's no way of knowing this. I might be wrong so I welcome\r\n                    //any discussion about this.\r\n\r\n                    if(operator.is_prefix) //ADD ALL EXCEPTIONS FOR ADDING TO PREFIX STACK HERE. !!!\r\n                        prefixes.push(operator);\r\n                    else\r\n                        stack.push(operator);\r\n                    //move the prefixes to the stack\r\n                    while(prefixes.length) {\r\n                        if(operator.leftAssoc || !operator.leftAssoc && prefixes[prefixes.length - 1].precedence >= operator.precedence) //revisit for commas\r\n                            stack.push(prefixes.pop());\r\n                        else\r\n                            break;\r\n                    }\r\n                }\r\n                else if(e.type === Token.VARIABLE_OR_LITERAL) {\r\n                    //move prefixes to stack at beginning of scope\r\n                    if(output.length === 0)\r\n                        collapse(prefixes, stack);\r\n                    //done with token\r\n                    output.push(e);\r\n                    var last_on_stack = stack[stack.length - 1];\r\n                    //then move all the prefixes to the output\r\n                    if(!last_on_stack || !last_on_stack.leftAssoc)\r\n                        collapse(prefixes, output);\r\n                }\r\n                else if(e.type === Token.FUNCTION) {\r\n                    stack.push(e);\r\n                }\r\n                else if(e.type === Token.UNIT) {\r\n                    //if it's a unit it belongs on the stack since it's tied to the previous token\r\n                    output.push(e);\r\n                }\r\n                //if it's an additonal scope then put that into RPN form\r\n                if(Array.isArray(e)) {\r\n                    output.push(this.toRPN(e));\r\n                    if(e.type)\r\n                        output.push(new Token(e.type, Token.FUNCTION, e.column)); //since it's hidden it needs no column\r\n\r\n                }\r\n            }\r\n            //collapse the remainder of the stack and prefixes to output\r\n            collapse(stack, output);\r\n            collapse(prefixes, output);\r\n\r\n            return output;\r\n        };\r\n        /*\r\n         * Parses the tokens\r\n         * @param {Tokens[]} rpn\r\n         * @param {object} substitutions\r\n         * @returns {Symbol}\r\n         */\r\n        this.parseRPN = function (rpn, substitutions) {\r\n            try {\r\n                //default substitutions\r\n                substitutions = substitutions || {};\r\n                //prepare the substitutions.\r\n                //we first parse them out as-is\r\n                for(var x in substitutions)\r\n                    substitutions[x] = _.parse(substitutions[x], {});\r\n\r\n                //Although technically constants,\r\n                //pi and e are only available when evaluating the expression so add to the subs.\r\n                //Doing this avoids rounding errors\r\n                //link e and pi\r\n                if(Settings.PARSE2NUMBER) {\r\n                    //use the value provided if the individual for some strange reason prefers this.\r\n                    //one reason could be to sub e but not pi or vice versa\r\n                    if(!('e' in substitutions))\r\n                        substitutions.e = new Symbol(Settings.E);\r\n                    if((!('pi' in substitutions)))\r\n                        substitutions.pi = new Symbol(Settings.PI);\r\n                }\r\n\r\n                var Q = [];\r\n                for(var i = 0, l = rpn.length; i < l; i++) {\r\n                    var e = rpn[i];\r\n\r\n                    //Arrays indicate a new scope so parse that out\r\n                    if(Array.isArray(e)) {\r\n                        e = this.parseRPN(e, substitutions);\r\n                    }\r\n\r\n                    if(e) {\r\n                        if(e.type === Token.OPERATOR) {\r\n                            if(e.is_prefix || e.postfix)\r\n                                //resolve the operation assocated with the prefix\r\n                                Q.push(e.operation(Q.pop()));\r\n                            else {\r\n                                var b = Q.pop();\r\n                                var a = Q.pop();\r\n                                //Throw an error if the RH value is empty. This cannot be a postfix since we already checked\r\n                                if(typeof a === 'undefined')\r\n                                    throw new OperatorError(e + ' is not a valid postfix operator at ' + e.column);\r\n\r\n                                var is_comma = e.action === 'comma';\r\n                                //convert Sets to Vectors on all operations at this point. Sets are only recognized functions or individually\r\n                                if(a instanceof Set && !is_comma)\r\n                                    a = Vector.fromSet(a);\r\n\r\n                                if(b instanceof Set && !is_comma)\r\n                                    b = Vector.fromSet(b);\r\n\r\n                                //call all the pre-operators\r\n                                this.callPeekers('pre_operator', a, b, e);\r\n\r\n                                var ans = _[e.action](a, b);\r\n\r\n                                //call all the pre-operators\r\n                                this.callPeekers('post_operator', ans, a, b, e);\r\n\r\n                                Q.push(ans);\r\n                            }\r\n                        }\r\n                        else if(e.type === Token.FUNCTION) {\r\n                            var args = Q.pop();\r\n                            var parent = args.parent; //make a note of the parent\r\n                            if(!(args instanceof Collection))\r\n                                args = Collection.create(args);\r\n                            //the return value may be a vector. If it is then we check\r\n                            //Q to see if there's another vector on the stack. If it is then\r\n                            //we check if has elements. If it does then we know that we're dealing\r\n                            //with an \"getter\" object and return the requested values\r\n\r\n                            //call the function. This is the _.callfunction method in nerdamer\r\n                            //call the function. This is the _.callfunction method in nerdamer\r\n                            var fn_name = e.value;\r\n                            var fn_args = args.getItems();\r\n\r\n                            //call the pre-function peekers\r\n                            this.callPeekers('pre_function', fn_name, fn_args);\r\n\r\n                            var ret = _.callfunction(fn_name, fn_args);\r\n\r\n                            //call the post-function peekers\r\n                            this.callPeekers('post_function', ret, fn_name, fn_args);\r\n\r\n                            var last = Q[Q.length - 1];\r\n                            var next = rpn[i + 1];\r\n                            var next_is_comma = next && next.type === Token.OPERATOR && next.value === ',';\r\n\r\n                            if(!next_is_comma && ret instanceof Vector && last && last.elements && !(last instanceof Collection)) {\r\n                                //remove the item from the queue\r\n                                var item = Q.pop();\r\n\r\n                                var getter = ret.elements[0];\r\n                                //check if it's symbolic. If so put it back and add the item to the stack\r\n                                if(!getter.isConstant()) {\r\n                                    item.getter = getter;\r\n                                    Q.push(item);\r\n                                    Q.push(ret);\r\n                                }\r\n                                else if(getter instanceof Slice) {\r\n                                    //if it's a Slice return the slice\r\n                                    Q.push(Vector.fromArray(item.elements.slice(getter.start, getter.end)));\r\n                                }\r\n                                else {\r\n                                    var index = Number(getter);\r\n                                    var il = item.elements.length;\r\n                                    //support for negative indices\r\n                                    if(index < 0)\r\n                                        index = il + index;\r\n                                    //it it's still out of bounds\r\n                                    if(index < 0 || index >= il) //index should no longer be negative since it's been reset above\r\n                                        //range error\r\n                                        throw new OutOfRangeError('Index out of range ' + (e.column + 1));\r\n\r\n                                    var element = item.elements[index];\r\n                                    //cyclic but we need to mark this for future reference\r\n                                    item.getter = index;\r\n                                    element.parent = item;\r\n\r\n                                    Q.push(element);\r\n                                }\r\n                            }\r\n                            else {\r\n                                //extend the parent reference\r\n                                if(parent)\r\n                                    ret.parent = parent;\r\n                                Q.push(ret);\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            var subbed;\r\n                            var v = e.value;\r\n\r\n                            if(v in Settings.ALIASES)\r\n                                e = _.parse(Settings.ALIASES[e]);\r\n                            //wrap it in a symbol if need be\r\n                            else if(e.type === Token.VARIABLE_OR_LITERAL)\r\n                                e = new Symbol(v);\r\n                            else if(e.type === Token.UNIT) {\r\n                                e = new Symbol(v);\r\n                                e.isUnit = true;\r\n                            }\r\n\r\n                            //make substitutions\r\n                            //Always constants first. This avoids the being overridden\r\n                            if(v in _.CONSTANTS) {\r\n                                subbed = e;\r\n                                e = new Symbol(_.CONSTANTS[v]);\r\n                            }\r\n                            //next substitutions. This allows declared variable to be overridden\r\n                            //check if the values match to avoid erasing the multiplier.\r\n                            //Example:/e = 3*a. substutiting a for a will wipe out the multiplier.\r\n                            else if(v in substitutions && v !== substitutions[v].toString()) {\r\n                                subbed = e;\r\n                                e = substitutions[v].clone();\r\n                            }\r\n                            //next declare variables\r\n                            else if(v in VARS) {\r\n                                subbed = e;\r\n                                e = VARS[v].clone();\r\n                            }\r\n                            //make notation of what it was before\r\n                            if(subbed)\r\n                                e.subbed = subbed;\r\n\r\n                            Q.push(e);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var retval = Q[0];\r\n\r\n                if(['undefined', 'string', 'number'].indexOf(typeof retval) !== -1) {\r\n                    throw new UnexpectedTokenError('Unexpected token!');\r\n                }\r\n\r\n                return retval;\r\n            }\r\n            catch(error) {\r\n                var rethrowErrors = [OutOfFunctionDomainError];\r\n                // Rethrow certain errors in the same class to preserve them\r\n                rethrowErrors.forEach(function (E) {\r\n                    if(error instanceof E) {\r\n                        throw new E(error.message + ': ' + e.column);\r\n                    }\r\n                });\r\n\r\n                throw new ParseError(error.message + ': ' + e.column);\r\n            }\r\n        };\r\n        /**\r\n         * This is the method that triggers the parsing of the string. It generates a parse tree but processes\r\n         * it right away. The operator functions are called when their respective operators are reached. For instance\r\n         * + with cause this.add to be called with the left and right hand values. It works by walking along each\r\n         * character of the string and placing the operators on the stack and values on the output. When an operator\r\n         * having a lower order than the last is reached then the stack is processed from the last operator on the\r\n         * stack.\r\n         * @param {String} token\r\n         */\r\n\r\n        function Node(token) {\r\n            this.type = token.type;\r\n            this.value = token.value;\r\n            //the incoming token may already be a Node type\r\n            this.left = token.left;\r\n            this.right = token.right;\r\n        }\r\n\r\n        Node.prototype.toString = function () {\r\n            var left = this.left ? this.left.toString() + '---' : '';\r\n            var right = this.right ? '---' + this.right.toString() : '';\r\n            return left + '(' + this.value + ')' + right;\r\n        };\r\n\r\n        Node.prototype.toHTML = function (depth, indent) {\r\n            depth = depth || 0;\r\n            indent = typeof indent === 'undefined' ? 4 : indent;\r\n            var tab = function (n) {\r\n                return ' '.repeat(indent * n);\r\n            };\r\n            var html = '';\r\n            var left = this.left ? tab(depth + 1) + '<li>\\n' + this.left.toHTML(depth + 2, indent) + tab(depth + 1) + '</li> \\n' : '';\r\n            var right = this.right ? tab(depth + 1) + '<li>\\n' + this.right.toHTML(depth + 2, indent) + tab(depth + 1) + '</li>\\n' : '';\r\n            var html = tab(depth) + '<div class=\"' + this.type.toLowerCase() + '\"><span>' + this.value + '</span></div>' + tab(depth) + '\\n';\r\n            if(left || right) {\r\n                html += tab(depth) + '<ul>\\n' + left + right + tab(depth) + '</ul>\\n';\r\n            }\r\n            html += '';\r\n            return html;\r\n        };\r\n\r\n        this.tree = function (tokens) {\r\n            var Q = [];\r\n            for(var i = 0; i < tokens.length; i++) {\r\n                var e = tokens[i];\r\n                //Arrays indicate a new scope so parse that out\r\n                if(Array.isArray(e)) {\r\n                    e = this.tree(e);\r\n                    //if it's a comma then it's just arguments\r\n                    Q.push(e);\r\n                    continue;\r\n                }\r\n                if(e.type === Token.OPERATOR) {\r\n                    if(e.is_prefix || e.postfix) {\r\n                        //prefixes go to the left, postfix to the right\r\n                        var location = e.is_prefix ? 'left' : 'right';\r\n                        var last = Q.pop();\r\n                        e = new Node(e);\r\n                        e[location] = last;\r\n                        Q.push(e);\r\n                    }\r\n                    else {\r\n                        e = new Node(e);\r\n                        e.right = Q.pop();\r\n                        e.left = Q.pop();\r\n                        Q.push(e);\r\n                    }\r\n                }\r\n                else if(e.type === Token.FUNCTION) {\r\n                    e = new Node(e);\r\n                    var args = Q.pop();\r\n                    e.right = args;\r\n                    if(e.value === 'object') {\r\n                        //check if Q has a value\r\n                        var last = Q[Q.length - 1];\r\n                        if(last) {\r\n                            while(last.right) {\r\n                                last = last.right;\r\n                            }\r\n                            last.right = e;\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    Q.push(e);\r\n                }\r\n                else {\r\n                    Q.push(new Node(e));\r\n                }\r\n            }\r\n\r\n            return Q[0];\r\n        };\r\n        this.parse = function (e, substitutions) {\r\n            e = prepare_expression(e);\r\n            substitutions = substitutions || {};\r\n            //three passes but easier to debug\r\n            var tokens = this.tokenize(e);\r\n            var rpn = this.toRPN(tokens);\r\n            return this.parseRPN(rpn, substitutions);\r\n        };\r\n        /**\r\n         * TODO: Switch to Parser.tokenize for this method\r\n         * Reads a string into an array of Symbols and operators\r\n         * @param {String} expression_string\r\n         * @returns {Array}\r\n         */\r\n        this.toObject = function (expression_string) {\r\n            var objectify = function (tokens) {\r\n                var output = [];\r\n                for(var i = 0, l = tokens.length; i < l; i++) {\r\n                    var token = tokens[i];\r\n                    var v = token.value;\r\n                    if(token.type === Token.VARIABLE_OR_LITERAL) {\r\n                        output.push(new Symbol(v));\r\n                    }\r\n                    else if(token.type === Token.FUNCTION) {\r\n                        //jump ahead since the next object are the arguments\r\n                        i++;\r\n                        //create a symbolic function and stick it on output\r\n                        var f = _.symfunction(v, objectify(tokens[i]));\r\n                        f.isConversion = true;\r\n                        output.push(f);\r\n                    }\r\n                    else if(token.type === Token.OPERATOR) {\r\n                        output.push(v);\r\n                    }\r\n                    else {\r\n                        output.push(objectify(token));\r\n                    }\r\n                }\r\n\r\n                return output;\r\n            };\r\n            return objectify(_.tokenize(expression_string));\r\n        };\r\n\r\n        // A helper method for toTeX\r\n        var chunkAtCommas = function (arr) {\r\n            var j, k = 0, chunks = [[]];\r\n            for(var j = 0, l = arr.length; j < l; j++) {\r\n                if(arr[j] === ',') {\r\n                    k++;\r\n                    chunks[k] = [];\r\n                }\r\n                else {\r\n                    chunks[k].push(arr[j]);\r\n                }\r\n            }\r\n            return chunks;\r\n        };\r\n\r\n        // Helper method for toTeX\r\n        var rem_brackets = function (str) {\r\n            return str.replace(/^\\\\left\\((.+)\\\\right\\)$/g, function (str, a) {\r\n                if(a)\r\n                    return a;\r\n                return str;\r\n            });\r\n        };\r\n\r\n        var remove_redundant_powers = function (arr) {\r\n            // The filtered array\r\n            var narr = [];\r\n\r\n            while(arr.length) {\r\n                // Remove the element from the front\r\n                var e = arr.shift();\r\n                var next = arr[0];\r\n                var next_is_array = isArray(next);\r\n                var next_is_minus = next === '-';\r\n\r\n                // Remove redundant plusses \r\n                if(e === '^') {\r\n                    if(next === '+') {\r\n                        arr.shift();\r\n                    }\r\n                    else if(next_is_array && next[0] === '+') {\r\n                        next.shift();\r\n                    }\r\n\r\n                    // Remove redundant parentheses\r\n                    if(next_is_array && next.length === 1) {\r\n                        arr.unshift(arr.shift()[0]);\r\n                    }\r\n                }\r\n\r\n                // Check if it's a negative power\r\n                if(e === '^' && (next_is_array && next[0] === '-' || next_is_minus)) {\r\n                    // If so:\r\n                    // - Remove it from the new array, place a one and a division sign in that array and put it back\r\n                    var last = narr.pop();\r\n                    // Check if it's something multiplied by\r\n                    var before = narr[narr.length - 1];\r\n                    var before_last = '1';\r\n\r\n                    if(before === '*') {\r\n                        narr.pop();\r\n                        // For simplicity we just pop it. \r\n                        before_last = narr.pop();\r\n                    }\r\n                    // Implied multiplication\r\n                    else if(isArray(before)) {\r\n                        before_last = narr.pop();\r\n                    }\r\n\r\n                    narr.push(before_last, '/', last, e);\r\n\r\n                    // Remove the negative sign from the power \r\n                    if(next_is_array) {\r\n                        next.shift();\r\n                    }\r\n                    else {\r\n                        arr.shift();\r\n                    }\r\n\r\n                    // Remove it from the array so we don't end up with redundant parentheses if we can\r\n                    if(next_is_array && next.length === 1) {\r\n                        narr.push(arr.shift()[0]);\r\n                    }\r\n                }\r\n                else {\r\n                    narr.push(e);\r\n                }\r\n            }\r\n\r\n            return narr;\r\n        };\r\n        /*\r\n         * Convert expression or object to LaTeX\r\n         * @param {String} expression_or_obj\r\n         * @param {object} opt\r\n         * @returns {String}\r\n         */\r\n        this.toTeX = function (expression_or_obj, opt) {\r\n            opt = opt || {};\r\n            // Add decimal option as per issue #579. Consider passing an object to Latex.latex as option instead of string\r\n            var decimals = opt.decimals === true ? 'decimals' : undefined;\r\n\r\n            var obj = typeof expression_or_obj === 'string' ? this.toObject(expression_or_obj) : expression_or_obj,\r\n                    TeX = [],\r\n                    cdot = typeof opt.cdot === 'undefined' ? '\\\\cdot' : opt.cdot; //set omit cdot to true by default\r\n\r\n            // Remove negative powers as per issue #570\r\n            obj = remove_redundant_powers(obj);\r\n\r\n            if(isArray(obj)) {\r\n                var nobj = [], a, b;\r\n                //first handle ^\r\n                for(var i = 0; i < obj.length; i++) {\r\n                    a = obj[i];\r\n\r\n                    if(obj[i + 1] === '^') {\r\n                        b = obj[i + 2];\r\n                        nobj.push(LaTeX.braces(this.toTeX([a])) + '^' + LaTeX.braces(this.toTeX([b])));\r\n                        i += 2;\r\n                    }\r\n                    else {\r\n                        nobj.push(a);\r\n                    }\r\n                }\r\n                obj = nobj;\r\n            }\r\n\r\n            for(var i = 0, l = obj.length; i < l; i++) {\r\n                var e = obj[i];\r\n\r\n                // Convert * to cdot\r\n                if(e === '*') {\r\n                    e = cdot;\r\n                }\r\n\r\n                if(isSymbol(e)) {\r\n                    if(e.group === FN) {\r\n                        var fname = e.fname, f;\r\n\r\n                        if(fname === SQRT) {\r\n                            f = '\\\\sqrt' + LaTeX.braces(this.toTeX(e.args));\r\n                        }\r\n                        else if(fname === ABS) {\r\n                            f = LaTeX.brackets(this.toTeX(e.args), 'abs');\r\n                        }\r\n                        else if(fname === PARENTHESIS) {\r\n                            f = LaTeX.brackets(this.toTeX(e.args), 'parens');\r\n                        }\r\n                        else if(fname === Settings.LOG10) {\r\n                            f = '\\\\' + Settings.LOG10_LATEX + '\\\\left( ' + this.toTeX(e.args) + '\\\\right)';\r\n                        }\r\n                        else if(fname === 'integrate') {\r\n                            /* Retrive [Expression, x] */\r\n                            var chunks = chunkAtCommas(e.args);\r\n                            /* Build TeX */\r\n                            var expr = LaTeX.braces(this.toTeX(chunks[0])),\r\n                                    dx = this.toTeX(chunks[1]);\r\n                            f = '\\\\int ' + expr + '\\\\, d' + dx;\r\n                        }\r\n                        else if(fname === 'defint') {\r\n                            var chunks = chunkAtCommas(e.args),\r\n                                    expr = LaTeX.braces(this.toTeX(chunks[0])),\r\n                                    dx = this.toTeX(chunks[3]),\r\n                                    lb = this.toTeX(chunks[1]),\r\n                                    ub = this.toTeX(chunks[2]);\r\n                            f = '\\\\int\\\\limits_{' + lb + '}^{' + ub + '} ' + expr + '\\\\, d' + dx;\r\n\r\n                        }\r\n                        else if(fname === 'diff') {\r\n                            var chunks = chunkAtCommas(e.args);\r\n                            var dx = '', expr = LaTeX.braces(this.toTeX(chunks[0]));\r\n                            /* Handle cases: one argument provided, we need to guess the variable, and assume n = 1 */\r\n                            if(chunks.length === 1) {\r\n                                var vars = [];\r\n                                for(j = 0; j < chunks[0].length; j++) {\r\n                                    if(chunks[0][j].group === 3) {\r\n                                        vars.push(chunks[0][j].value);\r\n                                    }\r\n                                }\r\n                                vars.sort();\r\n                                dx = vars.length > 0 ? ('\\\\frac{d}{d ' + vars[0] + '}') : '\\\\frac{d}{d x}';\r\n                            }\r\n                            /* If two arguments, we have expression and variable, we assume n = 1 */\r\n                            else if(chunks.length === 2) {\r\n                                dx = '\\\\frac{d}{d ' + chunks[1] + '}';\r\n                            }\r\n                            /* If we have more than 2 arguments, we assume we've got everything */\r\n                            else {\r\n                                dx = '\\\\frac{d^{' + chunks[2] + '}}{d ' + this.toTeX(chunks[1]) + '^{' + chunks[2] + '}}';\r\n                            }\r\n\r\n                            f = dx + '\\\\left(' + expr + '\\\\right)';\r\n\r\n                        }\r\n                        else if(fname === 'sum' || fname === 'product') {\r\n                            // Split e.args into 4 parts based on locations of , symbols.\r\n                            var argSplit = [[], [], [], []], j = 0, i;\r\n                            for(i = 0; i < e.args.length; i++) {\r\n                                if(e.args[i] === ',') {\r\n                                    j++;\r\n                                    continue;\r\n                                }\r\n                                argSplit[j].push(e.args[i]);\r\n                            }\r\n                            // Then build TeX string.\r\n                            f = (fname === 'sum' ? '\\\\sum_' : '\\\\prod_') + LaTeX.braces(this.toTeX(argSplit[1]) + ' = ' + this.toTeX(argSplit[2]));\r\n                            f += '^' + LaTeX.braces(this.toTeX(argSplit[3])) + LaTeX.braces(this.toTeX(argSplit[0]));\r\n                        }\r\n                        else if(fname === 'limit') {\r\n                            var args = chunkAtCommas(e.args).map(function (x) {\r\n                                if(Array.isArray(x))\r\n                                    return _.toTeX(x.join(''));\r\n                                return _.toTeX(String(x));\r\n                            });\r\n                            f = '\\\\lim_' + LaTeX.braces(args[1] + '\\\\to ' + args[2]) + ' ' + LaTeX.braces(args[0]);\r\n                        }\r\n                        else if(fname === FACTORIAL || fname === DOUBLEFACTORIAL) {\r\n                            f = this.toTeX(e.args) + (fname === FACTORIAL ? '!' : '!!');\r\n                        }\r\n                        else {\r\n                            f = LaTeX.latex(e, decimals);\r\n                            //f = '\\\\mathrm'+LaTeX.braces(fname.replace(/_/g, '\\\\_')) + LaTeX.brackets(this.toTeX(e.args), 'parens');\r\n                        }\r\n\r\n                        TeX.push(f);\r\n                    }\r\n                    else {\r\n                        TeX.push(LaTeX.latex(e, decimals));\r\n                    }\r\n                }\r\n                else if(isArray(e)) {\r\n                    TeX.push(LaTeX.brackets(this.toTeX(e)));\r\n                }\r\n                else {\r\n                    if(e === '/')\r\n                        TeX.push(LaTeX.frac(rem_brackets(TeX.pop()), rem_brackets(this.toTeX([obj[++i]]))));\r\n                    else\r\n                        TeX.push(e);\r\n                }\r\n            }\r\n\r\n            return TeX.join(' ');\r\n        };\r\n\r\n//Parser.functions ==============================================================\r\n        /* Although parens is not a \"real\" function it is important in some cases when the\r\n         * symbol must carry parenthesis. Once set you don't have to worry about it anymore\r\n         * as the parser will get rid of it at the first opportunity\r\n         */\r\n        function parens(symbol) {\r\n            if(Settings.PARSE2NUMBER) {\r\n                return symbol;\r\n            }\r\n            return _.symfunction('parens', [symbol]);\r\n        }\r\n\r\n        function abs(symbol) {\r\n\r\n            //|-∞| = ∞\r\n            if(symbol.isInfinity) {\r\n                return Symbol.infinity();\r\n            }\r\n            if(symbol.multiplier.lessThan(0))\r\n                symbol.multiplier.negate();\r\n\r\n            if(symbol.isImaginary()) {\r\n                var re = symbol.realpart();\r\n                var im = symbol.imagpart();\r\n                if(re.isConstant() && im.isConstant())\r\n                    return sqrt(_.add(_.pow(re, new Symbol(2)), _.pow(im, new Symbol(2))));\r\n            }\r\n            else if(isNumericSymbol(symbol) || even(symbol.power)) {\r\n                return symbol;\r\n            }\r\n\r\n            if(symbol.isComposite()) {\r\n                var ms = [];\r\n                symbol.each(function (x) {\r\n                    ms.push(x.multiplier);\r\n                });\r\n                var gcd = Math2.QGCD.apply(null, ms);\r\n                if(gcd.lessThan(0)) {\r\n                    symbol.multiplier = symbol.multiplier.multiply(new Frac(-1));\r\n                    symbol.distributeMultiplier();\r\n                }\r\n            }\r\n\r\n            //convert |n*x| to n*|x|\r\n            var m = _.parse(symbol.multiplier);\r\n            symbol.toUnitMultiplier();\r\n\r\n            return _.multiply(m, _.symfunction(ABS, [symbol]));\r\n        }\r\n        /**\r\n         * The factorial function\r\n         * @param {Symbol} symbol\r\n         * @return {Symbol}\r\n         */\r\n        function factorial(symbol) {\r\n            var retval;\r\n            if(isVector(symbol)) {\r\n                var V = new Vector();\r\n                symbol.each(function (x, i) {\r\n                    //i start at one.\r\n                    V.set(i - 1, factorial(x));\r\n                });\r\n                return V;\r\n            }\r\n            if(isMatrix(symbol)) {\r\n                var M = new Matrix();\r\n                symbol.each(function (x, i, j) {\r\n                    //i start at one.\r\n                    M.set(i, j, factorial(x));\r\n                });\r\n                return M;\r\n            }\r\n            if(Settings.PARSE2NUMBER && symbol.isConstant()) {\r\n                if(isInt(symbol)) {\r\n                    retval = Math2.bigfactorial(symbol);\r\n                }\r\n                else {\r\n                    retval = Math2.gamma(symbol.multiplier.add(new Frac(1)).toDecimal());\r\n                }\r\n\r\n                retval = bigConvert(retval);\r\n                return retval;\r\n            }\r\n            else if(symbol.isConstant()) {\r\n                var den = symbol.getDenom();\r\n                if(den.equals(2)) {\r\n                    var num = symbol.getNum();\r\n                    var a, b, c, n;\r\n\r\n                    if(!symbol.multiplier.isNegative()) {\r\n                        n = _.add(num, new Symbol(1)).multiplier.divide(new Frac(2));\r\n                        a = Math2.bigfactorial(new Frac(2).multiply(n));\r\n                        b = _.pow(new Symbol(4), new Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));\r\n                    }\r\n                    else {\r\n                        n = _.subtract(num.negate(), new Symbol(1)).multiplier.divide(new Frac(2));\r\n                        a = _.pow(new Symbol(-4), new Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));\r\n                        b = Math2.bigfactorial(new Frac(2).multiply(n));\r\n                    }\r\n                    c = a.divide(b);\r\n                    return _.multiply(_.parse('sqrt(pi)'), new Symbol(c));\r\n                }\r\n            }\r\n            return _.symfunction(FACTORIAL, [symbol]);\r\n        }\r\n        ;\r\n        /**\r\n         * Returns the continued fraction of a number\r\n         * @param {Symbol} symbol\r\n         * @param {Symbol} n\r\n         * @returns {Symbol}\r\n         */\r\n        function continued_fraction(symbol, n) {\r\n            var _symbol = evaluate(symbol);\r\n            if(_symbol.isConstant()) {\r\n                var cf = Math2.continuedFraction(_symbol, n);\r\n                //convert the fractions array to a new Vector\r\n                var fractions = Vector.fromArray(cf.fractions.map(function (x) {\r\n                    return new Symbol(x);\r\n                }));\r\n                return Vector.fromArray([new Symbol(cf.sign), new Symbol(cf.whole), fractions]);\r\n            }\r\n            return _.symfunction('continued_fraction', arguments);\r\n        }\r\n        /**\r\n         * Returns the error function\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function erf(symbol) {\r\n            var _symbol = evaluate(symbol);\r\n\r\n            if(_symbol.isConstant()) {\r\n                return Math2.erf(_symbol);\r\n            }\r\n            else if(_symbol.isImaginary()) {\r\n                return complex.erf(symbol);\r\n            }\r\n            return _.symfunction('erf', arguments);\r\n        }\r\n        ;\r\n        /**\r\n         * The mod function\r\n         * @param {Symbol} symbol1\r\n         * @param {Symbol} symbol2\r\n         * @returns {Symbol}\r\n         */\r\n        function mod(symbol1, symbol2) {\r\n            if(symbol1.isConstant() && symbol2.isConstant()) {\r\n                var retval = new Symbol(1);\r\n                retval.multiplier = retval.multiplier.multiply(symbol1.multiplier.mod(symbol2.multiplier));\r\n                return retval;\r\n            }\r\n            //try to see if division has remainder of zero\r\n            var r = _.divide(symbol1.clone(), symbol2.clone());\r\n            if(isInt(r))\r\n                return new Symbol(0);\r\n            return _.symfunction('mod', [symbol1, symbol2]);\r\n        }\r\n        /**\r\n         * A branghing function\r\n         * @param {Boolean} condition\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        function IF(condition, a, b) {\r\n            if(typeof condition !== 'boolean')\r\n                if(isNumericSymbol(condition))\r\n                    condition = !!Number(condition);\r\n            if(condition)\r\n                return a;\r\n            return b;\r\n        }\r\n        /**\r\n         *\r\n         * @param {Matrix|Vector|Set|Collection} obj\r\n         * @param {Symbol} item\r\n         * @returns {Boolean}\r\n         */\r\n        function is_in(obj, item) {\r\n            if(isMatrix(obj)) {\r\n                for(var i = 0, l = obj.rows(); i < l; i++) {\r\n                    for(var j = 0, l2 = obj.cols(); j < l2; j++) {\r\n                        var element = obj.elements[i][j];\r\n                        if(element.equals(item))\r\n                            return new Symbol(1);\r\n                    }\r\n                }\r\n            }\r\n            else if(obj.elements) {\r\n                for(var i = 0, l = obj.elements.length; i < l; i++) {\r\n                    if(obj.elements[i].equals(item))\r\n                        return new Symbol(1);\r\n                }\r\n            }\r\n\r\n            return new Symbol(0);\r\n        }\r\n\r\n        /**\r\n         * A symbolic extension for sinc\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function sinc(symbol) {\r\n            if(Settings.PARSE2NUMBER) {\r\n                if(symbol.isConstant()) {\r\n                    return new Symbol(Math2.sinc(symbol));\r\n                }\r\n                return _.parse(format('sin({0})/({0})', symbol));\r\n            }\r\n            return _.symfunction('sinc', [symbol]);\r\n        }\r\n\r\n        /**\r\n         * A symbolic extension for exp. This will auto-convert all instances of exp(x) to e^x.\r\n         * Thanks @ Happypig375\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function exp(symbol) {\r\n            if(symbol.fname === Settings.LOG && symbol.isLinear()) {\r\n                return _.pow(symbol.args[0], Symbol.create(symbol.multiplier));\r\n            }\r\n            return _.parse(format('e^({0})', symbol));\r\n        }\r\n\r\n        /**\r\n         * Converts value degrees to radians\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function radians(symbol) {\r\n            return _.parse(format('({0})*pi/180', symbol));\r\n        }\r\n\r\n        /**\r\n         * Converts value from radians to degrees\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function degrees(symbol) {\r\n            return _.parse(format('({0})*180/pi', symbol));\r\n        }\r\n\r\n        function nroots(symbol) {\r\n            var a, b;\r\n            if(symbol.group === FN && symbol.fname === '') {\r\n                a = Symbol.unwrapPARENS(_.parse(symbol).toLinear());\r\n                b = _.parse(symbol.power);\r\n            }\r\n            else if(symbol.group === P) {\r\n                a = _.parse(symbol.value);\r\n                b = _.parse(symbol.power);\r\n            }\r\n\r\n            if(a && b && a.group === N && b.group === N) {\r\n                var _roots = [];\r\n                var parts = Symbol.toPolarFormArray(symbol);\r\n                var r = _.parse(a).abs().toString();\r\n                //https://en.wikipedia.org/wiki/De_Moivre%27s_formula\r\n                var x = arg(a).toString();\r\n                var n = b.multiplier.den.toString();\r\n                var p = b.multiplier.num.toString();\r\n\r\n                var formula = \"(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})\";\r\n                for(var i = 0; i < n; i++) {\r\n                    var t = evaluate(_.parse(format(\"(({0})+2*pi*({1}))/({2})\", x, i, n))).multiplier.toDecimal();\r\n                    _roots.push(evaluate(_.parse(format(formula, r, n, Settings.IMAGINARY, t, p))));\r\n                }\r\n                return Vector.fromArray(_roots);\r\n            }\r\n            else if(symbol.isConstant(true)) {\r\n                var sign = symbol.sign();\r\n                var x = evaluate(symbol.abs());\r\n                var root = _.sqrt(x);\r\n\r\n                var _roots = [root.clone(), root.negate()];\r\n\r\n                if(sign < 0)\r\n                    _roots = _roots.map(function (x) {\r\n                        return _.multiply(x, Symbol.imaginary());\r\n                    });\r\n            }\r\n            else {\r\n                _roots = [_.parse(symbol)];\r\n            }\r\n\r\n            return Vector.fromArray(_roots);\r\n        }\r\n\r\n        /**\r\n         * Rationalizes a symbol\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function rationalize(symbol) {\r\n            if(symbol.isComposite()) {\r\n                var retval = new Symbol(0);\r\n                var num, den, retnum, retden, a, b, n, d;\r\n                symbol.each(function (x) {\r\n                    num = x.getNum();\r\n                    den = x.getDenom();\r\n                    retnum = retval.getNum();\r\n                    retden = retval.getDenom();\r\n                    a = _.multiply(den, retnum);\r\n                    b = _.multiply(num, retden);\r\n                    n = _.expand(_.add(a, b));\r\n                    d = _.multiply(retden, den);\r\n                    retval = _.divide(n, d);\r\n                }, true);\r\n\r\n                return retval;\r\n            }\r\n            return symbol;\r\n        }\r\n\r\n        /**\r\n         * The square root function\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function sqrt(symbol) {\r\n            if(!isSymbol(symbol)) {\r\n                symbol = _.parse(symbol);\r\n            }\r\n            \r\n            // Exit early for EX\r\n            if(symbol.group === EX) {\r\n                return _.symfunction(SQRT, [symbol]);\r\n            }\r\n\r\n            if(symbol.fname === '' && symbol.power.equals(1))\r\n                symbol = symbol.args[0];\r\n\r\n            var is_negative = symbol.multiplier.sign() < 0;\r\n\r\n            if(Settings.PARSE2NUMBER) {\r\n                if(symbol.isConstant() && !is_negative) {\r\n                    return new Symbol(bigDec.sqrt(symbol.multiplier.toDecimal()));\r\n                }\r\n                else if(symbol.isImaginary()) {\r\n                    return complex.sqrt(symbol);\r\n                }\r\n                else if(symbol.group === S) {\r\n                    return _.symfunction('sqrt', [symbol]);\r\n                }\r\n            }\r\n\r\n            var img, retval,\r\n                    isConstant = symbol.isConstant();\r\n\r\n            if(symbol.group === CB && symbol.isLinear()) {\r\n                var m = sqrt(Symbol(symbol.multiplier));\r\n                for(var s in symbol.symbols) {\r\n                    var x = symbol.symbols[s];\r\n                    m = _.multiply(m, sqrt(x));\r\n                }\r\n\r\n                retval = m;\r\n            }\r\n            //if the symbol is already sqrt then it's that symbol^(1/4) and we can unwrap it\r\n            else if(symbol.fname === SQRT) {\r\n                var s = symbol.args[0];\r\n                var ms = symbol.multiplier;\r\n                s.setPower(symbol.power.multiply(new Frac(0.25)));\r\n                retval = s;\r\n                //grab the multiplier\r\n                if(!ms.equals(1))\r\n                    retval = _.multiply(sqrt(_.parse(ms)), retval);\r\n            }\r\n            //if the symbol is a fraction then we don't keep can unwrap it. For instance\r\n            //no need to keep sqrt(x^(1/3))\r\n            else if(!symbol.power.isInteger()) {\r\n                symbol.setPower(symbol.power.multiply(new Frac(0.5)));\r\n                retval = symbol;\r\n            }\r\n            else if(symbol.multiplier < 0 && symbol.group === S) {\r\n                var a = _.parse(symbol.multiplier).negate();\r\n                var b = _.parse(symbol).toUnitMultiplier().negate();\r\n                retval = _.multiply(_.symfunction(Settings.SQRT, [b]), sqrt(a));\r\n            }\r\n            else {\r\n\r\n                //Related to issue #401. Since sqrt(a)*sqrt(b^-1) relates in issues, we'll change the form\r\n                //to sqrt(a)*sqrt(b)^1 for better simplification\r\n                //the sign of the power\r\n                var sign = symbol.power.sign();\r\n                //remove the sign\r\n                symbol.power = symbol.power.abs();\r\n\r\n                //if the symbols is imagary then we place in the imaginary part. We'll return it\r\n                //as a product\r\n                if(isConstant && symbol.multiplier.lessThan(0)) {\r\n                    img = Symbol.imaginary();\r\n                    symbol.multiplier = symbol.multiplier.abs();\r\n                }\r\n\r\n                var q = symbol.multiplier.toDecimal(),\r\n                        qa = Math.abs(q),\r\n                        t = Math.sqrt(qa);\r\n\r\n                var m;\r\n                //it's a perfect square so take the square\r\n                if(isInt(t)) {\r\n                    m = new Symbol(t);\r\n                }\r\n                else if(isInt(q)) {\r\n                    var factors = Math2.ifactor(q);\r\n                    var tw = 1;\r\n                    for(var x in factors) {\r\n                        var n = factors[x],\r\n                                nn = (n - (n % 2)); //get out the whole numbers\r\n                        if(nn) { //if there is a whole number ...\r\n                            var w = Math.pow(x, nn);\r\n                            tw *= Math.pow(x, nn / 2); //add to total wholes\r\n                            q /= w; //reduce the number by the wholes\r\n                        }\r\n                    }\r\n                    m = _.multiply(_.symfunction(SQRT, [new Symbol(q)]), new Symbol(tw));\r\n                }\r\n                else {\r\n                    //reduce the numerator and denominator using prime factorization\r\n                    var c = [new Symbol(symbol.multiplier.num), new Symbol(symbol.multiplier.den)];\r\n                    var r = [new Symbol(1), new Symbol(1)];\r\n                    var sq = [new Symbol(1), new Symbol(1)];\r\n                    for(var i = 0; i < 2; i++) {\r\n                        var n = c[i];\r\n                        //get the prime factors and loop through each.\r\n                        pfactor(n).each(function (x) {\r\n                            x = Symbol.unwrapPARENS(x);\r\n                            var b = x.clone().toLinear();\r\n                            var p = Number(x.power);\r\n                            //We'll consider it safe to use the native Number since 2^1000 is already a pretty huge number\r\n                            var rem = p % 2; //get the remainder. This will be 1 if 3 since sqrt(n^2) = n where n is positive\r\n                            var w = (p - rem) / 2; //get the whole numbers of n/2\r\n                            r[i] = _.multiply(r[i], _.pow(b, new Symbol(w)));\r\n                            sq[i] = _.multiply(sq[i], sqrt(_.pow(b, new Symbol(rem))));\r\n                        });\r\n                    }\r\n                    m = _.divide(_.multiply(r[0], sq[0]), _.multiply(r[1], sq[1]));\r\n                }\r\n\r\n\r\n                //strip the multiplier since we already took the sqrt\r\n                symbol = symbol.toUnitMultiplier(true);\r\n                //if the symbol is one just return one and not the sqrt function\r\n                if(symbol.isOne()) {\r\n                    retval = symbol;\r\n                }\r\n                else if(even(symbol.power.toString())) {\r\n                    //just raise it to the 1/2\r\n                    retval = _.pow(symbol.clone(), new Symbol(0.5));\r\n                }\r\n                else {\r\n                    retval = _.symfunction(SQRT, [symbol]);\r\n                }\r\n\r\n                //put back the sign that was removed earlier\r\n                if(sign < 0)\r\n                    retval.power.negate();\r\n\r\n                if(m)\r\n                    retval = _.multiply(m, retval);\r\n\r\n                if(img)\r\n                    retval = _.multiply(img, retval);\r\n            }\r\n\r\n            if(is_negative && Settings.PARSE2NUMBER)\r\n                return _.parse(retval);\r\n\r\n            return retval;\r\n        }\r\n\r\n        /**\r\n         * The cube root function\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function cbrt(symbol) {\r\n            if(!symbol.isConstant(true)) {\r\n                var retval;\r\n\r\n                var n = symbol.power / 3;\r\n                //take the cube root of the multplier\r\n                var m = _.pow(_.parse(symbol.multiplier), new Symbol(1 / 3));\r\n                //strip the multiplier\r\n                var sym = symbol.toUnitMultiplier();\r\n\r\n                //simplify the power\r\n                if(isInt(n)) {\r\n                    retval = _.pow(sym.toLinear(), _.parse(n));\r\n                }\r\n                else {\r\n                    if(sym.group === CB) {\r\n                        retval = new Symbol(1);\r\n                        sym.each(function (x) {\r\n                            retval = _.multiply(retval, cbrt(x));\r\n                        });\r\n                    }\r\n                    else {\r\n                        retval = _.symfunction('cbrt', [sym]);\r\n                    }\r\n                }\r\n\r\n                return _.multiply(m, retval);\r\n            }\r\n            return nthroot(symbol, new Symbol(3));\r\n        }\r\n\r\n        function scientific(symbol, sigfigs) {\r\n            //Just set the flag and keep it moving. Symbol.toString will deal with how to\r\n            //display this\r\n            symbol.scientific = sigfigs || 10;\r\n            return symbol;\r\n        }\r\n\r\n        /**\r\n         *\r\n         * @param {Symbol} num - the number being raised\r\n         * @param {Symbol} p - the exponent\r\n         * @param {type} prec - the precision wanted\r\n         * @param {bool} asbig - true if a bigDecimal is wanted\r\n         * @returns {Symbol}\r\n         */\r\n        function nthroot(num, p, prec, asbig) {\r\n            //clone p and convert to a number if possible\r\n            p = evaluate(_.parse(p));\r\n\r\n            //cannot calculate if p = 0. nthroot(0, 0) => 0^(1/0) => undefined\r\n            if(p.equals(0)) {\r\n                throw new UndefinedError('Unable to calculate nthroots of zero');\r\n            }\r\n\r\n            //Stop computation if it negative and even since we have an imaginary result\r\n            if(num < 0 && even(p))\r\n                throw new Error('Cannot calculate nthroot of negative number for even powers');\r\n\r\n            //return non numeric values unevaluated\r\n            if(!num.isConstant(true)) {\r\n                return _.symfunction('nthroot', arguments);\r\n            }\r\n\r\n            //evaluate numeric values\r\n            if(num.group !== N) {\r\n                num = evaluate(num);\r\n            }\r\n\r\n            //default is to return a big value\r\n            if(typeof asbig === 'undefined')\r\n                asbig = true;\r\n\r\n            prec = prec || 25;\r\n\r\n            var sign = num.sign();\r\n            var retval;\r\n            var ans;\r\n\r\n            if(sign < 0) {\r\n                num = abs(num); //remove the sign\r\n            }\r\n\r\n            if(isInt(num) && p.isConstant()) {\r\n\r\n                if(num < 18446744073709551616) {\r\n                    //2^64\r\n                    ans = Frac.create(Math.pow(num, 1 / p));\r\n                }\r\n                else {\r\n                    ans = Math2.nthroot(num, p);\r\n                }\r\n\r\n                var retval;\r\n                if(asbig) {\r\n                    retval = new Symbol(ans);\r\n                }\r\n                retval = new Symbol(ans.toDecimal(prec));\r\n\r\n                return _.multiply(new Symbol(sign), retval);\r\n            }\r\n        }\r\n\r\n        function pfactor(symbol) {\r\n            //Fix issue #458 | nerdamer(\"sqrt(1-(3.3333333550520926e-7)^2)\").evaluate().text()\r\n            //More Big Number issues >:(\r\n            if(symbol.greaterThan(9.999999999998891e+41) || symbol.equals(-1))\r\n                return symbol;\r\n            //Fix issue #298\r\n            if(symbol.equals(Math.PI))\r\n                return new Symbol(Math.PI);\r\n            //evaluate the symbol to merge constants\r\n            symbol = evaluate(symbol.clone());\r\n\r\n            if(symbol.isConstant()) {\r\n                var retval = new Symbol(1);\r\n                var m = symbol.toString();\r\n                if(isInt(m)) {\r\n                    var factors = Math2.ifactor(m);\r\n                    for(var factor in factors) {\r\n                        var p = factors[factor];\r\n                        retval = _.multiply(retval, _.symfunction('parens', [new Symbol(factor).setPower(new Frac(p))]));\r\n                    }\r\n                }\r\n                else {\r\n                    var n = pfactor(new Symbol(symbol.multiplier.num));\r\n                    var d = pfactor(new Symbol(symbol.multiplier.den));\r\n                    retval = _.multiply(_.symfunction('parens', [n]), _.symfunction('parens', [d]).invert());\r\n                }\r\n            }\r\n            else\r\n                retval = _.symfunction('pfactor', arguments);\r\n            return retval;\r\n        }\r\n\r\n        /**\r\n         * Get's the real part of a complex number. Return number if real\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function realpart(symbol) {\r\n            return symbol.realpart();\r\n        }\r\n\r\n        /**\r\n         * Get's the imaginary part of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function imagpart(symbol) {\r\n            return symbol.imagpart();\r\n        }\r\n\r\n        /**\r\n         * Computes the conjugate of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function conjugate(symbol) {\r\n            var re = symbol.realpart();\r\n            var im = symbol.imagpart();\r\n            return _.add(re, _.multiply(im.negate(), Symbol.imaginary()));\r\n        }\r\n\r\n        /**\r\n         * Returns the arugment of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function arg(symbol) {\r\n            var re = symbol.realpart();\r\n            var im = symbol.imagpart();\r\n            if(re.isConstant() && im.isConstant())\r\n                return new Symbol(Math.atan2(im, re));\r\n            return _.symfunction('atan2', [im, re]);\r\n        }\r\n\r\n        /**\r\n         * Returns the arugment of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function arg(symbol) {\r\n            var re = symbol.realpart();\r\n            var im = symbol.imagpart();\r\n            if(re.isConstant() && im.isConstant()) {\r\n                if(im.equals(0) && re.equals(-1)) {\r\n                    return _.parse('pi');\r\n                }\r\n                else if(im.equals(1) && re.equals(0)) {\r\n                    return _.parse('pi/2');\r\n                }\r\n                else if(im.equals(1) && re.equals(1)) {\r\n                    return _.parse('pi/4');\r\n                }\r\n                return new Symbol(Math.atan2(im, re));\r\n            }\r\n            return _.symfunction('atan2', [im, re]);\r\n        }\r\n\r\n        /**\r\n         * Returns the polarform of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function polarform(symbol) {\r\n            var p, r, e, theta;\r\n            p = Symbol.toPolarFormArray(symbol);\r\n            theta = p[1];\r\n            r = p[0];\r\n            e = _.parse(format('e^({0}*({1}))', Settings.IMAGINARY, theta));\r\n            return _.multiply(r, e);\r\n        }\r\n\r\n        /**\r\n         * Returns the rectangular form of a complex number. Does not work for symbolic coefficients\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function rectform(symbol) {\r\n            //TODO: e^((i*pi)/4)\r\n            var original = symbol.clone();\r\n            try {\r\n                var f, p, q, s, h, d, n;\r\n                f = decompose_fn(symbol, 'e', true);\r\n                p = _.divide(f.x.power, Symbol.imaginary());\r\n                q = evaluate(trig.tan(p));\r\n                s = _.pow(f.a, new Symbol(2));\r\n                d = q.getDenom(true);\r\n                n = q.getNum();\r\n                h = Symbol.hyp(n, d);\r\n                //check\r\n                if(h.equals(f.a)) {\r\n                    return _.add(d, _.multiply(Symbol.imaginary(), n));\r\n                }\r\n                else {\r\n                    return original;\r\n                }\r\n            }\r\n            catch(e) {\r\n                return original;\r\n            }\r\n        }\r\n\r\n        function symMinMax(f, args) {\r\n            args.map(function (x) {\r\n                x.numVal = evaluate(x).multiplier;\r\n            });\r\n            var l, a, b, a_val, b_val;\r\n            while(true) {\r\n                l = args.length;\r\n                if(l < 2)\r\n                    return args[0];\r\n                a = args.pop();\r\n                b = args[l - 2];\r\n                if(f === 'min' ? a.numVal < b.numVal : a.numVal > b.numVal) {\r\n                    args.pop();\r\n                    args.push(a);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Returns maximum of a set of numbers\r\n         * @returns {Symbol}\r\n         */\r\n        function max() {\r\n            var args = [].slice.call(arguments);\r\n            if(allSame(args))\r\n                return args[0];\r\n            if(allNumbers(args))\r\n                return new Symbol(Math.max.apply(null, args));\r\n            if(Settings.SYMBOLIC_MIN_MAX && allConstants(args))\r\n                return symMinMax('max', args);\r\n            return _.symfunction('max', args);\r\n        }\r\n\r\n        /**\r\n         * Returns minimum of a set of numbers\r\n         * @returns {Symbol}\r\n         */\r\n        function min() {\r\n            var args = [].slice.call(arguments);\r\n            if(allSame(args))\r\n                return args[0];\r\n            if(allNumbers(args))\r\n                return new Symbol(Math.min.apply(null, args));\r\n            if(Settings.SYMBOLIC_MIN_MAX && allConstants(args))\r\n                return symMinMax('min', args);\r\n            return _.symfunction('min', args);\r\n        }\r\n\r\n        /**\r\n         * Returns the sign of a number\r\n         * @param {Symbol} x\r\n         * @returns {Symbol}\r\n         */\r\n        function sign(x) {\r\n            if(x.isConstant(true))\r\n                return new Symbol(Math.sign(evaluate(x)));\r\n            return _.symfunction('sign', arguments);\r\n        }\r\n\r\n        function sort(symbol, opt) {\r\n            opt = opt ? opt.toString() : 'asc';\r\n            var getval = function (e) {\r\n                if(e.group === N)\r\n                    return e.multiplier;\r\n                if(e.group === FN) {\r\n                    if(e.fname === '')\r\n                        return getval(e.args[0]);\r\n                    return e.fname;\r\n                }\r\n                if(e.group === S)\r\n                    return e.power;\r\n\r\n                return e.value;\r\n            };\r\n            var symbols = isVector(symbol) ? symbol.elements : symbol.collectSymbols();\r\n            return new Vector(symbols.sort(function (a, b) {\r\n                var aval = getval(a),\r\n                        bval = getval(b);\r\n                if(opt === 'desc')\r\n                    return bval - aval;\r\n                return aval - bval;\r\n            }));\r\n        }\r\n\r\n        /**\r\n         * The log function\r\n         * @param {Symbol} symbol\r\n         * @param {Symbol} base\r\n         * @returns {Symbol}\r\n         */\r\n        function log(symbol, base) {\r\n\r\n            if(symbol.equals(1)) {\r\n                return new Symbol(0);\r\n            }\r\n\r\n            var retval;\r\n\r\n            if(symbol.fname === SQRT && symbol.multiplier.equals(1)) {\r\n                retval = _.divide(log(symbol.args[0]), new Symbol(2));\r\n\r\n                if(symbol.power.sign() < 0) {\r\n                    retval.negate();\r\n                }\r\n\r\n                // Exit early\r\n                return retval;\r\n            }\r\n\r\n            //log(0) is undefined so complain\r\n            if(symbol.equals(0)) {\r\n                throw new UndefinedError(Settings.LOG + '(0) is undefined!');\r\n            }\r\n\r\n            //deal with imaginary values\r\n            if(symbol.isImaginary()) {\r\n                return complex.evaluate(symbol, Settings.LOG);\r\n            }\r\n\r\n            if(symbol.isConstant() && typeof base !== 'undefined' && base.isConstant()) {\r\n                var log_sym = Math.log(symbol);\r\n                var log_base = Math.log(base);\r\n                retval = new Symbol(log_sym / log_base);\r\n            }\r\n            else if(symbol.group === EX && symbol.power.multiplier.lessThan(0) || symbol.power.toString() === '-1') {\r\n                symbol.power.negate();\r\n                //move the negative outside but keep the positive inside :)\r\n                retval = log(symbol).negate();\r\n            }\r\n            else if(symbol.value === 'e' && symbol.multiplier.equals(1)) {\r\n                var p = symbol.power;\r\n                retval = isSymbol(p) ? p : new Symbol(p);\r\n            }\r\n            else if(symbol.group === FN && symbol.fname === 'exp') {\r\n                var s = symbol.args[0];\r\n                if(symbol.multiplier.equals(1))\r\n                    retval = _.multiply(s, new Symbol(symbol.power));\r\n                else\r\n                    retval = _.symfunction(Settings.LOG, [symbol]);\r\n            }\r\n            else if(Settings.PARSE2NUMBER && isNumericSymbol(symbol)) {\r\n                // Parse for safety.\r\n                symbol = _.parse(symbol);\r\n\r\n                var img_part;\r\n                if(symbol.multiplier.lessThan(0)) {\r\n                    symbol.negate();\r\n                    img_part = _.multiply(new Symbol(Math.PI), new Symbol('i'));\r\n                }\r\n\r\n                retval = new Symbol(Math.log(symbol.multiplier.toDecimal()));\r\n\r\n                if(img_part) {\r\n                    retval = _.add(retval, img_part);\r\n                }\r\n\r\n            }\r\n            else {\r\n                var s;\r\n                if(!symbol.power.equals(1) && !symbol.contains('e')) {\r\n                    s = symbol.group === EX ? symbol.power : new Symbol(symbol.power);\r\n                    symbol.toLinear();\r\n                }\r\n                //log(a,a) = 1 since the base is allowed to be changed.\r\n                //This was pointed out by Happypig375 in issue #280\r\n                if(arguments.length > 1 && allSame(arguments)) {\r\n                    retval = new Symbol(1);\r\n                }\r\n                else {\r\n                    retval = _.symfunction(Settings.LOG, arguments);\r\n                }\r\n\r\n                if(s)\r\n                    retval = _.multiply(s, retval);\r\n            }\r\n\r\n            return retval;\r\n        }\r\n\r\n        /**\r\n         * Round a number up to s decimal places\r\n         * @param {Number} x\r\n         * @param {int} s - the number of decimal places\r\n         * @returns {undefined}\r\n         */\r\n        function round(x, s) {\r\n            var sIsConstant = s && s.isConstant() || typeof s === 'undefined';\r\n            if(x.isConstant() && sIsConstant) {\r\n                var v, e, exp, retval;\r\n                v = x;\r\n                //round the coefficient of then number but not the actual decimal value\r\n                //we know this because a negative number was passed\r\n                if(s && s.lessThan(0)) {\r\n                    s = abs(s);\r\n                    //convert the number to exponential form\r\n                    e = Number(x).toExponential().toString().split('e');\r\n                    //point v to the coefficient of then number\r\n                    v = e[0];\r\n                    //set the expontent\r\n                    exp = e[1];\r\n                }\r\n                //round the number to the requested precision\r\n                retval = new Symbol(nround(v, Number(s || 0)));\r\n                //if there's a exponent then put it back\r\n                return _.multiply(retval, _.pow(new Symbol(10), new Symbol(exp || 0)))\r\n            }\r\n\r\n\r\n            return _.symfunction('round', arguments);\r\n        }\r\n\r\n        /**\r\n         * Gets the quadrant of the trig function\r\n         * @param {Frac} m\r\n         * @returns {Int}\r\n         */\r\n        function getQuadrant(m) {\r\n            var v = m % 2, quadrant;\r\n\r\n            if(v < 0)\r\n                v = 2 + v; //put it in terms of pi\r\n\r\n            if(v >= 0 && v <= 0.5)\r\n                quadrant = 1;\r\n            else if(v > 0.5 && v <= 1)\r\n                quadrant = 2;\r\n            else if(v > 1 && v <= 1.5)\r\n                quadrant = 3;\r\n            else\r\n                quadrant = 4;\r\n            return quadrant;\r\n        }\r\n\r\n        /*\r\n         * Serves as a bridge between numbers and bigNumbers\r\n         * @param {Frac|Number} n\r\n         * @returns {Symbol}\r\n         */\r\n        function bigConvert(n) {\r\n            if(!isFinite(n)) {\r\n                var sign = Math.sign(n);\r\n                var r = new Symbol(String(Math.abs(n)));\r\n                r.multiplier = r.multiplier.multiply(new Frac(sign));\r\n                return r;\r\n            }\r\n            if(isSymbol(n))\r\n                return n;\r\n            if(typeof n === 'number') {\r\n                try {\r\n                    n = Frac.simple(n);\r\n                }\r\n                catch(e) {\r\n                    n = new Frac(n);\r\n                }\r\n            }\r\n\r\n            var symbol = new Symbol(0);\r\n            symbol.multiplier = n;\r\n            return symbol;\r\n        }\r\n        ;\r\n\r\n        function clean(symbol) {\r\n            // handle functions with numeric values\r\n            // handle denominator within denominator\r\n            // handle trig simplifications\r\n            var g = symbol.group, retval;\r\n            //Now let's get to work\r\n            if(g === CP) {\r\n                var num = symbol.getNum(),\r\n                        den = symbol.getDenom() || new Symbol(1),\r\n                        p = Number(symbol.power),\r\n                        factor = new Symbol(1);\r\n                if(Math.abs(p) === 1) {\r\n                    den.each(function (x) {\r\n                        if(x.group === CB) {\r\n                            factor = _.multiply(factor, clean(x.getDenom()));\r\n                        }\r\n                        else if(x.power.lessThan(0)) {\r\n                            factor = _.multiply(factor, clean(x.clone().toUnitMultiplier()));\r\n                        }\r\n                    });\r\n\r\n                    var new_den = new Symbol(0);\r\n                    //now divide out the factor and add to new den\r\n                    den.each(function (x) {\r\n                        new_den = _.add(_.divide(x, factor.clone()), new_den);\r\n                    });\r\n\r\n                    factor.invert(); //invert so it can be added to the top\r\n                    var new_num;\r\n                    if(num.isComposite()) {\r\n                        new_num = new Symbol(0);\r\n                        num.each(function (x) {\r\n                            new_num = _.add(_.multiply(clean(x), factor.clone()), new_num);\r\n                        });\r\n                    }\r\n                    else\r\n                        new_num = _.multiply(factor, num);\r\n\r\n                    retval = _.divide(new_num, new_den);\r\n                }\r\n            }\r\n            else if(g === CB) {\r\n                retval = new Symbol(1);\r\n                symbol.each(function (x) {\r\n                    retval = _.multiply(retval, _.clean(x));\r\n                });\r\n            }\r\n            else if(g === FN) {\r\n                if(symbol.args.length === 1 && symbol.args[0].isConstant())\r\n                    retval = block('PARSE2NUMBER', function () {\r\n                        return _.parse(symbol);\r\n                    }, true);\r\n            }\r\n\r\n            if(!retval)\r\n                retval = symbol;\r\n\r\n            return retval;\r\n        }\r\n\r\n        /**\r\n         * A wrapper for the expand function\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function expandall(symbol, opt) {\r\n            opt = opt || {\r\n                expand_denominator: true,\r\n                expand_functions: true\r\n            };\r\n            return expand(symbol, opt);\r\n        }\r\n        /**\r\n         * Expands a symbol\r\n         * @param symbol\r\n         */\r\n        // Old expand\r\n        function expand(symbol, opt) {\r\n            if(Array.isArray(symbol)) {\r\n                return symbol.map(function (x) {\r\n                    return expand(x, opt);\r\n                });\r\n            }\r\n            opt = opt || {};\r\n            //deal with parenthesis\r\n            if(symbol.group === FN && symbol.fname === '') {\r\n                var f = expand(symbol.args[0], opt);\r\n                var x = expand(_.pow(f, _.parse(symbol.power)), opt);\r\n                return _.multiply(_.parse(symbol.multiplier), x).distributeMultiplier();\r\n            }\r\n            // We can expand these groups so no need to waste time. Just return and be done.\r\n            if([N, P, S].indexOf(symbol.group) !== -1) {\r\n                return symbol; //nothing to do\r\n            }\r\n\r\n            var original = symbol.clone();\r\n\r\n            // Set up a try-catch block. If anything goes wrong then we simply return the original symbol\r\n            try {\r\n                // Store the power and multiplier\r\n                var m = symbol.multiplier.toString();\r\n                var p = Number(symbol.power);\r\n                var retval = symbol;\r\n\r\n                // Handle (a+b)^2 | (x+x^2)^2\r\n                if(symbol.isComposite() && isInt(symbol.power) && symbol.power > 0) {\r\n                    var n = p - 1;\r\n                    // Strip the expression of it's multiplier and power. We'll call it f. The power will be p and the multiplier m.\r\n                    var f = new Symbol(0);\r\n\r\n                    symbol.each(function (x) {\r\n                        f = _.add(f, expand(_.parse(x), opt));\r\n                    });\r\n\r\n                    var expanded = _.parse(f);\r\n\r\n                    for(var i = 0; i < n; i++) {\r\n                        expanded = mix(expanded, f, opt);\r\n                    }\r\n\r\n                    retval = _.multiply(_.parse(m), expanded).distributeMultiplier();\r\n                }\r\n                else if(symbol.group === FN && opt.expand_functions === true) {\r\n                    var args = [];\r\n                    // Expand function the arguments\r\n                    symbol.args.forEach(function (x) {\r\n                        args.push(expand(x, opt));\r\n                    });\r\n                    // Put back the power and multiplier\r\n                    retval = _.pow(_.symfunction(symbol.fname, args), _.parse(symbol.power));\r\n                    retval = _.multiply(retval, _.parse(symbol.multiplier));\r\n                }\r\n                else if(symbol.isComposite() && isInt(symbol.power) && symbol.power < 0 && opt.expand_denominator === true) {\r\n                    // Invert it. Expand it and then re-invert it.\r\n                    symbol = symbol.invert();\r\n                    retval = expand(symbol, opt);\r\n                    retval.invert();\r\n                }\r\n                else if(symbol.group === CB) {\r\n                    var rank = function (s) {\r\n                        switch(s.group) {\r\n                            case CP:\r\n                                return 0;\r\n                            case PL:\r\n                                return 1;\r\n                            case CB:\r\n                                return 2;\r\n                            case FN:\r\n                                return 3;\r\n                            default:\r\n                                return 4;\r\n                        }\r\n                    };\r\n                    // Consider (a+b)(c+d). The result will be (a*c+a*d)+(b*c+b*d).\r\n                    // We start by moving collecting the symbols. We want others>FN>CB>PL>CP\r\n                    var symbols = symbol.collectSymbols().sort(function (a, b) {\r\n                        return rank(b) - rank(a);\r\n                    })\r\n                            // Distribute the power to each symbol and expand\r\n                            .map(function (s) {\r\n                                var x = _.pow(s, _.parse(p));\r\n                                var e = expand(x, opt);\r\n                                return e;\r\n                            });\r\n\r\n                    var f = symbols.pop();\r\n\r\n                    // If the first symbols isn't a composite then we're done\r\n                    if(f.isComposite() && f.isLinear()) {\r\n                        symbols.forEach(function (s) {\r\n                            f = mix(f, s, opt);\r\n                        });\r\n\r\n                        // If f is of group PL or CP then we can expand some more\r\n                        if(f.isComposite()) {\r\n                            if(f.power > 1) {\r\n                                f = expand(_.pow(f, _.parse(f.power)), opt);\r\n                            }\r\n                            // Put back the multiplier\r\n                            retval = _.multiply(_.parse(m), f).distributeMultiplier();\r\n                            ;\r\n                        }\r\n                        else {\r\n                            // Everything is expanded at this point so if it's still a CB\r\n                            // then just return the symbol\r\n                            retval = f;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Just multiply back in the expanded form of each\r\n                        retval = f;\r\n                        symbols.forEach(function (s) {\r\n                            retval = _.multiply(retval, s);\r\n                        });\r\n                        // Put back the multiplier\r\n                        retval = _.multiply(retval, _.parse(m)).distributeMultiplier();\r\n                    }\r\n\r\n                    // TODO: This exists solely as a quick fix for sqrt(11)*sqrt(33) not simplifying.\r\n                    if(retval.group === CB) {\r\n                        retval = _.parse(retval);\r\n                    }\r\n                }\r\n                else {\r\n                    // Otherwise just return the expression\r\n                    retval = symbol;\r\n                }\r\n                // Final cleanup and return\r\n                return retval;\r\n            }\r\n            catch(e) {\r\n                return original;\r\n            }\r\n\r\n            return original;\r\n        }\r\n\r\n        /**\r\n         * Returns an identity matrix of nxn\r\n         * @param {Number} n\r\n         * @returns {Matrix}\r\n         */\r\n        function imatrix(n) {\r\n            return Matrix.identity(n);\r\n        }\r\n\r\n        /**\r\n         * Retrieves and item from a vector\r\n         * @param {Vector} vector\r\n         * @param {Number} index\r\n         * @returns {Vector|Symbol}\r\n         */\r\n        function vecget(vector, index) {\r\n            if(index.isConstant() && isInt(index))\r\n                return vector.elements[index];\r\n            return _.symfunction('vecget', arguments);\r\n        }\r\n\r\n        /**\r\n         * Removes duplicates from a vector\r\n         * @param {Vector} vector\r\n         * @param {Number} tolerance\r\n         * @returns {Vector}\r\n         */\r\n        function vectrim(vector, tolerance) {\r\n            tolerance = typeof tolerance === 'undefined' ? 1e-14 : tolerance;\r\n\r\n            vector = vector.clone();\r\n\r\n            tolerance = Number(tolerance);\r\n            //place algebraic solutions first\r\n            vector.elements.sort(function (a, b) {\r\n                return b.group - a.group;\r\n            });\r\n            //depending on the start point we may have duplicates so we need to clean those up a bit.\r\n            //start by creating an object with the solution and the numeric value. This way we don't destroy algebraic values\r\n            vector.elements = removeDuplicates(vector.elements, function (a, b) {\r\n                var diff = Number(_.subtract(evaluate(a), evaluate(b)).abs());\r\n                return diff <= tolerance;\r\n            });\r\n\r\n            return vector;\r\n        }\r\n\r\n        /**\r\n         * Set a value for a vector at a given index\r\n         * @param {Vector} vector\r\n         * @param {Number} index\r\n         * @param {Symbol} value\r\n         * @returns {Vector}\r\n         */\r\n        function vecset(vector, index, value) {\r\n            if(!index.isConstant)\r\n                return _.symfunction('vecset', arguments);\r\n            vector.elements[index] = value;\r\n            return vector;\r\n        }\r\n\r\n        function matget(matrix, i, j) {\r\n            if(i.isConstant() && j.isConstant())\r\n                return matrix.elements[i][j];\r\n            return _.symfunction('matget', arguments);\r\n        }\r\n\r\n        function matgetrow(matrix, i) {\r\n            if(i.isConstant())\r\n                return new Matrix(matrix.elements[i]);\r\n            return _.symfunction('matgetrow', arguments);\r\n        }\r\n\r\n        function matsetrow(matrix, i, x) {\r\n            //handle symbolics\r\n            if(!i.isConstant())\r\n                return _.symfunction('matsetrow', arguments);\r\n            if(matrix.elements[i].length !== x.elements.length)\r\n                throw new DimensionError('Matrix row must match row dimensions!');\r\n            var M = matrix.clone();\r\n            M.elements[i] = x.clone().elements;\r\n            return M;\r\n        }\r\n\r\n        function matgetcol(matrix, col_index) {\r\n            //handle symbolics\r\n            if(!col_index.isConstant())\r\n                return _.symfunction('matgetcol', arguments);\r\n            col_index = Number(col_index);\r\n            var M = Matrix.fromArray([]);\r\n            matrix.each(function (x, i, j) {\r\n                if(j === col_index) {\r\n                    M.elements.push([x.clone()]);\r\n                }\r\n            });\r\n            return M;\r\n        }\r\n\r\n        function matsetcol(matrix, j, col) {\r\n            //handle symbolics\r\n            if(!j.isConstant())\r\n                return _.symfunction('matsetcol', arguments);\r\n            j = Number(j);\r\n            if(matrix.rows() !== col.elements.length)\r\n                throw new DimensionError('Matrix columns must match number of columns!');\r\n            col.each(function (x, i) {\r\n                matrix.set(i - 1, j, x.elements[0].clone());\r\n            });\r\n            return matrix;\r\n        }\r\n\r\n\r\n        function matset(matrix, i, j, value) {\r\n            matrix.elements[i][j] = value;\r\n            return matrix;\r\n        }\r\n\r\n        //the constructor for vectors\r\n        function vector() {\r\n            return new Vector([].slice.call(arguments));\r\n        }\r\n\r\n        //the constructor for matrices\r\n        function matrix() {\r\n            return Matrix.fromArray(arguments);\r\n        }\r\n\r\n        //the constructor for sets\r\n        function set() {\r\n            return Set.fromArray(arguments);\r\n        }\r\n\r\n        function determinant(symbol) {\r\n            if(isMatrix(symbol)) {\r\n                return symbol.determinant();\r\n            }\r\n            return symbol;\r\n        }\r\n\r\n        function size(symbol) {\r\n            var retval;\r\n            if(isMatrix(symbol))\r\n                retval = [new Symbol(symbol.cols()), new Symbol(symbol.rows())];\r\n            else if(isVector(symbol) || isSet(symbol))\r\n                retval = new Symbol(symbol.elements.length);\r\n            else\r\n                err('size expects a matrix or a vector');\r\n            return retval;\r\n        }\r\n\r\n        function dot(vec1, vec2) {\r\n            if(isVector(vec1) && isVector(vec2))\r\n                return vec1.dot(vec2);\r\n            err('function dot expects 2 vectors');\r\n        }\r\n\r\n        function cross(vec1, vec2) {\r\n            if(isVector(vec1) && isVector(vec2))\r\n                return vec1.cross(vec2);\r\n            err('function cross expects 2 vectors');\r\n        }\r\n\r\n        function transpose(mat) {\r\n            if(isMatrix(mat))\r\n                return mat.transpose();\r\n            err('function transpose expects a matrix');\r\n        }\r\n\r\n        function invert(mat) {\r\n            if(isMatrix(mat))\r\n                return mat.invert();\r\n            err('invert expects a matrix');\r\n        }\r\n\r\n        //basic set functions\r\n        function union(set1, set2) {\r\n            return set1.union(set2);\r\n        }\r\n\r\n        function intersection(set1, set2) {\r\n            return set1.intersection(set2);\r\n        }\r\n\r\n        function contains(set1, e) {\r\n            return set1.contains(e);\r\n        }\r\n\r\n        function difference(set1, set2) {\r\n            return set1.difference(set2);\r\n        }\r\n\r\n        function intersects(set1, set2) {\r\n            return new Symbol(Number(set1.intersects(set2)));\r\n        }\r\n\r\n        function is_subset(set1, set2) {\r\n            return new Symbol(Number(set1.is_subset(set2)));\r\n        }\r\n\r\n        function print() {\r\n            arguments2Array(arguments).map(function (x) {\r\n                console.log(x.toString());\r\n            });\r\n        }\r\n\r\n        function testSQRT(symbol) {\r\n            //wrap the symbol in sqrt. This eliminates one more check down the line.\r\n            if(!isSymbol(symbol.power) && symbol.power.absEquals(0.5)) {\r\n                var sign = symbol.power.sign();\r\n                //don't devide the power directly. Notice the use of toString. This makes it possible\r\n                //to use a bigNumber library in the future\r\n                var retval = sqrt(symbol.group === P ? new Symbol(symbol.value) : symbol.toLinear());\r\n                //place back the sign of the power\r\n                if(sign < 0)\r\n                    retval.invert();\r\n                return retval;\r\n            }\r\n            return symbol;\r\n        }\r\n\r\n        //try to reduce a symbol by pulling its power\r\n        function testPow(symbol) {\r\n            if(symbol.group === P) {\r\n                var v = symbol.value;\r\n\r\n                var fct = primeFactors(v)[0];\r\n\r\n                //safety\r\n                if(!fct) {\r\n                    warn('Unable to compute prime factors. This should not happen. Please review and report.');\r\n                    return symbol;\r\n                }\r\n\r\n                var n = new Frac(Math.log(v) / Math.log(fct)),\r\n                        p = n.multiply(symbol.power);\r\n\r\n                //we don't want a more complex number than before\r\n                if(p.den > symbol.power.den)\r\n                    return symbol;\r\n\r\n                if(isInt(p))\r\n                    symbol = Symbol(Math.pow(fct, p));\r\n                else\r\n                    symbol = new Symbol(fct).setPower(p);\r\n            }\r\n\r\n            return symbol;\r\n        }\r\n\r\n        //Link the functions to the parse so they're available outside of the library.\r\n        //This is strictly for convenience and may be deprecated.\r\n        this.expand = expand;\r\n        this.round = round;\r\n        this.clean = clean;\r\n        this.sqrt = sqrt;\r\n        this.cbrt = cbrt;\r\n        this.abs = abs;\r\n        this.log = log;\r\n        this.rationalize = rationalize;\r\n        this.nthroot = nthroot;\r\n        this.arg = arg;\r\n        this.conjugate = conjugate;\r\n        this.imagpart = imagpart;\r\n        this.realpart = realpart;\r\n\r\n        //TODO:\r\n        //Utilize the function below instead of the linked function\r\n        this.getFunction = function (name) {\r\n            return functions[name][0];\r\n        };\r\n\r\n//Parser.methods ===============================================================\r\n        this.addPreprocessor = function (name, action, order, shift_cells) {\r\n            var names = preprocessors.names;\r\n            var actions = preprocessors.actions;\r\n            if((typeof action !== 'function')) //the person probably forgot to specify a name\r\n                throw new PreprocessorError('Incorrect parameters. Function expected!');\r\n            if(!order) {\r\n                names.push(name);\r\n                actions.push(action);\r\n            }\r\n            else {\r\n                if(shift_cells) {\r\n                    names.splice(order, 0, name);\r\n                    actions.splice(order, 0, action);\r\n                }\r\n                else {\r\n                    names[order] = name;\r\n                    actions[order] = action;\r\n                }\r\n            }\r\n        };\r\n\r\n        this.getPreprocessors = function () {\r\n            var preprocessors = {};\r\n            for(var i = 0, l = preprocessors.names.length; i < l; i++) {\r\n                var name = preprocessors.names[i];\r\n                preprocessors[name] = {\r\n                    order: i,\r\n                    action: preprocessors.actions[i]\r\n                };\r\n            }\r\n            return preprocessors;\r\n        };\r\n\r\n        this.removePreprocessor = function (name, shift_cells) {\r\n            var i = preprocessors.names.indexOf(name);\r\n            if(shift_cells) {\r\n                remove(preprocessors.names, i);\r\n                remove(preprocessors.actions, i);\r\n            }\r\n            else {\r\n                preprocessors.names[i] = undefined;\r\n                preprocessors.actions[i] = undefined;\r\n            }\r\n        };\r\n\r\n        //The loader for functions which are not part of Math2\r\n        this.mapped_function = function () {\r\n            var subs = {},\r\n                    params = this.params;\r\n\r\n            for(var i = 0; i < params.length; i++) {\r\n                subs[params[i]] = String(arguments[i]);\r\n            }\r\n\r\n            return _.parse(this.body, subs);\r\n        };\r\n        /**\r\n         * Adds two symbols\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.add = function (a, b) {\r\n            var aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b);\r\n            //we're dealing with two symbols\r\n            if(aIsSymbol && bIsSymbol) {\r\n                //forward the adding of symbols with units to the Unit module\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.add(a, b);\r\n                }\r\n                //handle Infinity\r\n                //https://www.encyclopediaofmath.org/index.php/Infinity\r\n                if(a.isInfinity || b.isInfinity) {\r\n                    var aneg = a.multiplier.lessThan(0),\r\n                            bneg = b.multiplier.lessThan(0);\r\n\r\n                    if(a.isInfinity && b.isInfinity && aneg !== bneg) {\r\n                        throw new UndefinedError('(' + a + ')+(' + b + ') is not defined!');\r\n                    }\r\n\r\n                    var inf = Symbol.infinity();\r\n                    if(bneg)\r\n                        inf.negate();\r\n                    return inf;\r\n                }\r\n\r\n                if(a.isComposite() && a.isLinear() && b.isComposite() && b.isLinear()) {\r\n                    a.distributeMultiplier();\r\n                    b.distributeMultiplier();\r\n                    // Fix for issue #606\r\n                    if(b.length > a.length && a.group === b.group) {\r\n                        [a, b] = [b, a];\r\n                    }\r\n                }\r\n                \r\n                //no need to waste time on zeroes\r\n                if(a.multiplier.equals(0))\r\n                    return b;\r\n                if(b.multiplier.equals(0))\r\n                    return a;\r\n\r\n                if(a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\r\n                    var result = new Symbol(a.multiplier.add(b.multiplier).toDecimal(Settings.PRECISION));\r\n                    return result;\r\n                }\r\n\r\n                var g1 = a.group,\r\n                        g2 = b.group,\r\n                        ap = a.power.toString(),\r\n                        bp = b.power.toString();\r\n\r\n                //always keep the greater group on the left.\r\n                if(g1 < g2 || (g1 === g2 && ap > bp && bp > 0)) {\r\n                    return this.add(b, a);\r\n                }\r\n\r\n                /*note to self: Please don't forget about this dilemma ever again. In this model PL and CB goes crazy\r\n                 * because it doesn't know which one to prioritize. */\r\n                //correction to PL dilemma\r\n                if(g1 === CB && g2 === PL && a.value === b.value) {\r\n                    //swap\r\n                    var t = a;\r\n                    a = b;\r\n                    b = t;\r\n                    g1 = a.group;\r\n                    g2 = b.group;\r\n                    ap = a.power.toString();\r\n                    bp = b.power.toString();\r\n                }\r\n\r\n                var powEQ = ap === bp,\r\n                        v1 = a.value,\r\n                        v2 = b.value,\r\n                        aIsComposite = a.isComposite(),\r\n                        bIsComposite = b.isComposite(),\r\n                        h1, h2, result;\r\n\r\n                if(aIsComposite)\r\n                    h1 = text(a, 'hash');\r\n                if(bIsComposite)\r\n                    h2 = text(b, 'hash');\r\n\r\n                if(g1 === CP && g2 === CP && b.isLinear() && !a.isLinear() && h1 !== h2) {\r\n                    return this.add(b, a);\r\n                }\r\n\r\n                //PL & PL should compare hashes and not values e.g. compare x+x^2 with x+x^3 and not x with x\r\n                if(g1 === PL && g2 === PL) {\r\n                    v1 = h1;\r\n                    v2 = h2;\r\n                }\r\n\r\n                var PN = g1 === P && g2 === N,\r\n                        PNEQ = a.value === b.multiplier.toString(),\r\n                        valEQ = (v1 === v2 || h1 === h2 && h1 !== undefined || (PN && PNEQ));\r\n\r\n                //equal values, equal powers\r\n                if(valEQ && powEQ && g1 === g2) {\r\n                    //make sure to convert N to something P can work with\r\n                    if(PN)\r\n                        b = b.convert(P);//CL\r\n\r\n                    //handle PL\r\n                    if(g1 === PL && (g2 === S || g2 === P)) {\r\n                        a.distributeMultiplier();\r\n                        result = a.attach(b);\r\n                    }\r\n                    else {\r\n                        result = a;//CL\r\n                        if(a.multiplier.isOne() && b.multiplier.isOne() && g1 === CP && a.isLinear() && b.isLinear()) {\r\n                            for(var s in b.symbols) {\r\n                                var x = b.symbols[s];\r\n                                result.attach(x);\r\n                            }\r\n                        }\r\n                        else\r\n                            result.multiplier = result.multiplier.add(b.multiplier);\r\n                    }\r\n                }\r\n                //equal values uneven powers\r\n                else if(valEQ && g1 !== PL) {\r\n                    //break the tie for e.g. (x+1)+((x+1)^2+(x+1)^3)\r\n                    if(g1 === CP && g2 === PL) {\r\n                        b.insert(a, 'add');\r\n                        result = b;\r\n                    }\r\n                    else {\r\n                        result = Symbol.shell(PL).attach([a, b]);\r\n                        //update the hash\r\n                        result.value = g1 === PL ? h1 : v1;\r\n                    }\r\n                }\r\n                else if(aIsComposite && a.isLinear()) {\r\n                    var canIterate = g1 === g2,\r\n                            bothPL = g1 === PL && g2 === PL;\r\n\r\n                    //we can only iterate group PL if they values match\r\n                    if(bothPL)\r\n                        canIterate = a.value === b.value;\r\n                    //distribute the multiplier over the entire symbol\r\n                    a.distributeMultiplier();\r\n\r\n                    if(b.isComposite() && b.isLinear() && canIterate) {\r\n                        b.distributeMultiplier();\r\n                        //CL\r\n                        for(var s in b.symbols) {\r\n                            var x = b.symbols[s];\r\n                            a.attach(x);\r\n                        }\r\n                        result = a;\r\n                    }\r\n                    //handle cases like 2*(x+x^2)^2+2*(x+x^2)^3+4*(x+x^2)^2\r\n                    else if(bothPL && a.value !== h2 || g1 === PL && !valEQ) {\r\n                        result = Symbol.shell(CP).attach([a, b]);\r\n                        result.updateHash();\r\n\r\n                    }\r\n                    else {\r\n                        result = a.attach(b);\r\n                    }\r\n                }\r\n                else {\r\n                    if(g1 === FN && a.fname === SQRT && g2 !== EX && b.power.equals(0.5)) {\r\n                        var m = b.multiplier.clone();\r\n                        b = sqrt(b.toUnitMultiplier().toLinear());\r\n                        b.multiplier = m;\r\n                    }\r\n                    //fix for issue #3 and #159\r\n                    if(a.length === 2 && b.length === 2 && even(a.power) && even(b.power)) {\r\n                        result = _.add(expand(a), expand(b));\r\n                    }\r\n                    else {\r\n                        result = Symbol.shell(CP).attach([a, b]);\r\n                        result.updateHash();\r\n                    }\r\n                }\r\n\r\n                if(result.multiplier.equals(0))\r\n                    result = new Symbol(0);\r\n\r\n                //make sure to remove unnecessary wraps\r\n                if(result.length === 1) {\r\n                    var m = result.multiplier;\r\n                    result = firstObject(result.symbols);\r\n                    result.multiplier = result.multiplier.multiply(m);\r\n                }\r\n\r\n                return result;\r\n            }\r\n            else {\r\n                //keep symbols to the right\r\n                if(bIsSymbol && !aIsSymbol) {\r\n                    var t = a;\r\n                    a = b;\r\n                    b = t; //swap\r\n                    t = bIsSymbol;\r\n                    bIsSymbol = aIsSymbol;\r\n                    aIsSymbol = t;\r\n                }\r\n\r\n                var bIsMatrix = isMatrix(b);\r\n\r\n                if(aIsSymbol && bIsMatrix) {\r\n                    var M = new Matrix();\r\n                    b.eachElement(function (e, i, j) {\r\n                        M.set(i, j, _.add(a.clone(), e));\r\n                    });\r\n\r\n                    b = M\r\n                }\r\n                else {\r\n                    if(isMatrix(a) && bIsMatrix) {\r\n                        b = a.add(b);\r\n                    }\r\n                    else if(aIsSymbol && isVector(b)) {\r\n                        b.each(function (x, i) {\r\n                            i--;\r\n                            b.elements[i] = _.add(a.clone(), b.elements[i]);\r\n                        });\r\n                    }\r\n                    else {\r\n                        if(isVector(a) && isVector(b)) {\r\n                            b.each(function (x, i) {\r\n                                i--;\r\n                                b.elements[i] = _.add(a.elements[i], b.elements[i]);\r\n                            });\r\n                        }\r\n                        else if(isVector(a) && isMatrix(b)) {\r\n                            //try to convert a to a matrix\r\n                            return _.add(b, a);\r\n                        }\r\n                        else if(isMatrix(a) && isVector(b)) {\r\n                            if(b.elements.length === a.rows()) {\r\n                                var M = new Matrix(), l = a.cols();\r\n                                b.each(function (e, i) {\r\n                                    var row = [];\r\n                                    for(var j = 0; j < l; j++) {\r\n                                        row.push(_.add(a.elements[i - 1][j].clone(), e.clone()));\r\n                                    }\r\n                                    M.elements.push(row);\r\n                                });\r\n                                return M;\r\n                            }\r\n                            else\r\n                                err('Dimensions must match!');\r\n                        }\r\n                    }\r\n                }\r\n                return b;\r\n            }\r\n\r\n        };\r\n        /**\r\n         * Gets called when the parser finds the - operator. Not the prefix operator. See this.add\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.subtract = function (a, b) {\r\n            var aIsSymbol = aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b), t;\r\n\r\n            if(aIsSymbol && bIsSymbol) {\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.subtract(a, b);\r\n                }\r\n                return this.add(a, b.negate());\r\n            }\r\n            else {\r\n                if(bIsSymbol && isVector(a)) {\r\n                    b = a.map(function (x) {\r\n                        return _.subtract(x, b.clone());\r\n                    });\r\n                }\r\n                else if(aIsSymbol && isVector(b)) {\r\n                    b = b.map(function (x) {\r\n                        return _.subtract(a.clone(), x);\r\n                    });\r\n                }\r\n                else if(isVector(a) && isVector(b)) {\r\n                    if(a.dimensions() === b.dimensions())\r\n                        b = a.subtract(b);\r\n                    else\r\n                        _.error('Unable to subtract vectors. Dimensions do not match.');\r\n                }\r\n                else if(isMatrix(a) && isVector(b)) {\r\n                    if(b.elements.length === a.rows()) {\r\n                        var M = new Matrix(), l = a.cols();\r\n                        b.each(function (e, i) {\r\n                            var row = [];\r\n                            for(var j = 0; j < l; j++) {\r\n                                row.push(_.subtract(a.elements[i - 1][j].clone(), e.clone()));\r\n                            }\r\n                            M.elements.push(row);\r\n                        });\r\n                        return M;\r\n                    }\r\n                    else\r\n                        err('Dimensions must match!');\r\n                }\r\n                else if(isVector(a) && isMatrix(b)) {\r\n                    var M = b.clone().negate();\r\n                    return _.add(M, a);\r\n                }\r\n                else if(isMatrix(a) && isMatrix(b)) {\r\n                    b = a.subtract(b);\r\n                }\r\n                else if(isMatrix(a) && bIsSymbol) {\r\n                    var M = new Matrix();\r\n                    a.each(function (x, i, j) {\r\n                        M.set(i, j, _.subtract(x, b.clone()));\r\n                    });\r\n                    b = M;\r\n                }\r\n                else if(aIsSymbol && isMatrix(b)) {\r\n                    var M = new Matrix();\r\n                    b.each(function (x, i, j) {\r\n                        M.set(i, j, _.subtract(a.clone(), x));\r\n                    });\r\n                    b = M;\r\n                }\r\n                return b;\r\n            }\r\n        };\r\n        /**\r\n         * Gets called when the parser finds the * operator. See this.add\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.multiply = function (a, b) {\r\n            var aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b);\r\n            //we're dealing with function assignment here\r\n            if(aIsSymbol && b instanceof Collection) {\r\n                b.elements.push(a);\r\n                return b;\r\n            }\r\n            if(aIsSymbol && bIsSymbol) {\r\n                //if it has a unit then add it and return it right away.\r\n                if(b.isUnit) {\r\n                    var result = a.clone();\r\n                    a.unit = b;\r\n                    return result;\r\n                }\r\n                \r\n                //if it has units then just forward that problem to the unit module\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.multiply(a, b);\r\n                }\r\n\r\n                //handle Infinty\r\n                if(a.isInfinity || b.isInfinity) {\r\n                    if(a.equals(0) || b.equals(0))\r\n                        throw new UndefinedError(a + '*' + b + ' is undefined!');\r\n                    //x/infinity\r\n                    if(b.power.lessThan(0)) {\r\n                        if(!a.isInfinity) {\r\n                            return new Symbol(0);\r\n                        }\r\n                        else {\r\n                            throw new UndefinedError('Infinity/Infinity is not defined!');\r\n                        }\r\n                    }\r\n\r\n                    var sign = a.multiplier.multiply(b.multiplier).sign(),\r\n                            inf = Symbol.infinity();\r\n                    if(a.isConstant() || b.isConstant() || (a.isInfinity && b.isInfinity)) {\r\n                        if(sign < 0)\r\n                            inf.negate();\r\n\r\n                        return inf;\r\n                    }\r\n                }\r\n                //the quickies\r\n                if(a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\r\n                    var t = new bigDec(a.multiplier.toDecimal()).times(new bigDec(b.multiplier.toDecimal())).toFixed();\r\n                    var retval = new Symbol(t);\r\n                    return retval;\r\n                }\r\n\r\n                //don't waste time\r\n                if(a.isOne()) {\r\n                    return b.clone();\r\n                }\r\n                if(b.isOne()) {\r\n                    return a.clone();\r\n                }\r\n\r\n                if(a.multiplier.equals(0) || b.multiplier.equals(0))\r\n                    return new Symbol(0);\r\n\r\n                if(b.group > a.group && !(b.group === CP))\r\n                    return this.multiply(b, a);\r\n                //correction for PL/CB dilemma\r\n                if(a.group === CB && b.group === PL && a.value === b.value) {\r\n                    var t = a;\r\n                    a = b;\r\n                    b = t;//swap\r\n                }\r\n\r\n                var g1 = a.group,\r\n                        g2 = b.group,\r\n                        bnum = b.multiplier.num,\r\n                        bden = b.multiplier.den;\r\n\r\n                if(g1 === FN && a.fname === SQRT && !b.isConstant() && a.args[0].value === b.value && !a.args[0].multiplier.lessThan(0)) {\r\n                    //unwrap sqrt\r\n                    var a_pow = a.power;\r\n                    var a_multiplier = _.parse(a.multiplier);\r\n                    a = _.multiply(a_multiplier, a.args[0].clone());\r\n                    a.setPower(new Frac(0.5).multiply(a_pow));\r\n                    g1 = a.group;\r\n                }\r\n                //simplify n/sqrt(n). Being very specific\r\n                else if(g1 === FN && a.fname === SQRT && a.multiplier.equals(1) && a.power.equals(-1) && b.isConstant() && a.args[0].equals(b)) {\r\n                    a = _.symfunction(SQRT, [b.clone()]);\r\n                    b = new Symbol(1);\r\n                }\r\n                ;\r\n\r\n                var v1 = a.value,\r\n                        v2 = b.value,\r\n                        sign = new Frac(a.sign()),\r\n                        //since P is just a morphed version of N we need to see if they relate\r\n                        ONN = (g1 === P && g2 === N && b.multiplier.equals(a.value)),\r\n                        //don't multiply the multiplier of b since that's equal to the value of a\r\n                        m = ONN ? new Frac(1).multiply(a.multiplier).abs() : a.multiplier.multiply(b.multiplier).abs(),\r\n                        result = a.clone().toUnitMultiplier();\r\n                b = b.clone().toUnitMultiplier(true);\r\n\r\n                //further simplification of sqrt\r\n                if(g1 === FN && g2 === FN) {\r\n                    var u = a.args[0].clone();\r\n                    var v = b.args[0].clone();\r\n                    if(a.fname === SQRT && b.fname === SQRT && a.isLinear() && b.isLinear()) {\r\n\r\n                        var q = _.divide(u, v).invert();\r\n                        if(q.gt(1) && isInt(q)) {\r\n                            //b contains a factor a which can be moved to a\r\n                            result = _.multiply(a.args[0].clone(), sqrt(q.clone()));\r\n                            b = new Symbol(1);\r\n                        }\r\n                    }\r\n                    //simplify factorial but only if\r\n                    //1 - It's division so b will have a negative power\r\n                    //2 - We're not dealing with factorials of numbers\r\n                    else if(a.fname === FACTORIAL && b.fname === FACTORIAL && !u.isConstant() && !v.isConstant() && b.power < 0) {\r\n                        //assume that n = positive\r\n                        var d = _.subtract(u.clone(), v.clone());\r\n\r\n                        //if it's not numeric then we don't know if we can simplify so just return\r\n                        if(d.isConstant()) {\r\n\r\n                            //there will never be a case where d == 0 since this will already have\r\n                            //been handled at the beginning of this function\r\n                            t = new Symbol(1);\r\n                            if(d < 0) {\r\n                                //If d is negative then the numerator is larger so expand that\r\n                                for(var i = 0, n = Math.abs(d); i <= n; i++) {\r\n                                    var s = _.add(u.clone(), new Symbol(i));\r\n                                    t = _.multiply(t, s);\r\n                                }\r\n\r\n                                result = _.multiply(_.pow(u, new Symbol(a.power)), _.pow(t, new Symbol(b.power)));\r\n\r\n                                b = new Symbol(1);\r\n                            }\r\n                            else {\r\n                                //Otherwise the denominator is larger so expand that\r\n                                for(var i = 0, n = Math.abs(d); i <= n; i++) {\r\n                                    var s = _.add(v.clone(), new Symbol(i));\r\n                                    t = _.multiply(t, s);\r\n                                }\r\n\r\n                                result = _.multiply(_.pow(t, new Symbol(a.power)), _.pow(v, new Symbol(b.power)));\r\n\r\n                                b = new Symbol(1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                //if both are PL then their hashes have to match\r\n                if(v1 === v2 && g1 === PL && g1 === g2) {\r\n                    v1 = a.text('hash');\r\n                    v2 = b.text('hash');\r\n                }\r\n\r\n                //same issue with (x^2+1)^x*(x^2+1)\r\n                //EX needs an exception when multiplying because it needs to recognize\r\n                //that (x+x^2)^x has the same hash as (x+x^2). The latter is kept as x\r\n                if(g2 === EX && b.previousGroup === PL && g1 === PL) {\r\n                    v1 = text(a, 'hash', EX);\r\n                }\r\n\r\n                if((v1 === v2 || ONN) && !(g1 === PL && (g2 === S || g2 === P || g2 === FN)) && !(g1 === PL && g2 === CB)) {\r\n                    var p1 = a.power,\r\n                            p2 = b.power,\r\n                            isSymbolP1 = isSymbol(p1),\r\n                            isSymbolP2 = isSymbol(p2),\r\n                            toEX = (isSymbolP1 || isSymbolP2);\r\n                    //TODO: this needs cleaning up\r\n                    if(g1 === PL && g2 !== PL && b.previousGroup !== PL && p1.equals(1)) {\r\n                        result = new Symbol(0);\r\n                        a.each(function (x) {\r\n                            result = _.add(result, _.multiply(x, b.clone()));\r\n                        }, true);\r\n                    }\r\n                    else {\r\n                        //add the powers\r\n                        result.power = toEX ? _.add(\r\n                                !(isSymbol(p1)) ? new Symbol(p1) : p1,\r\n                                !(isSymbol(p2)) ? new Symbol(p2) : p2\r\n                                ) : (g1 === N /*don't add powers for N*/ ? p1 : p1.add(p2));\r\n\r\n                        //eliminate zero power values and convert them to numbers\r\n                        if(result.power.equals(0))\r\n                            result = result.convert(N);\r\n\r\n                        //properly convert to EX\r\n                        if(toEX)\r\n                            result.convert(EX);\r\n\r\n                        //take care of imaginaries\r\n                        if(a.imaginary && b.imaginary) {\r\n                            var isEven = even(result.power % 2);\r\n                            if(isEven) {\r\n                                result = new Symbol(1);\r\n                                m.negate();\r\n                            }\r\n                        }\r\n\r\n                        //cleanup: this causes the LaTeX generator to get confused as to how to render the symbol\r\n                        if(result.group !== EX && result.previousGroup)\r\n                            result.previousGroup = undefined;\r\n                        //the sign for b is floating around. Remember we are assuming that the odd variable will carry\r\n                        //the sign but this isn't true if they're equals symbols\r\n                        result.multiplier = result.multiplier.multiply(b.multiplier);\r\n                    }\r\n                }\r\n                else if(g1 === CB && a.isLinear()) {\r\n                    if(g2 === CB)\r\n                        b.distributeExponent();\r\n                    if(g2 === CB && b.isLinear()) {\r\n                        for(var s in b.symbols) {\r\n                            var x = b.symbols[s];\r\n                            result = result.combine(x);\r\n                        }\r\n                        result.multiplier = result.multiplier.multiply(b.multiplier);\r\n                    }\r\n                    else {\r\n                        result.combine(b);\r\n                    }\r\n                }\r\n                else {\r\n                    //the multiplier was already handled so nothing left to do\r\n                    if(g1 !== N) {\r\n                        if(g1 === CB) {\r\n                            result.distributeExponent();\r\n                            result.combine(b);\r\n                        }\r\n                        else if(!b.isOne()) {\r\n                            var bm = b.multiplier.clone();\r\n                            b.toUnitMultiplier();\r\n                            result = Symbol.shell(CB).combine([result, b]);\r\n                            //transfer the multiplier to the outside\r\n                            result.multiplier = result.multiplier.multiply(bm);\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = b.clone().toUnitMultiplier();\r\n                    }\r\n                }\r\n\r\n                if(result.group === P) {\r\n                    var logV = Math.log(result.value),\r\n                            n1 = Math.log(bnum) / logV,\r\n                            n2 = Math.log(bden) / logV,\r\n                            ndiv = m.num / bnum,\r\n                            ddiv = m.den / bden;\r\n                    //we don't want to divide by zero no do we? Strange things happen.\r\n                    if(n1 !== 0 && isInt(n1) && isInt(ndiv)) {\r\n                        result.power = result.power.add(new Frac(n1));\r\n                        m.num /= bnum; //BigInt? Keep that in mind for the future.\r\n                    }\r\n                    if(n2 !== 0 && isInt(n2) && isInt(ddiv)) {\r\n                        result.power = result.power.subtract(new Frac(n2));\r\n                        m.den /= bden; //BigInt? Keep that in mind for the future.\r\n                    }\r\n                }\r\n\r\n                //unpack CB if length is only one\r\n                if(result.length === 1) {\r\n                    var t = result.multiplier;\r\n                    //transfer the multiplier\r\n                    result = firstObject(result.symbols);\r\n                    result.multiplier = result.multiplier.multiply(t);\r\n                }\r\n\r\n                //reduce square root\r\n                var ps = result.power.toString();\r\n                if(even(ps) && result.fname === SQRT) {\r\n                    //grab the sign of the symbol\r\n                    sign = sign * result.sign();\r\n                    var p = result.power;\r\n                    result = result.args[0];\r\n                    result = _.multiply(new Symbol(m), _.pow(result, new Symbol(p.divide(new Frac(2)))));\r\n                    //flip it back to the correct sign\r\n                    if(sign < 0)\r\n                        result.negate()\r\n                }\r\n                else {\r\n                    result.multiplier = result.multiplier.multiply(m).multiply(sign);\r\n                    if(result.group === CP && result.isImaginary())\r\n                        result.distributeMultiplier();\r\n                }\r\n\r\n                //back convert group P to a simpler group N if possible\r\n                if(result.group === P && isInt(result.power.toDecimal()))\r\n                    result = result.convert(N);\r\n\r\n                return result;\r\n            }\r\n            else {\r\n                //****** Matrices & Vector *****//\r\n                if(bIsSymbol && !aIsSymbol) { //keep symbols to the right\r\n                    t = a;\r\n                    a = b;\r\n                    b = t; //swap\r\n                    t = bIsSymbol;\r\n                    bIsSymbol = aIsSymbol;\r\n                    aIsSymbol = t;\r\n                }\r\n\r\n                var isMatrixB = isMatrix(b), isMatrixA = isMatrix(a);\r\n                if(aIsSymbol && isMatrixB) {\r\n                    var M = new Matrix();\r\n                    b.eachElement(function (e, i, j) {\r\n                        M.set(i, j, _.multiply(a.clone(), e));\r\n                    });\r\n\r\n                    b = M;\r\n                }\r\n                else {\r\n                    if(isMatrixA && isMatrixB) {\r\n                        b = a.multiply(b);\r\n                    }\r\n                    else if(aIsSymbol && isVector(b)) {\r\n                        b.each(function (x, i) {\r\n                            i--;\r\n                            b.elements[i] = _.multiply(a.clone(), b.elements[i]);\r\n                        });\r\n                    }\r\n                    else {\r\n                        if(isVector(a) && isVector(b)) {\r\n                            b.each(function (x, i) {\r\n                                i--;\r\n                                b.elements[i] = _.multiply(a.elements[i], b.elements[i]);\r\n                            });\r\n                        }\r\n                        else if(isVector(a) && isMatrix(b)) {\r\n                            //try to convert a to a matrix\r\n                            return this.multiply(b, a);\r\n                        }\r\n                        else if(isMatrix(a) && isVector(b)) {\r\n                            if(b.elements.length === a.rows()) {\r\n                                var M = new Matrix(), l = a.cols();\r\n                                b.each(function (e, i) {\r\n                                    var row = [];\r\n                                    for(var j = 0; j < l; j++) {\r\n                                        row.push(_.multiply(a.elements[i - 1][j].clone(), e.clone()));\r\n                                    }\r\n                                    M.elements.push(row);\r\n                                });\r\n                                return M;\r\n                            }\r\n                            else\r\n                                err('Dimensions must match!');\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return b;\r\n            }\r\n        };\r\n        /**\r\n         * Gets called when the parser finds the / operator. See this.add\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.divide = function (a, b) {\r\n            var aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b);\r\n\r\n            if(aIsSymbol && bIsSymbol) {\r\n                //forward to Unit division\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.divide(a, b);\r\n                }\r\n                var result;\r\n                if(b.equals(0))\r\n                    throw new DivisionByZero('Division by zero not allowed!');\r\n\r\n                if(a.isConstant() && b.isConstant()) {\r\n                    result = a.clone();\r\n                    result.multiplier = result.multiplier.divide(b.multiplier);\r\n                }\r\n                else {\r\n                    b.invert();\r\n                    result = _.multiply(a, b);\r\n                }\r\n                return result;\r\n            }\r\n            else {\r\n                //******* Vectors & Matrices *********//\r\n                var isVectorA = isVector(a), isVectorB = isVector(b);\r\n                if(aIsSymbol && isVectorB) {\r\n                    b = b.map(function (x) {\r\n                        return _.divide(a.clone(), x);\r\n                    });\r\n                }\r\n                else if(isVectorA && bIsSymbol) {\r\n                    b = a.map(function (x) {\r\n                        return _.divide(x, b.clone());\r\n                    });\r\n                }\r\n                else if(isVectorA && isVectorB) {\r\n                    if(a.dimensions() === b.dimensions()) {\r\n                        b = b.map(function (x, i) {\r\n                            return _.divide(a.elements[--i], x);\r\n                        });\r\n                    }\r\n                    else\r\n                        _.error('Cannot divide vectors. Dimensions do not match!');\r\n                }\r\n                else {\r\n                    var isMatrixA = isMatrix(a), isMatrixB = isMatrix(b);\r\n                    if(isMatrixA && bIsSymbol) {\r\n                        var M = new Matrix();\r\n                        a.eachElement(function (x, i, j) {\r\n                            M.set(i, j, _.divide(x, b.clone()));\r\n                        });\r\n                        b = M;\r\n                    }\r\n                    else if(aIsSymbol && isMatrixB) {\r\n                        var M = new Matrix();\r\n                        b.eachElement(function (x, i, j) {\r\n                            M.set(i, j, _.divide(a.clone(), x));\r\n                        });\r\n                        b = M;\r\n                    }\r\n                    else if(isMatrixA && isMatrixB) {\r\n                        var M = new Matrix();\r\n                        if(a.rows() === b.rows() && a.cols() === b.cols()) {\r\n                            a.eachElement(function (x, i, j) {\r\n                                M.set(i, j, _.divide(x, b.elements[i][j]));\r\n                            });\r\n                            b = M;\r\n                        }\r\n                        else {\r\n                            _.error('Dimensions do not match!');\r\n                        }\r\n                    }\r\n                    else if(isMatrixA && isVectorB) {\r\n                        if(a.cols() === b.dimensions()) {\r\n                            var M = new Matrix();\r\n                            a.eachElement(function (x, i, j) {\r\n                                M.set(i, j, _.divide(x, b.elements[i].clone()));\r\n                            });\r\n                            b = M;\r\n                        }\r\n                        else {\r\n                            _.error('Unable to divide matrix by vector.');\r\n                        }\r\n                    }\r\n                }\r\n                return b;\r\n            }\r\n        };\r\n        /**\r\n         * Gets called when the parser finds the ^ operator. See this.add\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.pow = function (a, b) {\r\n            var aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b);\r\n            if(aIsSymbol && bIsSymbol) {\r\n                //it has units then it's the Unit module's problem\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.pow(a, b);\r\n                }\r\n                \r\n                // Handle abs\r\n                if(a.group === FN && a.fname === ABS && even(b)) {\r\n                    var m = a.multiplier.clone();\r\n                    var raised = _.pow(a.args[0], b);\r\n                    raised.multiplier = m;\r\n                    return raised;\r\n                }\r\n                \r\n                // Handle infinity\r\n                if(a.isInfinity || b.isInfinity) {\r\n                    if(a.isInfinity && b.isInfinity)\r\n                        throw new UndefinedError('(' + a + ')^(' + b + ') is undefined!');\r\n\r\n                    if(a.isConstant() && b.isInfinity) {\r\n                        if(a.equals(0)) {\r\n                            if(b.lessThan(0))\r\n                                throw new UndefinedError('0^Infinity is undefined!');\r\n                            return new Symbol(0);\r\n                        }\r\n                        if(a.equals(1))\r\n                            throw new UndefinedError('1^' + b.toString() + ' is undefined!');\r\n                        //a^-oo\r\n                        if(b.lessThan(0))\r\n                            return new Symbol(0);\r\n                        //a^oo\r\n                        if(!a.lessThan(0))\r\n                            return Symbol.infinity();\r\n                    }\r\n\r\n                    if(a.isInfinity && b.isConstant()) {\r\n                        if(b.equals(0))\r\n                            throw new UndefinedError(a + '^0 is undefined!');\r\n                        if(b.lessThan(0))\r\n                            return new Symbol(0);\r\n                        return _.multiply(Symbol.infinity(), _.pow(new Symbol(a.sign()), b.clone()));\r\n                    }\r\n                }\r\n\r\n                var aIsZero = a.equals(0);\r\n                var bIsZero = b.equals(0);\r\n                if(aIsZero && bIsZero)\r\n                    throw new UndefinedError('0^0 is undefined!');\r\n\r\n                // Return 0 right away if possible\r\n                if(aIsZero && b.isConstant() && b.multiplier.greaterThan(0))\r\n                    return new Symbol(0);\r\n\r\n                if(bIsZero)\r\n                    return new Symbol(1);\r\n\r\n                var bIsConstant = b.isConstant(),\r\n                        aIsConstant = a.isConstant(),\r\n                        bIsInt = b.isInteger(),\r\n                        m = a.multiplier,\r\n                        result = a.clone();\r\n\r\n                // 0^0, 1/0, etc. Complain.\r\n                if(aIsConstant && bIsConstant && a.equals(0) && b.lessThan(0))\r\n                    throw new UndefinedError('Division by zero is not allowed!');\r\n\r\n                // Compute imaginary numbers right away\r\n                if(Settings.PARSE2NUMBER && aIsConstant && bIsConstant && a.sign() < 0 && evenFraction(b)) {\r\n                    var k, re, im;\r\n                    k = Math.PI * b;\r\n                    re = new Symbol(Math.cos(k));\r\n                    im = _.multiply(Symbol.imaginary(), new Symbol(Math.sin(k)));\r\n                    return _.add(re, im);\r\n                }\r\n\r\n                // Imaginary number under negative nthroot or to the n\r\n                if(Settings.PARSE2NUMBER && a.isImaginary() && bIsConstant && isInt(b) && !b.lessThan(0)) {\r\n                    var re, im, r, theta, nre, nim, phi;\r\n                    re = a.realpart();\r\n                    im = a.imagpart();\r\n                    if(re.isConstant('all') && im.isConstant('all')) {\r\n                        phi = Settings.USE_BIG ? Symbol(bigDec.atan2(i.multiplier.toDecimal(), r.multiplier.toDecimal()).times(b.toString())) : Math.atan2(im, re) * b;\r\n                        theta = new Symbol(phi);\r\n                        r = _.pow(Symbol.hyp(re, im), b);\r\n                        nre = _.multiply(r.clone(), _.trig.cos(theta.clone()));\r\n                        nim = _.multiply(r, _.trig.sin(theta));\r\n                        return _.add(nre, _.multiply(Symbol.imaginary(), nim));\r\n                    }\r\n                }\r\n\r\n                // Take care of the symbolic part\r\n                result.toUnitMultiplier();\r\n                //simpifly sqrt\r\n                if(result.group === FN && result.fname === SQRT && !bIsConstant) {\r\n                    var s = result.args[0];\r\n                    s.multiplyPower(new Symbol(0.5));\r\n                    s.multiplier.multiply(result.multiplier);\r\n                    s.multiplyPower(b);\r\n                    result = s;\r\n                }\r\n                else {\r\n                    var sign = m.sign();\r\n                    //handle cases such as (-a^3)^(1/4)\r\n                    if(evenFraction(b) && sign < 0) {\r\n                        // Swaperoo\r\n                        // First put the sign back on the symbol\r\n                        result.negate();\r\n                        // Wrap it in brackets\r\n                        result = _.symfunction(PARENTHESIS, [result]);\r\n                        // Move the sign back the exterior and let nerdamer handle the rest\r\n                        result.negate();\r\n                    }\r\n\r\n                    result.multiplyPower(b);\r\n                }\r\n\r\n                if(aIsConstant && bIsConstant && Settings.PARSE2NUMBER) {\r\n                    var c;\r\n                    //remove the sign\r\n                    if(sign < 0) {\r\n                        a.negate();\r\n                        if(b.multiplier.den.equals(2))\r\n                            //we know that the numerator has to be odd and therefore it's i\r\n                            c = new Symbol(Settings.IMAGINARY);\r\n                        else if(isInt(b.multiplier)) {\r\n                            if(even(b.multiplier))\r\n                                c = new Symbol(1);\r\n                            else\r\n                                c = new Symbol(-1);\r\n                        }\r\n                        else if(!even(b.multiplier.den)) {\r\n                            c = new Symbol(Math.pow(sign, b.multiplier.num));\r\n                        }\r\n                        else {\r\n                            c = _.pow(_.symfunction(PARENTHESIS, [new Symbol(sign)]), b.clone());\r\n                        }\r\n                    }\r\n\r\n                    result = new Symbol(Math.pow(a.multiplier.toDecimal(), b.multiplier.toDecimal()));\r\n\r\n                    //result = new Symbol(Math2.bigpow(a.multiplier, b.multiplier));\r\n                    //put the back sign\r\n                    if(c)\r\n                        result = _.multiply(result, c);\r\n                }\r\n                else if(bIsInt && !m.equals(1)) {\r\n                    var abs_b = b.abs();\r\n                    // Provide fall back to JS until big number implementation is improved\r\n                    if(abs_b.gt(Settings.MAX_EXP)) {\r\n                        if(b.sign() < 0)\r\n                            return new Symbol(0);\r\n                        return Symbol.infinity();\r\n                    }\r\n                    else {\r\n                        var p = b.multiplier.toDecimal();\r\n                        var sgn = Math.sign(p);\r\n                        p = Math.abs(p);\r\n                        var multiplier = new Frac(1);\r\n                        multiplier.num = m.num.pow(p);\r\n                        multiplier.den = m.den.pow(p);\r\n                        if(sgn < 0)\r\n                            multiplier.invert();\r\n                        //multiplying is justified since after mulltiplyPower if it was of group P it will now be of group N\r\n                        result.multiplier = result.multiplier.multiply(multiplier);\r\n                    }\r\n                }\r\n                else {\r\n                    var sign = a.sign();\r\n                    if(b.isConstant() && a.isConstant() && !b.multiplier.den.equals(1) && sign < 0) {\r\n                        //we know the sign is negative so if the denominator for b == 2 then it's i\r\n                        if(b.multiplier.den.equals(2)) {\r\n                            var i = new Symbol(Settings.IMAGINARY);\r\n                            a.negate();//remove the sign\r\n                            //if the power is negative then i is negative\r\n                            if(b.lessThan(0)) {\r\n                                i.negate();\r\n                                b.negate();//remove the sign from the power\r\n                            }\r\n                            //pull the power normally and put back the imaginary\r\n                            result = _.multiply(_.pow(a, b), i);\r\n                        }\r\n                        else {\r\n                            var aa = a.clone();\r\n                            aa.multiplier.negate();\r\n                            result = _.pow(_.symfunction(PARENTHESIS, [new Symbol(sign)]), b.clone());\r\n                            var _a = _.pow(new Symbol(aa.multiplier.num), b.clone());\r\n                            var _b = _.pow(new Symbol(aa.multiplier.den), b.clone());\r\n                            var r = _.divide(_a, _b);\r\n                            result = _.multiply(result, r);\r\n                        }\r\n                    }\r\n                    else if(Settings.PARSE2NUMBER && b.isImaginary()) {\r\n                        //4^(i + 2) = e^(- (2 - 4 i) π n + (2 + i) log(4))\r\n\r\n                        var re = b.realpart();\r\n                        var im = b.imagpart();\r\n                        /*\r\n                         if(b.group === CP && false) {\r\n                         var ex = _.pow(a.clone(), re);\r\n                         var xi = _.multiply(_.multiply(ex.clone(), trig.sin(im.clone())), Symbol.imaginary());\r\n                         var xa = _.multiply(trig.cos(im), ex);\r\n                         result = _.add(xi, xa);\r\n                         }\r\n                         else {\r\n                         */\r\n                        var aa = a.clone().toLinear();\r\n                        var a1 = _.pow(aa.clone(), re);\r\n                        var log_a = log(aa.clone());\r\n                        var b1 = trig.cos(_.multiply(im.clone(), log_a));\r\n                        var c1 = _.multiply(trig.sin(_.multiply(im, log(aa))), Symbol.imaginary());\r\n                        result = _.multiply(a1, _.add(b1, c1));\r\n                        result = _.expand(_.parse(result));\r\n                        /*\r\n                         }   \r\n                         */\r\n                    }\r\n                    else {\r\n                        //b is a symbol\r\n                        var neg_num = a.group === N && sign < 0,\r\n                            num = testSQRT(new Symbol(neg_num ? m.num : Math.abs(m.num)).setPower(b.clone())),\r\n                            den = testSQRT(new Symbol(m.den).setPower(b.clone()).invert());\r\n\r\n                        //eliminate imaginary if possible\r\n                        if(a.imaginary) {\r\n                            if(bIsInt) {\r\n                                var s, p, n;\r\n                                s = Math.sign(b);\r\n                                p = abs(b);\r\n                                n = p % 4;\r\n                                result = new Symbol(even(n) ? -1 : Settings.IMAGINARY);\r\n                                if(n === 0 || s < 0 && (n === 1) || s > 0 && (n === 3)) {\r\n                                    result.negate();\r\n                                }\r\n                            }\r\n                            else {\r\n                                //assume i = sqrt(-1) -> (-1)^(1/2)\r\n                                var nr = b.multiplier.multiply(Frac.quick(1, 2)),\r\n                                        //the denominator denotes the power so raise to it. It will turn positive it round\r\n                                        tn = Math.pow(-1, nr.num);\r\n                                result = even(nr.den) ? new Symbol(-1).setPower(nr, true) : new Symbol(tn);\r\n                            }\r\n                        }\r\n                        //ensure that the sign is carried by the symbol and not the multiplier\r\n                        //this enables us to check down the line if the multiplier can indeed be transferred\r\n                        if(sign < 0 && !neg_num)\r\n                            result.negate();\r\n\r\n                        //retain the absolute value\r\n                        if(bIsConstant && a.group !== EX) {\r\n                            var evenr = even(b.multiplier.den),\r\n                                    evenp = even(a.power),\r\n                                    n = result.power.toDecimal(),\r\n                                    evennp = even(n);\r\n                            if(evenr && evenp && !evennp) {\r\n                                if(n === 1)\r\n                                    result = _.symfunction(ABS, [result]);\r\n                                else if(!isInt(n)) {\r\n                                    var p = result.power;\r\n                                    result = _.symfunction(ABS, [result.toLinear()]).setPower(p);\r\n                                }\r\n                                else {\r\n                                    result = _.multiply(_.symfunction(ABS, [result.clone().toLinear()]),\r\n                                            result.clone().setPower(new Frac(n - 1)));\r\n                                }\r\n                                //quick workaround. Revisit\r\n                                if(Settings.POSITIVE_MULTIPLIERS && result.fname === ABS)\r\n                                    result = result.args[0];\r\n                            }\r\n                        }\r\n                        //multiply out sqrt\r\n                        if(b.equals(2) && result.group === CB) {\r\n                            var _result = new Symbol(1);\r\n                            result.each(function (sym) {\r\n                                _result = _.multiply(_result, _.pow(sym, b));\r\n                            });\r\n                            result = _result;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                result = testSQRT(result);\r\n\r\n                // Don't multiply until we've tested the remaining symbol\r\n                if(num && den) {\r\n                    result = _.multiply(result, testPow(_.multiply(num, den)));\r\n                }\r\n\r\n                // Reduce square root\r\n                if(result.fname === SQRT) {\r\n                    var isEX = result.group === EX;\r\n                    var t = isEX ? result.power.multiplier.toString() : result.power.toString();\r\n                    if(even(t)) {\r\n                        var pt = isEX ? _.divide(result.power, new Symbol(2)) : new Symbol(result.power.divide(new Frac(2))),\r\n                                m = result.multiplier;\r\n                        result = _.pow(result.args[0], pt);\r\n                        result.multiplier = result.multiplier.multiply(m);\r\n                    }\r\n                }\r\n                // Detect Euler's identity\r\n                else if(!Settings.IGNORE_E && result.isE() && result.group === EX && result.power.contains('pi')\r\n                        && result.power.contains(Settings.IMAGINARY) && b.group === CB) {\r\n                    var theta = b.stripVar(Settings.IMAGINARY);\r\n                    result = _.add(trig.cos(theta), _.multiply(Symbol.imaginary(), trig.sin(theta)));\r\n                }\r\n\r\n                return result;\r\n            }\r\n            else {\r\n                if(isVector(a) && bIsSymbol) {\r\n                    a = a.map(function (x) {\r\n                        return _.pow(x, b.clone());\r\n                    });\r\n                }\r\n                else if(isMatrix(a) && bIsSymbol) {\r\n                    var M = new Matrix();\r\n                    a.eachElement(function (x, i, j) {\r\n                        M.set(i, j, _.pow(x, b.clone()));\r\n                    });\r\n                    a = M;\r\n                }\r\n                else if(aIsSymbol && isMatrix(b)) {\r\n                    var M = new Matrix();\r\n                    b.eachElement(function (x, i, j) {\r\n                        M.set(i, j, _.pow(a.clone(), x));\r\n                    });\r\n                    a = M;\r\n                }\r\n                return a;\r\n            }\r\n        };\r\n        // Gets called when the parser finds the , operator.\r\n        // Commas return a Collector object which is roughly an array\r\n        this.comma = function (a, b) {\r\n            if(!(a instanceof Collection))\r\n                a = Collection.create(a);\r\n            a.append(b);\r\n            return a;\r\n        };\r\n        // Link to modulus\r\n        this.mod = function (a, b) {\r\n            return mod(a, b);\r\n        };\r\n        // Used to slice elements from arrays\r\n        this.slice = function (a, b) {\r\n            return new Slice(a, b);\r\n        };\r\n        // The equality setter\r\n        this.equals = function (a, b) {\r\n            // Equality can only be set for group S so complain it's not\r\n            if(a.group !== S && !a.isLinear())\r\n                err('Cannot set equality for ' + a.toString());\r\n            VARS[a.value] = b.clone();\r\n            return b;\r\n        };\r\n        // Percent\r\n        this.percent = function (a) {\r\n            return _.divide(a, new Symbol(100));\r\n        };\r\n        // Set variable\r\n        this.assign = function (a, b) {\r\n            if(a instanceof Collection && b instanceof Collection) {\r\n                a.elements.map(function (x, i) {\r\n                    return _.assign(x, b.elements[i]);\r\n                });\r\n                return Vector.fromArray(b.elements);\r\n            }\r\n            if(a.parent) {\r\n                // It's referring to the parent instead. The current item can be discarded\r\n                var e = a.parent;\r\n                e.elements[e.getter] = b;\r\n                delete e.getter;\r\n                return e;\r\n            }\r\n\r\n            if(a.group !== S)\r\n                throw new NerdamerValueError('Cannot complete operation. Incorrect LH value for ' + a);\r\n            VARS[a.value] = b;\r\n            return b;\r\n        };\r\n        this.function_assign = function (a, b) {\r\n            var f = a.elements.pop();\r\n            return setFunction(f, a.elements, b);\r\n        };\r\n        // Function to quickly convert bools to Symbols\r\n        var bool2Symbol = function (x) {\r\n            return new Symbol(x === true ? 1 : 0);\r\n        };\r\n        //check for equality\r\n        this.eq = function (a, b) {\r\n            return bool2Symbol(a.equals(b));\r\n        };\r\n        //checks for greater than\r\n        this.gt = function (a, b) {\r\n            return bool2Symbol(a.gt(b));\r\n        };\r\n        //checks for greater than equal\r\n        this.gte = function (a, b) {\r\n            return bool2Symbol(a.gte(b));\r\n        };\r\n        //checks for less than\r\n        this.lt = function (a, b) {\r\n            return bool2Symbol(a.lt(b));\r\n        };\r\n        //checks for less than equal\r\n        this.lte = function (a, b) {\r\n            return bool2Symbol(a.lte(b));\r\n        };\r\n        // wraps the factorial\r\n        this.factorial = function (a) {\r\n            return this.symfunction(FACTORIAL, [a]);\r\n        };\r\n        // wraps the double factorial\r\n        this.dfactorial = function (a) {\r\n            return this.symfunction(DOUBLEFACTORIAL, [a]);\r\n        };\r\n    }\r\n    ;\r\n\r\n    /* \"STATIC\" */\r\n    // converts a number to a fraction.\r\n    var Fraction = {\r\n        /**\r\n         * Converts a decimal to a fraction\r\n         * @param {number} value\r\n         * @param {object} opts\r\n         * @returns {Array} - an array containing the denominator and the numerator\r\n         */\r\n        convert: function (value, opts) {\r\n            var frac;\r\n            if(value === 0) {\r\n                frac = [0, 1];\r\n            }\r\n            else {\r\n                if(value < 1e-6 || value > 1e20) {\r\n                    var qc = this.quickConversion(Number(value));\r\n                    if(qc[1] <= 1e20) {\r\n                        var abs = Math.abs(value);\r\n                        var sign = value / abs;\r\n                        frac = this.fullConversion(abs.toFixed((qc[1] + '').length - 1));\r\n                        frac[0] = frac[0] * sign;\r\n                    }\r\n                    else {\r\n                        frac = qc;\r\n                    }\r\n                }\r\n                else {\r\n                    frac = this.fullConversion(value);\r\n                }\r\n            }\r\n            return frac;\r\n        },\r\n        /**\r\n         * If the fraction is too small or too large this gets called instead of fullConversion method\r\n         * @param {number} dec\r\n         * @returns {Array} - an array containing the denominator and the numerator\r\n         */\r\n        quickConversion: function (value) {\r\n            var stripSign = function (s) {\r\n                // Explicitely convert to a string\r\n                if(typeof s !== 'string') {\r\n                    s = s.toString();\r\n                }\r\n\r\n                var sign = '';\r\n\r\n                // Remove and store the sign\r\n                var start = s.charAt(0);\r\n                if(start === '-') {\r\n                    s = s.substr(1, s.length);\r\n                    sign = '-';\r\n                }\r\n                else if(start === '+') {\r\n                    // Just remove the plus sign\r\n                    s = s.substr(1, s.length);\r\n                }\r\n\r\n                return {\r\n                    sign: sign,\r\n                    value: s\r\n                };\r\n            };\r\n\r\n\r\n            function convert(value) {\r\n                // Explicitely convert to a decimal\r\n                if(Scientific.isScientific(value)) {\r\n                    value = scientificToDecimal(value);\r\n                }\r\n\r\n                // Split the value into the sign and the value\r\n                var nparts = stripSign(value);\r\n\r\n                // Split it at the decimal. We'll refer to it as the coeffient parts\r\n                var cparts = nparts.value.split('.');\r\n\r\n                // Combine the entire number by removing leading zero and adding the decimal part\r\n                // This would be teh same as moving the decimal point to the end\r\n                var num;\r\n                // We're dealing with integers\r\n                if(cparts.length === 1) {\r\n                    num = cparts[0];\r\n                }\r\n                else {\r\n                    num = cparts[0] + cparts[1];\r\n                }\r\n                var n = cparts[1] ? cparts[1].length : 0;\r\n                // Generate the padding for the zeros\r\n                var den = `1${'0'.repeat(n)}`;\r\n\r\n                if(num !== '0') {\r\n                    num = num.replace(/^0+/, '');\r\n                }\r\n                return [nparts.sign + num, den];\r\n            }\r\n\r\n            return convert(value);\r\n        },\r\n        /**\r\n         * Returns a good approximation of a fraction. This method gets called by convert\r\n         * http://mathforum.org/library/drmath/view/61772.html\r\n         * Decimal To Fraction Conversion - A Simpler Version\r\n         * Dr Peterson\r\n         * @param {number} dec\r\n         * @returns {Array} - an array containing the denominator and the numerator\r\n         */\r\n        fullConversion: function (dec) {\r\n            var done = false;\r\n            // you can adjust the epsilon to a larger number if you don't need very high precision\r\n            var n1 = 0, d1 = 1, n2 = 1, d2 = 0, n = 0, q = dec, epsilon = 1e-16;\r\n            while(!done) {\r\n                n++;\r\n                if(n > 10000) {\r\n                    done = true;\r\n                }\r\n                var a = Math.floor(q);\r\n                var num = n1 + a * n2;\r\n                var den = d1 + a * d2;\r\n                var e = (q - a);\r\n                if(e < epsilon) {\r\n                    done = true;\r\n                }\r\n                q = 1 / e;\r\n                n1 = n2;\r\n                d1 = d2;\r\n                n2 = num;\r\n                d2 = den;\r\n                if(Math.abs(num / den - dec) < epsilon || n > 30) {\r\n                    done = true;\r\n                }\r\n            }\r\n            return [num, den];\r\n        }\r\n    };\r\n    //Depends on Fraction\r\n\r\n    //The latex generator\r\n    var LaTeX = {\r\n        parser: (function () {\r\n            // create a parser and strip it from everything except the items that you need\r\n            var keep = ['classes', 'setOperator', 'getOperators', 'getBrackets', 'tokenize', 'toRPN', 'tree', 'units'];\r\n            var parser = new Parser();\r\n            for(var x in parser) {\r\n                if(keep.indexOf(x) === -1)\r\n                    delete parser[x];\r\n            }\r\n            // declare the operators\r\n            parser.setOperator({\r\n                precedence: 8,\r\n                operator: '\\\\',\r\n                action: 'slash',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return e; // bypass the slash\r\n                }\r\n            });\r\n            parser.setOperator({\r\n                precedence: 8,\r\n                operator: '\\\\,',\r\n                action: 'slash_comma',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return e; // bypass the slash\r\n                }\r\n            });\r\n            // have braces not map to anything. We want them to be return as-is\r\n            var brackets = parser.getBrackets();\r\n            brackets['{'].maps_to = undefined;\r\n            return parser;\r\n        })(),\r\n        space: '~',\r\n        dot: ' \\\\cdot ',\r\n        // grab a list of supported functions but remove the excluded ones found in exclFN\r\n\r\n        latex: function (symbol, option) {\r\n            // it might be an array\r\n            if(symbol.clone) {\r\n                symbol = symbol.clone(); // leave original as-is\r\n            }\r\n            if(symbol instanceof _.classes.Collection)\r\n                symbol = symbol.elements;\r\n\r\n            if(isArray(symbol)) {\r\n                var LaTeXArray = [];\r\n                for(var i = 0; i < symbol.length; i++) {\r\n                    var sym = symbol[i];\r\n                    //This way I can generate LaTeX on an array of strings.\r\n                    if(!isSymbol(sym))\r\n                        sym = _.parse(sym);\r\n                    LaTeXArray.push(this.latex(sym, option));\r\n                }\r\n                return this.brackets(LaTeXArray.join(', '), 'square');\r\n            }\r\n\r\n            else if(isMatrix(symbol)) {\r\n                var TeX = '\\\\begin{pmatrix}\\n';\r\n                for(var i = 0; i < symbol.elements.length; i++) {\r\n                    var rowTeX = [],\r\n                            e = symbol.elements[i];\r\n                    for(var j = 0; j < e.length; j++) {\r\n                        rowTeX.push(this.latex(e[j], option));\r\n                    }\r\n                    TeX += rowTeX.join(' & ');\r\n                    if(i < symbol.elements.length - 1) {\r\n                        TeX += '\\\\\\\\\\n';\r\n                    }\r\n                }\r\n                TeX += '\\\\end{pmatrix}';\r\n                return TeX;\r\n            }\r\n\r\n            else if(isVector(symbol)) {\r\n                var TeX = '\\\\left[';\r\n                for(var i = 0; i < symbol.elements.length; i++) {\r\n                    TeX += this.latex(symbol.elements[i], option) + ' ' + (i !== symbol.elements.length - 1 ? ',\\\\,' : '');\r\n                }\r\n                TeX += '\\\\right]';\r\n                return TeX;\r\n            }\r\n\r\n            else if(isSet(symbol)) {\r\n                var TeX = '\\\\{';\r\n                for(var i = 0; i < symbol.elements.length; i++) {\r\n                    TeX += this.latex(symbol.elements[i], option) + ' ' + (i !== symbol.elements.length - 1 ? ',\\\\,' : '');\r\n                }\r\n                TeX += '\\\\}';\r\n                return TeX;\r\n            }\r\n\r\n            symbol = symbol.clone();\r\n\r\n            var decimal = (option === 'decimal' || option === 'decimals'),\r\n                    power = symbol.power,\r\n                    invert = isNegative(power),\r\n                    negative = symbol.multiplier.lessThan(0);\r\n\r\n            if(symbol.group === P && decimal) {\r\n                return String(symbol.multiplier.toDecimal() * Math.pow(symbol.value, symbol.power.toDecimal()));\r\n            }\r\n            else {\r\n                symbol.multiplier = symbol.multiplier.abs();\r\n\r\n                // if the user wants the result in decimal format then return it as such by placing it at the top part\r\n                var m_array;\r\n\r\n                if(decimal) {\r\n                    var m = String(symbol.multiplier.toDecimal());\r\n                    // if(String(m) === '1' && !decimal) m = '';\r\n                    m_array = [m, ''];\r\n                }\r\n                else {\r\n                    m_array = [symbol.multiplier.num, symbol.multiplier.den];\r\n                }\r\n                // get the value as a two part array\r\n                var v_array = this.value(symbol, invert, option, negative),\r\n                        p;\r\n                // make it all positive since we know whether to push the power to the numerator or denominator already.\r\n                if(invert)\r\n                    power.negate();\r\n                // the power is simple since it requires no additional formatting. We can get it to a\r\n                // string right away. pass in true to neglect unit powers\r\n                if(decimal) {\r\n                    p = isSymbol(power) ? LaTeX.latex(power, option) : String(power.toDecimal());\r\n                    if(String(p) === '1')\r\n                        p = '';\r\n                }\r\n                // get the latex representation\r\n                else if(isSymbol(power))\r\n                    p = this.latex(power, option);\r\n                // get it as a fraction\r\n                else\r\n                    p = this.formatFrac(power, true);\r\n                // use this array to specify if the power is getting attached to the top or the bottom\r\n                var p_array = ['', ''],\r\n                        // stick it to the top or the bottom. If it's negative then the power gets placed on the bottom\r\n                        index = invert ? 1 : 0;\r\n                p_array[index] = p;\r\n\r\n                // special case group P and decimal\r\n                var retval = (negative ? '-' : '') + this.set(m_array, v_array, p_array, symbol.group === CB);\r\n\r\n                return retval.replace(/\\+\\-/gi, '-');\r\n            }\r\n\r\n        },\r\n        // greek mapping\r\n        greek: {\r\n            alpha: '\\\\alpha',\r\n            beta: '\\\\beta',\r\n            gamma: '\\\\gamma',\r\n            delta: '\\\\delta',\r\n            epsilon: '\\\\epsilon',\r\n            zeta: '\\\\zeta',\r\n            eta: '\\\\eta',\r\n            theta: '\\\\theta',\r\n            iota: '\\\\iota',\r\n            kappa: '\\\\kappa',\r\n            lambda: '\\\\lambda',\r\n            mu: '\\\\mu',\r\n            nu: '\\\\nu',\r\n            xi: '\\\\xi',\r\n            omnikron: '\\\\omnikron',\r\n            pi: '\\\\pi',\r\n            rho: '\\\\rho',\r\n            sigma: '\\\\sigma',\r\n            tau: '\\\\tau',\r\n            upsilon: '\\\\upsilon',\r\n            phi: '\\\\phi',\r\n            chi: '\\\\chi',\r\n            psi: '\\\\psi',\r\n            omega: '\\\\omega',\r\n            Gamma: '\\\\Gamma',\r\n            Delta: '\\\\Delta',\r\n            Epsilon: '\\\\Epsilon',\r\n            Theta: '\\\\Theta',\r\n            Lambda: '\\\\Lambda',\r\n            Xi: '\\\\Xi',\r\n            Pi: '\\\\Pi',\r\n            Sigma: '\\\\Sigma',\r\n            Phi: '\\\\Phi',\r\n            Psi: '\\\\Psi',\r\n            Omega: '\\\\Omega'\r\n        },\r\n        symbols: {\r\n            arccos: '\\\\arccos',\r\n            cos: '\\\\cos',\r\n            csc: '\\\\csc',\r\n            exp: '\\\\exp',\r\n            ker: '\\\\ker',\r\n            limsup: '\\\\limsup',\r\n            min: '\\\\min',\r\n            sinh: '\\\\sinh',\r\n            arcsin: '\\\\arcsin',\r\n            cosh: '\\\\cosh',\r\n            deg: '\\\\deg',\r\n            gcd: '\\\\gcd',\r\n            lg: '\\\\lg',\r\n            ln: '\\\\ln',\r\n            Pr: '\\\\Pr',\r\n            sqrt: '\\\\sqrt',\r\n            sup: '\\\\sup',\r\n            arctan: '\\\\arctan',\r\n            cot: '\\\\cot',\r\n            det: '\\\\det',\r\n            hom: '\\\\hom',\r\n            lim: '\\\\lim',\r\n            log: '\\\\log',\r\n            LN: '\\\\LN',\r\n            sec: '\\\\sec',\r\n            tan: '\\\\tan',\r\n            arg: '\\\\arg',\r\n            coth: '\\\\coth',\r\n            dim: '\\\\dim',\r\n            inf: '\\\\inf',\r\n            liminf: '\\\\liminf',\r\n            max: '\\\\max',\r\n            sin: '\\\\sin',\r\n            tanh: '\\\\tanh'\r\n        },\r\n        // get the raw value of the symbol as an array\r\n        value: function (symbol, inverted, option, negative) {\r\n            var group = symbol.group,\r\n                    previousGroup = symbol.previousGroup,\r\n                    v = ['', ''],\r\n                    index = inverted ? 1 : 0;\r\n            /*if(group === N) // do nothing since we want to return top & bottom blank; */\r\n            if(symbol.isInfinity) {\r\n                v[index] = '\\\\infty';\r\n            }\r\n            else if(group === S || group === P || previousGroup === S || previousGroup === P || previousGroup === N) {\r\n                var value = this.formatSubscripts(symbol.value);\r\n                if(value.replace)\r\n                    value = value.replace(/(.+)_$/, '$1\\\\_');\r\n                // split it so we can check for instances of alpha as well as alpha_b\r\n                var t_varray = String(value).split('_');\r\n                var greek = this.greek[t_varray[0]];\r\n                if(greek) {\r\n                    t_varray[0] = greek;\r\n                    value = t_varray.join('_');\r\n                }\r\n                var symbol = this.symbols[t_varray[0]];\r\n                if(symbol) {\r\n                    t_varray[0] = symbol;\r\n                    value = t_varray.join('_');\r\n                }\r\n                v[index] = value;\r\n            }\r\n            else if(group === FN || previousGroup === FN) {\r\n                var name,\r\n                        input = [],\r\n                        fname = symbol.fname;\r\n                // collect the arguments\r\n                for(var i = 0; i < symbol.args.length; i++) {\r\n                    var arg = symbol.args[i], item;\r\n                    if(typeof arg === 'string')\r\n                        item = arg;\r\n                    else {\r\n                        item = this.latex(arg, option);\r\n                    }\r\n                    input.push(item);\r\n                }\r\n\r\n                if(fname === SQRT) {\r\n                    v[index] = '\\\\sqrt' + this.braces(input.join(','));\r\n                }\r\n                else if(fname === ABS) {\r\n                    v[index] = this.brackets(input.join(','), 'abs');\r\n                }\r\n                else if(fname === PARENTHESIS) {\r\n                    v[index] = this.brackets(input.join(','), 'parens');\r\n                }\r\n                else if(fname === 'limit') {\r\n                    v[index] = ' \\\\lim\\\\limits_{' + input[1] + ' \\\\to ' + input[2] + '} ' + input[0];\r\n                }\r\n                else if(fname === 'integrate') {\r\n                    v[index] = '\\\\int' + this.braces(input[0]) + this.braces('d' + input[1]);\r\n                }\r\n                else if(fname === 'defint') {\r\n                    v[index] = '\\\\int\\\\limits_' + this.braces(input[1]) + '^' + this.braces(input[2]) + ' ' + input[0] + ' d' + input[3];\r\n                }\r\n                else if(fname === FACTORIAL || fname === DOUBLEFACTORIAL) {\r\n                    var arg = symbol.args[0];\r\n                    if(arg.power.equals(1) && (arg.isComposite() || arg.isCombination())) {\r\n                        input[0] = this.brackets(input[0]);\r\n                    }\r\n                    v[index] = input[0] + (fname === FACTORIAL ? '!' : '!!');\r\n                }\r\n                else if(fname === 'floor') {\r\n                    v[index] = '\\\\left \\\\lfloor' + this.braces(input[0]) + '\\\\right \\\\rfloor';\r\n                }\r\n                else if(fname === 'ceil') {\r\n                    v[index] = '\\\\left \\\\lceil' + this.braces(input[0]) + '\\\\right \\\\rceil';\r\n                }\r\n                // capture log(a, b)\r\n                else if(fname === Settings.LOG && input.length > 1) {\r\n                    v[index] = '\\\\mathrm' + this.braces(Settings.LOG) + '_' + this.braces(input[1]) + this.brackets(input[0]);\r\n                }\r\n                // capture log(a, b)\r\n                else if(fname === Settings.LOG10) {\r\n                    v[index] = '\\\\mathrm' + this.braces(Settings.LOG) + '_' + this.braces(10) + this.brackets(input[0]);\r\n                }\r\n                else if(fname === 'sum') {\r\n                    var a = input[0],\r\n                            b = input[1],\r\n                            c = input[2],\r\n                            d = input[3];\r\n                    v[index] = '\\\\sum\\\\limits_{' + this.braces(b) + '=' + this.braces(c) + '}^' + this.braces(d) + ' ' + this.braces(a) + '';\r\n                }\r\n                else if(fname === 'product') {\r\n                    var a = input[0],\r\n                            b = input[1],\r\n                            c = input[2],\r\n                            d = input[3];\r\n                    v[index] = '\\\\prod\\\\limits_{' + this.braces(b) + '=' + this.braces(c) + '}^' + this.braces(d) + ' ' + this.braces(a) + '';\r\n                }\r\n                else if(fname === 'nthroot') {\r\n                    v[index] = '\\\\sqrt[' + input[1] + ']' + this.braces(input[0]);\r\n                }\r\n                else if(fname === 'mod') {\r\n                    v[index] = input[0] + ' \\\\bmod ' + input[1];\r\n                }\r\n                else if(fname === 'realpart') {\r\n                    v[index] = '\\\\operatorname{Re}' + this.brackets(input[0]);\r\n                }\r\n                else if(fname === 'imagpart') {\r\n                    v[index] = '\\\\operatorname{Im}' + this.brackets(input[0]);\r\n                }\r\n                else {\r\n                    var name = fname !== '' ? '\\\\mathrm' + this.braces(fname.replace(/_/g, '\\\\_')) : '';\r\n                    if(symbol.isConversion)\r\n                        v[index] = name + this.brackets(input.join(''), 'parens');\r\n                    else\r\n                        v[index] = name + this.brackets(input.join(','), 'parens');\r\n                }\r\n            }\r\n            else if(symbol.isComposite()) {\r\n                var collected = symbol.collectSymbols().sort(\r\n                        group === CP || previousGroup === CP ?\r\n                        function (a, b) {\r\n                            return b.group - a.group;\r\n                        } :\r\n                        function (a, b) {\r\n                            var x = isSymbol(a.power) ? -1 : a.power;\r\n                            var y = isSymbol(b.power) ? -1 : b.power;\r\n                            return y - x;\r\n                        }\r\n                ),\r\n                        symbols = [],\r\n                        l = collected.length;\r\n                for(var i = 0; i < l; i++) {\r\n                    symbols.push(LaTeX.latex(collected[i], option));\r\n                }\r\n                var value = symbols.join('+');\r\n\r\n                v[index] = !(symbol.isLinear() && symbol.multiplier.equals(1)) || negative ? this.brackets(value, 'parens') : value;\r\n            }\r\n            else if(group === CB || previousGroup === EX || previousGroup === CB) {\r\n                if(group === CB)\r\n                    symbol.distributeExponent();\r\n                // This almost feels a little like cheating but I need to know if I should be wrapping the symbol\r\n                // in brackets or not. We'll do this by checking the value of the numerator and then comparing it\r\n                // to whether the symbol value is \"simple\" or not.\r\n                var denominator = [],\r\n                        numerator = [];\r\n                // Generate a profile\r\n                var den_map = [], num_map = [], num_c = 0, den_c = 0;\r\n                var setBrackets = function (container, map, counter) {\r\n                    if(counter > 1 && map.length > 0) {\r\n                        var l = map.length;\r\n                        for(var i = 0; i < l; i++) {\r\n                            var idx = map[i], item = container[idx];\r\n                            if(!(/^\\\\left\\(.+\\\\right\\)\\^\\{.+\\}$/g.test(item) || /^\\\\left\\(.+\\\\right\\)$/g.test(item))) {\r\n                                container[idx] = LaTeX.brackets(item, 'parens');\r\n                            }\r\n                        }\r\n                    }\r\n                    return container;\r\n                };\r\n\r\n                // Generate latex for each of them\r\n                symbol.each(function (x) {\r\n                    var isDenom = isNegative(x.power),\r\n                            laTex;\r\n\r\n                    if(isDenom) {\r\n                        laTex = LaTeX.latex(x.invert(), option);\r\n                        den_c++;\r\n                        if(x.isComposite()) {\r\n                            if(symbol.multiplier.den != 1 && Math.abs(x.power) == 1)\r\n                                laTex = LaTeX.brackets(laTex, 'parens');\r\n                            den_map.push(denominator.length); // make a note of where the composite was found\r\n                        }\r\n\r\n                        denominator.push(laTex);\r\n                    }\r\n                    else {\r\n                        laTex = LaTeX.latex(x, option);\r\n                        num_c++;\r\n                        if(x.isComposite()) {\r\n                            if(symbol.multiplier.num != 1 && Math.abs(x.power) == 1)\r\n                                laTex = LaTeX.brackets(laTex, 'parens');\r\n                            num_map.push(numerator.length);   // make a note of where the composite was found\r\n                        }\r\n                        numerator.push(laTex);\r\n                    }\r\n                });\r\n\r\n                // Apply brackets\r\n                setBrackets(numerator, num_map, num_c);\r\n                v[0] = numerator.join(this.dot); // collapse the numerator into one string\r\n\r\n                setBrackets(denominator, den_map, den_c);\r\n                v[1] = denominator.join(this.dot);\r\n            }\r\n\r\n            return v;\r\n        },\r\n        set: function (m, v, p, combine_power) {\r\n            var isBracketed = function (v) {\r\n                return /^\\\\left\\(.+\\\\right\\)$/.test(v);\r\n            };\r\n            // format the power if it exists\r\n            if(p)\r\n                p = this.formatP(p);\r\n            // group CB will have to be wrapped since the power applies to both it's numerator and denominator\r\n            if(combine_power) {\r\n                // POSSIBLE BUG: If powers for group CB format wrong, investigate this since I might have overlooked something\r\n                // the assumption is that in every case the denonimator should be empty when dealing with CB. I can't think\r\n                // of a case where this isn't true\r\n                var tp = p[0];\r\n                p[0] = ''; // temporarily make p blank\r\n            }\r\n\r\n            // merge v and p. Not that v MUST be first since the order matters\r\n            v = this.merge(v, p);\r\n            var mn = m[0], md = m[1], vn = v[0], vd = v[1];\r\n            // filters\r\n            // if the top has a variable but the numerator is one drop it\r\n            if(vn && Number(mn) === 1)\r\n                mn = '';\r\n            // if denominator is 1 drop it always\r\n            if(Number(md) === 1)\r\n                md = '';\r\n            // prepare the top portion but check that it's not already bracketed. If it is then leave out the cdot\r\n            var top = this.join(mn, vn, !isBracketed(vn) ? this.dot : '');\r\n\r\n            // prepare the bottom portion but check that it's not already bracketed. If it is then leave out the cdot\r\n            var bottom = this.join(md, vd, !isBracketed(vd) ? this.dot : '');\r\n            // format the power if it exists\r\n            // make it a fraction if both top and bottom exists\r\n            if(top && bottom) {\r\n                var frac = this.frac(top, bottom);\r\n                if(combine_power && tp)\r\n                    frac = this.brackets(frac) + tp;\r\n                return frac;\r\n            }\r\n            // otherwise only the top exists so return that\r\n            else\r\n                return top;\r\n        },\r\n        merge: function (a, b) {\r\n            var r = [];\r\n            for(var i = 0; i < 2; i++)\r\n                r[i] = a[i] + b[i];\r\n            return r;\r\n        },\r\n        // joins together two strings if both exist\r\n        join: function (n, d, glue) {\r\n            if(!n && !d)\r\n                return '';\r\n            if(n && !d)\r\n                return n;\r\n            if(d && !n)\r\n                return d;\r\n            return n + glue + d;\r\n        },\r\n        /**\r\n         * Places subscripts in braces for proper formatting\r\n         * @param {String} v\r\n         * @returns {String}\r\n         */\r\n        formatSubscripts: function (v) {\r\n            // Split it at the underscore\r\n            var arr = v.toString().split('_');\r\n\r\n            var name = '';\r\n\r\n            // Loop over all entries except the first one\r\n            while(arr.length > 1) {\r\n                // Wrap all in braces except for the last one\r\n                if(arr.length > 0) {\r\n                    name = '_' + this.braces(arr.pop() + name);\r\n                }\r\n            }\r\n\r\n            return arr[0] + name;\r\n        },\r\n        formatP: function (p_array) {\r\n            for(var i = 0; i < 2; i++) {\r\n                var p = p_array[i];\r\n                if(p)\r\n                    p_array[i] = '^' + this.braces(p);\r\n            }\r\n            return p_array;\r\n        },\r\n        /**\r\n         * formats the fractions accordingly.\r\n         * @param {Frac} f\r\n         * @param {bool} is_pow\r\n         */\r\n        formatFrac: function (f, is_pow) {\r\n            var n = f.num.toString(),\r\n                    d = f.den.toString();\r\n            // no need to have x^1\r\n            if(is_pow && n === '1' && d === '1')\r\n                return '';\r\n            // no need to have x/1\r\n            if(d === '1')\r\n                return n;\r\n            return this.frac(n, d);\r\n        },\r\n        frac: function (n, d) {\r\n            return '\\\\frac' + this.braces(n) + this.braces(d);\r\n        },\r\n        braces: function (e) {\r\n            return '{' + e + '}';\r\n        },\r\n        brackets: function (e, typ) {\r\n            typ = typ || 'parens';\r\n            var bracketTypes = {\r\n                parens: ['(', ')'],\r\n                square: ['[', ']'],\r\n                brace: ['{', '}'],\r\n                abs: ['|', '|'],\r\n                angle: ['\\\\langle', '\\\\rangle']\r\n            };\r\n            var bracket = bracketTypes[typ];\r\n            return '\\\\left' + bracket[0] + e + '\\\\right' + bracket[1];\r\n        },\r\n        /**\r\n         * Removes extreneous tokens\r\n         * @param {Tokens[]} tokens\r\n         * @returns {Tokens[]}\r\n         */\r\n        filterTokens: function (tokens) {\r\n            var filtered = [];\r\n\r\n            // Copy over the type of the scope\r\n            if(isArray(tokens)) {\r\n                filtered.type = tokens.type;\r\n            }\r\n\r\n            // the items that need to be disposed\r\n            var d = ['\\\\', 'left', 'right', 'big', 'Big', 'large', 'Large'];\r\n            for(var i = 0, l = tokens.length; i < l; i++) {\r\n                var token = tokens[i];\r\n                var next_token = tokens[i + 1];\r\n                if(token.value === '\\\\' && next_token.value === '\\\\') {\r\n                    filtered.push(token);\r\n                }\r\n                else if(isArray(token)) {\r\n                    filtered.push(LaTeX.filterTokens(token));\r\n                }\r\n                else if(d.indexOf(token.value) === -1) {\r\n                    filtered.push(token);\r\n                }\r\n            }\r\n            return filtered;\r\n        },\r\n        /*\r\n         * Parses tokens from LaTeX string. Does not do any error checking\r\n         * @param {Tokens[]} rpn\r\n         * @returns {String}\r\n         */\r\n        parse: function (raw_tokens) {\r\n            var i, l;\r\n            var retval = '';\r\n            var tokens = this.filterTokens(raw_tokens);\r\n            var replace = {\r\n                'cdot': '',\r\n                'times': '',\r\n                'infty': 'Infinity'\r\n            };\r\n            // get the next token\r\n            var next = function (n) {\r\n                return tokens[(typeof n === 'undefined' ? ++i : i += n)];\r\n            };\r\n            var parse_next = function () {\r\n                return LaTeX.parse(next());\r\n            };\r\n            var get = function (token) {\r\n                if(token in replace) {\r\n                    return replace[token];\r\n                }\r\n                // A quirk with implicit multiplication forces us to check for *\r\n                if(token === '*' && tokens[i + 1].value === '&') {\r\n                    next(2); // skip this and the &\r\n                    return ',';\r\n                }\r\n\r\n                if(token === '&') {\r\n                    next();\r\n                    return ','; // Skip the *\r\n                }\r\n                // If it's the end of a row, return the row separator\r\n                if(token === '\\\\') {\r\n                    return '],[';\r\n                }\r\n                return token;\r\n            };\r\n\r\n            // start parsing the tokens\r\n            for(i = 0, l = tokens.length; i < l; i++) {\r\n                var token = tokens[i];\r\n                // fractions\r\n                if(token.value === 'frac') {\r\n                    // parse and wrap it in brackets\r\n                    var n = parse_next();\r\n                    var d = parse_next();\r\n                    retval += n + '/' + d;\r\n                }\r\n                else if(token.value in LaTeX.symbols) {\r\n                    if(token.value === SQRT && tokens[i + 1].type === 'vector' && tokens[i + 2].type === 'Set') {\r\n                        var base = parse_next();\r\n                        var expr = parse_next();\r\n                        retval += (expr + '^' + inBrackets('1/' + base));\r\n                    }\r\n                    else {\r\n                        retval += token.value + parse_next();\r\n                    }\r\n                }\r\n                else if(token.value === 'int') {\r\n                    var f = parse_next();\r\n                    // skip the comma\r\n                    i++;\r\n                    // get the variable of integration\r\n                    var dx = next().value;\r\n                    dx = get(dx.substring(1, dx.length));\r\n                    retval += 'integrate' + inBrackets(f + ',' + dx);\r\n                }\r\n                else if(token.value === 'int_') {\r\n                    var l = parse_next(); // lower\r\n                    i++; // skip the ^\r\n                    var u = next().value; // upper\r\n                    // if it is in brackets\r\n                    if (u === undefined) {\r\n                        i--;\r\n                        var u = parse_next();\r\n                    }\r\n                    var f = parse_next(); // function\r\n                    \r\n                    // get the variable of integration\r\n                    var dx = next().value;\r\n                    // skip the comma\r\n                    if (dx === ',') {\r\n                        var dx = next().value;\r\n                    }\r\n                    // if 'd', skip\r\n                    if (dx === 'differentialD') {\r\n                        // skip the *\r\n                        i++;\r\n                        var dx = next().value;\r\n                    }\r\n                    if (dx === 'mathrm') {\r\n                        // skip the mathrm{d}\r\n                        i++;\r\n                        var dx = next().value;\r\n                    }\r\n                    retval += 'defint' + inBrackets(f + ',' + l + ',' + u + ',' + dx);\r\n                }\r\n                else if(token.value && token.value.startsWith('int_')) {\r\n                    // var l = parse_next(); // lower\r\n                    var l = token.value.replace('int_', '')\r\n                    console.log('uppernow')\r\n                    i++; // skip the ^\r\n                    var u = next().value; // upper\r\n                    // if it is in brackets\r\n                    if (u === undefined) {\r\n                        i--;\r\n                        var u = parse_next();\r\n                    }\r\n                    var f = parse_next(); // function\r\n                    \r\n                    // get the variable of integration\r\n                    var dx = next().value;\r\n                    // skip the comma\r\n                    if (dx === ',') {\r\n                        var dx = next().value;\r\n                    }\r\n                    // if 'd', skip\r\n                    if (dx === 'differentialD') {\r\n                        // skip the *\r\n                        i++;\r\n                        var dx = next().value;\r\n                    }\r\n                    if (dx === 'mathrm') {\r\n                        // skip the mathrm{d}\r\n                        i++;\r\n                        var dx = next().value;\r\n                    }\r\n                    retval += 'defint' + inBrackets(f + ',' + l + ',' + u + ',' + dx);\r\n                }\r\n                else if(token.value === 'mathrm') {\r\n                    var f = tokens[++i][0].value;\r\n                    retval += f + parse_next();\r\n                }\r\n                // sum and product\r\n                else if(token.value === 'sum_' || token.value === 'prod_') {\r\n                    var fn = token.value === 'sum_' ? 'sum' : 'product';\r\n                    var nxt = next();\r\n                    i++; // skip the caret\r\n                    var end = parse_next();\r\n                    var f = parse_next();\r\n                    retval += fn + inBrackets([f, get(nxt[0]), get(nxt[2]), get(end)].join(','));\r\n                }\r\n                else if(token.value === 'lim_') {\r\n                    var nxt = next();\r\n                    retval += 'limit' + inBrackets([parse_next(), get(nxt[0]), get(nxt[2])].join(','));\r\n                }\r\n                else if(token.value === 'begin') {\r\n                    var nxt = next();\r\n                    if(Array.isArray(nxt)) {\r\n                        var v = nxt[0].value;\r\n                        if(v === 'matrix') {\r\n                            // Start a matrix\r\n                            retval += 'matrix([';\r\n                        }\r\n                    }\r\n                }\r\n                else if(token.value === 'end') {\r\n                    var nxt = next();\r\n                    if(Array.isArray(nxt)) {\r\n                        var v = nxt[0].value;\r\n                        if(v === 'matrix') {\r\n                            // End a matrix\r\n                            retval += '])';\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if(Array.isArray(token)) {\r\n                        retval += get(LaTeX.parse(token));\r\n                    }\r\n                    else {\r\n                        retval += get(token.value.toString());\r\n                    }\r\n                }\r\n            }\r\n\r\n            return inBrackets(retval);\r\n        }\r\n    };\r\n//Vector =======================================================================\r\n    function Vector(v) {\r\n        if(isVector(v))\r\n            this.elements = v.items.slice(0);\r\n        else if(isArray(v))\r\n            this.elements = v.slice(0);\r\n        else\r\n            this.elements = [].slice.call(arguments);\r\n    }\r\n    /*\r\n     * Generates a pre-filled array\r\n     * @param {type} n\r\n     * @param {type} val\r\n     * @returns {unresolved}\r\n     */\r\n    Vector.arrayPrefill = function (n, val) {\r\n        var a = [];\r\n        val = val || 0;\r\n        for(var i = 0; i < n; i++)\r\n            a[i] = val;\r\n        return a;\r\n    };\r\n    /**\r\n     * Generate a vector from and array\r\n     * @param {type} a\r\n     * @returns {unresolved}\r\n     */\r\n    Vector.fromArray = function (a) {\r\n        var v = new Vector();\r\n        v.elements = a;\r\n        return v;\r\n    };\r\n\r\n    /**\r\n     * Convert a Set to a Vector\r\n     * @param {Set} set\r\n     * @returns {Vector}\r\n     */\r\n    Vector.fromSet = function (set) {\r\n        return Vector.fromArray(set.elements);\r\n    };\r\n\r\n    //Ported from Sylvester.js\r\n    Vector.prototype = {\r\n        custom: true,\r\n        // Returns element i of the vector\r\n        e: function (i) {\r\n            return (i < 1 || i > this.elements.length) ? null : this.elements[i - 1];\r\n        },\r\n\r\n        set: function (i, val) {\r\n            if(!isSymbol(val))\r\n                val = new Symbol(val);\r\n            this.elements[i] = val;\r\n        },\r\n\r\n        // Returns the number of elements the vector has\r\n        dimensions: function () {\r\n            return this.elements.length;\r\n        },\r\n\r\n        // Returns the modulus ('length') of the vector\r\n        modulus: function () {\r\n            return block('SAFE', function () {\r\n                return _.pow((this.dot(this.clone())), new Symbol(0.5));\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns true iff the vector is equal to the argument\r\n        eql: function (vector) {\r\n            var n = this.elements.length;\r\n            var V = vector.elements || vector;\r\n            if(n !== V.length) {\r\n                return false;\r\n            }\r\n            do {\r\n                if(Math.abs(_.subtract(this.elements[n - 1], V[n - 1]).valueOf()) > PRECISION) {\r\n                    return false;\r\n                }\r\n            }\r\n            while(--n);\r\n            return true;\r\n        },\r\n\r\n        // Returns a clone of the vector\r\n        clone: function () {\r\n            var V = new Vector(),\r\n                    l = this.elements.length;\r\n            for(var i = 0; i < l; i++) {\r\n                //Rule: all items within the vector must have a clone method.\r\n                V.elements.push(this.elements[i].clone());\r\n            }\r\n            if(this.getter) {\r\n                V.getter = this.getter.clone();\r\n            }\r\n            return V;\r\n        },\r\n\r\n        // Maps the vector to another vector according to the given function\r\n        map: function (fn) {\r\n            var elements = [];\r\n            this.each(function (x, i) {\r\n                elements.push(fn(x, i));\r\n            });\r\n\r\n            return new Vector(elements);\r\n        },\r\n\r\n        // Calls the iterator for each element of the vector in turn\r\n        each: function (fn) {\r\n            var n = this.elements.length, k = n, i;\r\n            do {\r\n                i = k - n;\r\n                fn(this.elements[i], i + 1);\r\n            }\r\n            while(--n);\r\n        },\r\n\r\n        // Returns a new vector created by normalizing the receiver\r\n        toUnitVector: function () {\r\n            return block('SAFE', function () {\r\n                var r = this.modulus();\r\n                if(r.valueOf() === 0) {\r\n                    return this.clone();\r\n                }\r\n                return this.map(function (x) {\r\n                    return _.divide(x, r);\r\n                });\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the angle between the vector and the argument (also a vector)\r\n        angleFrom: function (vector) {\r\n            return block('SAFE', function () {\r\n                var V = vector.elements || vector;\r\n                var n = this.elements.length;\r\n                if(n !== V.length) {\r\n                    return null;\r\n                }\r\n                var dot = new Symbol(0), mod1 = new Symbol(0), mod2 = new Symbol(0);\r\n                // Work things out in parallel to save time\r\n                this.each(function (x, i) {\r\n                    dot = _.add(dot, _.multiply(x, V[i - 1]));\r\n                    mod1 = _.add(mod1, _.multiply(x, x));// will not conflict in safe block\r\n                    mod2 = _.add(mod2, _.multiply(V[i - 1], V[i - 1]));// will not conflict in safe block\r\n                });\r\n                mod1 = _.pow(mod1, new Symbol(0.5));\r\n                mod2 = _.pow(mod2, new Symbol(0.5));\r\n                var product = _.multiply(mod1, mod2);\r\n                if(product.valueOf() === 0) {\r\n                    return null;\r\n                }\r\n                var theta = _.divide(dot, product);\r\n                var theta_val = theta.valueOf();\r\n                if(theta_val < -1) {\r\n                    theta = -1;\r\n                }\r\n                if(theta_val > 1) {\r\n                    theta = 1;\r\n                }\r\n                return new Symbol(Math.acos(theta));\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns true iff the vector is parallel to the argument\r\n        isParallelTo: function (vector) {\r\n            var angle = this.angleFrom(vector).valueOf();\r\n            return (angle === null) ? null : (angle <= PRECISION);\r\n        },\r\n\r\n        // Returns true iff the vector is antiparallel to the argument\r\n        isAntiparallelTo: function (vector) {\r\n            var angle = this.angleFrom(vector).valueOf();\r\n            return (angle === null) ? null : (Math.abs(angle - Math.PI) <= PRECISION);\r\n        },\r\n\r\n        // Returns true iff the vector is perpendicular to the argument\r\n        isPerpendicularTo: function (vector) {\r\n            var dot = this.dot(vector);\r\n            return (dot === null) ? null : (Math.abs(dot) <= PRECISION);\r\n        },\r\n\r\n        // Returns the result of adding the argument to the vector\r\n        add: function (vector) {\r\n            return block('SAFE', function () {\r\n                var V = vector.elements || vector;\r\n                if(this.elements.length !== V.length) {\r\n                    return null;\r\n                }\r\n                return this.map(function (x, i) {\r\n                    return _.add(x, V[i - 1]);\r\n                });\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the result of subtracting the argument from the vector\r\n        subtract: function (vector) {\r\n            return block('SAFE', function () {\r\n                var V = vector.elements || vector;\r\n                if(this.elements.length !== V.length) {\r\n                    return null;\r\n                }\r\n                return this.map(function (x, i) {\r\n                    return _.subtract(x, V[i - 1]);\r\n                });\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the result of multiplying the elements of the vector by the argument\r\n        multiply: function (k) {\r\n            return this.map(function (x) {\r\n                return x.clone() * k.clone();\r\n            });\r\n        },\r\n\r\n        x: function (k) {\r\n            return this.multiply(k);\r\n        },\r\n\r\n        // Returns the scalar product of the vector with the argument\r\n        // Both vectors must have equal dimensionality\r\n        dot: function (vector) {\r\n            return block('SAFE', function () {\r\n                var V = vector.elements || vector;\r\n                var product = new Symbol(0), n = this.elements.length;\r\n                if(n !== V.length) {\r\n                    return null;\r\n                }\r\n                do {\r\n                    product = _.add(product, _.multiply(this.elements[n - 1], V[n - 1]));\r\n                }\r\n                while(--n);\r\n                return product;\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the vector product of the vector with the argument\r\n        // Both vectors must have dimensionality 3\r\n        cross: function (vector) {\r\n            var B = vector.elements || vector;\r\n            if(this.elements.length !== 3 || B.length !== 3) {\r\n                return null;\r\n            }\r\n            var A = this.elements;\r\n            return block('SAFE', function () {\r\n                return new Vector([\r\n                    _.subtract(_.multiply(A[1], B[2]), _.multiply(A[2], B[1])),\r\n                    _.subtract(_.multiply(A[2], B[0]), _.multiply(A[0], B[2])),\r\n                    _.subtract(_.multiply(A[0], B[1]), _.multiply(A[1], B[0]))\r\n                ]);\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the (absolute) largest element of the vector\r\n        max: function () {\r\n            var m = 0, n = this.elements.length, k = n, i;\r\n            do {\r\n                i = k - n;\r\n                if(Math.abs(this.elements[i].valueOf()) > Math.abs(m.valueOf())) {\r\n                    m = this.elements[i];\r\n                }\r\n            }\r\n            while(--n);\r\n            return m;\r\n        },\r\n        magnitude: function () {\r\n            var magnitude = new Symbol(0);\r\n            this.each(function (e) {\r\n                magnitude = _.add(magnitude, _.pow(e, new Symbol(2)));\r\n            });\r\n            return _.sqrt(magnitude);\r\n        },\r\n        // Returns the index of the first match found\r\n        indexOf: function (x) {\r\n            var index = null, n = this.elements.length, k = n, i;\r\n            do {\r\n                i = k - n;\r\n                if(index === null && this.elements[i].valueOf() === x.valueOf()) {\r\n                    index = i + 1;\r\n                }\r\n            }\r\n            while(--n);\r\n            return index;\r\n        },\r\n        text: function (x) {\r\n            return text(this);\r\n        },\r\n        toString: function () {\r\n            return this.text();\r\n        },\r\n        latex: function (option) {\r\n            var tex = [];\r\n            for(var i = 0; i < this.elements.length; i++) {\r\n                tex.push(LaTeX.latex.call(LaTeX, this.elements[i], option));\r\n            }\r\n            return '[' + tex.join(', ') + ']';\r\n        }\r\n    };\r\n\r\n//Matrix =======================================================================\r\n    function Matrix() {\r\n        var m = arguments,\r\n                l = m.length, i, el = [];\r\n        if(isMatrix(m)) { // if it's a matrix then make a clone\r\n            for(i = 0; i < l; i++) {\r\n                el.push(m[i].slice(0));\r\n            }\r\n        }\r\n        else {\r\n            var row, lw, rl;\r\n            for(i = 0; i < l; i++) {\r\n                row = m[i];\r\n                if(isVector(row))\r\n                    row = row.elements;\r\n                if(!isArray(row))\r\n                    row = [row];\r\n                rl = row.length;\r\n                if(lw && lw !== rl)\r\n                    err('Unable to create Matrix. Row dimensions do not match!');\r\n                el.push(row);\r\n                lw = rl;\r\n            }\r\n        }\r\n        this.elements = el;\r\n    }\r\n    Matrix.identity = function (n) {\r\n        var m = new Matrix();\r\n        for(var i = 0; i < n; i++) {\r\n            m.elements.push([]);\r\n            for(var j = 0; j < n; j++) {\r\n                m.set(i, j, i === j ? new Symbol(1) : new Symbol(0));\r\n            }\r\n        }\r\n        return m;\r\n    };\r\n    Matrix.fromArray = function (arr) {\r\n        function F(args) {\r\n            return Matrix.apply(this, args);\r\n        }\r\n        F.prototype = Matrix.prototype;\r\n\r\n        return new F(arr);\r\n    };\r\n    Matrix.zeroMatrix = function (rows, cols) {\r\n        var m = new Matrix();\r\n        for(var i = 0; i < rows; i++) {\r\n            m.elements.push(Vector.arrayPrefill(cols, new Symbol(0)));\r\n        }\r\n        return m;\r\n    };\r\n    Matrix.prototype = {\r\n        // needs be true to let the parser know not to try to cast it to a symbol\r\n        custom: true,\r\n        get: function (row, column) {\r\n            if(!this.elements[row])\r\n                return undefined;\r\n            return this.elements[row][column];\r\n        },\r\n        map: function (f, raw_values) {\r\n            var M = new Matrix();\r\n            this.each(function (e, i, j) {\r\n                M.set(i, j, f.call(M, e), raw_values);\r\n            });\r\n            return M;\r\n        },\r\n        set: function (row, column, value, raw) {\r\n            if(!this.elements[row])\r\n                this.elements[row] = [];\r\n            this.elements[row][column] = raw ? value : (isSymbol(value) ? value : new Symbol(value));\r\n        },\r\n        cols: function () {\r\n            return this.elements[0].length;\r\n        },\r\n        rows: function () {\r\n            return this.elements.length;\r\n        },\r\n        row: function (n) {\r\n            if(!n || n > this.cols())\r\n                return [];\r\n            return this.elements[n - 1];\r\n        },\r\n        col: function (n) {\r\n            var nr = this.rows(),\r\n                    col = [];\r\n            if(n > this.cols() || !n)\r\n                return col;\r\n            for(var i = 0; i < nr; i++) {\r\n                col.push(this.elements[i][n - 1]);\r\n            }\r\n            return col;\r\n        },\r\n        eachElement: function (fn) {\r\n            var nr = this.rows(),\r\n                    nc = this.cols(), i, j;\r\n            for(i = 0; i < nr; i++) {\r\n                for(j = 0; j < nc; j++) {\r\n                    fn.call(this, this.elements[i][j], i, j);\r\n                }\r\n            }\r\n        },\r\n        // ported from Sylvester.js\r\n        determinant: function () {\r\n            if(!this.isSquare()) {\r\n                return null;\r\n            }\r\n            var M = this.toRightTriangular();\r\n            var det = M.elements[0][0], n = M.elements.length - 1, k = n, i;\r\n            do {\r\n                i = k - n + 1;\r\n                det = _.multiply(det, M.elements[i][i]);\r\n            }\r\n            while(--n);\r\n            return det;\r\n        },\r\n        isSquare: function () {\r\n            return this.elements.length === this.elements[0].length;\r\n        },\r\n        isSingular: function () {\r\n            return this.isSquare() && this.determinant() === 0;\r\n        },\r\n        augment: function (m) {\r\n            var r = this.rows(), rr = m.rows();\r\n            if(r !== rr)\r\n                err(\"Cannot augment matrix. Rows don't match.\");\r\n            for(var i = 0; i < r; i++) {\r\n                this.elements[i] = this.elements[i].concat(m.elements[i]);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        clone: function () {\r\n            var r = this.rows(), c = this.cols(),\r\n                    m = new Matrix();\r\n            for(var i = 0; i < r; i++) {\r\n                m.elements[i] = [];\r\n                for(var j = 0; j < c; j++) {\r\n                    var symbol = this.elements[i][j];\r\n                    m.elements[i][j] = isSymbol(symbol) ? symbol.clone() : symbol;\r\n                }\r\n            }\r\n            return m;\r\n        },\r\n        // ported from Sylvester.js\r\n        invert: function () {\r\n            if(!this.isSquare())\r\n                err('Matrix is not square!');\r\n            return block('SAFE', function () {\r\n                var ni = this.elements.length, ki = ni, i, j;\r\n                var imatrix = Matrix.identity(ni);\r\n                var M = this.augment(imatrix).toRightTriangular();\r\n                var np, kp = M.elements[0].length, p, els, divisor;\r\n                var inverse_elements = [], new_element;\r\n                // Matrix is non-singular so there will be no zeros on the diagonal\r\n                // Cycle through rows from last to first\r\n                do {\r\n                    i = ni - 1;\r\n                    // First, normalise diagonal elements to 1\r\n                    els = [];\r\n                    np = kp;\r\n                    inverse_elements[i] = [];\r\n                    divisor = M.elements[i][i];\r\n                    do {\r\n                        p = kp - np;\r\n                        new_element = _.divide(M.elements[i][p], divisor.clone());\r\n                        els.push(new_element);\r\n                        // Shuffle of the current row of the right hand side into the results\r\n                        // array as it will not be modified by later runs through this loop\r\n                        if(p >= ki) {\r\n                            inverse_elements[i].push(new_element);\r\n                        }\r\n                    }\r\n                    while(--np);\r\n                    M.elements[i] = els;\r\n                    // Then, subtract this row from those above it to\r\n                    // give the identity matrix on the left hand side\r\n                    for(j = 0; j < i; j++) {\r\n                        els = [];\r\n                        np = kp;\r\n                        do {\r\n                            p = kp - np;\r\n                            els.push(_.subtract(M.elements[j][p].clone(), _.multiply(M.elements[i][p].clone(), M.elements[j][i].clone())));\r\n                        }\r\n                        while(--np);\r\n                        M.elements[j] = els;\r\n                    }\r\n                }\r\n                while(--ni);\r\n                return Matrix.fromArray(inverse_elements);\r\n            }, undefined, this);\r\n        },\r\n        // ported from Sylvester.js\r\n        toRightTriangular: function () {\r\n            return block('SAFE', function () {\r\n                var M = this.clone(), els, fel, nel,\r\n                        n = this.elements.length, k = n, i, np, kp = this.elements[0].length, p;\r\n                do {\r\n                    i = k - n;\r\n                    fel = M.elements[i][i];\r\n                    if(fel.valueOf() === 0) {\r\n                        for(var j = i + 1; j < k; j++) {\r\n                            nel = M.elements[j][i];\r\n                            if(nel && nel.valueOf() !== 0) {\r\n                                els = [];\r\n                                np = kp;\r\n                                do {\r\n                                    p = kp - np;\r\n                                    els.push(_.add(M.elements[i][p].clone(), M.elements[j][p].clone()));\r\n                                }\r\n                                while(--np);\r\n                                M.elements[i] = els;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    var fel = M.elements[i][i];\r\n                    if(fel.valueOf() !== 0) {\r\n                        for(j = i + 1; j < k; j++) {\r\n                            var multiplier = _.divide(M.elements[j][i].clone(), M.elements[i][i].clone());\r\n                            els = [];\r\n                            np = kp;\r\n                            do {\r\n                                p = kp - np;\r\n                                // Elements with column numbers up to an including the number\r\n                                // of the row that we're subtracting can safely be set straight to\r\n                                // zero, since that's the point of this routine and it avoids having\r\n                                // to loop over and correct rounding errors later\r\n                                els.push(p <= i ? new Symbol(0) :\r\n                                        _.subtract(M.elements[j][p].clone(), _.multiply(M.elements[i][p].clone(), multiplier.clone())));\r\n                            }\r\n                            while(--np);\r\n                            M.elements[j] = els;\r\n                        }\r\n                    }\r\n                }\r\n                while(--n);\r\n\r\n                return M;\r\n            }, undefined, this);\r\n        },\r\n        transpose: function () {\r\n            var rows = this.elements.length, cols = this.elements[0].length;\r\n            var M = new Matrix(), ni = cols, i, nj, j;\r\n\r\n            do {\r\n                i = cols - ni;\r\n                M.elements[i] = [];\r\n                nj = rows;\r\n                do {\r\n                    j = rows - nj;\r\n                    M.elements[i][j] = this.elements[j][i].clone();\r\n                }\r\n                while(--nj);\r\n            }\r\n            while(--ni);\r\n            return M;\r\n        },\r\n        // Returns true if the matrix can multiply the argument from the left\r\n        canMultiplyFromLeft: function (matrix) {\r\n            var l = isMatrix(matrix) ? matrix.elements.length : matrix.length;\r\n            // this.columns should equal matrix.rows\r\n            return (this.elements[0].length === l);\r\n        },\r\n        sameSize: function (matrix) {\r\n            return this.rows() === matrix.rows() && this.cols() === matrix.cols();\r\n        },\r\n        multiply: function (matrix) {\r\n            return block('SAFE', function () {\r\n                var M = matrix.elements || matrix;\r\n                if(!this.canMultiplyFromLeft(M)) {\r\n                    if(this.sameSize(matrix)) {\r\n                        var MM = new Matrix();\r\n                        var rows = this.rows();\r\n                        for(var i = 0; i < rows; i++) {\r\n                            var e = _.multiply(new Vector(this.elements[i]), new Vector(matrix.elements[i]));\r\n                            MM.elements[i] = e.elements;\r\n                        }\r\n                        return MM;\r\n                    }\r\n                    return null;\r\n                }\r\n                var ni = this.elements.length, ki = ni, i, nj, kj = M[0].length, j;\r\n                var cols = this.elements[0].length, elements = [], sum, nc, c;\r\n                do {\r\n                    i = ki - ni;\r\n                    elements[i] = [];\r\n                    nj = kj;\r\n                    do {\r\n                        j = kj - nj;\r\n                        sum = new Symbol(0);\r\n                        nc = cols;\r\n                        do {\r\n                            c = cols - nc;\r\n                            sum = _.add(sum, _.multiply(this.elements[i][c], M[c][j]));\r\n                        }\r\n                        while(--nc);\r\n                        elements[i][j] = sum;\r\n                    }\r\n                    while(--nj);\r\n                }\r\n                while(--ni);\r\n                return Matrix.fromArray(elements);\r\n            }, undefined, this);\r\n        },\r\n        add: function (matrix, callback) {\r\n            var M = new Matrix();\r\n            if(this.sameSize(matrix)) {\r\n                this.eachElement(function (e, i, j) {\r\n                    var result = _.add(e.clone(), matrix.elements[i][j].clone());\r\n                    if(callback) {\r\n                        result = callback.call(M, result, e, matrix.elements[i][j]);\r\n                    }\r\n                    M.set(i, j, result);\r\n                });\r\n            }\r\n            return M;\r\n        },\r\n        subtract: function (matrix, callback) {\r\n            var M = new Matrix();\r\n            if(this.sameSize(matrix)) {\r\n                this.eachElement(function (e, i, j) {\r\n                    var result = _.subtract(e.clone(), matrix.elements[i][j].clone());\r\n                    if(callback) {\r\n                        result = callback.call(M, result, e, matrix.elements[i][j]);\r\n                    }\r\n                    M.set(i, j, result);\r\n                });\r\n            }\r\n            return M;\r\n        },\r\n        negate: function () {\r\n            this.each(function (e) {\r\n                return e.negate();\r\n            });\r\n            return this;\r\n        },\r\n        toVector: function () {\r\n            if(this.rows() === 1 || this.cols() === 1) {\r\n                var v = new Vector();\r\n                v.elements = this.elements;\r\n                return v;\r\n            }\r\n            return this;\r\n        },\r\n        toString: function (newline, to_decimal) {\r\n            var l = this.rows(),\r\n                    s = [];\r\n            newline = newline === undefined ? '\\n' : newline;\r\n            for(var i = 0; i < l; i++) {\r\n                s.push('[' + this.elements[i].map(function (x) {\r\n                    var v = to_decimal ? x.multiplier.toDecimal() : x.toString();\r\n                    return x !== undefined ? v : '';\r\n                }).join(',') + ']');\r\n            }\r\n            return 'matrix' + inBrackets(s.join(','));\r\n        },\r\n        text: function () {\r\n            return 'matrix(' + this.elements.toString('') + ')';\r\n        },\r\n        latex: function (option) {\r\n            var cols = this.cols(), elements = this.elements;\r\n            return format('\\\\begin{vmatrix}{0}\\\\end{vmatrix}', function () {\r\n                var tex = [];\r\n                for(var row in elements) {\r\n                    var row_tex = [];\r\n                    for(var i = 0; i < cols; i++) {\r\n                        row_tex.push(LaTeX.latex.call(LaTeX, elements[row][i], option));\r\n                    }\r\n                    tex.push(row_tex.join(' & '));\r\n                }\r\n                return tex.join(' \\\\cr ');\r\n            });\r\n        }\r\n    };\r\n    // aliases\r\n    Matrix.prototype.each = Matrix.prototype.eachElement;\r\n\r\n\r\n    function Set(set) {\r\n        this.elements = [];\r\n        // if the first object isn't an array, convert it to one.\r\n        if(!isVector(set))\r\n            set = Vector.fromArray(arguments);\r\n\r\n        if(set) {\r\n            var elements = set.elements;\r\n            for(var i = 0, l = elements.length; i < l; i++) {\r\n                this.add(elements[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    Set.fromArray = function (arr) {\r\n        function F(args) {\r\n            return Set.apply(this, args);\r\n        }\r\n        F.prototype = Set.prototype;\r\n\r\n        return new F(arr);\r\n    };\r\n\r\n    Set.prototype = {\r\n        add: function (x) {\r\n            if(!this.contains(x))\r\n                this.elements.push(x.clone());\r\n        },\r\n        contains: function (x) {\r\n            for(var i = 0; i < this.elements.length; i++) {\r\n                var e = this.elements[i];\r\n                if(x.equals(e))\r\n                    return true;\r\n            }\r\n            return false;\r\n        },\r\n        each: function (f) {\r\n            var elements = this.elements;\r\n            var set = new Set();\r\n            for(var i = 0, l = elements.length; i < l; i++) {\r\n                var e = elements[i];\r\n                f.call(this, e, set, i);\r\n            }\r\n            return set;\r\n        },\r\n        clone: function () {\r\n            var set = new Set();\r\n            this.each(function (e) {\r\n                set.add(e.clone());\r\n            });\r\n            return set;\r\n        },\r\n        union: function (set) {\r\n            var _union = this.clone();\r\n            set.each(function (e) {\r\n                _union.add(e);\r\n            });\r\n\r\n            return _union;\r\n        },\r\n        difference: function (set) {\r\n            var diff = this.clone();\r\n            set.each(function (e) {\r\n                diff.remove(e);\r\n            });\r\n            return diff;\r\n        },\r\n        remove: function (element) {\r\n            for(var i = 0, l = this.elements.length; i < l; i++) {\r\n                var e = this.elements[i];\r\n                if(e.equals(element)) {\r\n                    remove(this.elements, i);\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        intersection: function (set) {\r\n            var _intersection = new Set();\r\n            var A = this;\r\n            set.each(function (e) {\r\n                if(A.contains(e)) {\r\n                    _intersection.add(e);\r\n                }\r\n                ;\r\n            });\r\n\r\n            return _intersection;\r\n        },\r\n        intersects: function (set) {\r\n            return this.intersection(set).elements.length > 0;\r\n        },\r\n        is_subset: function (set) {\r\n            var elements = set.elements;\r\n            for(var i = 0, l = elements.length; i < l; i++) {\r\n                if(!this.contains(elements[i])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n        toString: function () {\r\n            return '{' + this.elements.join(',') + '}';\r\n        }\r\n    };\r\n\r\n//build ========================================================================\r\n    var Build = {\r\n        dependencies: {\r\n            _rename: {\r\n                'Math2.factorial': 'factorial'\r\n            },\r\n            factorial: {\r\n                'Math2.gamma': Math2.gamma\r\n            },\r\n            gamma_incomplete: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Li: {\r\n                'Math2.Ei': Math2.Ei,\r\n                'Math2.bigLog': Math2.bigLog,\r\n                'Frac': Frac\r\n            },\r\n            Ci: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Ei: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Si: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Shi: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Chi: {\r\n                'isInt': isInt,\r\n                'nround': nround,\r\n                'Math2.num_integrate': Math2.num_integrate\r\n            },\r\n            factor: {\r\n                'Math2.ifactor': Math2.ifactor,\r\n                'Symbol': Symbol\r\n            },\r\n            num_integrate: {\r\n                'Math2.simpson': Math2.simpson,\r\n                'nround': nround\r\n            },\r\n            fib: {\r\n                'even': even\r\n            }\r\n        },\r\n        /* Some functions need to be made numeric safe. Build checks if there's a\r\n         * reformat option and calls that instead when compiling the function string.\r\n         */\r\n        reformat: {\r\n            // this simply extends the build function\r\n            diff: function (symbol, deps) {\r\n                var v = symbol.args[1].toString();\r\n                var f = 'var f = ' + Build.build(symbol.args[0].toString(), [v]) + ';';\r\n                deps[1] += 'var diff = ' + Math2.diff.toString() + ';';\r\n                deps[1] += f;\r\n\r\n                return ['diff(f)(' + v + ')', deps];\r\n            }\r\n        },\r\n        getProperName: function (f) {\r\n            var map = {\r\n                continued_fraction: 'continuedFraction'\r\n            };\r\n            return map[f] || f;\r\n        },\r\n        // assumes that dependences are at max 2 levels\r\n        compileDependencies: function (f, deps) {\r\n            // grab the predefined dependiences\r\n            var dependencies = Build.dependencies[f];\r\n\r\n            // the dependency string\r\n            var dep_string = deps && deps[1] ? deps[1] : '';\r\n\r\n            // the functions to be replaced\r\n            var replacements = deps && deps[0] ? deps[0] : {};\r\n\r\n            // loop through them and add them to the list\r\n            for(var x in dependencies) {\r\n                if(typeof dependencies[x] === 'object')\r\n                    continue; // skip object\r\n                var components = x.split('.'); //Math.f becomes f\r\n                // if the function isn't part of an object then reference the function itself\r\n                dep_string += 'var ' + (components.length > 1 ? components[1] : components[0]) + '=' + dependencies[x] + ';';\r\n                replacements[x] = components.pop();\r\n            }\r\n\r\n            return [replacements, dep_string];\r\n        },\r\n        getArgsDeps: function (symbol, dependencies) {\r\n            var args = symbol.args;\r\n            for(var i = 0; i < args.length; i++) {\r\n                symbol.args[i].each(function (x) {\r\n                    if(x.group === FN)\r\n                        dependencies = Build.compileDependencies(x.fname, dependencies);\r\n                });\r\n            }\r\n            return dependencies;\r\n        },\r\n        build: function (symbol, arg_array) {\r\n            symbol = block('PARSE2NUMBER', function () {\r\n                return _.parse(symbol);\r\n            }, true);\r\n            var args = variables(symbol);\r\n            var supplements = [];\r\n            var dependencies = [];\r\n            var ftext = function (symbol, xports) {\r\n                //Fix for #545 - Parentheses confuse build.\r\n                if(symbol.fname === '') {\r\n                    symbol = Symbol.unwrapPARENS(symbol);\r\n                }\r\n                xports = xports || [];\r\n                var c = [],\r\n                        group = symbol.group,\r\n                        prefix = '';\r\n\r\n                var ftext_complex = function (group) {\r\n                    var d = group === CB ? '*' : '+',\r\n                            cc = [];\r\n\r\n                    for(var x in symbol.symbols) {\r\n                        var sym = symbol.symbols[x],\r\n                                ft = ftext(sym, xports)[0];\r\n                        // wrap it in brackets if it's group PL or CP\r\n                        if(sym.isComposite())\r\n                            ft = inBrackets(ft);\r\n                        cc.push(ft);\r\n                    }\r\n                    var retval = cc.join(d);\r\n                    retval = retval && !symbol.multiplier.equals(1) ? inBrackets(retval) : retval;\r\n                    return retval;\r\n                },\r\n                        ftext_function = function (bn) {\r\n                            var retval;\r\n                            if(bn in Math)\r\n                                retval = 'Math.' + bn;\r\n                            else {\r\n                                bn = Build.getProperName(bn);\r\n                                if(supplements.indexOf(bn) === -1) { // make sure you're not adding the function twice\r\n                                    //Math2 functions aren't part of the standard javascript\r\n                                    //Math library and must be exported.\r\n                                    xports.push('var ' + bn + ' = ' + Math2[bn].toString() + '; ');\r\n                                    supplements.push(bn);\r\n                                }\r\n                                retval = bn;\r\n                            }\r\n                            retval = retval + inBrackets(symbol.args.map(function (x) {\r\n                                return ftext(x, xports)[0];\r\n                            }).join(','));\r\n\r\n                            return retval;\r\n                        };\r\n\r\n                // the multiplier\r\n                if(group === N)\r\n                    c.push(symbol.multiplier.toDecimal());\r\n                else if(symbol.multiplier.equals(-1))\r\n                    prefix = '-';\r\n                else if(!symbol.multiplier.equals(1))\r\n                    c.push(symbol.multiplier.toDecimal());\r\n                // the value\r\n                var value;\r\n\r\n                if(group === S || group === P)\r\n                    value = symbol.value;\r\n                else if(group === FN) {\r\n                    dependencies = Build.compileDependencies(symbol.fname, dependencies);\r\n                    dependencies = Build.getArgsDeps(symbol, dependencies);\r\n                    if(Build.reformat[symbol.fname]) {\r\n                        var components = Build.reformat[symbol.fname](symbol, dependencies);\r\n                        dependencies = components[1];\r\n                        value = components[0];\r\n                    }\r\n                    else {\r\n                        value = ftext_function(symbol.fname);\r\n                    }\r\n\r\n                }\r\n                else if(group === EX) {\r\n                    var pg = symbol.previousGroup;\r\n                    if(pg === N || pg === S)\r\n                        value = symbol.value;\r\n                    else if(pg === FN) {\r\n                        value = ftext_function(symbol.fname);\r\n                        dependencies = Build.compileDependencies(symbol.fname, dependencies);\r\n                        dependencies = Build.getArgsDeps(symbol, dependencies);\r\n                    }\r\n                    else\r\n                        value = ftext_complex(symbol.previousGroup);\r\n                }\r\n                else {\r\n                    value = ftext_complex(symbol.group);\r\n                }\r\n\r\n                if(symbol.group !== N && !symbol.power.equals(1)) {\r\n                    var pow = ftext(_.parse(symbol.power));\r\n                    xports.push(pow[1]);\r\n                    value = 'Math.pow' + inBrackets(value + ',' + pow[0]);\r\n                }\r\n\r\n                if(value)\r\n                    c.push(prefix + value);\r\n\r\n                return [c.join('*'), xports.join('').replace(/\\n+\\s+/g, ' ')];\r\n            };\r\n            if(arg_array) {\r\n                // Fix for issue #546\r\n                // Disable argument checking since it's a bit presumptuous.\r\n                // Consider f(x) = 5; If I explicitely pass in an argument array contain x \r\n                // this check will fail and complain since the function doesn't contain x.\r\n                /*\r\n                 for (var i = 0; i < args.length; i++) {\r\n                 var arg = args[i];\r\n                 if (arg_array.indexOf(arg) === -1)\r\n                 err(arg + ' not found in argument array');\r\n                 }\r\n                 */\r\n                args = arg_array;\r\n            }\r\n\r\n            var f_array = ftext(symbol);\r\n\r\n            // make all the substitutions;\r\n            for(var x in dependencies[0]) {\r\n                var alias = dependencies[0][x];\r\n                f_array[1] = f_array[1].replace(x, alias);\r\n                dependencies[1] = dependencies[1].replace(x, alias);\r\n            }\r\n\r\n            var f = new Function(args, (dependencies[1] || '') + f_array[1] + ' return ' + f_array[0] + ';');\r\n\r\n            return f;\r\n        }\r\n    };\r\n\r\n\r\n//finalize =====================================================================\r\n    /* FINALIZE */\r\n    (function () {\r\n        reserveNames(_.CONSTANTS);\r\n        reserveNames(_.functions);\r\n        _.initConstants();\r\n        //bug fix for error but needs to be revisited\r\n        if(!_.error)\r\n            _.error = err;\r\n\r\n        //Store the log and log10 functions\r\n        Settings.LOG_FNS = {\r\n            log: _.functions['log'],\r\n            log10: _.functions['log10']\r\n        };\r\n\r\n    })();\r\n\r\n    /* END FINALIZE */\r\n\r\n//Core =========================================================================\r\n    var Utils = {\r\n        allSame: allSame,\r\n        allNumeric: allNumeric,\r\n        arguments2Array: arguments2Array,\r\n        arrayAddSlices: arrayAddSlices,\r\n        arrayClone: arrayClone,\r\n        arrayMax: arrayMax,\r\n        arrayMin: arrayMin,\r\n        arrayEqual: arrayEqual,\r\n        arrayUnique: arrayUnique,\r\n        arrayGetVariables: arrayGetVariables,\r\n        arraySum: arraySum,\r\n        block: block,\r\n        build: Build.build,\r\n        clearU: clearU,\r\n        comboSort: comboSort,\r\n        compare: compare,\r\n        convertToVector: convertToVector,\r\n        customError: customError,\r\n        customType: customType,\r\n        decompose_fn: decompose_fn,\r\n        each: each,\r\n        evaluate: evaluate,\r\n        even: even,\r\n        evenFraction: evenFraction,\r\n        fillHoles: fillHoles,\r\n        firstObject: firstObject,\r\n        format: format,\r\n        generatePrimes: generatePrimes,\r\n        getCoeffs: getCoeffs,\r\n        getU: getU,\r\n        importFunctions: importFunctions,\r\n        inBrackets: inBrackets,\r\n        isArray: isArray,\r\n        isExpression: isExpression,\r\n        isFraction: isFraction,\r\n        isInt: isInt,\r\n        isMatrix: isMatrix,\r\n        isNegative: isNegative,\r\n        isNumericSymbol: isNumericSymbol,\r\n        isPrime: isPrime,\r\n        isReserved: isReserved,\r\n        isSymbol: isSymbol,\r\n        isVariableSymbol: isVariableSymbol,\r\n        isVector: isVector,\r\n        keys: keys,\r\n        knownVariable: knownVariable,\r\n        nroots: nroots,\r\n        remove: remove,\r\n        reserveNames: reserveNames,\r\n        range: range,\r\n        round: nround,\r\n        sameSign: sameSign,\r\n        scientificToDecimal: scientificToDecimal,\r\n        separate: separate,\r\n        stringReplace: stringReplace,\r\n        text: text,\r\n        validateName: validateName,\r\n        variables: variables,\r\n        warn: warn\r\n    };\r\n\r\n    //This contains all the parts of nerdamer and enables nerdamer's internal functions\r\n    //to be used.\r\n    var C = {\r\n        groups: Groups,\r\n        Symbol: Symbol,\r\n        Expression: Expression,\r\n        Frac: Frac,\r\n        Vector: Vector,\r\n        Matrix: Matrix,\r\n        Parser: Parser,\r\n        Scientific: Scientific,\r\n        Fraction: Fraction,\r\n        Math2: Math2,\r\n        LaTeX: LaTeX,\r\n        Utils: Utils,\r\n        PARSER: _,\r\n        PARENTHESIS: PARENTHESIS,\r\n        Settings: Settings,\r\n        err: err,\r\n        bigInt: bigInt,\r\n        bigDec: bigDec,\r\n        exceptions: exceptions\r\n    };\r\n\r\n//libExports ===================================================================\r\n    /**\r\n     *\r\n     * @param {String} expression the expression to be evaluated\r\n     * @param {Object} subs the object containing the variable values\r\n     * @param {Integer} location a specific location in the equation list to\r\n     * insert the evaluated expression\r\n     * @param {String} option additional options\r\n     * @returns {Expression}\r\n     */\r\n    var libExports = function (expression, subs, option, location) {\r\n        // Initiate the numer flag\r\n        var numer = false;\r\n\r\n        // Is the user declaring a function?\r\n        var fndec = /^([a-z_][a-z\\d\\_]*)\\(([a-z_,\\s]*)\\):=(.+)$/gi.exec(expression);\r\n        if(fndec)\r\n            return nerdamer.setFunction(fndec[1], fndec[2].split(','), fndec[3]);\r\n\r\n        // var variable, fn, args;\r\n        // Convert any expression passed in to a string\r\n        if(expression instanceof Expression)\r\n            expression = expression.toString();\r\n\r\n        // Convert it to an array for simplicity\r\n        if(!isArray(option)) {\r\n            option = typeof option === 'undefined' ? [] : [option];\r\n        }\r\n\r\n        option.forEach(function (o) {\r\n            // Turn on the numer flag if requested\r\n            if(o === 'numer') {\r\n                numer = true;\r\n                return;\r\n            }\r\n            // Wrap it in a function if requested. This only holds true for\r\n            // functions that take a single argument which is the expression\r\n            var f = _.functions[option];\r\n            // If there's a function and it takes a single argument, then wrap\r\n            // the expression in it\r\n            if(f && f[1] === 1) {\r\n                expression = `${o}(${expression})`;\r\n            }\r\n        });\r\n\r\n        var e = block('PARSE2NUMBER', function () {\r\n            return _.parse(expression, subs);\r\n        }, numer || Settings.PARSE2NUMBER);\r\n\r\n        if(location) {\r\n            EXPRESSIONS[location - 1] = e;\r\n        }\r\n        else {\r\n            EXPRESSIONS.push(e);\r\n        }\r\n\r\n        return new Expression(e);\r\n    };\r\n    /**\r\n     * Converts expression into rpn form\r\n     * @param {String} expression\r\n     * @returns {Token[]}\r\n     */\r\n    libExports.rpn = function (expression) {\r\n        return _.tokenize(_.toRPN(expression));\r\n    };\r\n\r\n    /**\r\n     * Generates LaTeX from expression string\r\n     * @param {String} e\r\n     * @param {object} opt\r\n     * @returns {String}\r\n     */\r\n    libExports.convertToLaTeX = function (e, opt) {\r\n        return _.toTeX(e, opt);\r\n    };\r\n\r\n    /**\r\n     * Converts latex to text - Very very very basic at the moment\r\n     * @param {String} e\r\n     * @returns {String}\r\n     */\r\n    libExports.convertFromLaTeX = function (e) {\r\n        var txt = LaTeX.parse(_.tokenize(e));\r\n        return new Expression(_.parse(txt));\r\n    };\r\n\r\n    /**\r\n     * Get the version of nerdamer or a loaded add-on\r\n     * @param {String} add_on - The add-on being checked\r\n     * @returns {String} returns the version of nerdamer\r\n     */\r\n    libExports.version = function (add_on) {\r\n        if(add_on) {\r\n            try {\r\n                return C[add_on].version;\r\n            }\r\n            catch(e) {\r\n                return \"No module named \" + add_on + \" found!\";\r\n            }\r\n        }\r\n        return version;\r\n    };\r\n\r\n    /**\r\n     * Get nerdamer generated warnings\r\n     * @returns {String[]}\r\n     */\r\n    libExports.getWarnings = function () {\r\n        return WARNINGS;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {String} constant The name of the constant to be set\r\n     * @param {mixed} value The value of the constant\r\n     * @returns {Object} Returns the nerdamer object\r\n     */\r\n    libExports.setConstant = function (constant, value) {\r\n        validateName(constant);\r\n        if(!isReserved(constant)) {\r\n            //fix for issue #127\r\n            if(value === 'delete' || value === '') {\r\n                delete _.CONSTANTS[constant];\r\n            }\r\n            else {\r\n                if(isNaN(value))\r\n                    throw new NerdamerTypeError('Constant must be a number!');\r\n                _.CONSTANTS[constant] = value;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Returns the value of a previously set constant\r\n     * @param {type} constant\r\n     * @returns {String}\r\n     */\r\n    libExports.getConstant = function (constant) {\r\n        return String(_.constant[constant]);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {String} name The name of the function\r\n     * @param {Array} params_array A list containing the parameter name of the functions\r\n     * @param {String} body The body of the function\r\n     * @returns {Boolean} returns true if succeeded and falls on fail\r\n     * @example nerdamer.setFunction('f',['x'], 'x^2+2');\r\n     */\r\n    libExports.setFunction = setFunction;\r\n\r\n    /**\r\n     *\r\n     * @returns {C} Exports the nerdamer core functions and objects\r\n     */\r\n    libExports.getCore = function () {\r\n        return C;\r\n    };\r\n\r\n    libExports.getExpression = libExports.getEquation = Expression.getExpression;\r\n\r\n    /**\r\n     *\r\n     * @param {Boolean} asArray The returned names are returned as an array if this is set to true;\r\n     * @returns {String|Array}\r\n     */\r\n    libExports.reserved = function (asArray) {\r\n        if(asArray) {\r\n            return RESERVED;\r\n        }\r\n        return RESERVED.join(', ');\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {Integer} equation_number the number of the equation to clear.\r\n     * If 'all' is supplied then all equations are cleared\r\n     * @param {Boolean} keep_EXPRESSIONS_fixed use true if you don't want to keep EXPRESSIONS length fixed\r\n     * @returns {Object} Returns the nerdamer object\r\n     */\r\n    libExports.clear = function (equation_number, keep_EXPRESSIONS_fixed) {\r\n        if(equation_number === 'all') {\r\n            EXPRESSIONS = [];\r\n        }\r\n        else if(equation_number === 'last') {\r\n            EXPRESSIONS.pop();\r\n        }\r\n        else if(equation_number === 'first') {\r\n            EXPRESSIONS.shift();\r\n        }\r\n        else {\r\n            var index = !equation_number ? EXPRESSIONS.length : equation_number - 1;\r\n            keep_EXPRESSIONS_fixed === true ? EXPRESSIONS[index] = undefined : remove(EXPRESSIONS, index);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Alias for nerdamer.clear('all')\r\n     */\r\n    libExports.flush = function () {\r\n        this.clear('all');\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {Boolean} asObject\r\n     * @param {Boolean} asLaTeX\r\n     * @param {String|String[]} option\r\n     * @returns {Array}\r\n     */\r\n    libExports.expressions = function (asObject, asLaTeX, option) {\r\n        var result = asObject ? {} : [];\r\n        for(var i = 0; i < EXPRESSIONS.length; i++) {\r\n            var eq = asLaTeX ? LaTeX.latex(EXPRESSIONS[i], option) : text(EXPRESSIONS[i], option);\r\n            asObject ? result[i + 1] = eq : result.push(eq);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    //the method for registering modules\r\n    libExports.register = function (obj) {\r\n        var core = this.getCore();\r\n\r\n        if(isArray(obj)) {\r\n            for(var i = 0; i < obj.length; i++) {\r\n                if(obj)\r\n                    this.register(obj[i]);\r\n            }\r\n        }\r\n        else if(obj && Settings.exclude.indexOf(obj.name) === -1) {\r\n            //make sure all the dependencies are available\r\n            if(obj.dependencies) {\r\n                for(var i = 0; i < obj.dependencies.length; i++)\r\n                    if(!core[obj.dependencies[i]])\r\n                        throw new Error(format('{0} requires {1} to be loaded!', obj.name, obj.dependencies[i]));\r\n            }\r\n            //if no parent object is provided then the function does not have an address and cannot be called directly\r\n            var parent_obj = obj.parent,\r\n                    fn = obj.build.call(core); //call constructor to get function\r\n            if(parent_obj) {\r\n                if(!core[parent_obj])\r\n                    core[obj.parent] = {};\r\n\r\n                var ref_obj = parent_obj === 'nerdamer' ? this : core[parent_obj];\r\n                //attach the function to the core\r\n                ref_obj[obj.name] = fn;\r\n            }\r\n            if(obj.visible)\r\n                _.functions[obj.name] = [fn, obj.numargs]; //make the function available\r\n\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {String} name variable name\r\n     * @returns {boolean} validates if the profided string is a valid variable name\r\n     */\r\n    libExports.validateName = validateName;\r\n\r\n    /**\r\n     * @param {String} varname variable name\r\n     * @returns {boolean} validates if the profided string is a valid variable name\r\n     */\r\n    libExports.validVarName = function (varname) {\r\n        try {\r\n            validateName(varname);\r\n            return RESERVED.indexOf(varname) === -1;\r\n        }\r\n        catch(e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @returns {Array} Array of functions currently supported by nerdamer\r\n     */\r\n    libExports.supported = function () {\r\n        return keys(_.functions);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @returns {Number} The number equations/expressions currently loaded\r\n     */\r\n    libExports.numEquations = libExports.numExpressions = function () {\r\n        return EXPRESSIONS.length;\r\n    };\r\n    /* END EXPORTS */\r\n\r\n    /**\r\n     *\r\n     * @param {String} v variable to be set\r\n     * @param {String} val value of variable. This can be a variable expression or number\r\n     * @returns {Object} Returns the nerdamer object\r\n     */\r\n    libExports.setVar = function (v, val) {\r\n        validateName(v);\r\n        //check if it's not already a constant\r\n        if(v in _.CONSTANTS)\r\n            err('Cannot set value for constant ' + v);\r\n        if(val === 'delete' || val === '')\r\n            delete VARS[v];\r\n        else {\r\n            VARS[v] = isSymbol(val) ? val : _.parse(val);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Returns the value of a set variable\r\n     * @param {type} v\r\n     * @returns {varies}\r\n     */\r\n    libExports.getVar = function (v) {\r\n        return VARS[v];\r\n    };\r\n    /**\r\n     * Clear the variables from the VARS object\r\n     * @returns {Object} Returns the nerdamer object\r\n     */\r\n    libExports.clearVars = function () {\r\n        VARS = {};\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {Function} loader\r\n     * @returns {nerdamer}\r\n     */\r\n    libExports.load = function (loader) {\r\n        loader.call(this);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param {String} output - output format. Can be 'object' (just returns the VARS object), 'text' or 'latex'. Default: 'text'\r\n     * @param {String|String[]} option\r\n     * @returns {Object} Returns an object with the variables\r\n     */\r\n    libExports.getVars = function (output, option) {\r\n        output = output || 'text';\r\n        var variables = {};\r\n        if(output === 'object')\r\n            variables = VARS;\r\n        else {\r\n            for(var v in VARS) {\r\n                if(output === 'latex') {\r\n                    variables[v] = VARS[v].latex(option);\r\n                }\r\n                else if(output === 'text') {\r\n                    variables[v] = VARS[v].text(option);\r\n                }\r\n            }\r\n        }\r\n        return variables;\r\n    };\r\n\r\n    /**\r\n     * Set the value of a setting\r\n     * @param {String} setting The setting to be changed\r\n     * @param {boolean} value\r\n     */\r\n    libExports.set = function (setting, value) {\r\n        //current options:\r\n        //PARSE2NUMBER, suppress_errors\r\n        if(typeof setting === 'object')\r\n            for(var x in setting) {\r\n                libExports.set(x, setting[x]);\r\n            }\r\n\r\n        var disallowed = ['SAFE'];\r\n        if(disallowed.indexOf(setting) !== -1)\r\n            err('Cannot modify setting: ' + setting);\r\n\r\n        if(setting === 'PRECISION') {\r\n            bigDec.set({precision: value});\r\n            Settings.PRECISION = value;\r\n\r\n            // Avoid that nerdamer puts out garbage after 21 decimal place\r\n            if(value > 21) {\r\n                this.set('USE_BIG', true);\r\n            }\r\n        }\r\n        else if(setting === 'USE_LN' && value === true) {\r\n            //set log as LN\r\n            Settings.LOG = 'LN';\r\n            //set log10 as log\r\n            Settings.LOG10 = 'log';\r\n            //point the functions in the right direction\r\n            _.functions['log'] = Settings.LOG_FNS.log10; //log is now log10\r\n            //the log10 function must be explicitly set\r\n            _.functions['log'][0] = function (x) {\r\n                if(x.isConstant())\r\n                    return new Symbol(Math.log10(x));\r\n                return _.symfunction(Settings.LOG10, [x]);\r\n            };\r\n            _.functions['LN'] = Settings.LOG_FNS.log; //LN is now log\r\n\r\n            //remove log10\r\n            delete _.functions['log10'];\r\n        }\r\n        else\r\n            Settings[setting] = value;\r\n    };\r\n\r\n    /**\r\n     * Get the value of a setting\r\n     * @param {type} setting\r\n     * @returns {undefined}\r\n     */\r\n    libExports.get = function (setting) {\r\n        return Settings[setting];\r\n    };\r\n\r\n    /**\r\n     * This functions makes internal functions available externally\r\n     * @param {bool} override Override the functions when calling updateAPI if it exists\r\n     */\r\n    libExports.updateAPI = function (override) {\r\n        //Map internal functions to external ones\r\n        var linker = function (fname) {\r\n            return function () {\r\n                var args = [].slice.call(arguments);\r\n                for(var i = 0; i < args.length; i++)\r\n                    args[i] = _.parse(args[i]);\r\n                return new Expression(block('PARSE2NUMBER', function () {\r\n                    return _.callfunction(fname, args);\r\n                }));\r\n            };\r\n        };\r\n        //perform the mapping\r\n        for(var x in _.functions)\r\n            if(!(x in libExports) || override)\r\n                libExports[x] = linker(x);\r\n    };\r\n\r\n    libExports.replaceFunction = function (name, fn, num_args) {\r\n        var existing = _.functions[name];\r\n        var new_num_args = typeof num_args === 'undefined' ? existing[1] : num_args;\r\n        _.functions[name] = [fn.call(undefined, existing[0], C), new_num_args];\r\n    };\r\n\r\n    libExports.setOperator = function (operator, shift) {\r\n        _.setOperator(operator, shift);\r\n    };\r\n\r\n    libExports.getOperator = function (operator) {\r\n        return _.getOperator(operator);\r\n    };\r\n\r\n    libExports.aliasOperator = function (operator, withOperator) {\r\n        _.aliasOperator(operator, withOperator);\r\n    };\r\n\r\n    libExports.tree = function (expression) {\r\n        return _.tree(_.toRPN(_.tokenize(expression)));\r\n    };\r\n\r\n    libExports.htmlTree = function (expression, indent) {\r\n        var tree = this.tree(expression);\r\n\r\n        return '<div class=\"tree\">\\n' +\r\n                '    <ul>\\n' +\r\n                '        <li>\\n' +\r\n                tree.toHTML(3, indent) + '\\n' +\r\n                '        </li>\\n' +\r\n                '    </ul>\\n' +\r\n                '</div>';\r\n    };\r\n\r\n    libExports.addPeeker = function (name, f) {\r\n        if(_.peekers[name])\r\n            _.peekers[name].push(f);\r\n    };\r\n\r\n    libExports.removePeeker = function (name, f) {\r\n        remove(_.peekers[name], f);\r\n    };\r\n\r\n    libExports.parse = function (e) {\r\n        return String(e).split(';').map(function (x) {\r\n            return _.parse(x);\r\n        });\r\n    };\r\n\r\n    libExports.updateAPI();\r\n\r\n    return libExports; //Done\r\n//imports ======================================================================\r\n})({\r\n    //https://github.com/peterolson/BigInteger.js\r\n    bigInt: (function(){\r\n        var bigInt=function(undefined){\"use strict\";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),LOG_MAX_INT=Math.log(MAX_INT);function Integer(v,radix){if(typeof v===\"undefined\")return Integer[0];if(typeof radix!==\"undefined\")return+radix===10?parseValue(v):parseBase(v,radix);return parseValue(v)}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true}SmallInteger.prototype=Object.create(Integer.prototype);function isPrecise(n){return-MAX_INT<n&&n<MAX_INT}function smallToArray(n){if(n<1e7)return[n];if(n<1e14)return[n%1e7,Math.floor(n/1e7)];return[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)]}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE}}return arr}function trim(v){var i=v.length;while(v[--i]===0);v.length=i+1}function createArray(length){var x=new Array(length);var i=-1;while(++i<length){x[i]=0}return x}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n)}function add(a,b){var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base}if(carry>0)r.push(carry);return r}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a)}function addSmall(a,carry){var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate())}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign)}return new BigInteger(addAny(a,b),this.sign)};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate())}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b))}return new BigInteger(addSmall(b,Math.abs(a)),a<0)};SmallInteger.prototype.plus=SmallInteger.prototype.add;function subtract(a,b){var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1}else borrow=0;r[i]=difference}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else{r[i++]=difference;break}r[i]=difference}for(;i<a_l;i++){r[i]=a[i]}trim(r);return r}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b)}else{value=subtract(b,a);sign=!sign}value=arrayToSmall(value);if(typeof value===\"number\"){if(sign)value=-value;return new SmallInteger(value)}return new BigInteger(value,sign)}function subtractSmall(a,b,sign){var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference}r=arrayToSmall(r);if(typeof r===\"number\"){if(sign)r=-r;return new SmallInteger(r)}return new BigInteger(r,sign)}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate())}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign)};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate())}var b=n.value;if(n.isSmall){return new SmallInteger(a-b)}return subtractSmall(b,Math.abs(a),a>=0)};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false)};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry}}trim(r);return r}function multiplySmall(a,b){var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}function shiftLeft(x,n){var r=[];while(n-- >0)r.push(0);return r.concat(x)}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product}function useKaratsuba(l1,l2){return-.012*l1-.012*l2+15e-6*l1*l2>0}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign)}b=smallToArray(abs)}if(useKaratsuba(a.length,b.length))return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign)};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){if(a<BASE){return new BigInteger(multiplySmall(b,a),sign)}return new BigInteger(multiplyLong(b,smallToArray(a)),sign)}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value)}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign)};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign)};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this)};SmallInteger.prototype.times=SmallInteger.prototype.multiply;function square(a){var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];carry=0-a_i*a_i;for(var j=i;j<l;j++){a_j=a[j];product=2*(a_i*a_j)+r[i+j]+carry;carry=Math.floor(product/base);r[i+j]=product-carry*base}r[i+l]=carry}trim(r);return r}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false)};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false)};function divMod1(a,b){var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit)}carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1}else{remainder[shift+i]=borrow;borrow=0}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0}else{remainder[shift+i]=carry;carry=1}}borrow+=carry}result[shift]=quotientDigit}remainder=divModSmall(remainder,lambda)[0];return[arrayToSmall(result),arrayToSmall(remainder)]}function divMod2(a,b){var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--}while(guess);result.push(guess);part=subtract(part,check)}result.reverse();return[arrayToSmall(result),arrayToSmall(part)]}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0}return[quotient,remainder|0]}function divModAny(self,v){var value,n=parseValue(v);var a=self.value,b=n.value;var quotient;if(b===0)throw new Error(\"Cannot divide by zero\");if(self.isSmall){if(n.isSmall){return[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)]}return[Integer[0],self]}if(n.isSmall){if(b===1)return[self,Integer[0]];if(b==-1)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient===\"number\"){if(self.sign!==n.sign)quotient=-quotient;return[new SmallInteger(quotient),new SmallInteger(remainder)]}return[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)]}b=smallToArray(abs)}var comparison=compareAbs(a,b);if(comparison===-1)return[Integer[0],self];if(comparison===0)return[Integer[self.sign===n.sign?1:-1],Integer[0]];if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient===\"number\"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient)}else quotient=new BigInteger(quotient,qSign);if(typeof mod===\"number\"){if(mSign)mod=-mod;mod=new SmallInteger(mod)}else mod=new BigInteger(mod,mSign);return[quotient,mod]}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]}};SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0]};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1]};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0]}if(!n.isSmall)throw new Error(\"The exponent \"+n.toString()+\" is too large.\");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value))}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b}if(b===0)break;b/=2;x=x.square()}return y};SmallInteger.prototype.pow=BigInteger.prototype.pow;BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error(\"Cannot take modPow with modulus 0\");var r=Integer[1],base=this.mod(mod);while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod)}return r};SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1}return 0}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b)};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1}return-1};BigInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1}if(n.isSmall){return this.sign?-1:1}return compareAbs(a,b)*(this.sign?-1:1)};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1}if(a<0!==n.sign){return a<0?-1:1}return a<0?1:-1};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0};SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0};SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0};SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0};SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0};SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0};SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0};SmallInteger.prototype.isEven=function(){return(this.value&1)===0};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1};BigInteger.prototype.isPositive=function(){return!this.sign};SmallInteger.prototype.isPositive=function(){return this.value>0};BigInteger.prototype.isNegative=function(){return this.sign};SmallInteger.prototype.isNegative=function(){return this.value<0};BigInteger.prototype.isUnit=function(){return false};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1};BigInteger.prototype.isZero=function(){return false};SmallInteger.prototype.isZero=function(){return this.value===0};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);var value=n.value;if(value===0)return false;if(value===1)return true;if(value===2)return this.isEven();return this.mod(n).equals(Integer[0])};SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(49))return true}function millerRabinTest(n,a){var nPrev=n.prev(),b=nPrev,r=0,d,t,i,x;while(b.isEven())b=b.divide(2),r++;next:for(i=0;i<a.length;i++){if(n.lesser(a[i]))continue;x=bigInt(a[i]).modPow(b,n);if(x.equals(Integer[1])||x.equals(nPrev))continue;for(d=r-1;d!=0;d--){x=x.square().mod(n);if(x.isUnit())return false;if(x.equals(nPrev))continue next}return false}return true}BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,325,9375,28178,450775,9780504,1795265022]);var logN=Math.log(2)*bits;var t=Math.ceil(strict===true?2*Math.pow(logN,2):logN);for(var a=[],i=0;i<t;i++){a.push(bigInt(i+2))}return millerRabinTest(n,a)};SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var t=iterations===undefined?5:iterations;for(var a=[],i=0;i<t;i++){a.push(bigInt.randBetween(2,n.minus(2)))}return millerRabinTest(n,a)};SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.equals(bigInt.zero)){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR))}if(!r.equals(1))throw new Error(this.toString()+\" and \"+n.toString()+\" are not co-prime\");if(t.compare(0)===-1){t=t.add(n)}if(this.isNegative()){return t.negate()}return t};SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign)}return new BigInteger(addSmall(value,1),this.sign)};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false)};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true)}return subtractSmall(value,1,this.sign)};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true)};var powersOfTwo=[1];while(2*powersOfTwo[powersOfTwo.length-1]<=BASE)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return(typeof n===\"number\"||typeof n===\"string\")&&+Math.abs(n)<=BASE||n instanceof BigInteger&&n.value.length<=1}BigInteger.prototype.shiftLeft=function(n){if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}n=+n;if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1}return result.multiply(powersOfTwo[n])};SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(n){var remQuo;if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}n=+n;if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero()||result.isNegative()&&result.isUnit())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0]};SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xDigit=0,yDigit=0;var xDivMod=null,yDivMod=null;var result=[];while(!xRem.isZero()||!yRem.isZero()){xDivMod=divModAny(xRem,highestPower2);xDigit=xDivMod[1].toJSNumber();if(xSign){xDigit=highestPower2-1-xDigit}yDivMod=divModAny(yRem,highestPower2);yDigit=yDivMod[1].toJSNumber();if(ySign){yDigit=highestPower2-1-yDigit}xRem=xDivMod[0];yRem=yDivMod[0];result.push(fn(xDigit,yDigit))}var sum=fn(xSign?1:0,ySign?1:0)!==0?bigInt(-1):bigInt(0);for(var i=result.length-1;i>=0;i-=1){sum=sum.multiply(highestPower2).add(bigInt(result[i]))}return sum}BigInteger.prototype.not=function(){return this.negate().prev()};SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b})};SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b})};SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b})};SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){var v=n.value,x=typeof v===\"number\"?v|LOBMASK_I:v[0]+v[1]*BASE|LOBMASK_BI;return x&-x}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base));var p=tmp.p;var e=tmp.e;var t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:e*2+1}:{p:p,e:e*2}}return{p:bigInt(1),e:0}}BigInteger.prototype.bitLength=function(){var n=this;if(n.compareTo(bigInt(0))<0){n=n.negate().subtract(bigInt(1))}if(n.compareTo(bigInt(0))===0){return bigInt(0)}return bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1))};SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=Math.min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d)}while(a.isEven()){a=a.divide(roughLOB(a))}do{while(b.isEven()){b=b.divide(roughLOB(b))}if(a.greater(b)){t=b;b=a;a=t}b=b.subtract(a)}while(!b.isZero());return c.isUnit()?a:a.multiply(c)}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b)}function randBetween(a,b){a=parseValue(a);b=parseValue(b);var low=min(a,b),high=max(a,b);var range=high.subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(Math.random()*range));var length=range.value.length-1;var result=[],restricted=true;for(var i=length;i>=0;i--){var top=restricted?range.value[i]:BASE;var digit=truncate(Math.random()*top);result.unshift(digit);if(digit<top)restricted=false}result=arrayToSmall(result);return low.add(typeof result===\"number\"?new SmallInteger(result):new BigInteger(result,false))}var parseBase=function(text,base){var length=text.length;var i;var absBase=Math.abs(base);for(var i=0;i<length;i++){var c=text[i].toLowerCase();if(c===\"-\")continue;if(/[a-z0-9]/.test(c)){if(/[0-9]/.test(c)&&+c>=absBase){if(c===\"1\"&&absBase===1)continue;throw new Error(c+\" is not a valid digit in base \"+base+\".\")}else if(c.charCodeAt(0)-87>=absBase){throw new Error(c+\" is not a valid digit in base \"+base+\".\")}}}if(2<=base&&base<=36){if(length<=LOG_MAX_INT/Math.log(base)){var result=parseInt(text,base);if(isNaN(result)){throw new Error(c+\" is not a valid digit in base \"+base+\".\")}return new SmallInteger(parseInt(text,base))}}base=parseValue(base);var digits=[];var isNegative=text[0]===\"-\";for(i=isNegative?1:0;i<text.length;i++){var c=text[i].toLowerCase(),charCode=c.charCodeAt(0);if(48<=charCode&&charCode<=57)digits.push(parseValue(c));else if(97<=charCode&&charCode<=122)digits.push(parseValue(c.charCodeAt(0)-87));else if(c===\"<\"){var start=i;do{i++}while(text[i]!==\">\");digits.push(parseValue(text.slice(start+1,i)))}else throw new Error(c+\" is not a valid character\")}return parseBaseFromArray(digits,base,isNegative)};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base)}return isNegative?val.negate():val}function stringify(digit){if(digit<=35){return\"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit)}return\"<\"+digit+\">\"}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return{value:[0],isNegative:false};throw new Error(\"Cannot convert nonzero numbers to base 0.\")}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:false};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n)).map(Array.prototype.valueOf,[1,0])),isNegative:false};var arr=Array.apply(null,Array(+n-1)).map(Array.prototype.valueOf,[0,1]);arr.unshift([1]);return{value:[].concat.apply([],arr),isNegative:false}}var neg=false;if(n.isNegative()&&base.isPositive()){neg=true;n=n.abs()}if(base.equals(1)){if(n.isZero())return{value:[0],isNegative:false};return{value:Array.apply(null,Array(+n)).map(Number.prototype.valueOf,1),isNegative:neg}}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next()}out.push(digit.toJSNumber())}out.push(left.toJSNumber());return{value:out.reverse(),isNegative:neg}}function toBaseString(n,base){var arr=toBase(n,base);return(arr.isNegative?\"-\":\"\")+arr.value.map(stringify).join(\"\")}BigInteger.prototype.toArray=function(radix){return toBase(this,radix)};SmallInteger.prototype.toArray=function(radix){return toBase(this,radix)};BigInteger.prototype.toString=function(radix){if(radix===undefined)radix=10;if(radix!==10)return toBaseString(this,radix);var v=this.value,l=v.length,str=String(v[--l]),zeros=\"0000000\",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit}var sign=this.sign?\"-\":\"\";return sign+str};SmallInteger.prototype.toString=function(radix){if(radix===undefined)radix=10;if(radix!=10)return toBaseString(this,radix);return String(this.value)};BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return new SmallInteger(x);throw new Error(\"Invalid integer: \"+v)}var sign=v[0]===\"-\";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error(\"Invalid integer: \"+split.join(\"e\"));if(split.length===2){var exp=split[1];if(exp[0]===\"+\")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error(\"Invalid integer: \"+exp+\" is not a valid exponent.\");var text=split[0];var decimalPlace=text.indexOf(\".\");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1)}if(exp<0)throw new Error(\"Cannot include negative exponent part for integers\");text+=new Array(exp+1).join(\"0\");v=text}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error(\"Invalid integer: \"+v);var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l}trim(r);return new BigInteger(r,sign)}function parseNumberValue(v){if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+\" is not an integer.\");return new SmallInteger(v)}return parseStringValue(v.toString())}function parseValue(v){if(typeof v===\"number\"){return parseNumberValue(v)}if(typeof v===\"string\"){return parseStringValue(v)}return v}for(var i=0;i<1e3;i++){Integer[i]=new SmallInteger(i);if(i>0)Integer[-i]=new SmallInteger(-i)}Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative)};return Integer}();if(typeof module!==\"undefined\"&&module.hasOwnProperty(\"exports\")){module.exports=bigInt}if(typeof define===\"function\"&&define.amd){define(\"big-integer\",[],function(){return bigInt})}\r\n        return bigInt;\r\n    })(),\r\n    /*\r\n     *  decimal.js v10.2.1\r\n     *  An arbitrary-precision Decimal type for JavaScript.\r\n     *  https://github.com/MikeMcl/decimal.js\r\n     *  Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n     *  MIT Licence\r\n     */\r\n    bigDec: function(n){\"use strict\";var e,i,t,r,s=9e15,o=1e9,u=\"0123456789abcdef\",c=\"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\",f=\"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\",a={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-s,maxE:s,crypto:!1},h=!0,d=\"[DecimalError] \",l=d+\"Invalid argument: \",p=d+\"Precision limit exceeded\",g=d+\"crypto unavailable\",m=Math.floor,w=Math.pow,v=/^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,N=/^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,b=/^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,E=/^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,x=1e7,y=7,M=c.length-1,q=f.length-1,O={name:\"[object Decimal]\"};function D(n){var e,i,t,r=n.length-1,s=\"\",o=n[0];if(r>0){for(s+=o,e=1;e<r;e++)t=n[e]+\"\",(i=y-t.length)&&(s+=k(i)),s+=t;o=n[e],(i=y-(t=o+\"\").length)&&(s+=k(i))}else if(0===o)return\"0\";for(;o%10==0;)o/=10;return s+o}function F(n,e,i){if(n!==~~n||n<e||n>i)throw Error(l+n)}function A(n,e,i,t){var r,s,o,u;for(s=n[0];s>=10;s/=10)--e;return--e<0?(e+=y,r=0):(r=Math.ceil((e+1)/y),e%=y),s=w(10,y-e),u=n[r]%s|0,null==t?e<3?(0==e?u=u/100|0:1==e&&(u=u/10|0),o=i<4&&99999==u||i>3&&49999==u||5e4==u||0==u):o=(i<4&&u+1==s||i>3&&u+1==s/2)&&(n[r+1]/s/100|0)==w(10,e-2)-1||(u==s/2||0==u)&&0==(n[r+1]/s/100|0):e<4?(0==e?u=u/1e3|0:1==e?u=u/100|0:2==e&&(u=u/10|0),o=(t||i<4)&&9999==u||!t&&i>3&&4999==u):o=((t||i<4)&&u+1==s||!t&&i>3&&u+1==s/2)&&(n[r+1]/s/1e3|0)==w(10,e-3)-1,o}function S(n,e,i){for(var t,r,s=[0],o=0,c=n.length;o<c;){for(r=s.length;r--;)s[r]*=e;for(s[0]+=u.indexOf(n.charAt(o++)),t=0;t<s.length;t++)s[t]>i-1&&(void 0===s[t+1]&&(s[t+1]=0),s[t+1]+=s[t]/i|0,s[t]%=i)}return s.reverse()}O.absoluteValue=O.abs=function(){var n=new this.constructor(this);return n.s<0&&(n.s=1),P(n)},O.ceil=function(){return P(new this.constructor(this),this.e+1,2)},O.comparedTo=O.cmp=function(n){var e,i,t,r,s=this,o=s.d,u=(n=new s.constructor(n)).d,c=s.s,f=n.s;if(!o||!u)return c&&f?c!==f?c:o===u?0:!o^c<0?1:-1:NaN;if(!o[0]||!u[0])return o[0]?c:u[0]?-f:0;if(c!==f)return c;if(s.e!==n.e)return s.e>n.e^c<0?1:-1;for(e=0,i=(t=o.length)<(r=u.length)?t:r;e<i;++e)if(o[e]!==u[e])return o[e]>u[e]^c<0?1:-1;return t===r?0:t>r^c<0?1:-1},O.cosine=O.cos=function(){var n,e,i=this,t=i.constructor;return i.d?i.d[0]?(n=t.precision,e=t.rounding,t.precision=n+Math.max(i.e,i.sd())+y,t.rounding=1,i=function(n,e){var i,t,r=e.d.length;r<32?(i=Math.ceil(r/3),t=(1/z(4,i)).toString()):(i=16,t=\"2.3283064365386962890625e-10\");n.precision+=i,e=J(n,1,e.times(t),new n(1));for(var s=i;s--;){var o=e.times(e);e=o.times(o).minus(o).times(8).plus(1)}return n.precision-=i,e}(t,G(t,i)),t.precision=n,t.rounding=e,P(2==r||3==r?i.neg():i,n,e,!0)):new t(1):new t(NaN)},O.cubeRoot=O.cbrt=function(){var n,e,i,t,r,s,o,u,c,f,a=this,d=a.constructor;if(!a.isFinite()||a.isZero())return new d(a);for(h=!1,(s=a.s*w(a.s*a,1/3))&&Math.abs(s)!=1/0?t=new d(s.toString()):(i=D(a.d),(s=((n=a.e)-i.length+1)%3)&&(i+=1==s||-2==s?\"0\":\"00\"),s=w(i,1/3),n=m((n+1)/3)-(n%3==(n<0?-1:2)),(t=new d(i=s==1/0?\"5e\"+n:(i=s.toExponential()).slice(0,i.indexOf(\"e\")+1)+n)).s=a.s),o=(n=d.precision)+3;;)if(f=(c=(u=t).times(u).times(u)).plus(a),t=Z(f.plus(a).times(u),f.plus(c),o+2,1),D(u.d).slice(0,o)===(i=D(t.d)).slice(0,o)){if(\"9999\"!=(i=i.slice(o-3,o+1))&&(r||\"4999\"!=i)){+i&&(+i.slice(1)||\"5\"!=i.charAt(0))||(P(t,n+1,1),e=!t.times(t).times(t).eq(a));break}if(!r&&(P(u,n+1,0),u.times(u).times(u).eq(a))){t=u;break}o+=4,r=1}return h=!0,P(t,n,d.rounding,e)},O.decimalPlaces=O.dp=function(){var n,e=this.d,i=NaN;if(e){if(i=((n=e.length-1)-m(this.e/y))*y,n=e[n])for(;n%10==0;n/=10)i--;i<0&&(i=0)}return i},O.dividedBy=O.div=function(n){return Z(this,new this.constructor(n))},O.dividedToIntegerBy=O.divToInt=function(n){var e=this.constructor;return P(Z(this,new e(n),0,1,1),e.precision,e.rounding)},O.equals=O.eq=function(n){return 0===this.cmp(n)},O.floor=function(){return P(new this.constructor(this),this.e+1,3)},O.greaterThan=O.gt=function(n){return this.cmp(n)>0},O.greaterThanOrEqualTo=O.gte=function(n){var e=this.cmp(n);return 1==e||0===e},O.hyperbolicCosine=O.cosh=function(){var n,e,i,t,r,s=this,o=s.constructor,u=new o(1);if(!s.isFinite())return new o(s.s?1/0:NaN);if(s.isZero())return u;i=o.precision,t=o.rounding,o.precision=i+Math.max(s.e,s.sd())+4,o.rounding=1,(r=s.d.length)<32?e=(1/z(4,n=Math.ceil(r/3))).toString():(n=16,e=\"2.3283064365386962890625e-10\"),s=J(o,1,s.times(e),new o(1),!0);for(var c,f=n,a=new o(8);f--;)c=s.times(s),s=u.minus(c.times(a.minus(c.times(a))));return P(s,o.precision=i,o.rounding=t,!0)},O.hyperbolicSine=O.sinh=function(){var n,e,i,t,r=this,s=r.constructor;if(!r.isFinite()||r.isZero())return new s(r);if(e=s.precision,i=s.rounding,s.precision=e+Math.max(r.e,r.sd())+4,s.rounding=1,(t=r.d.length)<3)r=J(s,2,r,r,!0);else{n=(n=1.4*Math.sqrt(t))>16?16:0|n,r=J(s,2,r=r.times(1/z(5,n)),r,!0);for(var o,u=new s(5),c=new s(16),f=new s(20);n--;)o=r.times(r),r=r.times(u.plus(o.times(c.times(o).plus(f))))}return s.precision=e,s.rounding=i,P(r,e,i,!0)},O.hyperbolicTangent=O.tanh=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+7,t.rounding=1,Z(i.sinh(),i.cosh(),t.precision=n,t.rounding=e)):new t(i.s)},O.inverseCosine=O.acos=function(){var n,e=this,i=e.constructor,t=e.abs().cmp(1),r=i.precision,s=i.rounding;return-1!==t?0===t?e.isNeg()?U(i,r,s):new i(0):new i(NaN):e.isZero()?U(i,r+4,s).times(.5):(i.precision=r+6,i.rounding=1,e=e.asin(),n=U(i,r+4,s).times(.5),i.precision=r,i.rounding=s,n.minus(e))},O.inverseHyperbolicCosine=O.acosh=function(){var n,e,i=this,t=i.constructor;return i.lte(1)?new t(i.eq(1)?0:NaN):i.isFinite()?(n=t.precision,e=t.rounding,t.precision=n+Math.max(Math.abs(i.e),i.sd())+4,t.rounding=1,h=!1,i=i.times(i).minus(1).sqrt().plus(i),h=!0,t.precision=n,t.rounding=e,i.ln()):new t(i)},O.inverseHyperbolicSine=O.asinh=function(){var n,e,i=this,t=i.constructor;return!i.isFinite()||i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+2*Math.max(Math.abs(i.e),i.sd())+6,t.rounding=1,h=!1,i=i.times(i).plus(1).sqrt().plus(i),h=!0,t.precision=n,t.rounding=e,i.ln())},O.inverseHyperbolicTangent=O.atanh=function(){var n,e,i,t,r=this,s=r.constructor;return r.isFinite()?r.e>=0?new s(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(n=s.precision,e=s.rounding,t=r.sd(),Math.max(t,n)<2*-r.e-1?P(new s(r),n,e,!0):(s.precision=i=t-r.e,r=Z(r.plus(1),new s(1).minus(r),i+n,1),s.precision=n+4,s.rounding=1,r=r.ln(),s.precision=n,s.rounding=e,r.times(.5))):new s(NaN)},O.inverseSine=O.asin=function(){var n,e,i,t,r=this,s=r.constructor;return r.isZero()?new s(r):(e=r.abs().cmp(1),i=s.precision,t=s.rounding,-1!==e?0===e?((n=U(s,i+4,t).times(.5)).s=r.s,n):new s(NaN):(s.precision=i+6,s.rounding=1,r=r.div(new s(1).minus(r.times(r)).sqrt().plus(1)).atan(),s.precision=i,s.rounding=t,r.times(2)))},O.inverseTangent=O.atan=function(){var n,e,i,t,r,s,o,u,c,f=this,a=f.constructor,d=a.precision,l=a.rounding;if(f.isFinite()){if(f.isZero())return new a(f);if(f.abs().eq(1)&&d+4<=q)return(o=U(a,d+4,l).times(.25)).s=f.s,o}else{if(!f.s)return new a(NaN);if(d+4<=q)return(o=U(a,d+4,l).times(.5)).s=f.s,o}for(a.precision=u=d+10,a.rounding=1,n=i=Math.min(28,u/y+2|0);n;--n)f=f.div(f.times(f).plus(1).sqrt().plus(1));for(h=!1,e=Math.ceil(u/y),t=1,c=f.times(f),o=new a(f),r=f;-1!==n;)if(r=r.times(c),s=o.minus(r.div(t+=2)),r=r.times(c),void 0!==(o=s.plus(r.div(t+=2))).d[e])for(n=e;o.d[n]===s.d[n]&&n--;);return i&&(o=o.times(2<<i-1)),h=!0,P(o,a.precision=d,a.rounding=l,!0)},O.isFinite=function(){return!!this.d},O.isInteger=O.isInt=function(){return!!this.d&&m(this.e/y)>this.d.length-2},O.isNaN=function(){return!this.s},O.isNegative=O.isNeg=function(){return this.s<0},O.isPositive=O.isPos=function(){return this.s>0},O.isZero=function(){return!!this.d&&0===this.d[0]},O.lessThan=O.lt=function(n){return this.cmp(n)<0},O.lessThanOrEqualTo=O.lte=function(n){return this.cmp(n)<1},O.logarithm=O.log=function(n){var e,i,t,r,s,o,u,c,f=this.constructor,a=f.precision,d=f.rounding;if(null==n)n=new f(10),e=!0;else{if(i=(n=new f(n)).d,n.s<0||!i||!i[0]||n.eq(1))return new f(NaN);e=n.eq(10)}if(i=this.d,this.s<0||!i||!i[0]||this.eq(1))return new f(i&&!i[0]?-1/0:1!=this.s?NaN:i?0:1/0);if(e)if(i.length>1)s=!0;else{for(r=i[0];r%10==0;)r/=10;s=1!==r}if(h=!1,o=V(this,u=a+5),t=e?T(f,u+10):V(n,u),A((c=Z(o,t,u,1)).d,r=a,d))do{if(o=V(this,u+=10),t=e?T(f,u+10):V(n,u),c=Z(o,t,u,1),!s){+D(c.d).slice(r+1,r+15)+1==1e14&&(c=P(c,a+1,0));break}}while(A(c.d,r+=10,d));return h=!0,P(c,a,d)},O.minus=O.sub=function(n){var e,i,t,r,s,o,u,c,f,a,d,l,p=this,g=p.constructor;if(n=new g(n),!p.d||!n.d)return p.s&&n.s?p.d?n.s=-n.s:n=new g(n.d||p.s!==n.s?p:NaN):n=new g(NaN),n;if(p.s!=n.s)return n.s=-n.s,p.plus(n);if(f=p.d,l=n.d,u=g.precision,c=g.rounding,!f[0]||!l[0]){if(l[0])n.s=-n.s;else{if(!f[0])return new g(3===c?-0:0);n=new g(p)}return h?P(n,u,c):n}if(i=m(n.e/y),a=m(p.e/y),f=f.slice(),s=a-i){for((d=s<0)?(e=f,s=-s,o=l.length):(e=l,i=a,o=f.length),s>(t=Math.max(Math.ceil(u/y),o)+2)&&(s=t,e.length=1),e.reverse(),t=s;t--;)e.push(0);e.reverse()}else{for((d=(t=f.length)<(o=l.length))&&(o=t),t=0;t<o;t++)if(f[t]!=l[t]){d=f[t]<l[t];break}s=0}for(d&&(e=f,f=l,l=e,n.s=-n.s),o=f.length,t=l.length-o;t>0;--t)f[o++]=0;for(t=l.length;t>s;){if(f[--t]<l[t]){for(r=t;r&&0===f[--r];)f[r]=x-1;--f[r],f[t]+=x}f[t]-=l[t]}for(;0===f[--o];)f.pop();for(;0===f[0];f.shift())--i;return f[0]?(n.d=f,n.e=L(f,i),h?P(n,u,c):n):new g(3===c?-0:0)},O.modulo=O.mod=function(n){var e,i=this,t=i.constructor;return n=new t(n),!i.d||!n.s||n.d&&!n.d[0]?new t(NaN):!n.d||i.d&&!i.d[0]?P(new t(i),t.precision,t.rounding):(h=!1,9==t.modulo?(e=Z(i,n.abs(),0,3,1)).s*=n.s:e=Z(i,n,0,t.modulo,1),e=e.times(n),h=!0,i.minus(e))},O.naturalExponential=O.exp=function(){return B(this)},O.naturalLogarithm=O.ln=function(){return V(this)},O.negated=O.neg=function(){var n=new this.constructor(this);return n.s=-n.s,P(n)},O.plus=O.add=function(n){var e,i,t,r,s,o,u,c,f,a,d=this,l=d.constructor;if(n=new l(n),!d.d||!n.d)return d.s&&n.s?d.d||(n=new l(n.d||d.s===n.s?d:NaN)):n=new l(NaN),n;if(d.s!=n.s)return n.s=-n.s,d.minus(n);if(f=d.d,a=n.d,u=l.precision,c=l.rounding,!f[0]||!a[0])return a[0]||(n=new l(d)),h?P(n,u,c):n;if(s=m(d.e/y),t=m(n.e/y),f=f.slice(),r=s-t){for(r<0?(i=f,r=-r,o=a.length):(i=a,t=s,o=f.length),r>(o=(s=Math.ceil(u/y))>o?s+1:o+1)&&(r=o,i.length=1),i.reverse();r--;)i.push(0);i.reverse()}for((o=f.length)-(r=a.length)<0&&(r=o,i=a,a=f,f=i),e=0;r;)e=(f[--r]=f[r]+a[r]+e)/x|0,f[r]%=x;for(e&&(f.unshift(e),++t),o=f.length;0==f[--o];)f.pop();return n.d=f,n.e=L(f,t),h?P(n,u,c):n},O.precision=O.sd=function(n){var e,i=this;if(void 0!==n&&n!==!!n&&1!==n&&0!==n)throw Error(l+n);return i.d?(e=_(i.d),n&&i.e+1>e&&(e=i.e+1)):e=NaN,e},O.round=function(){var n=this,e=n.constructor;return P(new e(n),n.e+1,e.rounding)},O.sine=O.sin=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+Math.max(i.e,i.sd())+y,t.rounding=1,i=function(n,e){var i,t=e.d.length;if(t<3)return J(n,2,e,e);i=(i=1.4*Math.sqrt(t))>16?16:0|i,e=e.times(1/z(5,i)),e=J(n,2,e,e);for(var r,s=new n(5),o=new n(16),u=new n(20);i--;)r=e.times(e),e=e.times(s.plus(r.times(o.times(r).minus(u))));return e}(t,G(t,i)),t.precision=n,t.rounding=e,P(r>2?i.neg():i,n,e,!0)):new t(NaN)},O.squareRoot=O.sqrt=function(){var n,e,i,t,r,s,o=this,u=o.d,c=o.e,f=o.s,a=o.constructor;if(1!==f||!u||!u[0])return new a(!f||f<0&&(!u||u[0])?NaN:u?o:1/0);for(h=!1,0==(f=Math.sqrt(+o))||f==1/0?(((e=D(u)).length+c)%2==0&&(e+=\"0\"),f=Math.sqrt(e),c=m((c+1)/2)-(c<0||c%2),t=new a(e=f==1/0?\"5e\"+c:(e=f.toExponential()).slice(0,e.indexOf(\"e\")+1)+c)):t=new a(f.toString()),i=(c=a.precision)+3;;)if(t=(s=t).plus(Z(o,s,i+2,1)).times(.5),D(s.d).slice(0,i)===(e=D(t.d)).slice(0,i)){if(\"9999\"!=(e=e.slice(i-3,i+1))&&(r||\"4999\"!=e)){+e&&(+e.slice(1)||\"5\"!=e.charAt(0))||(P(t,c+1,1),n=!t.times(t).eq(o));break}if(!r&&(P(s,c+1,0),s.times(s).eq(o))){t=s;break}i+=4,r=1}return h=!0,P(t,c,a.rounding,n)},O.tangent=O.tan=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+10,t.rounding=1,(i=i.sin()).s=1,i=Z(i,new t(1).minus(i.times(i)).sqrt(),n+10,0),t.precision=n,t.rounding=e,P(2==r||4==r?i.neg():i,n,e,!0)):new t(NaN)},O.times=O.mul=function(n){var e,i,t,r,s,o,u,c,f,a=this,d=a.constructor,l=a.d,p=(n=new d(n)).d;if(n.s*=a.s,!(l&&l[0]&&p&&p[0]))return new d(!n.s||l&&!l[0]&&!p||p&&!p[0]&&!l?NaN:l&&p?0*n.s:n.s/0);for(i=m(a.e/y)+m(n.e/y),(c=l.length)<(f=p.length)&&(s=l,l=p,p=s,o=c,c=f,f=o),s=[],t=o=c+f;t--;)s.push(0);for(t=f;--t>=0;){for(e=0,r=c+t;r>t;)u=s[r]+p[t]*l[r-t-1]+e,s[r--]=u%x|0,e=u/x|0;s[r]=(s[r]+e)%x|0}for(;!s[--o];)s.pop();return e?++i:s.shift(),n.d=s,n.e=L(s,i),h?P(n,d.precision,d.rounding):n},O.toBinary=function(n,e){return K(this,2,n,e)},O.toDecimalPlaces=O.toDP=function(n,e){var i=this,t=i.constructor;return i=new t(i),void 0===n?i:(F(n,0,o),void 0===e?e=t.rounding:F(e,0,8),P(i,n+i.e+1,e))},O.toExponential=function(n,e){var i,t=this,r=t.constructor;return void 0===n?i=R(t,!0):(F(n,0,o),void 0===e?e=r.rounding:F(e,0,8),i=R(t=P(new r(t),n+1,e),!0,n+1)),t.isNeg()&&!t.isZero()?\"-\"+i:i},O.toFixed=function(n,e){var i,t,r=this,s=r.constructor;return void 0===n?i=R(r):(F(n,0,o),void 0===e?e=s.rounding:F(e,0,8),i=R(t=P(new s(r),n+r.e+1,e),!1,n+t.e+1)),r.isNeg()&&!r.isZero()?\"-\"+i:i},O.toFraction=function(n){var e,i,t,r,s,o,u,c,f,a,d,p,g=this,m=g.d,v=g.constructor;if(!m)return new v(g);if(f=i=new v(1),t=c=new v(0),o=(s=(e=new v(t)).e=_(m)-g.e-1)%y,e.d[0]=w(10,o<0?y+o:o),null==n)n=s>0?e:f;else{if(!(u=new v(n)).isInt()||u.lt(f))throw Error(l+u);n=u.gt(e)?s>0?e:f:u}for(h=!1,u=new v(D(m)),a=v.precision,v.precision=s=m.length*y*2;d=Z(u,e,0,1,1),1!=(r=i.plus(d.times(t))).cmp(n);)i=t,t=r,r=f,f=c.plus(d.times(r)),c=r,r=e,e=u.minus(d.times(r)),u=r;return r=Z(n.minus(i),t,0,1,1),c=c.plus(r.times(f)),i=i.plus(r.times(t)),c.s=f.s=g.s,p=Z(f,t,s,1).minus(g).abs().cmp(Z(c,i,s,1).minus(g).abs())<1?[f,t]:[c,i],v.precision=a,h=!0,p},O.toHexadecimal=O.toHex=function(n,e){return K(this,16,n,e)},O.toNearest=function(n,e){var i=this,t=i.constructor;if(i=new t(i),null==n){if(!i.d)return i;n=new t(1),e=t.rounding}else{if(n=new t(n),void 0===e?e=t.rounding:F(e,0,8),!i.d)return n.s?i:n;if(!n.d)return n.s&&(n.s=i.s),n}return n.d[0]?(h=!1,i=Z(i,n,0,e,1).times(n),h=!0,P(i)):(n.s=i.s,i=n),i},O.toNumber=function(){return+this},O.toOctal=function(n,e){return K(this,8,n,e)},O.toPower=O.pow=function(n){var e,i,t,r,s,o,u=this,c=u.constructor,f=+(n=new c(n));if(!(u.d&&n.d&&u.d[0]&&n.d[0]))return new c(w(+u,f));if((u=new c(u)).eq(1))return u;if(t=c.precision,s=c.rounding,n.eq(1))return P(u,t,s);if((e=m(n.e/y))>=n.d.length-1&&(i=f<0?-f:f)<=9007199254740991)return r=C(c,u,i,t),n.s<0?new c(1).div(r):P(r,t,s);if((o=u.s)<0){if(e<n.d.length-1)return new c(NaN);if(0==(1&n.d[e])&&(o=1),0==u.e&&1==u.d[0]&&1==u.d.length)return u.s=o,u}return(e=0!=(i=w(+u,f))&&isFinite(i)?new c(i+\"\").e:m(f*(Math.log(\"0.\"+D(u.d))/Math.LN10+u.e+1)))>c.maxE+1||e<c.minE-1?new c(e>0?o/0:0):(h=!1,c.rounding=u.s=1,i=Math.min(12,(e+\"\").length),(r=B(n.times(V(u,t+i)),t)).d&&A((r=P(r,t+5,1)).d,t,s)&&(e=t+10,+D((r=P(B(n.times(V(u,e+i)),e),e+5,1)).d).slice(t+1,t+15)+1==1e14&&(r=P(r,t+1,0))),r.s=o,h=!0,c.rounding=s,P(r,t,s))},O.toPrecision=function(n,e){var i,t=this,r=t.constructor;return void 0===n?i=R(t,t.e<=r.toExpNeg||t.e>=r.toExpPos):(F(n,1,o),void 0===e?e=r.rounding:F(e,0,8),i=R(t=P(new r(t),n,e),n<=t.e||t.e<=r.toExpNeg,n)),t.isNeg()&&!t.isZero()?\"-\"+i:i},O.toSignificantDigits=O.toSD=function(n,e){var i=this.constructor;return void 0===n?(n=i.precision,e=i.rounding):(F(n,1,o),void 0===e?e=i.rounding:F(e,0,8)),P(new i(this),n,e)},O.toString=function(){var n=this,e=n.constructor,i=R(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()&&!n.isZero()?\"-\"+i:i},O.truncated=O.trunc=function(){return P(new this.constructor(this),this.e+1,1)},O.valueOf=O.toJSON=function(){var n=this,e=n.constructor,i=R(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()?\"-\"+i:i};var Z=function(){function n(n,e,i){var t,r=0,s=n.length;for(n=n.slice();s--;)t=n[s]*e+r,n[s]=t%i|0,r=t/i|0;return r&&n.unshift(r),n}function e(n,e,i,t){var r,s;if(i!=t)s=i>t?1:-1;else for(r=s=0;r<i;r++)if(n[r]!=e[r]){s=n[r]>e[r]?1:-1;break}return s}function t(n,e,i,t){for(var r=0;i--;)n[i]-=r,r=n[i]<e[i]?1:0,n[i]=r*t+n[i]-e[i];for(;!n[0]&&n.length>1;)n.shift()}return function(r,s,o,u,c,f){var a,h,d,l,p,g,w,v,N,b,E,M,q,O,D,F,A,S,Z,R,L=r.constructor,T=r.s==s.s?1:-1,U=r.d,_=s.d;if(!(U&&U[0]&&_&&_[0]))return new L(r.s&&s.s&&(U?!_||U[0]!=_[0]:_)?U&&0==U[0]||!_?0*T:T/0:NaN);for(f?(p=1,h=r.e-s.e):(f=x,p=y,h=m(r.e/p)-m(s.e/p)),Z=_.length,A=U.length,b=(N=new L(T)).d=[],d=0;_[d]==(U[d]||0);d++);if(_[d]>(U[d]||0)&&h--,null==o?(O=o=L.precision,u=L.rounding):O=c?o+(r.e-s.e)+1:o,O<0)b.push(1),g=!0;else{if(O=O/p+2|0,d=0,1==Z){for(l=0,_=_[0],O++;(d<A||l)&&O--;d++)D=l*f+(U[d]||0),b[d]=D/_|0,l=D%_|0;g=l||d<A}else{for((l=f/(_[0]+1)|0)>1&&(_=n(_,l,f),U=n(U,l,f),Z=_.length,A=U.length),F=Z,M=(E=U.slice(0,Z)).length;M<Z;)E[M++]=0;(R=_.slice()).unshift(0),S=_[0],_[1]>=f/2&&++S;do{l=0,(a=e(_,E,Z,M))<0?(q=E[0],Z!=M&&(q=q*f+(E[1]||0)),(l=q/S|0)>1?(l>=f&&(l=f-1),1==(a=e(w=n(_,l,f),E,v=w.length,M=E.length))&&(l--,t(w,Z<v?R:_,v,f))):(0==l&&(a=l=1),w=_.slice()),(v=w.length)<M&&w.unshift(0),t(E,w,M,f),-1==a&&(a=e(_,E,Z,M=E.length))<1&&(l++,t(E,Z<M?R:_,M,f)),M=E.length):0===a&&(l++,E=[0]),b[d++]=l,a&&E[0]?E[M++]=U[F]||0:(E=[U[F]],M=1)}while((F++<A||void 0!==E[0])&&O--);g=void 0!==E[0]}b[0]||b.shift()}if(1==p)N.e=h,i=g;else{for(d=1,l=b[0];l>=10;l/=10)d++;N.e=d+h*p-1,P(N,c?o+N.e+1:o,u,g)}return N}}();function P(n,e,i,t){var r,s,o,u,c,f,a,d,l,p=n.constructor;n:if(null!=e){if(!(d=n.d))return n;for(r=1,u=d[0];u>=10;u/=10)r++;if((s=e-r)<0)s+=y,o=e,c=(a=d[l=0])/w(10,r-o-1)%10|0;else if((l=Math.ceil((s+1)/y))>=(u=d.length)){if(!t)break n;for(;u++<=l;)d.push(0);a=c=0,r=1,o=(s%=y)-y+1}else{for(a=u=d[l],r=1;u>=10;u/=10)r++;c=(o=(s%=y)-y+r)<0?0:a/w(10,r-o-1)%10|0}if(t=t||e<0||void 0!==d[l+1]||(o<0?a:a%w(10,r-o-1)),f=i<4?(c||t)&&(0==i||i==(n.s<0?3:2)):c>5||5==c&&(4==i||t||6==i&&(s>0?o>0?a/w(10,r-o):0:d[l-1])%10&1||i==(n.s<0?8:7)),e<1||!d[0])return d.length=0,f?(e-=n.e+1,d[0]=w(10,(y-e%y)%y),n.e=-e||0):d[0]=n.e=0,n;if(0==s?(d.length=l,u=1,l--):(d.length=l+1,u=w(10,y-s),d[l]=o>0?(a/w(10,r-o)%w(10,o)|0)*u:0),f)for(;;){if(0==l){for(s=1,o=d[0];o>=10;o/=10)s++;for(o=d[0]+=u,u=1;o>=10;o/=10)u++;s!=u&&(n.e++,d[0]==x&&(d[0]=1));break}if(d[l]+=u,d[l]!=x)break;d[l--]=0,u=1}for(s=d.length;0===d[--s];)d.pop()}return h&&(n.e>p.maxE?(n.d=null,n.e=NaN):n.e<p.minE&&(n.e=0,n.d=[0])),n}function R(n,e,i){if(!n.isFinite())return j(n);var t,r=n.e,s=D(n.d),o=s.length;return e?(i&&(t=i-o)>0?s=s.charAt(0)+\".\"+s.slice(1)+k(t):o>1&&(s=s.charAt(0)+\".\"+s.slice(1)),s=s+(n.e<0?\"e\":\"e+\")+n.e):r<0?(s=\"0.\"+k(-r-1)+s,i&&(t=i-o)>0&&(s+=k(t))):r>=o?(s+=k(r+1-o),i&&(t=i-r-1)>0&&(s=s+\".\"+k(t))):((t=r+1)<o&&(s=s.slice(0,t)+\".\"+s.slice(t)),i&&(t=i-o)>0&&(r+1===o&&(s+=\".\"),s+=k(t))),s}function L(n,e){var i=n[0];for(e*=y;i>=10;i/=10)e++;return e}function T(n,e,i){if(e>M)throw h=!0,i&&(n.precision=i),Error(p);return P(new n(c),e,1,!0)}function U(n,e,i){if(e>q)throw Error(p);return P(new n(f),e,i,!0)}function _(n){var e=n.length-1,i=e*y+1;if(e=n[e]){for(;e%10==0;e/=10)i--;for(e=n[0];e>=10;e/=10)i++}return i}function k(n){for(var e=\"\";n--;)e+=\"0\";return e}function C(n,e,i,t){var r,s=new n(1),o=Math.ceil(t/y+4);for(h=!1;;){if(i%2&&Q((s=s.times(e)).d,o)&&(r=!0),0===(i=m(i/2))){i=s.d.length-1,r&&0===s.d[i]&&++s.d[i];break}Q((e=e.times(e)).d,o)}return h=!0,s}function I(n){return 1&n.d[n.d.length-1]}function H(n,e,i){for(var t,r=new n(e[0]),s=0;++s<e.length;){if(!(t=new n(e[s])).s){r=t;break}r[i](t)&&(r=t)}return r}function B(n,e){var i,t,r,s,o,u,c,f=0,a=0,d=0,l=n.constructor,p=l.rounding,g=l.precision;if(!n.d||!n.d[0]||n.e>17)return new l(n.d?n.d[0]?n.s<0?0:1/0:1:n.s?n.s<0?0:n:NaN);for(null==e?(h=!1,c=g):c=e,u=new l(.03125);n.e>-2;)n=n.times(u),d+=5;for(c+=t=Math.log(w(2,d))/Math.LN10*2+5|0,i=s=o=new l(1),l.precision=c;;){if(s=P(s.times(n),c,1),i=i.times(++a),D((u=o.plus(Z(s,i,c,1))).d).slice(0,c)===D(o.d).slice(0,c)){for(r=d;r--;)o=P(o.times(o),c,1);if(null!=e)return l.precision=g,o;if(!(f<3&&A(o.d,c-t,p,f)))return P(o,l.precision=g,p,h=!0);l.precision=c+=10,i=s=u=new l(1),a=0,f++}o=u}}function V(n,e){var i,t,r,s,o,u,c,f,a,d,l,p=1,g=n,m=g.d,w=g.constructor,v=w.rounding,N=w.precision;if(g.s<0||!m||!m[0]||!g.e&&1==m[0]&&1==m.length)return new w(m&&!m[0]?-1/0:1!=g.s?NaN:m?0:g);if(null==e?(h=!1,a=N):a=e,w.precision=a+=10,t=(i=D(m)).charAt(0),!(Math.abs(s=g.e)<15e14))return f=T(w,a+2,N).times(s+\"\"),g=V(new w(t+\".\"+i.slice(1)),a-10).plus(f),w.precision=N,null==e?P(g,N,v,h=!0):g;for(;t<7&&1!=t||1==t&&i.charAt(1)>3;)t=(i=D((g=g.times(n)).d)).charAt(0),p++;for(s=g.e,t>1?(g=new w(\"0.\"+i),s++):g=new w(t+\".\"+i.slice(1)),d=g,c=o=g=Z(g.minus(1),g.plus(1),a,1),l=P(g.times(g),a,1),r=3;;){if(o=P(o.times(l),a,1),D((f=c.plus(Z(o,new w(r),a,1))).d).slice(0,a)===D(c.d).slice(0,a)){if(c=c.times(2),0!==s&&(c=c.plus(T(w,a+2,N).times(s+\"\"))),c=Z(c,new w(p),a,1),null!=e)return w.precision=N,c;if(!A(c.d,a-10,v,u))return P(c,w.precision=N,v,h=!0);w.precision=a+=10,f=o=g=Z(d.minus(1),d.plus(1),a,1),l=P(g.times(g),a,1),r=u=1}c=f,r+=2}}function j(n){return String(n.s*n.s/0)}function $(n,e){var i,t,r;for((i=e.indexOf(\".\"))>-1&&(e=e.replace(\".\",\"\")),(t=e.search(/e/i))>0?(i<0&&(i=t),i+=+e.slice(t+1),e=e.substring(0,t)):i<0&&(i=e.length),t=0;48===e.charCodeAt(t);t++);for(r=e.length;48===e.charCodeAt(r-1);--r);if(e=e.slice(t,r)){if(r-=t,n.e=i=i-t-1,n.d=[],t=(i+1)%y,i<0&&(t+=y),t<r){for(t&&n.d.push(+e.slice(0,t)),r-=y;t<r;)n.d.push(+e.slice(t,t+=y));e=e.slice(t),t=y-e.length}else t-=r;for(;t--;)e+=\"0\";n.d.push(+e),h&&(n.e>n.constructor.maxE?(n.d=null,n.e=NaN):n.e<n.constructor.minE&&(n.e=0,n.d=[0]))}else n.e=0,n.d=[0];return n}function W(n,i){var t,r,s,o,u,c,f,a,d;if(\"Infinity\"===i||\"NaN\"===i)return+i||(n.s=NaN),n.e=NaN,n.d=null,n;if(N.test(i))t=16,i=i.toLowerCase();else if(v.test(i))t=2;else{if(!b.test(i))throw Error(l+i);t=8}for((o=i.search(/p/i))>0?(f=+i.slice(o+1),i=i.substring(2,o)):i=i.slice(2),u=(o=i.indexOf(\".\"))>=0,r=n.constructor,u&&(o=(c=(i=i.replace(\".\",\"\")).length)-o,s=C(r,new r(t),o,2*o)),o=d=(a=S(i,t,x)).length-1;0===a[o];--o)a.pop();return o<0?new r(0*n.s):(n.e=L(a,d),n.d=a,h=!1,u&&(n=Z(n,s,4*c)),f&&(n=n.times(Math.abs(f)<54?w(2,f):e.pow(2,f))),h=!0,n)}function J(n,e,i,t,r){var s,o,u,c,f=n.precision,a=Math.ceil(f/y);for(h=!1,c=i.times(i),u=new n(t);;){if(o=Z(u.times(c),new n(e++*e++),f,1),u=r?t.plus(o):t.minus(o),t=Z(o.times(c),new n(e++*e++),f,1),void 0!==(o=u.plus(t)).d[a]){for(s=a;o.d[s]===u.d[s]&&s--;);if(-1==s)break}s=u,u=t,t=o,o=s,0}return h=!0,o.d.length=a+1,o}function z(n,e){for(var i=n;--e;)i*=n;return i}function G(n,e){var i,t=e.s<0,s=U(n,n.precision,1),o=s.times(.5);if((e=e.abs()).lte(o))return r=t?4:1,e;if((i=e.divToInt(s)).isZero())r=t?3:2;else{if((e=e.minus(i.times(s))).lte(o))return r=I(i)?t?2:3:t?4:1,e;r=I(i)?t?1:4:t?3:2}return e.minus(s).abs()}function K(n,e,t,r){var s,c,f,a,h,d,l,p,g,m=n.constructor,w=void 0!==t;if(w?(F(t,1,o),void 0===r?r=m.rounding:F(r,0,8)):(t=m.precision,r=m.rounding),n.isFinite()){for(w?(s=2,16==e?t=4*t-3:8==e&&(t=3*t-2)):s=e,(f=(l=R(n)).indexOf(\".\"))>=0&&(l=l.replace(\".\",\"\"),(g=new m(1)).e=l.length-f,g.d=S(R(g),10,s),g.e=g.d.length),c=h=(p=S(l,10,s)).length;0==p[--h];)p.pop();if(p[0]){if(f<0?c--:((n=new m(n)).d=p,n.e=c,p=(n=Z(n,g,t,r,0,s)).d,c=n.e,d=i),f=p[t],a=s/2,d=d||void 0!==p[t+1],d=r<4?(void 0!==f||d)&&(0===r||r===(n.s<0?3:2)):f>a||f===a&&(4===r||d||6===r&&1&p[t-1]||r===(n.s<0?8:7)),p.length=t,d)for(;++p[--t]>s-1;)p[t]=0,t||(++c,p.unshift(1));for(h=p.length;!p[h-1];--h);for(f=0,l=\"\";f<h;f++)l+=u.charAt(p[f]);if(w){if(h>1)if(16==e||8==e){for(f=16==e?4:3,--h;h%f;h++)l+=\"0\";for(h=(p=S(l,s,e)).length;!p[h-1];--h);for(f=1,l=\"1.\";f<h;f++)l+=u.charAt(p[f])}else l=l.charAt(0)+\".\"+l.slice(1);l=l+(c<0?\"p\":\"p+\")+c}else if(c<0){for(;++c;)l=\"0\"+l;l=\"0.\"+l}else if(++c>h)for(c-=h;c--;)l+=\"0\";else c<h&&(l=l.slice(0,c)+\".\"+l.slice(c))}else l=w?\"0p+0\":\"0\";l=(16==e?\"0x\":2==e?\"0b\":8==e?\"0o\":\"\")+l}else l=j(n);return n.s<0?\"-\"+l:l}function Q(n,e){if(n.length>e)return n.length=e,!0}function X(n){return new this(n).abs()}function Y(n){return new this(n).acos()}function nn(n){return new this(n).acosh()}function en(n,e){return new this(n).plus(e)}function tn(n){return new this(n).asin()}function rn(n){return new this(n).asinh()}function sn(n){return new this(n).atan()}function on(n){return new this(n).atanh()}function un(n,e){n=new this(n),e=new this(e);var i,t=this.precision,r=this.rounding,s=t+4;return n.s&&e.s?n.d||e.d?!e.d||n.isZero()?(i=e.s<0?U(this,t,r):new this(0)).s=n.s:!n.d||e.isZero()?(i=U(this,s,1).times(.5)).s=n.s:e.s<0?(this.precision=s,this.rounding=1,i=this.atan(Z(n,e,s,1)),e=U(this,s,1),this.precision=t,this.rounding=r,i=n.s<0?i.minus(e):i.plus(e)):i=this.atan(Z(n,e,s,1)):(i=U(this,s,1).times(e.s>0?.25:.75)).s=n.s:i=new this(NaN),i}function cn(n){return new this(n).cbrt()}function fn(n){return P(n=new this(n),n.e+1,2)}function an(n){if(!n||\"object\"!=typeof n)throw Error(d+\"Object expected\");var e,i,t,r=!0===n.defaults,u=[\"precision\",1,o,\"rounding\",0,8,\"toExpNeg\",-s,0,\"toExpPos\",0,s,\"maxE\",0,s,\"minE\",-s,0,\"modulo\",0,9];for(e=0;e<u.length;e+=3)if(i=u[e],r&&(this[i]=a[i]),void 0!==(t=n[i])){if(!(m(t)===t&&t>=u[e+1]&&t<=u[e+2]))throw Error(l+i+\": \"+t);this[i]=t}if(i=\"crypto\",r&&(this[i]=a[i]),void 0!==(t=n[i])){if(!0!==t&&!1!==t&&0!==t&&1!==t)throw Error(l+i+\": \"+t);if(t){if(\"undefined\"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(g);this[i]=!0}else this[i]=!1}return this}function hn(n){return new this(n).cos()}function dn(n){return new this(n).cosh()}function ln(n,e){return new this(n).div(e)}function pn(n){return new this(n).exp()}function gn(n){return P(n=new this(n),n.e+1,3)}function mn(){var n,e,i=new this(0);for(h=!1,n=0;n<arguments.length;)if((e=new this(arguments[n++])).d)i.d&&(i=i.plus(e.times(e)));else{if(e.s)return h=!0,new this(1/0);i=e}return h=!0,i.sqrt()}function wn(n){return n instanceof e||n&&\"[object Decimal]\"===n.name||!1}function vn(n){return new this(n).ln()}function Nn(n,e){return new this(n).log(e)}function bn(n){return new this(n).log(2)}function En(n){return new this(n).log(10)}function xn(){return H(this,arguments,\"lt\")}function yn(){return H(this,arguments,\"gt\")}function Mn(n,e){return new this(n).mod(e)}function qn(n,e){return new this(n).mul(e)}function On(n,e){return new this(n).pow(e)}function Dn(n){var e,i,t,r,s=0,u=new this(1),c=[];if(void 0===n?n=this.precision:F(n,1,o),t=Math.ceil(n/y),this.crypto)if(crypto.getRandomValues)for(e=crypto.getRandomValues(new Uint32Array(t));s<t;)(r=e[s])>=429e7?e[s]=crypto.getRandomValues(new Uint32Array(1))[0]:c[s++]=r%1e7;else{if(!crypto.randomBytes)throw Error(g);for(e=crypto.randomBytes(t*=4);s<t;)(r=e[s]+(e[s+1]<<8)+(e[s+2]<<16)+((127&e[s+3])<<24))>=214e7?crypto.randomBytes(4).copy(e,s):(c.push(r%1e7),s+=4);s=t/4}else for(;s<t;)c[s++]=1e7*Math.random()|0;for(t=c[--s],n%=y,t&&n&&(r=w(10,y-n),c[s]=(t/r|0)*r);0===c[s];s--)c.pop();if(s<0)i=0,c=[0];else{for(i=-1;0===c[0];i-=y)c.shift();for(t=1,r=c[0];r>=10;r/=10)t++;t<y&&(i-=y-t)}return u.e=i,u.d=c,u}function Fn(n){return P(n=new this(n),n.e+1,this.rounding)}function An(n){return(n=new this(n)).d?n.d[0]?n.s:0*n.s:n.s||NaN}function Sn(n){return new this(n).sin()}function Zn(n){return new this(n).sinh()}function Pn(n){return new this(n).sqrt()}function Rn(n,e){return new this(n).sub(e)}function Ln(n){return new this(n).tan()}function Tn(n){return new this(n).tanh()}function Un(n){return P(n=new this(n),n.e+1,1)}return(e=function n(e){var i,t,r;function s(n){var e,i,t,r=this;if(!(r instanceof s))return new s(n);if(r.constructor=s,n instanceof s)return r.s=n.s,void(h?!n.d||n.e>s.maxE?(r.e=NaN,r.d=null):n.e<s.minE?(r.e=0,r.d=[0]):(r.e=n.e,r.d=n.d.slice()):(r.e=n.e,r.d=n.d?n.d.slice():n.d));if(\"number\"==(t=typeof n)){if(0===n)return r.s=1/n<0?-1:1,r.e=0,void(r.d=[0]);if(n<0?(n=-n,r.s=-1):r.s=1,n===~~n&&n<1e7){for(e=0,i=n;i>=10;i/=10)e++;return void(h?e>s.maxE?(r.e=NaN,r.d=null):e<s.minE?(r.e=0,r.d=[0]):(r.e=e,r.d=[n]):(r.e=e,r.d=[n]))}return 0*n!=0?(n||(r.s=NaN),r.e=NaN,void(r.d=null)):$(r,n.toString())}if(\"string\"!==t)throw Error(l+n);return 45===(i=n.charCodeAt(0))?(n=n.slice(1),r.s=-1):(43===i&&(n=n.slice(1)),r.s=1),E.test(n)?$(r,n):W(r,n)}if(s.prototype=O,s.ROUND_UP=0,s.ROUND_DOWN=1,s.ROUND_CEIL=2,s.ROUND_FLOOR=3,s.ROUND_HALF_UP=4,s.ROUND_HALF_DOWN=5,s.ROUND_HALF_EVEN=6,s.ROUND_HALF_CEIL=7,s.ROUND_HALF_FLOOR=8,s.EUCLID=9,s.config=s.set=an,s.clone=n,s.isDecimal=wn,s.abs=X,s.acos=Y,s.acosh=nn,s.add=en,s.asin=tn,s.asinh=rn,s.atan=sn,s.atanh=on,s.atan2=un,s.cbrt=cn,s.ceil=fn,s.cos=hn,s.cosh=dn,s.div=ln,s.exp=pn,s.floor=gn,s.hypot=mn,s.ln=vn,s.log=Nn,s.log10=En,s.log2=bn,s.max=xn,s.min=yn,s.mod=Mn,s.mul=qn,s.pow=On,s.random=Dn,s.round=Fn,s.sign=An,s.sin=Sn,s.sinh=Zn,s.sqrt=Pn,s.sub=Rn,s.tan=Ln,s.tanh=Tn,s.trunc=Un,void 0===e&&(e={}),e&&!0!==e.defaults)for(r=[\"precision\",\"rounding\",\"toExpNeg\",\"toExpPos\",\"maxE\",\"minE\",\"modulo\",\"crypto\"],i=0;i<r.length;)e.hasOwnProperty(t=r[i++])||(e[t]=this[t]);return s.config(e),s}(a)).default=e.Decimal=e,c=new e(c),f=new e(f),\"function\"==typeof define&&define.amd?define(function(){return e}):\"undefined\"!=typeof module&&module.exports?(\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator&&(O[Symbol.for(\"nodejs.util.inspect.custom\")]=O.toString,O[Symbol.toStringTag]=\"Decimal\"),module.exports=e):(n||(n=\"undefined\"!=typeof self&&self&&self.self==self?self:window),t=n.Decimal,e.noConflict=function(){return n.Decimal=t,e},n.Decimal=e),e}(this)\r\n//    bigDec: require('decimal.js')\r\n});\r\n\r\nif((typeof module) !== 'undefined') {\r\n    module.exports = nerdamer;\r\n};","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  Object.defineProperty(subClass, \"prototype\", {\n    value: Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    }),\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","isArray","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","err","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayLikeToArray","o","minLen","n","toString","slice","constructor","name","from","test","$","ABS","ADD","ADJ","AND","APPROXRATIO","ARCCOS","ARCCOSH","ARCSIN","ARCSINH","ARCTAN","ARCTANH","ARG","ASSUME_REAL_VARIABLES","ATOMIZE","AUTOEXPAND","BAKE","BESSELJ","BESSELY","BINDING","BINOMIAL","BINOM_check_args","BUF","C1","C2","C3","C4","C5","C6","CEILING","CHECK","CHOOSE","CIRCEXP","CLEAR","CLEARALL","CLEARPATTERNS","CLOCK","COEFF","COFACTOR","CONDENSE","CONJ","CONS","CONTRACT","COS","COSH","Condense","DEBUG","DEBUG_ABS","DEBUG_ARG","DEBUG_CLOCKFORM","DEBUG_IMAG","DEBUG_IS","DEBUG_MULTIPLY","DEBUG_POWER","DEBUG_RATIONALIZE","DEBUG_RECT","DEBUG_SIMPLIFY","DECOMP","DEFINT","DEGREE","DENOMINATOR","DERIVATIVE","DET","DET_check_arg","DIM","DIRAC","DIVISORS","DO","DOT","DOUBLE","DRAW","DRAWX","DSOLVE","E","EIGEN","EIGENVAL","EIGENVEC","EIG_N","EIG_check_arg","EIG_yydd","EIG_yyqq","ERF","ERFC","EVAL","EXP","EXPAND","EXPCOS","EXPSIN","Eval","Eval_Eval","Eval_abs","Eval_add","Eval_adj","Eval_and","Eval_approxratio","Eval_arccos","Eval_arccosh","Eval_arcsin","Eval_arcsinh","Eval_arctan","Eval_arctanh","Eval_arg","Eval_besselj","Eval_bessely","Eval_binding","Eval_binomial","Eval_ceiling","Eval_check","Eval_choose","Eval_circexp","Eval_clear","Eval_clearall","Eval_clearpatterns","Eval_clock","Eval_coeff","Eval_cofactor","Eval_condense","Eval_conj","Eval_cons","Eval_contract","Eval_cos","Eval_cosh","Eval_decomp","Eval_defint","Eval_degree","Eval_denominator","Eval_derivative","Eval_det","Eval_dim","Eval_dirac","Eval_divisors","Eval_do","Eval_dsolve","Eval_eigen","Eval_eigenval","Eval_eigenvec","Eval_erf","Eval_erfc","Eval_exp","Eval_expand","Eval_expcos","Eval_expsin","Eval_factor","Eval_factorial","Eval_factorpoly","Eval_filter","Eval_float","Eval_floor","Eval_for","Eval_function_reference","Eval_gamma","Eval_gcd","Eval_hermite","Eval_hilbert","Eval_imag","Eval_index","Eval_inner","Eval_integral","Eval_inv","Eval_invg","Eval_isinteger","Eval_isprime","Eval_laguerre","Eval_lcm","Eval_leading","Eval_legendre","Eval_log","Eval_lookup","Eval_mod","Eval_multiply","Eval_noexpand","Eval_not","Eval_nroots","Eval_number","Eval_numerator","Eval_operator","Eval_or","Eval_outer","Eval_pattern","Eval_patternsinfo","Eval_polar","Eval_power","Eval_predicate","Eval_prime","Eval_print","Eval_print2dascii","Eval_printcomputer","Eval_printhuman","Eval_printlatex","Eval_printlist","Eval_product","Eval_quote","Eval_quotient","Eval_rank","Eval_rationalize","Eval_real","Eval_rect","Eval_roots","Eval_round","Eval_setq","Eval_sgn","Eval_shape","Eval_silentpattern","Eval_simfac","Eval_simplify","Eval_sin","Eval_sinh","Eval_sqrt","Eval_stop","Eval_subst","Eval_sum","Eval_sym","Eval_symbolsinfo","Eval_tan","Eval_tanh","Eval_taylor","Eval_tensor","Eval_test","Eval_testeq","Eval_testge","Eval_testgt","Eval_testle","Eval_testlt","Eval_transpose","Eval_unit","Eval_user_function","Eval_zero","Evalpoly","FACTOR","FACTORIAL","FACTORPOLY","FILTER","FLOATF","FLOOR","FOR","FORCE_FIXED_PRINTOUT","FUNCTION","Find","GAMMA","GCD","HERMITE","HILBERT","IMAG","INDEX","INNER","INTEGRAL","INV","INVG","INV_check_arg","INV_decomp","ISINTEGER","ISPRIME","LAGUERRE","LAST","LAST_2DASCII_PRINT","LAST_FULL_PRINT","LAST_LATEX_PRINT","LAST_LIST_PRINT","LAST_PLAIN_PRINT","LAST_PRINT","LCM","LEADING","LEGENDRE","LOG","LOOKUP","M","MAXDIM","MAXPRIMETAB","MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES","MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE","MAX_FIXED_PRINTOUT_DIGITS","MAX_PROGRAM_SIZE","MEQUAL","METAA","METAB","METAX","MLENGTH","MOD","MSIGN","MULTIPLY","MZERO","N","NIL","NOT","NROOTS","NROOTS_ABS","NROOTS_DELTA","NROOTS_EPSILON","NROOTS_RANDOM","NROOTS_YMAX","NROOTS_divpoly","NSYM","NUM","NUMBER","NUMERATOR","OPERATOR","OR","OUTER","PATTERN","PATTERNSINFO","PI","POLAR","POWER","PRIME","PRINT","PRINT2DASCII","PRINTFULL","PRINTLATEX","PRINTLIST","PRINTMODE_2DASCII","PRINTMODE_COMPUTER","PRINTMODE_HUMAN","PRINTMODE_LATEX","PRINTMODE_LIST","PRINTOUTRESULT","PRINTPLAIN","PRINT_LEAVE_E_ALONE","PRINT_LEAVE_X_ALONE","PRODUCT","QUOTE","QUOTIENT","RANK","RATIONALIZE","REAL","ROOTS","ROUND","SECRETX","SELFTEST","SETQ","SGN","SHAPE","SILENTPATTERN","SIMPLIFY","SIN","SINH","SPACE_BETWEEN_COLUMNS","SPACE_BETWEEN_ROWS","SQRT","STOP","STR","SUBST","SUM","SYM","SYMBOLSINFO","SYMBOL_A","SYMBOL_A_UNDERSCORE","SYMBOL_B","SYMBOL_B_UNDERSCORE","SYMBOL_C","SYMBOL_D","SYMBOL_I","SYMBOL_IDENTITY_MATRIX","SYMBOL_J","SYMBOL_N","SYMBOL_R","SYMBOL_S","SYMBOL_T","SYMBOL_X","SYMBOL_X_UNDERSCORE","SYMBOL_Y","SYMBOL_Z","TAN","TANH","TAYLOR","TENSOR","TEST","TESTEQ","TESTGE","TESTGT","TESTLE","TESTLT","TIMING_DEBUGS","TOS","TRACE","TRANSPOSE","T_DOUBLE","T_EQ","T_FUNCTION","T_GTEQ","T_INTEGER","T_LTEQ","T_NEQ","T_NEWLINE","T_QUOTASSIGN","T_STRING","T_SYMBOL","U","UNIT","USR_SYMBOLS","VERSION","YMAX","YYE","YYRECT","ZERO","__emit_char","__emit_str","__factor_add","__factorial","__is_negative","__is_radical_number","__lcm","__legendre","__legendre2","__legendre3","__normalize_radical_factors","__rationalize_tensor","_print","abs","absValFloat","absval","absval_tensor","add","addSymbolLeftOfAssignment","addSymbolRightOfAssignment","add_all","add_factor_to_accumulator","add_numbers","add_terms","addf","adj","alloc_tensor","allocatedId","any_denominators","approxAll","approxLogs","approxLogsOfRationals","approxOneRatioOnly","approxRadicals","approxRadicalsOfRationals","approxRationalsOfLogs","approxRationalsOfPowersOfE","approxRationalsOfPowersOfPI","approxRationalsOfRadicals","approxSineOfRationalMultiplesOfPI","approxSineOfRationals","approxTrigonometric","approx_just_an_integer","approx_logarithmsOfRationals","approx_nothingUseful","approx_radicalOfRatio","approx_ratioOfRadical","approx_rationalOfE","approx_rationalOfPi","approx_rationalsOfLogarithms","approx_sine_of_pi_times_rational","approx_sine_of_rational","approxratioRecursive","arccos","arccosh","arcsin","arcsinh","arctan","arctanh","areunivarpolysfactoredorexpandedform","arg","arglist","assignmentFound","avoidCalculatingPowersIntoArctans","bake","bake_poly","bake_poly_term","besselj","bessely","bigInt","bignum_factorial","bignum_float","bignum_power_number","bignum_scan_float","bignum_scan_integer","bignum_truncate","binding","binomial","buffer","build_tensor","caaddr","caadr","caar","cadaddr","cadadr","cadar","caddaddr","caddadr","caddar","caddddr","cadddr","caddr","cadr","called_from_Algebra_block","car","cdaddr","cdadr","cdar","cddaddr","cddar","cdddaddr","cddddr","cdddr","cddr","cdr","ceiling","chainOfUserSymbolsNotFunctionsBeingEvaluated","charTabIndex","chartab","checkFloatHasWorkedOutCompletely","check_esc_flag","check_stack","check_tensor_dimensions","choose","choose_check_args","circexp","clearAlgebraEnvironment","clearRenamedVariablesToAvoidBindingToExternalScope","clear_symbols","clear_term","clearall","clockform","cmpGlyphs","cmp_args","cmp_expr","cmp_terms","cmp_terms_count","codeGen","coeff","cofactor","collectLatexStringFromReturnValue","collectUserSymbols","combine_factors","combine_gammas","combine_terms","compareState","compare_numbers","compare_rationals","compare_tensors","compatible","computeDependenciesFromAlgebra","computeResultsAndJavaScriptFromAlgebra","compute_fa","conjugate","cons","consCount","contract","convert_bignum_to_double","convert_rational_to_double","copy_tensor","cosine","cosine_of_angle","cosine_of_angle_sum","count","countOccurrencesOfSymbol","count_denominators","counter","countsize","d_scalar_scalar","d_scalar_scalar_1","d_scalar_tensor","d_tensor_scalar","d_tensor_tensor","dabs","darccos","darccosh","darcsin","darcsinh","darctan","darctanh","dbesselj0","dbesseljn","dbessely0","dbesselyn","dcos","dcosh","dd","decomp","decomp_product","decomp_sum","defineSomeHandyConstants","define_user_function","defn","defn_str","degree","denominator","derf","derfc","derivative","derivative_of_integral","det","determinant","detg","dfunction","dhermite","dirac","display","display_flag","displaychar","divide","divide_numbers","divisors","divisors_onstack","divpoly","dlog","do_clearPatterns","do_clearall","do_simplify_nested_radicals","dontCreateNewRadicalsInDenominatorWhenEvalingMultiplication","dotprod_unicode","doubleToReasonableString","dpow","dpower","dproduct","draw_flag","draw_stop_return","dsgn","dsin","dsinh","dsum","dtan","dtanh","dupl","eigen","elelmIndex","elem","emit_denominator","emit_denominators","emit_expr","emit_factor","emit_factorial_function","emit_flat_tensor","emit_fraction","emit_function","emit_index_function","emit_multiply","emit_number","emit_numerators","emit_numerical_fraction","emit_power","emit_string","emit_subexpr","emit_symbol","emit_tensor","emit_tensor_inner","emit_term","emit_top_expr","emit_unsigned_expr","emit_x","equal","equaln","equalq","erfc","errorMessage","esc_flag","evaluatingAsFloats","evaluatingPolar","exec","expand","expand_get_A","expand_get_AF","expand_get_B","expand_get_C","expand_get_CF","expand_tensor","expanding","expcos","exponential","expr_level","expsin","f1","f10","f2","f3","f4","f5","f9","f_equals_a","factor","factor_a","factor_again","factor_b","factor_number","factor_small_number","factor_term","factorial","factorpoly","factors","fill_buf","filter","filter_main","filter_sum","filter_tensor","findDependenciesInScript","findPossibleClockForm","findPossibleExponentialForm","findroot","fixup_fraction","fixup_power","flag","floatToRatioRoutine","fmt_index","fmt_level","fmt_x","frame","freeze","functionInvokationsScanningStack","gamma","gamma_of_sum","gammaf","gcd","gcd_main","gcd_numbers","gcd_polys","gcd_powers_with_same_base","gcd_product_product","gcd_product_sum","gcd_sum","gcd_sum_product","gcd_sum_sum","gen","getSimpleRoots","getStateHash","get_binding","get_factor_from_complex_root","get_factor_from_real_root","get_innerprod_factors","get_next_token","get_printname","get_size","get_token","getdisplaystr","glyph","gp","guess","hasImaginaryCoeff","hasNegativeRationalExponent","hash_addition","hash_function","hash_multiplication","hash_power","hashcode_values","hashed_itab","hermite","hilbert","i1","imag","imaginaryunit","index_function","init","initNRoots","inited","inner","inner_f","input_str","integral","integral_of_form","integral_of_product","integral_of_sum","inv","inverse","invert_number","invg","isNumberOneOverSomething","isNumericAtom","isNumericAtomOrTensor","isSimpleRoot","isSmall","isSymbolLeftOfAssignment","isSymbolReclaimable","isZeroAtom","isZeroAtomOrTensor","isZeroLikeOrNonZeroLikeOrUndetermined","isZeroTensor","is_denominator","is_factor","is_small_integer","is_square_matrix","is_usr_symbol","isadd","isalnumorunderscore","isalpha","isalphaOrUnderscore","iscomplexnumber","iscomplexnumberdouble","iscons","isdenominator","isdigit","isdouble","iseveninteger","isfactor","isfactorial","isfloating","isfraction","isidentitymatrix","isimaginarynumber","isimaginarynumberdouble","isimaginaryunit","isinnerordot","isinteger","isintegerfactor","isintegerorintegerfloat","isinv","iskeyword","isminusone","isminusoneoversqrttwo","isminusoneovertwo","isminussqrtthreeovertwo","ismultiply","isnegative","isnegativenumber","isnegativeterm","isnonnegativeinteger","isnpi","isone","isoneover","isoneoversqrttwo","isoneovertwo","isplusone","isplustwo","ispolyexpandedform","ispolyexpandedform_expr","ispolyexpandedform_factor","ispolyexpandedform_term","ispolyfactoredorexpandedform","ispolyfactoredorexpandedform_factor","ispolyfactoredorexpandedform_power","isposint","ispositivenumber","ispower","isquarterturn","isrational","isspace","issqrtthree","issqrtthreeovertwo","isstr","issymbol","issymbolic","istensor","istranspose","isunderscore","isunivarpolyfactoredorexpandedform","itab","italu_hashcode","j1","laguerre","laguerre2","lastFoundSymbol","latexErrorSign","lcm","leading","legendre","lessp","level","list","listLength","logarithm","logbuf","lookupsTotal","lu_decomp","madd","makePositive","makeSignSameAs","make_hashed_itab","mask","mcmp","mcmpint","mdiv","mdivrem","meta_mode","mgcd","mini_solve","mint","mmod","mmul","mod","monic","move","moveTos","mp_clr_bit","mp_denominator","mp_numerator","mp_set_bit","mpow","mprime","mroot","mshiftright","msub","mtotal","multinomial_sum","multiply","multiply_all","multiply_all_noexpand","multiply_consecutive_constants","multiply_denominators","multiply_denominators_factor","multiply_denominators_term","multiply_noexpand","multiply_numbers","n_factor_number","negate","negate_expand","negate_noexpand","negate_number","new_integer","new_string","newline_flag","nil_symbols","normaliseDots","normalisedCoeff","normalize_angle","nroots_a","nroots_b","nroots_c","nroots_df","nroots_dx","nroots_fa","nroots_fb","nroots_x","nroots_y","nterms","nthCadr","numerator","numericRootOfPolynomial","one","oneElement","one_as_double","out_buf","out_count","out_of_memory","outer","p0","p1","p2","p3","p4","p5","p6","p7","p8","p9","parse","parse_internal","parse_p1","parse_p2","parse_time_simplifications","partition","patternHasBeenFound","patternsinfo","performing_roots","polar","polarRectAMinusOneBase","polyform","pop","pop_double","pop_frame","pop_integer","power","power_str","power_sum","power_tensor","predefinedSymbolsInGlobalScope_doNotTrackInDependencies","prime","primetab","print2dascii","printMode","print_ABS_latex","print_ARCCOS_codegen","print_ARCSIN_codegen","print_ARCTAN_codegen","print_BINOMIAL_latex","print_COS_codegen","print_DEFINT_latex","print_DOT_codegen","print_DOT_latex","print_DO_codegen","print_FOR_codegen","print_INV_codegen","print_INV_latex","print_PRODUCT_codegen","print_PRODUCT_latex","print_SETQ_codegen","print_SIN_codegen","print_SQRT_latex","print_SUM_codegen","print_SUM_latex","print_TAN_codegen","print_TESTEQ_latex","print_TESTGE_latex","print_TESTGT_latex","print_TESTLE_latex","print_TESTLT_latex","print_TEST_codegen","print_TEST_latex","print_TRANSPOSE_codegen","print_TRANSPOSE_latex","print_UNIT_codegen","print_a_over_b","print_base","print_base_of_denom","print_char","print_denom","print_double","print_expo_of_denom","print_exponent","print_expr","print_factor","print_factorial_function","print_glyphs","print_index_function","print_list","print_multiply_sign","print_number","print_power","print_str","print_subexpr","print_tensor","print_tensor_inner","print_tensor_inner_latex","print_tensor_latex","print_term","printchar","printchar_nowrap","printline","program_buf","promote_tensor","pushTryNotToDuplicate","push_cars","push_double","push_factor","push_frame","push_identity_matrix","push_integer","push_rational","push_symbol","push_term_factors","push_terms","push_zero_matrix","qadd","qdiv","qmul","qpow","qpowf","quickfactor","quickpower","rational","rationalize","rationalize_coefficients","real","reciprocate","rect","recursionLevelNestedRadicalsRemoval","recursiveDependencies","ref","ref1","rememberPrint","remove_negative_exponents","reset_after_error","restore","restoreMetaBindings","rewrite_args","rewrite_args_tensor","roots","roots2","roots3","run","runUserDefinedSimplifications","save","saveMetaBindings","scalar_times_tensor","scan","scan_error","scan_expression","scan_factor","scan_function_call_with_function_name","scan_function_call_without_function_name","scan_index","scan_meta","scan_power","scan_relation","scan_stmt","scan_str","scan_string","scan_subexpr","scan_symbol","scan_tensor","scan_term","scanned","scanningParameters","setM","setSignTo","set_binding","set_component","setq_indexed","sfac_product","sfac_product_f","sgn","shape","show_power_debug","sign","sign_of_term","simfac","simfac_term","simpleComplexityMeasure","simplify","simplifyForCodeGeneration","simplify_1_in_products","simplify_main","simplify_nested_radicals","simplify_polar","simplify_polarRect","simplify_rational_expressions","simplify_rectToClock","simplify_tensor","simplify_trig","simplifyfactorials","sine","sine_of_angle","sine_of_angle_sum","skipRootVariableToBeSolved","sort_stack","square","ssqrt","stack","stackAddsCount","std_symbol","step","step2","stop","strcmp","stringsEmittedByUserPrintouts","subf","subst","subtract","subtract_numbers","swap","symbol","symbolsDependencies","symbolsHavingReassignments","symbolsInExpressionsWithoutAssignments","symbolsLeftOfAssignment","symbolsRightOfAssignment","symbolsinfo","symnum","symtab","take_care_of_nested_radicals","tangent","taylor","tensor","tensor_plus_tensor","tensor_times_scalar","testApprox","test_flag","text_metric","theRandom","token","token_buf","token_str","top","top_level_eval","tos","transform","transpose","transpose_unicode","trigmode","trivial_divide","try_kth_prime","turnErrorMessageToLatex","ucmp","unfreeze","unique","unique_f","update_token_buf","userSimplificationsInListForm","userSimplificationsInStringForm","usr_symbol","verbosing","version","will_be_displayed_as_fraction","ybinomial","ycosh","ydirac","yerf","yerfc","yfloor","yindex","yround","ysinh","yyarg","yybesselj","yybessely","yyceiling","yycondense","yycontract","yycosh","yydegree","yydetg","yydivpoly","yyerf","yyerfc","yyexpand","yyfactorpoly","yyfloat","yyfloor","yyhermite","yyhermite2","yyinvg","yylcm","yylog","yymultiply","yyouter","yypower","yyrationalize","yyround","yysgn","yysimfac","yysinh","yytangent","zero","zzfloat","hasProp","hasOwnProperty","require","a","b","this","q","printname","str","d","k","tag","dim","results","ndim","nelem","h","w","ascent","descent","width","ceil","j","primes","Math","sqrt","x","p","startCount","isPositive","isZero","equals","theArgument","console","trace","log","anyFactorsYet","input","subsetOfStack","sort","concat","t","s","l1","m1","ref2","ref3","ref4","ref5","ref6","ref7","ref8","ref9","numberOfDigitsAfterTheDot","precision","splitBeforeAndAfterDot","supposedlyTheFloat","theFloat","theRatio","split","pow","decimal","AccuracyFactor","DecimalSign","FractionDenominator","FractionNumerator","PreviousDenominator","ScratchValue","Z","ret","isNaN","floor","bestResultSoFar","complexity","error","hypothesis","likelyMultiplier","minimumComplexity","ratio","Number","MAX_VALUE","round","len1","approxRadicalsOfRationalsResult","approxRationalsOfRadicalsResult","approxLogsOfRationalsResult","approxRationalsOfLogsResult","approxSineOfRationalMultiplesOfPIResult","approxSineOfRationalsResult","fraction","sin","approxLogsResult","approxRadicalsResult","approxRationalsOfPowersOfEResult","approxRationalsOfPowersOfPIResult","approxTrigonometricResult","bestApproxSoFar","constantsSum","constantsSumMin","aResult","c","theSum","i2","i3","j2","j3","k3","l2","l3","len2","len3","len4","len5","len6","len7","m2","m3","n1","n2","o1","o2","originalValue","q1","q2","r1","r2","returned","returnedFraction","returnedValue","s1","s2","t1","t2","u1","u2","v1","v2","x1","x2","z1","z2","toFixed","acos","asin","atan","y","z","jn","yn","geq","MIN_SAFE_INTEGER","leq","MAX_SAFE_INTEGER","isNegative","qsub","ab","ba","minusOne","expo","toJSNumber","quotientAndRemainder","divmod","quotient","remainder","theNewInteger","accumulator","buf","scounter","sign_","substring","parseFloat","signed","aAsString","denominatorString","shiftRight","indexOf","indexFound","variableToBeCleared","variable","polynomial","coeffsCount","constant","polynomialWithoutConstant","prev_expanding","row","col","ai","an","l","m","cos","cosh","toBePushed","generalTransform","breakFromOutherWhile","base","result","theta","op","ref10","printstr","ref11","results1","cc","ss","ans","exp","willEvaluateAsFloats","cycleString","positionIfSymbolAlreadyBeingEvaluated","cons_head","Eval_atomize","Eval_draw","checkResult","dsolve","orig","theTensor","A","AxPlusB","B","checkingTheDivision","dividend","factpoly_expo","firstParam","foundComplexRoot","foundRealRoot","partOfPolynomialFactoredSoFar","polycoeff","previousFactorisation","remainingPoly","secondDegreePloly","secondParam","whichRootsAreWeFinding","ratioInverse","a0","evalPolyResult","na0","nan","rootsTries_i","rootsTries_j","testDenominator","testNumerator","testValue","Q","evaluateAt","nodeToCheck","numberOfEs","numberOfMults","numberOfPIs","numberOfPowers","numberOfSums","loopingVariable","polyVar","difference","moretheArguments","operands","refinedOperands","shift","theArguments","arg1","arg2","arg3","subtractionResult","ak","bk","tree","factors_accumulator","hc","tab","u","half","arg_hash","Error","terms","sum","term","term_set","product","base_hash","exp_hash","constexp","f","JSON","stringify","eachEntry","results2","valueOrPredicate","evalledArgument","isEven","minussign","compareAbs","v","theNewString","toReturn","isProbablePrime","index","and","shiftLeft","not","or","append","_gamma","r","random","nrabs","firstArgument","patternPosition","secondArgument","stringKey","thirdArgument","patternsinfoToBePrinted","compare","bigint_one","g","xprime","b_isEven_and_c_isItsInverse","hopefullySimplified","inputBase","inputExp","isThisOne","is_a_moreThanZero","original_test_flag","beenPrinted","passedPrintMode","origPrintMode","theString","theTypeOfPrint","parsedString","originalCodeGen","returnedString","replace","denom","numberOneOverSomething","origAccumulator","previousFactorWasANumber","functionBody","numberOfIntegrals","originalIntegral","theIntegral","theVariable","firstLevel","body","lowerlimit","upperlimit","howManyIfs","exponent","denomExponent","newExponent","numExponent","omitParens","pastFirstFactor","fbody","parameters","character","k1","k2","pPrintName","pString","dx","h1","w1","w2","y1","y2","dy","h2","max_x","max_y","min_x","min_y","emit_sign","tmpString","sIndex","tmpBuffer","eh","ew","ncol","nrow","indexVariable","oldIndexVariableValue","gcdBetweenNumeratorAndDenominator","qadd_ab","qadd_ba","qadd_denominator","qadd_frac1","qadd_frac2","qadd_numerator","resultSum","aa","bb","isOdd","stackIndex","divisor","commonDenominator","eachTerm","imaginaryCoefficients","isSimpleRootPolynomial","divideBy","miniStack","lastCoeff","leadingCoeff","aSol","commonPart","rootsOfOne","C_CHECKED_AS_NOT_ZERO","R_18_a_b_c_d","R_27_a2_d","R_2_b3","R_3_a","R_3_a_C","R_3_a_c","R_4_DELTA03","R_6_a_C","R_C","R_C_over_3a","R_C_simplified_toCheckIfZero","R_DELTA0","R_DELTA0_toBeCheckedIfZero","R_DELTA1","R_Q","R_a2","R_a2_d","R_a2_d2","R_a3","R_a_b_c","R_a_b_c_d","R_a_c","R_b2","R_b2_c2","R_b3","R_b3_d","R_c2","R_c3","R_d2","R_determinant","R_e2","R_e3","R_m","R_m27_a2_d2","R_m4_a_c3","R_m4_b3_d","R_m9_a_b_c","R_m_b_over_3a","R_p","R_q","R_r","ThreePPlus2M","TwoQOversqrtPPlus2M","coeff2","coeff3","coeff4","depressedSolutions","eachSolution","flipSignOFQSoCIsNotZero","i_sqrt3","one_minus_i_sqrt3","one_plus_i_sqrt3","resolventCubicSolutions","root_solution","sqrtPPlus2M","toBeCheckedIFZero","assignmentIsOfQuotedType","existingDependencies","indexOfSymbolLeftOfAssignment","symbolLeftOfAssignment","splice","charCodeAt","firstFactorIsNumber","theSymbol","prefixVar","functionName","RegExp","errmsg","atLeastOneSuccessInRouldOfRulesApplications","eachConsecutiveRuleApplication","eachSimplification","numberOfRulesApplications","originalexpanding","success","args","eval","carp1","oldp1","oldp2","num","theGCD","simplificationWithCondense","simplificationWithoutCondense","somethingSimplified","C","SOLUTION","anyRadicalSimplificationWorked","checkSize","commonBases","commonInnerExponent","countingTerms","firstTerm","innerbase","innerexponent","lowercase_a","lowercase_b","numberOfTerms","possibleNewExpression","possibleNewExpressionValue","possibleRationalSolutions","possibleSolutions","potentialPower","realOfpossibleRationalSolutions","secondTerm","secondTermFactor","termsThatAreNotPowers","max","apply","sinh","expr","newExpr","newTensor","oldExpr","tan","tanh","comparison","wholeAndExpression","andPredicates","somePredicateUnknown","orPredicates","wholeOrExpression","bookmarkTosToPrintDecomps","eachTransformEntry","numberOfDecomps","restTerm","theTransform","transform_h","transformationSuccessful","transformedTerms","fea_i","fea_j","innerTranspSwitch1","innerTranspSwitch2","bodyAndFormalArguments","definitionOfInterest","defn_i","str1","str2","maxFixedPrintoutDigits","stringRepresentation","search","needle","message","stringToBeParsed","dontGenerateCode","bodyForReadableSummaryOfGeneratedCode","cyclesDescriptions","deQuotedDep","dependencyInfo","eachDependency","generatedBody","generatedCode","indexOfEachReplacement","indexOfPartRemainingToBeParsed","newUserSymbol","originalUserSymbol","readableSummaryOfGeneratedCode","recursedDependencies","replacementsFrom","replacementsTo","scriptEvaluation","stringToBeRun","testableString","timeStartFromAlgebra","toBePrinted","userVariablesMentioned","variablesWithCycles","Date","getTime","affectsVariables","affectedBy","error1","variableToBeChecked","arrayWhereDependenciesWillBeAdded","variablesAlreadyFleshedOut","chainBeingChecked","cyclesDescription","theErrorMessage","String","fromCharCode","stringToNormalise","allReturnedLatexStrings","allReturnedPlainStrings","collectedLatexResult","collectedPlainResult","stringToBeReturned","timeStart","timingDebugWrite","generateLatex","selftest","originalArgument","shouldAutoexpand","codeFromAlgebraBlock","code","latexResult","readableSummaryOfCode","stackPos","elementToBeReturned","symbolsinfoToBePrinted","bindingi","symtabi","latexPrint","theSymnum","argu","warn","data","fn","argus","builtin_fns","bind","frozenContents","frozenSymbols","frozen","frozenPatterns","previousHash","frozenHash","undefined","BASE","MAX_INT","MAX_INT_ARR","smallToArray","DEFAULT_ALPHABET","supportsNativeBigInt","BigInt","Integer","radix","alphabet","caseSensitive","parseBase","parseValue","BigInteger","SmallInteger","NativeBigInt","isPrecise","arrayToSmall","trim","createArray","truncate","l_a","l_b","carry","addAny","addSmall","a_l","b_l","borrow","subtractSmall","multiplyLong","a_i","multiplySmall","multiplyKaratsuba","ac","bd","abcd","multiplySmallAndArray","divModSmall","lambda","divModAny","self","quotientDigit","divisorMostSignificantDigit","divMod1","xlen","highx","highy","check","part","unshift","reverse","divMod2","qSign","mSign","isBasicPrime","isUnit","isDivisibleBy","lesser","millerRabinTest","nPrev","prev","modPow","create","plus","subtractAny","minus","small","times","_multiplyBySmall","over","_0","_1","_2","modInv","Infinity","compareTo","eq","notEquals","neq","greater","gt","lt","greaterOrEquals","lesserOrEquals","isPrime","strict","bits","bitLength","logN","iterations","rng","randBetween","lastT","lastR","newT","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","xSign","ySign","xRem","yRem","xDigit","yDigit","xDivMod","yDivMod","remQuo","xor","LOBMASK_I","roughLOB","integerLogarithm","tmp","e","min","text","toLowerCase","absBase","alphabetValues","digits","start","parseBaseFromArray","val","toBase","map","valueOf","neg","out","left","digit","toBaseString","join","parseStringValue","decimalPlace","parseNumberValue","toArray","toJSON","parseInt","isInstance","usedRNG","low","range","restricted","fromArray","define","nerdamer","core","getCore","_","PARSER","groups","P","S","EX","FN","PL","CP","CB","keys","Utils","even","variables","format","Frac","isInt","CONST_HASH","Settings","math","importFunctions","evaluate","Polynomial","order","isSymbol","exceptions","InvalidVariableNameError","coeffs","fill","Factors","MVTerm","image","fit","c1","c2","isPoly","NerdamerTypeError","absEquals","group","multiplier","toDecimal","symbols","sub","equalsZero","modP","up_one","poly","arrayClone","mp","clone","deg","lc","Math2","QGCD","diff","new_array","integrate","gcf","toPolynomial","ca","fnz","parr","quad","incl_img","dsc","squareFree","output","equalsNumber","toSymbol","end","with_order","distributeMultiplier","isComposite","isConstant","isImaginary","each","imaginary","tBase","collectSymbols","nterm","sym","updateCount","altVar","sameVars","groupTerms","egrouped","grouped","el","decompose_fn","collectFactors","getNumberSymbolics","fo","firstObject","symfunction","PARENTHESIS","obj","preAdd","pFactor","is_constant","factored","values","fname","unwrapPARENS","merge","isLinear","clean","lessThan","getVars","vars","getRevMap","rev_map","mapped","generateImage","getImg","mvterm","new_mvterm","toMapObj","filledArray","clss","arrSum","haveIntersection","some","subFunctions","subbed","previousGroup","tvar","inBrackets","getFunctionsSubs","subs","__","Algebra","proots","decp","known_roots","get_roots","rarr","powers","calcroots","lowest_pow","arrayMin","lowest_symbol","toUnitMultiplier","minpower","arrayMax","last_power","ValueLimitExceededError","zeroi","degreePar","Degree","zeror","QuadSD_ak1","NN","iPar","calcSC_ak1","DBL_EPSILON","K","qk","sdPar","dumFlag","a3","a1","a7","nextK_ak1","tFlag","qp","temp","newest_ak1","a4","a5","b1","b2","c3","c4","Quad_ak1","sr","si","lr","li","QuadIT_ak1","uu","vv","calcPar","ee","omp","relstp","ui","vi","zm","qPar","triedFlag","NZ","szr","szi","lzr","lzi","RealIT_ak1","kv","ms","pv","nm1","Fxshfr_ak1","MDP1","L2","betas","betav","oss","ots","otv","ovv","ts","tss","tv","tvv","fflag","spass","stry","vpass","vtry","svk","iFlag","degPar","bnd","df","ff","moduli_max","moduli_min","sc","xm","xxx","jj","NM1","zerok","RADFAC","LB2","LN2","pt","Fxshfr_Par","LO","MIN_VALUE","cosr","sinr","xx","yy","rpSolve","img","nroots","Vector","froot","xn","build","Calculus","Function","safety","newtonraph","sumProd","invert","wrt","contains","polyPowers","for_variable","arrayUnique","Factor","mix","include_negatives","ll","common","zeroes","exit","tp","allSame","n_terms","n_zeroes","div","_symbol","retval","_factor","_factored","quadFactor","cf","root","root1","root2","cubeFactor","sign_a","sign_b","isCube","m_root_a","getNth","m_root_b","isSimple","greaterThan","untouched","den_array","num_array","den","dfact","nfact","Simplify","strip","getDenom","getNum","unstrip","toLinear","IMAGINARY","multiVar","all_S","all_unit","coeff_factors","coeffFactor","power_factors","powerFactor","mfactor","t_factors","trialAndError","tf_symbol","t_factor","addPower","reduce","nn","sqfr","allNumeric","LT","updateHash","factor_array","cnst","cfactors","ifactor","forEach","candidate","ltfactors","isubbed","nfactors","cp","lc_is_neg","cnst_is_neg","factor_found","mSqfrFactor","can_divide","sqdiff","remove_square","block","separated","separate","obj_array","constants","powSimp","factors2","unwrapSQRT","sorted","maxes","new_factor","divided","has_fractions","neg_numeric_factor","rem","allLinear","set","status","sg","arguments","elements","arguments2Array","appeared","every","aggregate","gcd_","gcd_m","gcd_v","gcd_p","vars_a","vars_b","T","multipliers","numer","curr","denom_args","size","total","isVariableSymbol","symbol1","symbol2","fail","symbol1_has_func","hasFunc","symbol2_has_func","parse_funcs","quot","reconvert","get_unique_max","any","idx","t_map","init_sort","is_larger","get_det","lookat","umax","is_equal","max1","max2","idx1","idx2","item1","item2","d1","d2","cterm","lead_var","sf","blv","alv","checked","tt","try_better_lead_var","fdt","fnt","nd","dividend_larger","InfiniteLoopError","cur","remove","line","convertToVector","isVector","PartFrac","createTemplate","denom_factors","f_array","factors_vec","degrees","efactor","partfrac","as_array","ofactors","dterms","ks","template","tfactors","Matrix","fillHoles","partials","denominators","e2","sd","depth","distributeExponent","sqComplete","raw","br","sqrt_a","msg","complexSimp","bc","ad","cd","realpart","imagpart","trigSimp","containsFunction","sym_array","tr","fnTransform","fracSimp","ratSimp","sqrtSimp","isSQRT","trial","simp","patternSub","patterns","has_CP","found","collect","getU","simplified","Classes","Expression","useAlgebraDiv","divideFn","calls","useParserDiv","register","visible","numargs","updateAPI","SEC","CSC","COT","ASIN","ACOS","ATAN","ASEC","ACSC","ACOT","CSCH","SECH","COTH","ASECH","ACSCH","ACOTH","NoIntegralFound","hasIntegral","double_angle","transformed","hasTrig","in_trig","in_inverse_trig","toCommonDenominator","in_htrig","jacobian","eqns","arrayGetVariables","cMatrix","all_functions","cosAsinBtransform","cosAsinBtranform","cosAsinAtransform","cosAsinAtranform","sinAsinBtransform","trigTransform","integration_depth","max_lim_depth","isNumericSymbol","modifier","nth","vector","isMatrix","matrix","sp","derive","polydiff","product_rule","qdiff","x_","y_","LOG10","altVal","integration","u_substitution","try_combo","do_fn_sub","g1","g2","poly_integrate","dc","decompose_arg","xp","dc2","new_val","by_parts","integrated","partial_fraction","opt","partial_fractions","get_udv","parts","setSymbol","dv","trig_sub","du","clearU","udv","vdu","uv","integral_vdu","vdu_s","previous","stripVar","isE","is_cyclic","original_symbol","dt","ax","b_is_positive","unwrapAbs","D","F","L1","sqrt_ax","sqa","sqb","aob","bsqi","was_factored","fx","sq","u_du","ag","decomposed","a_","b_","rd","rd2","na","parse_str","cfsymbol","unwrapped","sym1","sym2","fn1","fn2","new_sym","p1_even","p2_even","trans","bx","sym1_is_linear","pd","pc","f_is_linear","dummy","bksub","u_transform","expanded","scope","U2","cosn","X","sym2_clone","sa","sb","nq","syma","symb","first","intg","DivisionByZero","defint","to","get_value","point","Limit","limit","num_integrate","upper","lower","interval","diverges","lim","gin","lim_sign","isInfinity","fm","gm","L","lim1","lim2","indeterminate","ft","t_symbol","den_is_zero","infinity","rewriteToLog","getSubbed","isInterval","isConvergent","_num","_den","isOne","symbol_","lim_base","lim_pow","evaluates","s_arg","pi","divergent","_lim","_symbols","fns","Fresnel","bigDec","callPeekers","init_primes","exclude","suppress_errors","PARSE2NUMBER","SAFE","FUNCTION_MODULES","ALLOW_CHARS","USE_MULTICHARACTER_VARS","POWER_OPERATOR","VALIDATION_REGEX","IMPLIED_MULTIPLICATION_REGEX","ALIASES","POSITIVE_MULTIPLIERS","CACHE","SILENCE_WARNINGS","PRECISION","EXPRESSION_DECP","DEFAULT_DECP","VECTOR","DOUBLEFACTORIAL","LONG_PI","LONG_E","LOG10_LATEX","MAX_EXP","SCIENTIFIC_MAX_DECIMAL_PLACES","SCIENTIFIC_IGNORE_ZERO_EXPONENTS","R","ne","ae","G","V","H","Y","W","J","SHOW_WARNINGS","te","Fe","pe","re","Ve","ie","He","se","je","oe","ue","le","ce","fe","functions","mapped_function","params","he","me","ge","de","we","ye","be","Se","Me","Ne","isPi","Ee","qe","xe","Ae","Ce","I","Le","Ie","Ue","Oe","O","Re","Te","ParseError","OutOfFunctionDomainError","UndefinedError","MaximumIterationsReached","ParityError","OperatorError","OutOfRangeError","DimensionError","NerdamerValueError","SolveError","UnexpectedTokenError","csc","sec","cot","acsc","asec","acot","erf","median","fromContinued","fractions","whole","continuedFraction","EPSILON","bigpow","De","isInteger","nthroot","bigfactorial","bigLog","quick","NaN","dfactorial","sfactor","boxfactor","fib","integer_part","simpson","maxDepthCount","nanEncountered","Ci","Si","Ei","Shi","Chi","Li","gamma_incomplete","sinc","tri","gte","Pe","E_TO_EXP","charAt","parens","ke","startsWith","substr","isScientific","fromScientific","convert","simple","Be","quickConversion","names","actions","type","column","precedence","MAX_PRECEDENCE","leftAssoc","getItems","pretty_print","is_prefix","VARIABLE_OR_LITERAL","KEYWORD","classes","Collection","Slice","Token","prec","removeDen","sech","csch","coth","acosh","asinh","atanh","asech","acsch","acoth","hyp","USE_BIG","atan2","trig","dividedBy","trigh","operator","action","prefix","postfix","units","operation","overloaded","overloadAction","overloadLeftAssoc","vectorFn","id","is_open","is_close","maps_to","log10","radians","SYMBOLIC_MIN_MAX","trunc","fact","continued_fraction","scientific","pfactor","Set","imatrix","identity","cbrt","expand_denominator","expand_functions","cols","rows","dot","cross","vecget","vecset","vectrim","ve","matget","matset","matgetrow","matsetrow","matgetcol","matsetcol","IF","is_in","polarform","toPolarFormArray","rectform","union","intersection","intersects","is_subset","print","right","setPower","numVal","toExponential","isFinite","override","extend","callfunction","operator_filter_regex","setOperator","postif","getOperator","aliasOperator","getOperators","getBrackets","initConstants","CONSTANTS","peekers","pre_operator","post_operator","pre_function","post_function","tokenize","toRPN","parseRPN","fromSet","parent","getter","toHTML","repeat","match","toObject","isConversion","toTeX","decimals","cdot","Ge","braces","brackets","latex","frac","getFunction","addPreprocessor","PreprocessorError","getPreprocessors","removePreprocessor","unit","Unit","attach","insert","shell","eachElement","dimensions","combine","multiplyPower","IGNORE_E","comma","percent","assign","function_assign","lte","LOG10E","getExpression","text_","buildFunction","Xe","isNumber","isFraction","isPolynomial","hasFunction","removeLeadingZeroes","removeTrailingZeroes","leadingZeroes","dec","wholes","copy","isFrac","qcompare","isToNth","isSquare","isMonomial","isInverse","isImgSymbol","keyForGroup","isCombination","fullConversion","parser","space","formatFrac","greek","alpha","beta","delta","epsilon","zeta","eta","iota","kappa","mu","nu","xi","omnikron","rho","sigma","tau","upsilon","phi","chi","psi","omega","Gamma","Delta","Epsilon","Theta","Lambda","Xi","Pi","Sigma","Phi","Psi","Omega","ker","limsup","lg","ln","Pr","sup","hom","LN","inf","liminf","formatSubscripts","formatP","brace","angle","filterTokens","infty","items","arrayPrefill","custom","modulus","eql","toUnitVector","angleFrom","isParallelTo","isAntiparallelTo","isPerpendicularTo","magnitude","zeroMatrix","get","toRightTriangular","isSingular","augment","canMultiplyFromLeft","sameSize","toVector","dependencies","_rename","nround","reformat","getProperName","compileDependencies","getArgsDeps","$e","setFunction","LOG_FNS","arrayAddSlices","arrayEqual","arraySum","comboSort","customError","customType","evenFraction","generatePrimes","getCoeffs","isExpression","isReserved","knownVariable","reserveNames","sameSign","scientificToDecimal","stringReplace","validateName","Ze","Parser","Scientific","Fraction","LaTeX","rpn","convertToLaTeX","convertFromLaTeX","getWarnings","setConstant","getConstant","getEquation","reserved","clear","flush","expressions","validVarName","supported","numEquations","numExpressions","setVar","getVar","clearVars","load","replaceFunction","htmlTree","addPeeker","removePeeker","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","absoluteValue","comparedTo","cmp","cubeRoot","decimalPlaces","dp","dividedToIntegerBy","divToInt","greaterThanOrEqualTo","hyperbolicCosine","hyperbolicSine","hyperbolicTangent","inverseCosine","isNeg","inverseHyperbolicCosine","inverseHyperbolicSine","inverseHyperbolicTangent","inverseSine","inverseTangent","isPos","lessThanOrEqualTo","naturalExponential","naturalLogarithm","negated","squareRoot","mul","toBinary","toDecimalPlaces","toDP","toFraction","toHexadecimal","toHex","toNearest","toNumber","toOctal","toPower","LN10","toPrecision","toSignificantDigits","toSD","truncated","defaults","getRandomValues","randomBytes","Uint32Array","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","isDecimal","hypot","log2","default","Decimal","ct","ht","mt","vt","wt","yt","bt","St","Mt","Nt","Et","qt","xt","At","Ct","Lt","It","Ut","_t","Ot","Rt","Tt","Pt","kt","Dt","Ft","Bt","Gt","Vt","ot","at","ut","We","Je","nt","ze","Qe","Ye","Ke","et","st","rt","it","LHS","RHS","SOLVE_RADIUS","ROOTS_PER_SIDE","make_pi_conversions","STEP_SIZE","MAX_NEWTON_ITERATIONS","MAX_NON_LINEAR_TRIES","NON_LINEAR_JUMP_AT","NON_LINEAR_JUMP_SIZE","NON_LINEAR_START","NEWTON_SLICES","NEWTON_EPSILON","SOLUTION_PROXIMITY","FILTER_SOLUTIONS","MAX_SOLVE_DEPTH","ZERO_EPSILON","MAX_BISECTION_ITER","BI_SECTION_EPSILON","hasNegativeTerms","toLHS","removeDenom","solveFor","Equation","checkAll","Solve","solutions","solve","solveCircle","SOLUTIONS_AS_OBJECT","solveNonLinearSystem","systemSolutions","solveSystemBySubstitution","solveSystem","cubic","quartic","divideAndConquer","csolve","getPoints","bisection","Newton","rewrite","sqrtSolve","PRE_ADD_SOLUTION","inverseFunctionSolve","Laplace_integration_depth","findFunction","Extra","LaPlace","Statistics","frequencyMap","mean","mode","gVariance","variance","sampleVariance","standardDeviation","sampleStandardDeviation","zScore","Units","table","foot","meter","decimeter","imports","Groups","PRIMES","CUSTOM_OPERATORS","nthpow","EXPRESSIONS","VARS","RESERVED","WARNINGS","ErrorObj","last","typ","nsign","coeff_array","prevgroup","isSet","new_str","both","params_array","as_obj","item","removeDuplicates","condition","conditionType","seen","indexOrKey","setting","current_setting","upto","allNumbers","allConstants","contd","absn","ni","is_int","ifactors","xf","cz","sm","side","tol","maxdepth","adsimp","fa","fb","V0","state","sl","V1","V2","dk","dk0","d0","xk","powb","dk_dec","ld","same_delta","option","useGroup","asHash","wrapCondition","asDecimal","negative","passed","om","txt","pg","pwg","cv","primeFactors","bin","preprocessors","node","node_type","operators","collection","complex","im","squared","getQuadrant","symMinMax","sigfigs","mat","vec1","vec2","tolerance","col_index","original","getval","aval","bval","set1","set2","which","with_what","what","force_call","fn_name","allowed_args","fn_settings","num_allowed_args","is_array","min_args","max_args","num_args","error_msg","numericArgs","fmodules","fmodule","bigConvert","ostr","Node","regex","lpos","tokens","scopes","open_brackets","has_space","addScope","scope_type","new_scope","goUp","get_operator_str","start_at","chunkify","operator_str","_operators","ch","add_token","add_function","set_last_position","position","last_token_is_numeric","bracket","pair","nxt","is_operator","prefixes","collapse","destination","next_is_operator","last_on_stack","substitutions","is_comma","fn_args","il","element","indent","html","location","group1","group2","before","prepare_expression","expression_string","objectify","chunkAtCommas","chunks","rem_brackets","retnum","retden","is_negative","qa","tw","asbig","log_sym","log_base","img_part","sIsConstant","rank","testSQRT","expression_or_obj","TeX","narr","next_is_array","next_is_minus","before_last","remove_redundant_powers","nobj","argSplit","new_num","new_den","shift_cells","aIsSymbol","bIsSymbol","aneg","bneg","ap","bp","powEQ","aIsComposite","bIsComposite","PN","PNEQ","valEQ","canIterate","bothPL","bIsMatrix","bnum","bden","a_pow","a_multiplier","ONN","bm","isSymbolP1","isSymbolP2","toEX","logV","ndiv","ddiv","ps","isMatrixB","isMatrixA","isVectorA","isVectorB","raised","aIsZero","bIsZero","nre","nim","bIsConstant","aIsConstant","bIsInt","_a","_b","log_a","neg_num","nr","tn","evenr","evenp","evennp","_result","fct","testPow","isEX","bool2Symbol","expression_number","asType","expression","first_arg","Build","for_symbol","otype","callback","dot_location","rounded","next_two","ed","is_neg","m_dc","all","nthPower","nthMultiplier","mfactors","out_","in_","multivariate","exclude_x","fn_group","same_pow","a_is_unit_multiplier","find","nargs","check_all","check_symbols","retainSign","isSymbolic","properties","keepSign","deep","power_only","is_one","existing","hash","contents","is_parens","sort_fn","expand_symbol","collected","opts","qc","nparts","stripSign","cparts","keep","LaTeXArray","rowTeX","m_array","v_array","p_array","inverted","t_varray","den_map","num_map","num_c","den_c","setBrackets","container","laTex","combine_power","isBracketed","mn","md","vn","vd","bottom","glue","is_pow","filtered","next_token","raw_tokens","parse_next","lw","rl","mod1","mod2","theta_val","tex","raw_values","nc","np","els","new_element","ki","kp","inverse_elements","nel","nj","MM","kj","newline","to_decimal","row_tex","_union","_intersection","deps","dep_string","replacements","components","arg_array","supplements","ftext","xports","ftext_complex","ftext_function","bn","alias","slices","arr1","indx","combined","nb","info","_roots","with_str","libExports","fndec","add_on","asArray","equation_number","keep_EXPRESSIONS_fixed","asObject","asLaTeX","parent_obj","varname","loader","linker","new_num_args","withOperator","LOG_MAX_INT","charCode","en","rn","sn","on","un","cn","hn","dn","pn","gn","wn","Nn","En","Mn","qn","On","Dn","Fn","An","Sn","Zn","Pn","Rn","Ln","Tn","Un","_createForOfIteratorHelper","allowArrayLike","normalCompletion","didErr","_e2","_typeof","_possibleConstructorReturn","assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","Super","getPrototypeOf","NewTarget","Reflect","construct","_getPrototypeOf","setPrototypeOf","__proto__","_inherits","subClass","superClass","_isNativeReflectConstruct","sham","Proxy","Boolean","_construct","Parent","Class","_wrapNativeSuper","_cache","Map","has","Wrapper"],"sourceRoot":""}