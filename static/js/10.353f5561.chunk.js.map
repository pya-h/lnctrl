{"version":3,"file":"static/js/10.353f5561.chunk.js","mappings":"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","sources":["views/input-boxes/SimpleParametersList.jsx","views/plotter/GraphMenu.jsx","views/plotter/PlotlyBox.jsx","views/topics/chapter07/pid/parameters.jsx","views/topics/chapter07/pid/index.jsx","views/ui-component/cards/MainCard.jsx","views/ui-component/progressbar/ProgressBar.jsx","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/FilterCenterFocus.js","../node_modules/@mui/icons-material/Fullscreen.js","../node_modules/@mui/icons-material/PhotoCamera.js","../node_modules/@mui/icons-material/ThreeDRotation.js","../node_modules/@mui/icons-material/ThreeSixty.js"],"sourcesContent":["import { Grid, InputAdornment, TextField } from \"@mui/material\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst SimpleParametersList = ({ parameters, setters, labels, units }) => {\r\n    return (\r\n        <Fragment>\r\n            {parameters instanceof Array &&\r\n                parameters.map((param, i) => (\r\n                    <Grid md={12} sm={4} xs={6} item>\r\n                        <TextField\r\n                            onChange={(e) => setters[i](e.target.value)}\r\n                            value={param}\r\n                            sx={{ width: \"100%\" }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"left\">\r\n                                        <MathJax>{labels[i]}</MathJax>\r\n                                    </InputAdornment>\r\n                                ),\r\n                                endAdornment: units[i] && (\r\n                                    <InputAdornment position=\"right\">\r\n                                        <MathJax>{units[i]}</MathJax>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SimpleParametersList;\r\n","import PhotoCamera from \"@mui/icons-material/PhotoCamera\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport FullScreen from \"@mui/icons-material/Fullscreen\";\r\nimport FilterCenterFocusIcon from \"@mui/icons-material/FilterCenterFocus\";\r\nimport { Grid, IconButton, Slider, Stack } from \"@mui/material\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ThreeDRotationIcon from \"@mui/icons-material/ThreeDRotation\";\r\nimport ThreeSixtyIcon from \"@mui/icons-material/ThreeSixty\";\r\n\r\nconst GraphMenu = ({\r\n    capture,\r\n    reset,\r\n    update,\r\n    toggle3DPlot,\r\n}) => {\r\n    const [is3DModeEnabled, set3DModeEnaabled] = useState(false);\r\n    const [thicknessSliderPercentage, setThicknessSliderPercentage] =\r\n        useState(20);\r\n\r\n    const toggle3DMode = () => {\r\n        set3DModeEnaabled(!is3DModeEnabled);\r\n        toggle3DPlot();\r\n    };\r\n\r\n    useEffect(() => {\r\n        update({ thickness: thicknessSliderPercentage / 20.0 + 0.1 });\r\n    }, [thicknessSliderPercentage, update]);\r\n\r\n    return (\r\n        <Grid sx={{ direction: \"rtl\" }} container direction=\"row\">\r\n            <Grid md={10} sm={8} xs={6} sx={{ direction: \"rtl\" }} item>\r\n                {toggle3DPlot && (\r\n                    <IconButton\r\n                        color=\"secondary\"\r\n                        aria-label=\"capture graph\"\r\n                        component=\"span\"\r\n                        onClick={toggle3DMode}\r\n                    >\r\n                        {is3DModeEnabled ? (\r\n                            <ThreeSixtyIcon />\r\n                        ) : (\r\n                            <ThreeDRotationIcon />\r\n                        )}\r\n                    </IconButton>\r\n                )}\r\n                {capture && <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"capture graph\"\r\n                    component=\"span\"\r\n                    onClick={capture}\r\n                >\r\n                    <PhotoCamera />\r\n                </IconButton>}\r\n\r\n                {reset && <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"capture graph\"\r\n                    component=\"span\"\r\n                    onClick={reset}\r\n                >\r\n                    <DeleteIcon />\r\n                </IconButton>}\r\n            </Grid>\r\n            <Grid md={2} sm={4} xs={6} item>\r\n                <Stack\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    sx={{ mt: 0.5, direction: \"ltr\" }}\r\n                    alignItems=\"center\"\r\n                >\r\n                    <FullScreen />\r\n                    <Slider\r\n                        aria-label=\"Volume\"\r\n                        value={thicknessSliderPercentage}\r\n                        onChange={(e, value) =>\r\n                            setThicknessSliderPercentage(value)\r\n                        }\r\n                    />\r\n                    <FilterCenterFocusIcon />\r\n                </Stack>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default GraphMenu;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { MapInteractionCSS } from \"react-map-interaction\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PlotlyBox = ({\r\n    traces,\r\n    title,\r\n    width,\r\n    height = 500,\r\n    logX,\r\n    hideX,\r\n    hideY,\r\n    yRange,\r\n    hideLegends,\r\n}) => {\r\n    /*const temp_layout = {\r\n        xaxis: {\r\n            zeroline: true,\r\n            rangemode: \"tozero\",\r\n            autotick: false,\r\n            ticks: \"outside\",\r\n            tick0: 0,\r\n            dtick: 0.25,\r\n            ticklen: 8,\r\n            tickwidth: 4,\r\n            tickcolor: \"#000\",\r\n        },\r\n        yaxis: {\r\n            zeroline: true,\r\n            rangemode: \"tozero\",\r\n            autotick: false,\r\n            ticks: \"outside\",\r\n            tick0: 0,\r\n            dtick: 0.25,\r\n            ticklen: 8,\r\n            tickwidth: 4,\r\n            tickcolor: \"#000\",\r\n        },\r\n    };*/\r\n    const customization = useSelector((state) => state.customization);\r\n    const plot = (\r\n        <Plot\r\n            style={{ textAlign: \"center\" }}\r\n            //id=\"PlotlyBox\"\r\n            data={traces}\r\n            layout={{\r\n                // width: 1000,\r\n                // autosize: true,\r\n                showlegend: !hideLegends,\r\n                margin: {\r\n                    t: 30, //top margin\r\n                    l: 30, //left margin\r\n                    r: 20, //right margin\r\n                    b: 30, //bottom margin\r\n                },\r\n                xaxis: {\r\n                    rangemode: \"tozero\",\r\n                    zeroline: true,\r\n                    type: !logX ? \"dec\" : \"log\",\r\n                    visible: !hideX,\r\n                },\r\n                yaxis: {\r\n                    rangemode: \"tozero\",\r\n                    zeroline: true,\r\n                    visible: !hideY,\r\n                    range: yRange,\r\n                },\r\n\r\n                height,\r\n                title,\r\n                // hoverlabel: { bgcolor: \"#FFF\" },\r\n                hoverlabel: {\r\n                    align: \"auto\",\r\n                    boxmode: \"overlay\",\r\n                    font: { color: \"#000000FF\" },\r\n                },\r\n                legend: { orientation: \"h\" }, //, y: -0.3},\r\n            }}\r\n        />\r\n    );\r\n    return customization.enableZoom ? (\r\n        <MapInteractionCSS disablePan={true}>{plot}</MapInteractionCSS>\r\n    ) : (\r\n        plot\r\n    );\r\n};\r\n\r\nexport default PlotlyBox;\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport SimpleParametersList from \"views/input-boxes/SimpleParametersList\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport ProgressBar from \"views/ui-component/progressbar/ProgressBar\";\r\n\r\nconst parameterFormulas = [\r\n    \"$$Num = [$$\",\r\n    \"$$Den = [$$\",\r\n    \"$$K_p = $$\",\r\n    \"$$T_i = $$\",\r\n    \"$$T_d = $$\",\r\n    \"$$t_{initial} = $$\",\r\n    \"$$t_{final} = $$\",\r\n    \"$$N = $$\",\r\n];\r\nconst parameterUnits = [\r\n    \"$$]$$\",\r\n    \"$$]$$\",\r\n    null,\r\n    null,\r\n    null,\r\n    \"$$sec$$\",\r\n    \"$$sec$$\",\r\n    null,\r\n];\r\n\r\nconst PIDParameters = ({\r\n    rawNumerator,\r\n    rawDenominator,\r\n    $rawNumerator,\r\n    $rawDenominator,\r\n    t_initial,\r\n    t_final,\r\n    $t_initial,\r\n    $t_final,\r\n    K_p,\r\n    $K_p,\r\n    T_i,\r\n    $T_i,\r\n    T_d,\r\n    $T_d,\r\n    N,\r\n    $N,\r\n    responseTime,\r\n}) => {\r\n    return (\r\n        <SubCard\r\n            darkBorder\r\n            title=\"پارامترها\"\r\n            sx={{\r\n                direction: \"ltr\",\r\n                textAlign: \"right\",\r\n                height: \"100%\",\r\n            }}\r\n        >\r\n            <Grid spacing={gridSpacing} container direction=\"row\">\r\n                <SimpleParametersList\r\n                    parameters={[\r\n                        rawNumerator,\r\n                        rawDenominator,\r\n                        K_p,\r\n                        T_i,\r\n                        T_d,\r\n                        t_initial,\r\n                        t_final,\r\n                        N,\r\n                    ]}\r\n                    setters={[\r\n                        $rawNumerator,\r\n                        $rawDenominator,\r\n                        $K_p,\r\n                        $T_i,\r\n                        $T_d,\r\n                        $t_initial,\r\n                        $t_final,\r\n                        $N,\r\n                    ]}\r\n                    labels={parameterFormulas}\r\n                    units={parameterUnits}\r\n                />\r\n                <Grid xs={12} sx={{ mt: 2 }} item>\r\n                    <ProgressBar id=\"pid_tune_progress\" />\r\n                </Grid>\r\n                {responseTime && (\r\n                    <Grid xs={12} sx={{ mt: 2 }} item>\r\n                        <Typography\r\n                            style={{ textAlign: \"center\", color: \"coral\" }}\r\n                        >\r\n                            مدت زمان عملیات: {responseTime} ثانیه\r\n                        </Typography>\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default PIDParameters;\r\n","// project imports\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport calculus from \"../../../../math/calculus\";\r\nimport { useState, useEffect } from \"react\";\r\nimport GraphMenu from \"views/plotter/GraphMenu\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport PlotlyBox from \"views/plotter/PlotlyBox\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport PIDParameters from \"./parameters\";\r\nimport TransferFunction from \"math/algebra/functions/fraction\";\r\nimport MainCard from \"views/ui-component/cards/MainCard\";\r\nimport { gridSpacing } from \"store/constant\";\r\n\r\nconst symbols = {\r\n    in: \"jw\",\r\n    out: \"G\",\r\n};\r\nlet currentRawNum = \"\",\r\n    currentRawDen = \"\";\r\n// ********************* SYSTEMS THAT HAVE BUG ****************************//\r\n// DEN = [1 1 2 2]\r\nconst PIDController = () => {\r\n    const [rawNumerator, $rawNumerator] = useState(\"1\");\r\n    const [rawDenominator, $rawDenominator] = useState(\"1 1\");\r\n    const [G_s, $G_s] = useState(null);\r\n    const [K_p, $K_p] = useState(1);\r\n    const [T_i, $T_i] = useState(0);\r\n    const [T_d, $T_d] = useState(0);\r\n    const [controller, setController] = useState(null);\r\n    const [t_initial, $t_initial] = useState(0);\r\n    const [t_final, $t_final] = useState(10);\r\n    // gradiant of u(t) is 0 and unit ramp is one\r\n    const [traces, $traces] = useState({\r\n        main: [],\r\n        controlled: [],\r\n    });\r\n    const [solution, $solution] = useState([]);\r\n    const [thickness, $thickness] = useState(1.0); // graph line thickness\r\n    const [is3DPlotEnabled, $3DPlotEnabled] = useState(false);\r\n    const [N, $N] = useState(1000);\r\n    const [responseTime, setResponseTime] = useState(0);\r\n    const toggle3DPlot = () => $3DPlotEnabled(!is3DPlotEnabled);\r\n    // const [currentProgressSignal, currentProgressSignal] = useState(new AbortController());\r\n    // EDIT J * J\r\n    useEffect(() => {\r\n        // plot\r\n        if (G_s instanceof TransferFunction) {\r\n            (async () => {\r\n                try {\r\n                    const lp = G_s.stepify().laplaceInverse();\r\n                    const controlledSystem = G_s.controlFeedback(controller);\r\n                    const clp = controlledSystem.stepify().laplaceInverse();\r\n                    $solution([\r\n                        \"$$\" + G_s.label(symbols.out) + \"$$\",\r\n                        \"$$\" + lp.$s.label(\"H\") + \"$$\",\r\n                        `$$h(t) = ${lp.$t.toString()}$$`,\r\n                        <hr />,\r\n                        `$$C_{PID}(s) = ${controller.toString()}$$`,\r\n                        `$$C(s) = ${clp.$s.toString()}$$`,\r\n                        `$$c(t) = ${clp.$t.toString()}$$`,\r\n                    ]);\r\n                    // parameters changed => load again all traces(traces); this is for when shared params changes(ti, tf, ...),\r\n                    // so that the traces will be loaded with new conditions\r\n                    const startTime = new Date();\r\n\r\n                    // const c_t = G_s.step();\r\n                    let [x, y] = await calculus.pointifyAsync(\r\n                        // c_t.$,\r\n                        lp.$t.$,\r\n                        +t_initial,\r\n                        +t_final,\r\n                        document.getElementById(\"pid_tune_progress\"),\r\n                        500,\r\n                        +N\r\n                    );\r\n                    const main = calculus.arrayToTrace(\r\n                        x,\r\n                        y,\r\n                        thickness,\r\n                        `${symbols.out}(${symbols.in})`,\r\n                        is3DPlotEnabled\r\n                    );\r\n                    // const c_pid = controlledSystem.step();\r\n                    [x, y] = await calculus.pointifyAsync(\r\n                        // c_pid.$,\r\n                        clp.$t.$,\r\n                        +t_initial,\r\n                        +t_final,\r\n                        document.getElementById(\"pid_tune_progress\"),\r\n                        500,\r\n                        +N\r\n                    );\r\n                    const controlled = calculus.arrayToTrace(\r\n                        x,\r\n                        y,\r\n                        thickness,\r\n                        `${symbols.out}(${symbols.in})`,\r\n                        is3DPlotEnabled\r\n                    );\r\n\r\n                    $traces({ main: [main], controlled: [controlled] });\r\n                    const endTime = new Date();\r\n                    setResponseTime((+endTime - +startTime) / 1000);\r\n                } catch (err) {\r\n                    console.log(err);\r\n                }\r\n            })();\r\n        }\r\n    }, [G_s, t_initial, t_final, controller, is3DPlotEnabled, thickness, N]);\r\n\r\n    useEffect(() => {\r\n        setController(TransferFunction.Shortcuts.$PID(K_p, T_i, T_d));\r\n    }, [K_p, T_i, T_d]);\r\n    useEffect(() => {\r\n        try {\r\n            if (\r\n                rawNumerator.trim() !== currentRawNum ||\r\n                rawDenominator.trim() !== currentRawDen\r\n            ) {\r\n                const num = calculus.stringToArray(rawNumerator),\r\n                    den = calculus.stringToArray(rawDenominator);\r\n                const g_s = new TransferFunction(num, den);\r\n                currentRawNum = rawNumerator;\r\n                currentRawDen = rawDenominator;\r\n                $G_s(g_s);\r\n                // HOW TO CANCEL PREVIOUS ASYNC\r\n                new AbortController().abort();\r\n            }\r\n        } catch (ex) {\r\n            console.log(ex);\r\n        }\r\n    }, [rawNumerator, rawDenominator]);\r\n\r\n    const update = (changes) => {\r\n        if (changes) $thickness(changes.thickness);\r\n        //and so...\r\n    };\r\n    return (\r\n        <MainCard>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Typography>\r\n                    <h2 className=\"chapter-section-title\">کنترل کننده PID</h2>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Grid container direction=\"column\" spacing={1}>\r\n                    <Grid sx={{ margin: \"auto\", width: \"100%\" }} item>\r\n                        <SubCard sx={{ direction: \"ltr\" }}>\r\n                            <Grid\r\n                                id=\"formulaBox\"\r\n                                sx={{ margin: \"auto\" }}\r\n                                container\r\n                                direction=\"row\"\r\n                            >\r\n                                {solution.map((sol) => (\r\n                                    <Grid\r\n                                        style={{\r\n                                            fontSize: \"18px\",\r\n                                            textAlign: \"center\",\r\n                                        }}\r\n                                        xs={12}\r\n                                    >\r\n                                        <MathJax>{sol}</MathJax>\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                        </SubCard>\r\n                    </Grid>\r\n                    <Grid\r\n                        spacing={2}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        container\r\n                    >\r\n                        <Grid\r\n                            md={3}\r\n                            sm={12}\r\n                            xs={12}\r\n                            sx={{ marginTop: \"1%\", width: \"100%\" }}\r\n                            container\r\n                        >\r\n                            <Grid xs={12}>\r\n                                <PIDParameters\r\n                                    rawNumerator={rawNumerator}\r\n                                    rawDenominator={rawDenominator}\r\n                                    $rawNumerator={$rawNumerator}\r\n                                    $rawDenominator={$rawDenominator}\r\n                                    t_initial={t_initial}\r\n                                    t_final={t_final}\r\n                                    $t_initial={$t_initial}\r\n                                    $t_final={$t_final}\r\n                                    K_p={K_p}\r\n                                    $K_p={$K_p}\r\n                                    T_i={T_i}\r\n                                    $T_i={$T_i}\r\n                                    T_d={T_d}\r\n                                    $T_d={$T_d}\r\n                                    N={N}\r\n                                    $N={$N}\r\n                                    responseTime={responseTime}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid md={9} sm={12} xs={12} item>\r\n                            <SubCard>\r\n                                <GraphMenu\r\n                                    reset={() => {\r\n                                        $rawDenominator(\"1 1\");\r\n                                        $rawNumerator(\"1\");\r\n                                    }}\r\n                                    update={(changes) => update(changes)}\r\n                                    toggle3DPlot={toggle3DPlot}\r\n                                />\r\n                            </SubCard>\r\n                            <hr />\r\n                            <Grid xs={12} item>\r\n                                <SubCard>\r\n                                    <Grid xs={12} item>\r\n                                        <PlotlyBox\r\n                                            title=\"پاسخ پله ی سیستم اولیه\"\r\n                                            traces={traces.main}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid lg={9} md={9} sm={12} xs={12} item>\r\n                                        <PlotlyBox\r\n                                            title=\"پاسخ پله ی سیستم کنترل شده\"\r\n                                            traces={traces.controlled}\r\n                                        />\r\n                                    </Grid>\r\n                                </SubCard>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default PIDController;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// constant\r\nconst headerSX = {\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n// ==============================|| CUSTOM MAIN CARD ||============================== //\r\n\r\nconst MainCard = forwardRef(\r\n    (\r\n        {\r\n            border = true,\r\n            boxShadow,\r\n            children,\r\n            content = true,\r\n            contentClass = '',\r\n            contentSX = {},\r\n            darkTitle,\r\n            secondary,\r\n            shadow,\r\n            sx = {},\r\n            title,\r\n            ...others\r\n        },\r\n        ref\r\n    ) => {\r\n        const theme = useTheme();\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                {...others}\r\n                sx={{\r\n                    overflowY: 'auto',\r\n                    border: border ? '1px solid' : 'none',\r\n                    borderColor: theme.palette.primary[200] + 75,\r\n                    ':hover': {\r\n                        boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\r\n                    },\r\n                    ...sx\r\n                }}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\r\n                {darkTitle && title && (\r\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\r\n                )}\r\n\r\n                {/* content & header divider */}\r\n                {title && <Divider />}\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={contentSX} className={contentClass}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nMainCard.propTypes = {\r\n    border: PropTypes.bool,\r\n    boxShadow: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    contentSX: PropTypes.object,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    shadow: PropTypes.string,\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nexport default MainCard;\r\n","const ProgressBar = ({\r\n    id,\r\n    color = \"white\",\r\n    background = \"lightgreen\",\r\n    borderRadius = \"10px\",\r\n}) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"0%\",\r\n                textAlign: \"right\",\r\n                background,\r\n                color,\r\n                borderRadius,\r\n                padding: \"1%\",\r\n            }}\r\n            id={id}\r\n        ></div>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 15H3v4c0 1.1.9 2 2 2h4v-2H5v-4zM5 5h4V3H5c-1.1 0-2 .9-2 2v4h2V5zm14-2h-4v2h4v4h2V5c0-1.1-.9-2-2-2zm0 16h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4zM12 9c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'FilterCenterFocus');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"\n}), 'Fullscreen');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"3.2\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 2 7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n}, \"1\")], 'PhotoCamera');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.52 21.48C4.25 19.94 1.91 16.76 1.55 13H.05C.56 19.16 5.71 24 12 24l.66-.03-3.81-3.81-1.33 1.32zm.89-6.52c-.19 0-.37-.03-.52-.08-.16-.06-.29-.13-.4-.24-.11-.1-.2-.22-.26-.37-.06-.14-.09-.3-.09-.47h-1.3c0 .36.07.68.21.95.14.27.33.5.56.69.24.18.51.32.82.41.3.1.62.15.96.15.37 0 .72-.05 1.03-.15.32-.1.6-.25.83-.44s.42-.43.55-.72c.13-.29.2-.61.2-.97 0-.19-.02-.38-.07-.56-.05-.18-.12-.35-.23-.51-.1-.16-.24-.3-.4-.43-.17-.13-.37-.23-.61-.31.2-.09.37-.2.52-.33.15-.13.27-.27.37-.42.1-.15.17-.3.22-.46.05-.16.07-.32.07-.48 0-.36-.06-.68-.18-.96-.12-.28-.29-.51-.51-.69-.2-.19-.47-.33-.77-.43C9.1 8.05 8.76 8 8.39 8c-.36 0-.69.05-1 .16-.3.11-.57.26-.79.45-.21.19-.38.41-.51.67-.12.26-.18.54-.18.85h1.3c0-.17.03-.32.09-.45s.14-.25.25-.34c.11-.09.23-.17.38-.22.15-.05.3-.08.48-.08.4 0 .7.1.89.31.19.2.29.49.29.86 0 .18-.03.34-.08.49-.05.15-.14.27-.25.37-.11.1-.25.18-.41.24-.16.06-.36.09-.58.09H7.5v1.03h.77c.22 0 .42.02.6.07s.33.13.45.23c.12.11.22.24.29.4.07.16.1.35.1.57 0 .41-.12.72-.35.93-.23.23-.55.33-.95.33zm8.55-5.92c-.32-.33-.7-.59-1.14-.77-.43-.18-.92-.27-1.46-.27H12v8h2.3c.55 0 1.06-.09 1.51-.27.45-.18.84-.43 1.16-.76.32-.33.57-.73.74-1.19.17-.47.26-.99.26-1.57v-.4c0-.58-.09-1.1-.26-1.57-.18-.47-.43-.87-.75-1.2zm-.39 3.16c0 .42-.05.79-.14 1.13-.1.33-.24.62-.43.85-.19.23-.43.41-.71.53-.29.12-.62.18-.99.18h-.91V9.12h.97c.72 0 1.27.23 1.64.69.38.46.57 1.12.57 1.99v.4zM12 0l-.66.03 3.81 3.81 1.33-1.33c3.27 1.55 5.61 4.72 5.96 8.48h1.5C23.44 4.84 18.29 0 12 0z\"\n}), 'ThreeDRotation');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7C6.48 7 2 9.24 2 12c0 2.24 2.94 4.13 7 4.77V20l4-4-4-4v2.73c-3.15-.56-5-1.9-5-2.73 0-1.06 3.04-3 8-3s8 1.94 8 3c0 .73-1.46 1.89-4 2.53v2.05c3.53-.77 6-2.53 6-4.58 0-2.76-4.48-5-10-5z\"\n}), 'ThreeSixty');\n\nexports.default = _default;"],"names":["parameters","setters","labels","units","Fragment","Array","map","param","i","md","sm","xs","item","onChange","e","target","value","sx","width","InputProps","startAdornment","position","endAdornment","capture","reset","update","toggle3DPlot","useState","is3DModeEnabled","set3DModeEnaabled","thicknessSliderPercentage","setThicknessSliderPercentage","useEffect","thickness","direction","container","color","component","onClick","spacing","mt","alignItems","traces","title","height","logX","hideX","hideY","yRange","hideLegends","customization","useSelector","state","plot","style","textAlign","data","layout","showlegend","margin","t","l","r","b","xaxis","rangemode","zeroline","type","visible","yaxis","range","hoverlabel","align","boxmode","font","legend","orientation","enableZoom","MapInteractionCSS","disablePan","parameterFormulas","parameterUnits","rawNumerator","rawDenominator","$rawNumerator","$rawDenominator","t_initial","t_final","$t_initial","$t_final","K_p","$K_p","T_i","$T_i","T_d","$T_d","N","$N","responseTime","SubCard","darkBorder","Grid","gridSpacing","SimpleParametersList","ProgressBar","id","Typography","symbols","currentRawNum","currentRawDen","G_s","$G_s","controller","setController","main","controlled","$traces","solution","$solution","$thickness","is3DPlotEnabled","$3DPlotEnabled","setResponseTime","TransferFunction","lp","stepify","laplaceInverse","controlledSystem","controlFeedback","clp","label","$s","$t","toString","startTime","Date","calculus","$","document","getElementById","x","y","endTime","console","log","trim","num","den","g_s","AbortController","abort","ex","MainCard","className","sol","fontSize","MathJax","marginTop","GraphMenu","changes","PlotlyBox","lg","headerSX","mr","forwardRef","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","others","theme","useTheme","overflowY","borderColor","palette","primary","action","variant","background","borderRadius","padding","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","cx","cy"],"sourceRoot":""}