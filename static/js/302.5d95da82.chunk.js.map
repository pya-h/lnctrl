{"version":3,"file":"static/js/302.5d95da82.chunk.js","mappings":"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","sources":["math/GraphMenu.jsx","views/topics/chapter02/water-tank/lecture.jsx","views/topics/chapter02/water-tank/parameters.jsx","views/topics/chapter02/water-tank/visual/WaterTank.js","views/topics/chapter02/water-tank/index.jsx","views/topics/chapter02/HydraulicSystemsModeling.jsx"],"sourcesContent":["import SaveAltIcon from \"@mui/icons-material/SaveAlt\";\r\nimport PhotoCamera from \"@mui/icons-material/PhotoCamera\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport FullScreen from \"@mui/icons-material/Fullscreen\";\r\nimport FilterCenterFocusIcon from \"@mui/icons-material/FilterCenterFocus\";\r\nimport { Grid, IconButton, Slider, Stack } from \"@mui/material\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { useState, useEffect } from \"react\";\r\nimport html2canvas from \"html2canvas\";\r\nimport ThreeDRotationIcon from \"@mui/icons-material/ThreeDRotation\";\r\nimport ThreeSixtyIcon from \"@mui/icons-material/ThreeSixty\";\r\n\r\nconst GraphMenu = ({\r\n    capture,\r\n    graphFileName,\r\n    formulaFileName,\r\n    reset,\r\n    update,\r\n    toggle3DPlot,\r\n}) => {\r\n    const [is3DModeEnabled, set3DModeEnaabled] = useState(false);\r\n    const [thicknessSliderPercentage, setThicknessSliderPercentage] =\r\n        useState(20);\r\n\r\n    const toggle3DMode = () => {\r\n        set3DModeEnaabled(!is3DModeEnabled);\r\n        toggle3DPlot();\r\n    };\r\n\r\n    const save = () => {\r\n        const graphBoxElement = document.getElementById(\"graphBox\");\r\n        // normal .blob has dark bakground\r\n        // convert background to light\r\n        const canvasWithBackground = document.createElement(\"canvas\");\r\n        canvasWithBackground.width = graphBoxElement.width;\r\n        canvasWithBackground.height = graphBoxElement.height;\r\n\r\n        const ctx = canvasWithBackground.getContext(\"2d\");\r\n        ctx.fillStyle = \"white\";\r\n        ctx.fillRect(0, 0, graphBoxElement.width, graphBoxElement.height);\r\n\r\n        ctx.drawImage(graphBoxElement, 0, 0);\r\n        // save\r\n        canvasWithBackground.toBlob((blob) => {\r\n            saveAs(blob, graphFileName);\r\n        });\r\n\r\n        html2canvas(document.getElementById(\"formulaBox\")).then((canvas) => {\r\n            canvas.toBlob((blob) => {\r\n                saveAs(blob, formulaFileName);\r\n            });\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        update({ thickness: thicknessSliderPercentage / 20.0 + 0.1 });\r\n    }, [thicknessSliderPercentage, update]);\r\n\r\n    return (\r\n        <Grid sx={{ direction: \"rtl\" }} container direction=\"row\">\r\n            <Grid md={10} sm={8} xs={6} sx={{ direction: \"rtl\" }} item>\r\n                {toggle3DPlot && (\r\n                    <IconButton\r\n                        color=\"secondary\"\r\n                        aria-label=\"capture graph\"\r\n                        component=\"span\"\r\n                        onClick={toggle3DMode}\r\n                    >\r\n                        {is3DModeEnabled ? (\r\n                            <ThreeSixtyIcon />\r\n                        ) : (\r\n                            <ThreeDRotationIcon />\r\n                        )}\r\n                    </IconButton>\r\n                )}{\" \"}\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"capture graph\"\r\n                    component=\"span\"\r\n                    onClick={capture}\r\n                >\r\n                    <PhotoCamera />\r\n                </IconButton>\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"download graph\"\r\n                    component=\"span\"\r\n                    onClick={save}\r\n                >\r\n                    <SaveAltIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"capture graph\"\r\n                    component=\"span\"\r\n                    onClick={reset}\r\n                >\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </Grid>\r\n            <Grid md={2} sm={4} xs={6} item>\r\n                <Stack\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    sx={{ mt: 0.5, direction: \"ltr\" }}\r\n                    alignItems=\"center\"\r\n                >\r\n                    <FullScreen />\r\n                    <Slider\r\n                        aria-label=\"Volume\"\r\n                        value={thicknessSliderPercentage}\r\n                        onChange={(e, value) =>\r\n                            setThicknessSliderPercentage(value)\r\n                        }\r\n                    />\r\n                    <FilterCenterFocusIcon />\r\n                </Stack>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default GraphMenu;\r\n","import SubCard from \"../../../ui-component/cards/SubCard\";\r\nimport { Grid } from \"@mui/material\";\r\nimport hydralic_system_equivalent_circuit_image from \"./images/eq-circuit.png\";\r\nimport \"../../topics.css\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\n\r\nconst formulaDifferentialHydralicEquation =\r\n    \"$$RC\\\\frac{dh(t)}{dt} + h(t) = RQ_{in}$$\";\r\n\r\nconst formulaHydraulicResistanceDefinition =\r\n    \"$$R = \\\\frac{Fluid \\\\, Level \\\\, Changes}{Fluid \\\\, Flow  \\\\, Changes} = \\\\frac{\\\\Delta H}{\\\\Delta Q} \\\\frac{s}{m^2}$$\";\r\nconst formulaHydraulicCapacitanceDefinition =\r\n    \"$$C = \\\\frac{Fluid \\\\, Volume \\\\, Changes}{Fluid \\\\, Height  \\\\, Changes} = \\\\frac{\\\\Delta V}{\\\\Delta H} m^2$$\";\r\n\r\nconst WaterTankLevelLecture = () => {\r\n    return (\r\n        <SubCard\r\n            title=\"نمودار سطح آب مخزن\"\r\n            darkBorder={true}\r\n            sx={{ direction: \"rtl\" }}\r\n        >\r\n            <Grid className=\"lecture-text\" item>\r\n                <p>\r\n                    &nbsp; &nbsp; &nbsp; &nbsp; فرآیندهای صنعتی اغلب شامل جریان\r\n                    مایعات از طریق اتصال لوله‌ها و مخازن می‌شوند. جریان در چنین\r\n                    فرآیندهایی اغلب متلاطم است. سیستم‌های مربوط به جریان متلاطم\r\n                    اغلب باید توسط معادلات دیفرانسیل غیرخطی نشان داده شوند. حال\r\n                    اگر منطقه بهره برداری محدود باشد، چنین معادلات دیفرانسیل\r\n                    غیرخطی می توانند خطی شوند. به همین طریق در سیستم های\r\n                    سیالاتی، می‌توان معادل مقاومت و خازن در سیستم های الکتریکی\r\n                    را به صورت معادلات زیر نشان داد.\r\n                </p>\r\n            </Grid>\r\n            <Grid className=\"lecture-text\" item>\r\n                <p>\r\n                    &nbsp; &nbsp; &nbsp; &nbsp; حال مدار معادل سیستم را ترسیم می\r\n                    کنیم:\r\n                </p>\r\n                <img\r\n                    className=\"lecture-image\"\r\n                    src={hydralic_system_equivalent_circuit_image}\r\n                    alt=\"Loading Failed\"\r\n                />\r\n            </Grid>\r\n            <Grid item>\r\n                <MathJax>{formulaHydraulicResistanceDefinition}</MathJax>\r\n            </Grid>\r\n            <Grid item>\r\n            <MathJax>{formulaHydraulicCapacitanceDefinition}</MathJax>\r\n\r\n            </Grid>\r\n            <Grid className=\"lecture-text\" item>\r\n                <p>\r\n                    &nbsp; &nbsp; &nbsp; &nbsp; نهایتا معادله دیفرانسیل حاکم بر\r\n                    این سیستم بصورت زیر خواهد بود؛ در این رابطه Qin همان تغییرات\r\n                    دبی ورودی در هر ثانیه می باشد.\r\n                </p>\r\n            </Grid>\r\n            <Grid item>\r\n            <MathJax>{formulaDifferentialHydralicEquation}</MathJax>\r\n\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default WaterTankLevelLecture;\r\n","   import { Grid } from \"@mui/material\";\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport SimpleParametersList from 'views/input-boxes/SimpleParametersList';\r\n\r\nconst parameterFormulas = [\"$$R = $$\", \"$$C = $$\", \"$$Q_{in} = $$\", \"$$h_i = $$\", \"$$t_i = $$\", \"$$t_f = $$\"];\r\nconst parameterUnits = [\"$$\\\\frac{s}{m^2}$$\", \"$$m^2$$\", \"$$\\\\frac{m^3}{s}$$\", \"$$m$$\", \"$$sec$$\", \"$$sec$$\"];\r\n\r\nconst WaterTankParameters = ({\r\n    R,\r\n    C,\r\n    Qin,\r\n    hi,\r\n    ti,\r\n    tf,\r\n    setR,\r\n    setC,\r\n    setQin,\r\n    setHi,\r\n    setTi,\r\n    setTf,\r\n}) => {\r\n    return (\r\n        <SubCard\r\n            darkBorder\r\n            title=\"پارامترها\"\r\n            sx={{\r\n                direction: \"ltr\",\r\n                textAlign: \"right\",\r\n                height: \"100%\",\r\n            }}\r\n        >\r\n            <Grid spacing={0.6} container direction=\"row\">\r\n                <SimpleParametersList\r\n                    parameters={[R, C, Qin, hi, ti, tf]}\r\n                    setters={[setR, setC, setQin, setHi, setTi, setTf]}\r\n                    labels={parameterFormulas}\r\n                    units={parameterUnits}\r\n                />\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default WaterTankParameters;","import React from 'react';\r\nimport './WaterTank.css';\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport { Button, Grid } from '@mui/material';\r\n\r\nclass VisualWaterTank extends React.Component {\r\n\r\n    state = {\r\n        waterLevel: 80,\r\n        timerID: null\r\n    };\r\n\r\n    constructor(){\r\n        super();\r\n        this.i = 0;\r\n    }\r\n\r\n    startSimulation = () => {\r\n        const {dt, y, max} = this.props;\r\n        this.i = 0;\r\n        clearInterval(this.state.timerID);\r\n        \r\n        const timerID = setInterval( () => {\r\n            if(this.i >= y.length)\r\n                clearInterval(timerID);\r\n            this.i++;\r\n            this.setState({waterLevel: 100 * y[this.i] / max});\r\n        }, [dt * 1000]);\r\n        this.setState({timerID});\r\n    }\r\n\r\n    stopSimulation = () => {\r\n        clearInterval(this.state.timerID);\r\n        this.i = 0;\r\n        this.setState({timerID: null});\r\n    }\r\n    \r\n    render () {\r\n\r\n        return (\r\n            <SubCard sx={{width:\"100%\"}} >\r\n                <Grid container>\r\n                    <Grid xs={6}>\r\n                        <Button onClick={this.stopSimulation} sx={{width: '100%'}}>توقف</Button>\r\n                    </Grid>\r\n                    <Grid xs={6}>\r\n                        <Button onClick={this.startSimulation} sx={{width: '100%'}}>شروع</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <hr />\r\n                <Grid>\r\n                    <div className=\"main-container\">\r\n                        <div className=\"tank\">\r\n                            <WaterContainer level={this.state.waterLevel}/>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Grid>\r\n            </SubCard>\r\n        );\r\n    }\r\n}\r\n\r\nfunction WaterContainer (props) {\r\n    let styles = {\r\n        height : props.level +'%'\r\n    }\r\n    return (\r\n        <div style={styles} className=\"water\"></div>\r\n    )\r\n}\r\n\r\n\r\nexport default VisualWaterTank;","import WaterTankLevelLecture from \"./lecture\";\r\n\r\n// project imports\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport calculus from \"../../../../math/calculus/index\";\r\nimport { useState, useEffect } from \"react\";\r\nimport WaterTankParameters from \"./parameters\";\r\n\r\nimport GraphMenu from \"math/GraphMenu\";\r\nimport { Grid } from \"@mui/material\";\r\nimport VisualWaterTank from \"./visual/WaterTank\";\r\nimport GraphBox from \"math/GraphBox\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\n\r\nconst hydraulicSystemEquation = (R, C, Qin) =>\r\n    \"$$\" +\r\n    calculus.strictPrecisionFormat(R * C) +\r\n    \"\\\\frac{dh(t)}{dt} + h(t) = \" +\r\n    calculus.strictPrecisionFormat(R * Qin) +\r\n    \"$$\";\r\n\r\nconst indexedHydraulicSystemEquation = (R, C, Qin, index) =>\r\n    \"$$\" +\r\n    calculus.strictPrecisionFormat(R * C) +\r\n    `\\\\frac{dh_{${index}}(t)}{dt} + h_{${index}}(t) = ` +\r\n    calculus.strictPrecisionFormat(R * Qin) +\r\n    \"$$\";\r\n\r\nconst symbols = { out: \"h\", in: \"t\" };\r\n\r\nconst WaterTankLevelExample = () => {\r\n    const [currentY, selectY] = useState([]);\r\n    const [deltaX, setDeltaX] = useState(0);\r\n    const [R, setR] = useState(100);\r\n    const [C, setC] = useState(1.0);\r\n    const [Qin, setQin] = useState(0.0);\r\n    const [ti, setTi] = useState(0);\r\n    const [tf, setTf] = useState(5);\r\n    const [hi, setHi] = useState(10.0);\r\n    const [systems, setSystems] = useState([]);\r\n    const [traces, setTraces] = useState([]);\r\n    const [diffEquation, setDiffEquation] = useState(null);\r\n    const [thickness, setThickness] = useState(1.0); // graph line thickness\r\n    const [isGraphCatured, setGraphCaptured] = useState(false);\r\n\r\n    const [is3DPlotEnabled, set3DPlotEnabled] = useState(false);\r\n\r\n    const toggle3DPlot = () => set3DPlotEnabled(!is3DPlotEnabled);\r\n\r\n    const capture = () => {\r\n        const capturedSystems = [...systems];\r\n        const index = capturedSystems.findIndex(\r\n            (sys) =>\r\n                sys.hi === hi && sys.R === R && sys.C === C && sys.Qin === Qin\r\n        );\r\n        if (index === -1) {\r\n            // if current system has not been captured before => then capture it; o.w. its not needed\r\n            capturedSystems.push({\r\n                hi,\r\n                R,\r\n                C,\r\n                Qin,\r\n                thickness,\r\n                legend: \"$$\" + symbols.out + \"_{\" + (systems.length + 1).toString() + \"}$$\",\r\n            });\r\n            setSystems(capturedSystems);\r\n            setGraphCaptured(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Euiler (an approximation method):\r\n        // const [x, y] = calculus.ODE.euiler(1,\r\n        //     Number(ti),\r\n        //     Number(tf),\r\n        //     {y0: Number(hi),\r\n        //     fyt: (t, f) => Number(-f / (R * C).toFixed(2) + Qin / C)}\r\n        // );\r\n\r\n        const h_t = calculus.ODE.cc1ode(R * C, 1, R * Qin, hi);\r\n        const [x, y] = calculus.pointify(h_t, Number(ti), Number(tf)); // N: 100\r\n\r\n        setDeltaX(x[1] - x[0]);\r\n        selectY(y); // currentY = y\r\n        setDiffEquation(hydraulicSystemEquation(R, C, Qin));\r\n        const all = systems.map((e, index) => {\r\n            // const [xi, yi] = calculus.ODE.euiler(\r\n            //     Number(ti),\r\n            //     Number(tf),\r\n            //     Number(e.hi),\r\n            //     1000,\r\n            //     (t, f) => Number(-f / (e.R * e.C) + e.Qin / e.C)\r\n            // );\r\n            const hi_t = calculus.ODE.cc1ode(e.R * e.C, 1, e.R * e.Qin, e.hi);\r\n            const [xi, yi] = calculus.pointify(hi_t, ti, tf); // N: 100\r\n            return {\r\n                x: xi,\r\n                y: yi,\r\n                z: is3DPlotEnabled ? Array(xi.length).fill(0) : null,\r\n                line: {\r\n                    // color: e.color...\r\n                    width: e.thickness,\r\n                },\r\n                // color,\r\n                type: \"scatter\" + (is3DPlotEnabled ? \"3d\" : \"\"),\r\n                name: e.legend,\r\n                mode: \"lines\",\r\n            };\r\n        });\r\n\r\n        const index = systems.findIndex(\r\n            (sys) =>\r\n                sys.hi === hi && sys.R === R && sys.C === C && sys.Qin === Qin\r\n        );\r\n        if (index === -1)\r\n            // if current system isnt in traces list => add it temperory to plot\r\n            all.push({\r\n                x,\r\n                y,\r\n                z: is3DPlotEnabled ? Array(x.length).fill(0) : null,\r\n                // color,\r\n                line: {\r\n                    // color:'rgb(17, 157, 255)'\r\n                    width: thickness,\r\n                },\r\n                type: \"scatter\" + (is3DPlotEnabled ? \"3d\" : \"\"),\r\n\r\n                mode: \"lines\",\r\n                name: `${symbols.out}(${symbols.in})`,\r\n            });\r\n\r\n        setTraces(all);\r\n    }, [R, C, Qin, ti, tf, hi, is3DPlotEnabled, thickness, systems]);\r\n\r\n    useEffect(() => {\r\n        setGraphCaptured(false);\r\n    }, [R, C, hi, Qin]);\r\n    const update = (changes) => {\r\n        if (changes) setThickness(changes.thickness);\r\n        //and so...\r\n    };\r\n    return (\r\n        <Grid container direction=\"column\" spacing={1}>\r\n            <Grid\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    margin: \"auto\",\r\n                    direction: \"ltr\",\r\n                }}\r\n                item\r\n            >\r\n                <WaterTankLevelLecture />\r\n            </Grid>\r\n\r\n            <Grid sx={{ margin: \"auto\", width: \"100%\" }} item>\r\n                <SubCard sx={{ direction: \"ltr\" }}>\r\n                    <Grid\r\n                        id=\"formulaBox\"\r\n                        sx={{ margin: \"auto\" }}\r\n                        container\r\n                        direction=\"row\"\r\n                    >\r\n                        {systems.map((sys, index) => {\r\n                            const formula = indexedHydraulicSystemEquation(\r\n                                sys.R,\r\n                                sys.C,\r\n                                sys.Qin,\r\n                                index + 1\r\n                            );\r\n                            return (\r\n                                <Grid md={6} sm={12} item>\r\n                                    <MathJax>{formula}</MathJax>\r\n                                </Grid>\r\n                            );\r\n                        })}\r\n                        {!isGraphCatured && (\r\n                            <Grid md={6} sm={12}>\r\n                                <MathJax>{diffEquation}</MathJax>\r\n                            </Grid>\r\n                        )}\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid\r\n                spacing={2}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    margin: \"auto\",\r\n                    direction: \"ltr\",\r\n                }}\r\n                container\r\n            >\r\n                <Grid\r\n                    md={3}\r\n                    sm={12}\r\n                    xs={12}\r\n                    sx={{ marginTop: \"1%\", width: \"100%\" }}\r\n                    container\r\n                >\r\n                    <Grid xs={12}>\r\n                        <WaterTankParameters\r\n                            R={R}\r\n                            C={C}\r\n                            Qin={Qin}\r\n                            hi={hi}\r\n                            ti={ti}\r\n                            tf={tf}\r\n                            setR={setR}\r\n                            setC={setC}\r\n                            setHi={setHi}\r\n                            setQin={setQin}\r\n                            setTi={setTi}\r\n                            setTf={setTf}\r\n                        />\r\n                    </Grid>\r\n                    <Grid sx={{ marginTop: \"3%\" }} xs={12}>\r\n                        {currentY && currentY.length && (\r\n                            <VisualWaterTank\r\n                                dt={deltaX}\r\n                                y={currentY}\r\n                                max={Math.max.apply(Math, currentY)}\r\n                            />\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid md={9} sm={12} xs={12} item>\r\n                    <SubCard>\r\n                        <GraphMenu\r\n                            capture={capture}\r\n                            formulaFileName={\r\n                                \"Water Tank Level Equations _ \" +\r\n                                [...systems.map((sys) => sys.legend)].join() +\r\n                                \".png\"\r\n                            }\r\n                            graphFileName={\r\n                                [\r\n                                    ...systems.map(\r\n                                        (sys) =>\r\n                                            `${sys.legend}{R=${sys.R}_C=${sys.C}_hi=${sys.hi}_Qin=${sys.Qin}} `\r\n                                    ),\r\n                                ].join(\", \") + \".png\"\r\n                            }\r\n                            reset={() => setSystems([])}\r\n                            update={(changes) => update(changes)}\r\n                            toggle3DPlot={toggle3DPlot}\r\n                        />\r\n                    </SubCard>\r\n                    <hr />\r\n                    <Grid lg={12} md={12} sm={12} xs={12} item>\r\n                        <SubCard>\r\n                            <GraphBox title=\"ارتفاع آب مخزن\" traces={traces} />\r\n                        </SubCard>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default WaterTankLevelExample;\r\n","import \"views/topics/topics.css\";\r\nimport { Grid } from \"@mui/material\";\r\n// project imports\r\nimport MainCard from \"views/ui-component/cards/MainCard\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport WaterTankLevelExample from \"./water-tank\";\r\n\r\nconst HydraulicSystemsModeling = () => {\r\n\r\n    return (\r\n        <MainCard style={{background: 'transparent'}}>\r\n            <Grid item spacing={gridSpacing}>\r\n                <h2 className=\"chapter-section-title\">مدل سازی سیستم های هیدرولیکی</h2>\r\n            </Grid>\r\n            <Grid item spacing={gridSpacing}>\r\n                <WaterTankLevelExample />\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default HydraulicSystemsModeling;\r\n"],"names":["capture","graphFileName","formulaFileName","reset","update","toggle3DPlot","useState","is3DModeEnabled","set3DModeEnaabled","thicknessSliderPercentage","setThicknessSliderPercentage","useEffect","thickness","sx","direction","container","md","sm","xs","item","color","component","onClick","graphBoxElement","document","getElementById","canvasWithBackground","createElement","width","height","ctx","getContext","fillStyle","fillRect","drawImage","toBlob","blob","saveAs","html2canvas","then","canvas","spacing","mt","alignItems","value","onChange","e","SubCard","title","darkBorder","Grid","className","src","hydralic_system_equivalent_circuit_image","alt","MathJax","parameterFormulas","parameterUnits","R","C","Qin","hi","ti","tf","setR","setC","setQin","setHi","setTi","setTf","textAlign","SimpleParametersList","parameters","setters","labels","units","WaterContainer","props","styles","level","style","VisualWaterTank","state","waterLevel","timerID","startSimulation","dt","y","max","i","clearInterval","setInterval","length","setState","stopSimulation","Button","this","React","symbols","currentY","selectY","deltaX","setDeltaX","systems","setSystems","traces","setTraces","diffEquation","setDiffEquation","setThickness","isGraphCatured","setGraphCaptured","is3DPlotEnabled","set3DPlotEnabled","h_t","calculus","Number","x","hydraulicSystemEquation","all","map","index","hi_t","xi","z","Array","fill","line","type","name","legend","mode","findIndex","sys","push","margin","id","formula","indexedHydraulicSystemEquation","marginTop","Math","apply","GraphMenu","capturedSystems","toString","join","changes","lg","GraphBox","MainCard","background","gridSpacing"],"sourceRoot":""}