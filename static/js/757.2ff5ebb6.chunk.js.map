{"version":3,"file":"static/js/757.2ff5ebb6.chunk.js","mappings":"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","sources":["views/input-boxes/SimpleParametersList.jsx","views/plotter/PlotlyBox.jsx","views/topics/chapter05/sketching-root-locus/lecture.jsx","views/topics/chapter05/sketching-root-locus/parameters.jsx","views/topics/chapter05/sketching-root-locus/index.jsx","views/ui-component/cards/MainCard.jsx","views/ui-component/cards/PinchPanCard.jsx","../node_modules/@mui/icons-material/ArrowBackIos.js","../node_modules/@mui/icons-material/ArrowForwardIos.js","../node_modules/@mui/icons-material/FilterCenterFocus.js","../node_modules/@mui/icons-material/Fullscreen.js"],"sourcesContent":["import { Grid, InputAdornment, TextField } from \"@mui/material\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst SimpleParametersList = ({ parameters, setters, labels, units }) => {\r\n    return (\r\n        <Fragment>\r\n            {parameters instanceof Array &&\r\n                parameters.map((param, i) => (\r\n                    <Grid md={12} sm={4} xs={6} item>\r\n                        <TextField\r\n                            onChange={(e) => setters[i](e.target.value)}\r\n                            value={param}\r\n                            sx={{ width: \"100%\" }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"left\">\r\n                                        <MathJax>{labels[i]}</MathJax>\r\n                                    </InputAdornment>\r\n                                ),\r\n                                endAdornment: units[i] && (\r\n                                    <InputAdornment position=\"right\">\r\n                                        <MathJax>{units[i]}</MathJax>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SimpleParametersList;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { MapInteractionCSS } from \"react-map-interaction\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PlotlyBox = ({\r\n    traces,\r\n    title,\r\n    width,\r\n    height = 500,\r\n    logX,\r\n    hideX,\r\n    hideY,\r\n    yRange,\r\n    hideLegends,\r\n}) => {\r\n    /*const temp_layout = {\r\n        xaxis: {\r\n            zeroline: true,\r\n            rangemode: \"tozero\",\r\n            autotick: false,\r\n            ticks: \"outside\",\r\n            tick0: 0,\r\n            dtick: 0.25,\r\n            ticklen: 8,\r\n            tickwidth: 4,\r\n            tickcolor: \"#000\",\r\n        },\r\n        yaxis: {\r\n            zeroline: true,\r\n            rangemode: \"tozero\",\r\n            autotick: false,\r\n            ticks: \"outside\",\r\n            tick0: 0,\r\n            dtick: 0.25,\r\n            ticklen: 8,\r\n            tickwidth: 4,\r\n            tickcolor: \"#000\",\r\n        },\r\n    };*/\r\n    const customization = useSelector((state) => state.customization);\r\n    const plot = (\r\n        <Plot\r\n            style={{ textAlign: \"center\" }}\r\n            //id=\"PlotlyBox\"\r\n            data={traces}\r\n            layout={{\r\n                // width: 1000,\r\n                // autosize: true,\r\n                showlegend: !hideLegends,\r\n                margin: {\r\n                    t: 30, //top margin\r\n                    l: 30, //left margin\r\n                    r: 20, //right margin\r\n                    b: 30, //bottom margin\r\n                },\r\n                xaxis: {\r\n                    rangemode: \"tozero\",\r\n                    zeroline: true,\r\n                    type: !logX ? \"dec\" : \"log\",\r\n                    visible: !hideX,\r\n                },\r\n                yaxis: {\r\n                    rangemode: \"tozero\",\r\n                    zeroline: true,\r\n                    visible: !hideY,\r\n                    range: yRange,\r\n                },\r\n\r\n                height,\r\n                title,\r\n                // hoverlabel: { bgcolor: \"#FFF\" },\r\n                hoverlabel: {\r\n                    align: \"auto\",\r\n                    boxmode: \"overlay\",\r\n                    font: { color: \"#000000FF\" },\r\n                },\r\n                legend: { orientation: \"h\" }, //, y: -0.3},\r\n            }}\r\n        />\r\n    );\r\n    return customization.enableZoom ? (\r\n        <MapInteractionCSS disablePan={true}>{plot}</MapInteractionCSS>\r\n    ) : (\r\n        plot\r\n    );\r\n};\r\n\r\nexport default PlotlyBox;\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport \"views/topics/topics.css\";\r\nimport PinchPanCard from \"views/ui-component/cards/PinchPanCard\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport img_tf_k_gain from \"./img/tf_with_k_gain.jpg\";\r\n\r\nconst SketchingRootLocusLecture = () => {\r\n    return (\r\n        <PinchPanCard title=\"رسم مکان هندسی\" border={true}>\r\n            <Grid xs={12} item>\r\n                <Typography sx={{ px: 2 }} style={{ lineHeight: \"2.5\" }}>\r\n                    منظور از مکان‌ریشه، مکان ریشه هاي معادله مشخصه یا قطب‌هاي\r\n                    حلقه‌بسته به ازاي تغییرات بهره k می‌باشد:\r\n                </Typography>\r\n            </Grid>\r\n            <Grid xs={12} sx={{ m: \"auto\", textAlign: \"center\" }}>\r\n                <img\r\n                    src={img_tf_k_gain}\r\n                    alt=\"بارگذاری تصویر با مشکل مواجه شد\"\r\n                />\r\n            </Grid>\r\n            <Grid xs={12} item>\r\n                <Typography sx={{ px: 2 }} style={{ lineHeight: \"2.5\" }}>\r\n                    <MathJax style={{ fontSize: \"18px\" }}>\r\n                        {`$$ \\\\frac{C(s)}{R(s)} = \\\\frac{kG(s)}{1 + kG(s)H(s)} $$`}\r\n                    </MathJax>\r\n                    معادله مشخصه:\r\n                    <MathJax style={{ fontSize: \"18px\" }}>\r\n                        {`$$ 1 + kG(s)H(s) = 0 \\\\\\\\ \r\n                            1 + k\\\\frac{(s-z_1)(s-z_2)...(s-z_m)}{(s-p_1)(s-p_2)...(s-p_n)} = 0 \\\\\\\\\r\n                            (s - p_1)(s - p_2)...(s - p_n) + k(s - z_1)(s - z_2)...(s - z_m) = 0 \\\\\\\\\r\n                            s_1 = f_1 (k), s_2 = f_2 (k), s_3 = f_3 (k), ..., s_n = f_n (k)\r\n                        $$`}\r\n                    </MathJax>\r\n                    <h2>ویژگی هاي نقاط روي مکان ریشه</h2>\r\n                    <MathJax style={{ fontSize: \"18px\" }}>\r\n                        {`$$ 1 + k\\\\frac{(s-z_1)(s-z_2)...(s-z_m)}{(s-p_1)(s-p_2)...(s-p_n)} = 1 + k\\\\frac{N(s)}{D(s)} = 1 + kL(s) = 0 \\\\\\\\\r\n                            L(s) = -\\\\frac{1}{k}\r\n\r\n                        $$`}\r\n                    </MathJax>\r\n                </Typography>\r\n            </Grid>\r\n        </PinchPanCard>\r\n    );\r\n};\r\n\r\nexport default SketchingRootLocusLecture;\r\n","import { Fab, Grid, Slider, Stack, Typography } from \"@mui/material\";\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport SimpleParametersList from \"views/input-boxes/SimpleParametersList\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport AnimateButton from \"views/ui-component/extended/AnimateButton\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport Fullscreen from \"@mui/icons-material/Fullscreen\";\r\nimport FilterCenterFocusIcon from \"@mui/icons-material/FilterCenterFocus\";\r\nimport { useState } from \"react\";\r\n\r\nconst startLebels = [\"$$Num = [$$\", \"$$Den = [$$\", \"$$N = $$\"];\r\nconst endLabels = [\"$$]$$\", \"$$]$$\", null];\r\n\r\nconst SketchingRootLocusParameters = ({\r\n    rawNumerator,\r\n    rawDenominator,\r\n    $rawNumerator,\r\n    $rawDenominator,\r\n    N,\r\n    $N,\r\n    formula,\r\n    thickness,\r\n    setThickness,\r\n    step,\r\n    setStep,\r\n    finalStep,\r\n    guides,\r\n}) => {\r\n    const [sliderValue, setSliderValue] = useState(25);\r\n\r\n    const updateThickness = (value) => {\r\n        setSliderValue(value);\r\n        setThickness(sliderValue / 5);\r\n    };\r\n    return (\r\n        <SubCard\r\n            darkBorder\r\n            title=\"پارامترها\"\r\n            sx={{\r\n                direction: \"ltr\",\r\n                textAlign: \"right\",\r\n                height: \"100%\",\r\n            }}\r\n        >\r\n            <SubCard>\r\n                <Grid id=\"formulaBox\" container direction=\"row\">\r\n                    <MathJax style={{ margin: \"auto\" }}>{formula}</MathJax>\r\n                </Grid>\r\n            </SubCard>\r\n\r\n            <hr />\r\n            <Grid spacing={gridSpacing} container direction=\"row\">\r\n                <SimpleParametersList\r\n                    parameters={[rawNumerator, rawDenominator, N]}\r\n                    setters={[$rawNumerator, $rawDenominator, $N]}\r\n                    labels={startLebels}\r\n                    units={endLabels}\r\n                />\r\n            </Grid>\r\n            {guides && guides.length && (\r\n                <Grid xs={12} item>\r\n                    <Typography sx={{my: 2, py: 2}} style={{textAlign: \"center\", border: '2px outset lightcoral', borderRadius: '1rem', color: 'coral' }}>\r\n                        {guides[step]}\r\n                    </Typography>\r\n                </Grid>\r\n            )}\r\n            <Grid xs={12} sx={{ mt: 2, pl: 2 }} spacing={gridSpacing} container>\r\n                <Grid style={{ textAlign: \"left\" }} xs={3} item>\r\n                    <Fab\r\n                        size=\"large\"\r\n                        sx={{ p: 2 }}\r\n                        variant=\"circular\"\r\n                        disabled={step <= 0}\r\n                        onClick={() => setStep(step - (step > 0 ? 1 : 0))}\r\n                    >\r\n                        <AnimateButton type=\"scale\" direction=\"down\">\r\n                            <Grid sx={{ mt: 1, ml: 1 }}>\r\n                                <ArrowBackIosIcon />\r\n                            </Grid>\r\n                        </AnimateButton>\r\n                    </Fab>\r\n                </Grid>\r\n                <Grid xs={6} item>\r\n                    <Stack\r\n                        spacing={2}\r\n                        direction=\"row\"\r\n                        sx={{ py: 2, direction: \"ltr\" }}\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <Fullscreen />\r\n                        <Slider\r\n                            aria-label=\"Volume\"\r\n                            value={sliderValue}\r\n                            onChange={(e, value) => updateThickness(value)}\r\n                        />\r\n                        <FilterCenterFocusIcon />\r\n                    </Stack>\r\n                </Grid>\r\n                <Grid xs={3} item>\r\n                    <Fab\r\n                        size=\"large\"\r\n                        sx={{ p: 2 }}\r\n                        variant=\"circular\"\r\n                        disabled={step >= finalStep - 1}\r\n                        onClick={() =>\r\n                            setStep(step + (step < finalStep - 1 ? 1 : 0))\r\n                        }\r\n                    >\r\n                        <AnimateButton type=\"scale\" direction=\"down\">\r\n                            <Grid sx={{ mt: 1 }}>\r\n                                <ArrowForwardIosIcon />\r\n                            </Grid>\r\n                        </AnimateButton>\r\n                    </Fab>\r\n                </Grid>\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default SketchingRootLocusParameters;\r\n","import SketchingRootLocusLecture from \"./lecture\";\r\n\r\n// project imports\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport calculus from \"math/calculus\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport SketchingRootLocusParameters from \"./parameters\";\r\nimport TransferFunction from \"math/algebra/functions/fraction\";\r\nimport { gridSpacing } from \"store/constant\";\r\n// import Describer from \"math/describer\";\r\nimport MainCard from \"views/ui-component/cards/MainCard\";\r\nimport Complex from \"math/algebra/complex\";\r\nimport { joinSorted } from \"toolshed\";\r\nimport PlotlyBox from \"views/plotter/PlotlyBox\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport Equation from \"../../../../math/solvers/equation\";\r\nimport { PolyLine } from \"math/algebra/functions\";\r\n\r\nconst tfFormula = (tf, index = undefined) =>\r\n    \"$$ \" + tf.label(\"G\", index) + \" $$\";\r\n\r\nconst pointByPointTrace = (x, y, name, markerStyle) => {\r\n    const size = markerStyle?.size || 15,\r\n        symbol = markerStyle?.symbol;\r\n    return {\r\n        x: x instanceof Array ? x : [x],\r\n        y: y instanceof Array ? y : [y],\r\n        type: \"scatter\",\r\n        mode: \"markers\",\r\n        marker: {\r\n            size,\r\n            symbol,\r\n            // color: \"black\",\r\n        },\r\n        name,\r\n    };\r\n};\r\nconst arrowTrace = (direction, x, y = 0, size = 20) =>\r\n    pointByPointTrace(x, y, `Direction${x}`, {\r\n        symbol: `arrow-bar-${direction}`,\r\n        size,\r\n    });\r\n\r\nconst lineDirection = (pzl, pzr) => {\r\n    const traces = [];\r\n    if (pzl.group !== pzr.group) {\r\n        traces.push(\r\n            arrowTrace(\r\n                pzl.group === \"pole\" ? \"right\" : \"left\",\r\n                (pzl.value + pzr.value) / 2\r\n            )\r\n        );\r\n    } else {\r\n        const half = (pzl.value + pzr.value) / 2;\r\n        const positions = [(pzl.value + half) / 2, (pzr.value + half) / 2],\r\n            directions = [\r\n                pzl.group === \"pole\" ? \"right\" : \"left\",\r\n                pzr.group === \"pole\" ? \"left\" : \"right\",\r\n            ];\r\n        for (let idx = 0; idx < positions.length; idx++)\r\n            traces.push(arrowTrace(directions[idx], positions[idx], 0, 15));\r\n    }\r\n    return traces;\r\n};\r\n\r\nconst listRoots = (roots, _type = \"قطب\") =>\r\n    roots.length\r\n        ? \"$$\" +\r\n          roots\r\n              .map((zi, i) => `\\\\quad s_{${i + 1}} = ` + zi.toString())\r\n              .join(\",\") +\r\n          \"$$\"\r\n        : `.سیستم ${_type}ی ندارد`;\r\n\r\nconst SketchingRootLocus = () => {\r\n    const [rawNumerator, $rawNumerator] = useState(\"1\");\r\n    const [rawDenominator, $rawDenominator] = useState(\"1 5 6\");\r\n\r\n    const [stepByStepTraces, $stepByStepTraces] = useState([]);\r\n\r\n    const [G_s, $G_s] = useState(null);\r\n    // const [GInfo, $GInfo] = useState(\"\");\r\n    const [formula, $formula] = useState(null);\r\n    const [N, $N] = useState(100);\r\n    const [thickness, setThickness] = useState(5.0);\r\n    const [step, setStep] = useState(0);\r\n    const [yRange, setYRange] = useState(null);\r\n    const [guides, setGuides] = useState([]);\r\n    const [description, setDescription] = useState([]);\r\n\r\n    //update\r\n    useEffect(() => {\r\n        // k * num / den\r\n        const g_s = new TransferFunction(\r\n            calculus.stringToArray(rawNumerator),\r\n            calculus.stringToArray(rawDenominator)\r\n        );\r\n        $G_s(g_s);\r\n        $formula(tfFormula(g_s));\r\n        setStep(0);\r\n    }, [rawNumerator, rawDenominator]);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            let maxY = 0;\r\n            const guides = [],\r\n                description = [];\r\n            if (G_s instanceof TransferFunction) {\r\n                const traces = [];\r\n                const [zeros, poles] = G_s.roots();\r\n\r\n                let [zx, zy] = Complex.ToCouples(zeros);\r\n                description.push({ formula: listRoots(zeros, \"صفر\") });\r\n                guides.push(\"یافتن صفرها\");\r\n                // step 0\r\n                traces.push(pointByPointTrace(zx, zy, \"Zeros\"));\r\n                // step 1\r\n                let [px, py] = Complex.ToCouples(poles);\r\n                traces.push(\r\n                    pointByPointTrace(px, py, \"Poles\", { symbol: \"x\" })\r\n                );\r\n                description.push({ formula: listRoots(poles) });\r\n                guides.push(\"یافتن قطب ها\");\r\n                // step 2\r\n                // aAxisPZs ==> zero/poles that are placesd right on the real axis\r\n                const xAxisPZs = joinSorted(\r\n                    zeros\r\n                        .filter((zi) => !(zi instanceof Complex) || zi.isReal())\r\n                        .map((zi) => (zi instanceof Complex ? zi.real() : zi)),\r\n                    poles\r\n                        .filter((pi) => !(pi instanceof Complex) || pi.isReal())\r\n                        .map((pi) => (pi instanceof Complex ? pi.real() : pi)),\r\n                    [\"zero\", \"pole\"],\r\n                    false\r\n                );\r\n                const g_delta = G_s.characteristicEquation();\r\n                const g_deltaRoots = new Equation(g_delta).solve();\r\n\r\n                for (let i = 0; i < xAxisPZs.length - 1; i++) {\r\n                    traces.push(\r\n                        calculus.systemToTrace(\r\n                            (x) => 0,\r\n                            xAxisPZs[i].value,\r\n                            xAxisPZs[i + 1].value,\r\n                            thickness,\r\n                            `{RL${i}}`,\r\n                            false,\r\n                            +N\r\n                        )\r\n                    );\r\n                    guides.push(`یافتن خطوط محور افقی (${i + 1})`);\r\n                    const directions = lineDirection(\r\n                        xAxisPZs[i],\r\n                        xAxisPZs[i + 1]\r\n                    );\r\n                    traces.push(...directions);\r\n                    for (let idx = 0; idx < directions.length; idx++) {\r\n                        guides.push(`یافتن جهت خط شماره ی (${i + 1})`);\r\n\r\n                        description.push({\r\n                            formula:\r\n                                \"$$\" +\r\n                                g_delta.toString() +\r\n                                \" = 0 \\\\\\\\ $$ \" +\r\n                                listRoots(g_deltaRoots, \"ریشه\"),\r\n                            persian: `تعداد شاخه ها = ${g_deltaRoots.length}`,\r\n                        });\r\n                    }\r\n                    description.push({\r\n                        formula:\r\n                            \"$$\" +\r\n                            g_delta.toString() +\r\n                            \" = 0 \\\\\\\\ $$ \" +\r\n                            listRoots(g_deltaRoots, \"ریشه\"),\r\n                        persian: `تعداد شاخه ها = ${g_deltaRoots.length}`,\r\n                    });\r\n                }\r\n                maxY = calculus.max([...zy, ...py]).value;\r\n                const maxX = calculus.max([...zx, ...px], true).value;\r\n                const { sigma, angles, PI } = G_s.asymptotes();\r\n                const asympDescription =\r\n                    `:محاسبه زاویه $$ \\\\frac{(2N + 1)\\\\pi}{${\r\n                        poles.length - zeros.length\r\n                    }} = ` +\r\n                    angles.join(\", \") +\r\n                    `$$ :محل تلاقی با محور افقی $$ \\\\sigma_{0} = ${calculus.strictPrecisionFormat(\r\n                        sigma\r\n                    )} $$`;\r\n                for (const angle of angles) {\r\n                    guides.push(`یافتن مجانب ها`);\r\n                    description.push({ formula: asympDescription });\r\n                    const line = new PolyLine({ x: sigma, y: 0 }, angle);\r\n                    if (angle !== PI / 2)\r\n                        traces.push(\r\n                            calculus.systemToTrace(\r\n                                line.$,\r\n                                -maxX,\r\n                                maxX,\r\n                                thickness,\r\n                                `\\\\alpha = ${angle}`,\r\n                                false,\r\n                                +N\r\n                            )\r\n                        );\r\n                    else {\r\n                        const [xs, ys] = calculus.verticalLine(\r\n                            sigma,\r\n                            -maxY,\r\n                            +maxY,\r\n                            +N\r\n                        );\r\n                        traces.push(\r\n                            calculus.arrayToTrace(\r\n                                xs,\r\n                                ys,\r\n                                thickness,\r\n                                `\\\\alpha = ${angle}`\r\n                            )\r\n                        );\r\n                    }\r\n                }\r\n\r\n                guides.push(\"یافتن نقاط شکست\");\r\n                const { breakpoints, equation } = G_s.breakpoints();\r\n                const [bx, by] = Complex.ToCouples(breakpoints);\r\n                traces.push(pointByPointTrace(bx, by, \"Zeros\"));\r\n                description.push({\r\n                    formula:\r\n                        `$$ ${equation.toString()} = 0 $$ :نقاط شکست $$ ` +\r\n                        breakpoints.map((bp) => bp.toString()).join(\", \") +\r\n                        \" $$\",\r\n                });\r\n                setYRange(!isNaN(maxY) ? [-maxY - 1, maxY + 1] : null);\r\n                $stepByStepTraces(traces);\r\n                setGuides(guides);\r\n                setDescription(description);\r\n                // $GInfo(new Describer(G_s));\r\n            }\r\n        } catch (ex) {\r\n            console.log(ex);\r\n        }\r\n    }, [G_s, N, thickness]);\r\n\r\n    return (\r\n        <MainCard>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Typography>\r\n                    <h2 className=\"chapter-section-title\">\r\n                        مکان هندسی قطب های سیستم\r\n                    </h2>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Grid container direction=\"column\" spacing={gridSpacing}>\r\n                    <Grid\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        item\r\n                    >\r\n                        <SketchingRootLocusLecture />\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                        spacing={2}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        container\r\n                    >\r\n                        <Grid\r\n                            md={4}\r\n                            sm={12}\r\n                            xs={12}\r\n                            sx={{ marginTop: \"1%\", width: \"100%\" }}\r\n                            container\r\n                        >\r\n                            <Grid xs={12}>\r\n                                <SketchingRootLocusParameters\r\n                                    rawNumerator={rawNumerator}\r\n                                    rawDenominator={rawDenominator}\r\n                                    $rawNumerator={$rawNumerator}\r\n                                    $rawDenominator={$rawDenominator}\r\n                                    N={N}\r\n                                    $N={$N}\r\n                                    formula={formula}\r\n                                    thickness={thickness}\r\n                                    setThickness={setThickness}\r\n                                    step={step}\r\n                                    setStep={setStep}\r\n                                    finalStep={stepByStepTraces.length}\r\n                                    guides={guides}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid\r\n                            sx={{ py: 2, pl: 2 }}\r\n                            md={8}\r\n                            sm={12}\r\n                            xs={12}\r\n                            container\r\n                            spacing={gridSpacing}\r\n                        >\r\n                            <Grid xs={12} item>\r\n                                <SubCard>\r\n                                    <PlotlyBox\r\n                                        title=\"مکان هندسی\"\r\n                                        traces={stepByStepTraces.slice(\r\n                                            0,\r\n                                            step + 1\r\n                                        )}\r\n                                        yRange={yRange}\r\n                                        hideLegends\r\n                                    />\r\n                                </SubCard>\r\n                            </Grid>\r\n\r\n                            <Grid sx={{ margin: \"auto\", width: \"100%\" }} item>\r\n                                <SubCard>\r\n                                    <Grid\r\n                                        id=\"description\"\r\n                                        container\r\n                                        direction=\"row\"\r\n                                    >\r\n                                        {Boolean(step < description.length) && (\r\n                                            <Typography\r\n                                                sx={{\r\n                                                    m: \"auto\",\r\n                                                    textAlign: \"center\",\r\n                                                    py: 1,\r\n                                                }}\r\n                                            >\r\n                                                <MathJax\r\n                                                    style={{ margin: \"auto\" }}\r\n                                                >\r\n                                                    {description[step].formula}\r\n                                                </MathJax>\r\n                                                <hr />\r\n                                                <Typography\r\n                                                    sx={{\r\n                                                        m: \"auto\",\r\n                                                        textAlign: \"center\",\r\n                                                        fontSize: \"18px\",\r\n                                                    }}\r\n                                                >\r\n                                                    {description[step].persian}\r\n                                                </Typography>\r\n                                            </Typography>\r\n                                        )}\r\n                                    </Grid>\r\n                                </SubCard>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default SketchingRootLocus;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// constant\r\nconst headerSX = {\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n// ==============================|| CUSTOM MAIN CARD ||============================== //\r\n\r\nconst MainCard = forwardRef(\r\n    (\r\n        {\r\n            border = true,\r\n            boxShadow,\r\n            children,\r\n            content = true,\r\n            contentClass = '',\r\n            contentSX = {},\r\n            darkTitle,\r\n            secondary,\r\n            shadow,\r\n            sx = {},\r\n            title,\r\n            ...others\r\n        },\r\n        ref\r\n    ) => {\r\n        const theme = useTheme();\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                {...others}\r\n                sx={{\r\n                    overflowY: 'auto',\r\n                    border: border ? '1px solid' : 'none',\r\n                    borderColor: theme.palette.primary[200] + 75,\r\n                    ':hover': {\r\n                        boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\r\n                    },\r\n                    ...sx\r\n                }}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\r\n                {darkTitle && title && (\r\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\r\n                )}\r\n\r\n                {/* content & header divider */}\r\n                {title && <Divider />}\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={contentSX} className={contentClass}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nMainCard.propTypes = {\r\n    border: PropTypes.bool,\r\n    boxShadow: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    contentSX: PropTypes.object,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    shadow: PropTypes.string,\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nexport default MainCard;\r\n","import SubCard from \"./SubCard\";\r\nimport { MapInteractionCSS } from \"react-map-interaction\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PinchPanCard = ({ children, title, border }) => {\r\n    const customization = useSelector((state) => state.customization);\r\n    return (\r\n        <SubCard title={title} darkBorder={border} sx={{ direction: \"rtl\" }}>\r\n            <MapInteractionCSS disableZoom={!customization.enableZoom}>\r\n                {children}\r\n            </MapInteractionCSS>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default PinchPanCard;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.67 3.87 9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\"\n}), 'ArrowBackIos');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z\"\n}), 'ArrowForwardIos');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 15H3v4c0 1.1.9 2 2 2h4v-2H5v-4zM5 5h4V3H5c-1.1 0-2 .9-2 2v4h2V5zm14-2h-4v2h4v4h2V5c0-1.1-.9-2-2-2zm0 16h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4zM12 9c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'FilterCenterFocus');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"\n}), 'Fullscreen');\n\nexports.default = _default;"],"names":["parameters","setters","labels","units","Fragment","Array","map","param","i","md","sm","xs","item","onChange","e","target","value","sx","width","InputProps","startAdornment","position","endAdornment","traces","title","height","logX","hideX","hideY","yRange","hideLegends","customization","useSelector","state","plot","style","textAlign","data","layout","showlegend","margin","t","l","r","b","xaxis","rangemode","zeroline","type","visible","yaxis","range","hoverlabel","align","boxmode","font","color","legend","orientation","enableZoom","MapInteractionCSS","disablePan","PinchPanCard","border","Grid","Typography","px","lineHeight","m","src","img_tf_k_gain","alt","MathJax","fontSize","startLebels","endLabels","rawNumerator","rawDenominator","$rawNumerator","$rawDenominator","N","$N","formula","setThickness","thickness","step","setStep","finalStep","guides","useState","sliderValue","setSliderValue","SubCard","darkBorder","direction","id","container","spacing","gridSpacing","SimpleParametersList","length","my","py","borderRadius","mt","pl","Fab","size","p","variant","disabled","onClick","AnimateButton","ml","ArrowBackIos","Stack","alignItems","Fullscreen","Slider","updateThickness","FilterCenterFocus","ArrowForwardIos","pointByPointTrace","x","y","name","markerStyle","symbol","mode","marker","arrowTrace","lineDirection","pzl","pzr","group","push","half","positions","directions","idx","listRoots","roots","_type","zi","toString","join","stepByStepTraces","$stepByStepTraces","G_s","$G_s","$formula","setYRange","setGuides","description","setDescription","useEffect","g_s","TransferFunction","calculus","tf","index","undefined","label","tfFormula","maxY","zeros","poles","Complex","zx","zy","xAxisPZs","joinSorted","filter","isReal","real","pi","g_delta","characteristicEquation","g_deltaRoots","Equation","solve","persian","maxX","asymptotes","sigma","angles","PI","asympDescription","angle","line","PolyLine","$","ys","breakpoints","equation","bx","by","bp","isNaN","ex","console","log","MainCard","className","marginTop","PlotlyBox","slice","Boolean","headerSX","mr","forwardRef","ref","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","others","theme","useTheme","overflowY","borderColor","palette","primary","action","disableZoom","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}