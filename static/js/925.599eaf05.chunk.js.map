{"version":3,"file":"static/js/925.599eaf05.chunk.js","mappings":"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","sources":["views/topics/chapter03/design-damping-system/lecture.jsx","views/topics/chapter03/design-damping-system/parameters.jsx","views/topics/chapter03/design-damping-system/index.jsx"],"sourcesContent":["import { Grid, Typography } from \"@mui/material\";\r\nimport \"../../topics.css\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport PinchPanCard from \"views/ui-component/cards/PinchPanCard\";\r\n\r\nconst DesignSystemByCharsLecture = () => {\r\n    return (\r\n        <PinchPanCard title=\"طراحی سیستم از طریق مشخصات میرایی\" border={true}>\r\n            <Grid xs={12} item>\r\n                <Typography sx={{ px: 2 }} style={{ lineHeight: \"2.5\" }}>\r\n                    <h1>زمان اوج (Rise Time)</h1>\r\n                    <MathJax>\r\n                        {`$$ t_{pk} = \\\\frac{k\\\\pi}{\\\\omega_n \\\\sqrt{1 - \\\\zeta^2}} = \\\\frac{k\\\\pi}{\\\\omega_d} \\\\qquad\r\n                        k = 1, 2, 3, ...\\\\\\\\\r\n                    t_{rise} = t_p = \\\\frac{\\\\pi}{\\\\omega_d} $$`}\r\n                    </MathJax>\r\n                    <h1>بالازدگی (Overshoot)</h1>\r\n                    <MathJax>{`$$M_p = e^{\\\\frac{-\\\\zeta \\\\pi}{\\\\sqrt{1 - \\\\zeta^2}}} = e ^ {-\\\\pi cot\\\\theta} \\\\\\\\\r\n                    \\\\zeta = \\\\frac{-\\\\ln M_p}{\\\\sqrt{\\\\pi^2 + \\\\lgroup \\\\ln M_p \\\\rgroup ^ 2}} $$`}</MathJax>\r\n                </Typography>\r\n            </Grid>\r\n        </PinchPanCard>\r\n    );\r\n};\r\n\r\nexport default DesignSystemByCharsLecture;\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport CoordinateSystem from \"views/input-boxes/CoordinateSystem\";\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport SimpleParametersList from \"views/input-boxes/SimpleParametersList\";\r\n\r\nconst parameterFormulas = [\r\n    \"$$M_{p} = $$\",\r\n    \"$$t_{rise} = $$\",\r\n    \"$$t_i = $$\",\r\n    \"$$t_f = $$\",\r\n    \"$$N = $$\"\r\n];\r\nconst parameterUnits = [\"%\", \"$$sec$$\", \"$$sec$$\", \"$$sec$$\", null];\r\n\r\nconst DesignSystemByCharsParameters = ({\r\n    M_p,\r\n    t_rise,\r\n    $M_p,\r\n    $t_rise,\r\n    t_i,\r\n    t_f,\r\n    $t_i,\r\n    $t_f,\r\n    N,\r\n    $N\r\n}) => {\r\n    const grids = 1;\r\n    const checkRiseTime = (value) => value >= 0 && $t_rise(value);\r\n    const checkOvershoot = (value) => value >= 0 && $M_p(value);\r\n    return (\r\n        <SubCard\r\n            darkBorder\r\n            title=\"پارامترها\"\r\n            sx={{\r\n                direction: \"ltr\",\r\n                textAlign: \"right\",\r\n                height: \"100%\",\r\n            }}\r\n        >\r\n            <Grid spacing={0.6} container direction=\"row\">\r\n                <SimpleParametersList\r\n                    parameters={[ M_p, t_rise, t_i, t_f, N]}\r\n                    setters={[ checkOvershoot, checkRiseTime, $t_i, $t_f, $N]}\r\n                    labels={parameterFormulas}\r\n                    units={parameterUnits}\r\n                />\r\n\r\n                <Grid sx={{ mt: 1 }} md={12} sm={4} xs={6} item>\r\n                    <Typography style={{ textAlign: \"center\" }}>\r\n                    مقدار پارامترها را از اینجا هم می توانید تغییر دهید\r\n                    </Typography>\r\n\r\n                    <CoordinateSystem\r\n                        point={{\r\n                            y: M_p,\r\n                            x: 0,\r\n                            select: ({ y }) => {\r\n                                if (y && y >= 0) $M_p(y);\r\n                            },\r\n                        }}\r\n                        extra={{\r\n                            y: 0,\r\n                            x: t_rise,\r\n                            select: ({ x }) => {\r\n                                if (x && x >= 0) $t_rise(x);\r\n                            },\r\n                        }}\r\n                        options={{ pointSize: 10, grids}}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default DesignSystemByCharsParameters;\r\n","import DesignSystemByCharsLecture from \"./lecture\";\r\n\r\n// project imports\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport calculus from \"math/calculus\";\r\nimport { useState, useEffect } from \"react\";\r\nimport GraphMenu from \"views/plotter/GraphMenu\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport PlotlyBox from \"views/plotter/PlotlyBox\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport DesignSystemByCharsParameters from \"./parameters\";\r\nimport TransferFunction from \"math/algebra/functions/fraction\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport Describer from \"math/describer\";\r\nimport MainCard from \"views/ui-component/cards/MainCard\";\r\n\r\nconst stepResponse = (tf, c_t = tf.step(), index = undefined) =>\r\n    \"$$\\\\begin{cases} \" +\r\n    tf.label(\"G\", index) +\r\n    \" \\\\\\\\ \\\\\\\\ \" +\r\n    c_t.label(\"c\", index) +\r\n    \"\\\\end{cases}$$\";\r\n\r\nconst symbols = {\r\n    in: \"t\",\r\n    out: \"c\",\r\n};\r\n\r\nconst DesignSystemByCharacteristics = () => {\r\n    const [M_p, $M_p] = useState(1);\r\n    const [t_rise, $t_rise] = useState(1);\r\n    const [t_i, $t_i] = useState(0);\r\n    const [t_f, $t_f] = useState(5);\r\n    // gradiant of u(t) is 0 and unit ramp is one\r\n    const [systems, $systems] = useState([]);\r\n    const [traces, $traces] = useState([]);\r\n    const [thickness, $thickness] = useState(1.0); // graph line thickness\r\n    const [isGraphCatured, $graphCaptured] = useState(false);\r\n    const [is3DPlotEnabled, $3DPlotEnabled] = useState(false);\r\n    const [C_t, $C_t] = useState(null);\r\n    const [G_s, $G_s] = useState(null);\r\n    const [GInfo, $GInfo] = useState(\"\");\r\n    const [N, $N] = useState(1000);\r\n    const [response, $response] = useState(null);\r\n\r\n    const toggle3DPlot = () => $3DPlotEnabled(!is3DPlotEnabled);\r\n    //update\r\n    const capture = () => {\r\n        const capturedSystems = [...systems];\r\n        const index = capturedSystems.findIndex(\r\n            (sys) => M_p === sys.M_p && t_rise === sys.t_rise\r\n        );\r\n        if (index === -1) {\r\n            // if current system has not been captured before => then capture it; o.w. its not needed\r\n            capturedSystems.push({\r\n                M_p: +M_p,\r\n                t_rise: +t_rise,\r\n                G_s,\r\n                C_t,\r\n                thickness,\r\n                legend:\r\n                    \"$$\" +\r\n                    symbols.out +\r\n                    \"_{\" +\r\n                    (systems.length + 1).toString() +\r\n                    \"}$$\",\r\n            });\r\n            $systems(capturedSystems);\r\n            $graphCaptured(true);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        let gtf = TransferFunction.Shortcuts.$design(+t_rise, +M_p);\r\n        const tstep = gtf.step();\r\n        $G_s(gtf);\r\n        if (gtf) {\r\n            $C_t(tstep);\r\n            $GInfo(new Describer(gtf));\r\n            const [x, y] = calculus.pointify(tstep.$, +t_i, +t_f, +N);\r\n            $response(stepResponse(gtf));\r\n            // parameters changed => load again all traces(traces); this is for when shared params changes(ti, tf, ...),\r\n            // so that the traces will be loaded with new conditions\r\n            const all = systems.map((e, index) => {\r\n                const M_p2 = e.M_p * e.M_p;\r\n                let tgtf = new TransferFunction(\r\n                    [M_p2],\r\n                    [1, 2 * e.t_rise * e.M_p, M_p2]\r\n                );\r\n\r\n                const [xi, yi] = calculus.pointify(\r\n                    tgtf.step().$,\r\n                    +t_i,\r\n                    +t_f,\r\n                    +N\r\n                );\r\n\r\n                return {\r\n                    x: xi,\r\n                    y: yi,\r\n                    z: is3DPlotEnabled ? Array(xi.length).fill(0) : null,\r\n                    line: {\r\n                        // color: e.color...\r\n                        width: e.thickness,\r\n                    },\r\n                    // color,\r\n                    type: \"scatter\" + (is3DPlotEnabled ? \"3d\" : \"\"),\r\n                    mode: \"lines\",\r\n                    name: e.legend,\r\n                };\r\n            });\r\n\r\n            const index = systems.findIndex(\r\n                (sys) => M_p === sys.M_p && t_rise === sys.t_rise\r\n            );\r\n            if (index === -1)\r\n                // if current system isnt in traces list => add it temperory to plot\r\n                all.push({\r\n                    x,\r\n                    y,\r\n                    z: is3DPlotEnabled ? Array(x.length).fill(0) : null,\r\n                    // color,\r\n                    line: {\r\n                        // color:'rgb(17, 157, 255)'\r\n                        width: thickness,\r\n                    },\r\n                    type: \"scatter\" + (is3DPlotEnabled ? \"3d\" : \"\"),\r\n                    mode: \"lines\",\r\n                    name: `${symbols.out}(${symbols.in})`,\r\n                });\r\n\r\n            $traces(all);\r\n        }\r\n    }, [M_p, t_rise, t_i, t_f, is3DPlotEnabled, thickness, systems, N]);\r\n\r\n    useEffect(() => {\r\n        $graphCaptured(false);\r\n    }, [M_p, t_rise]);\r\n\r\n    const update = (changes) => {\r\n        if (changes) $thickness(changes.thickness);\r\n        //and so...\r\n    };\r\n    return (\r\n        <MainCard>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Typography>\r\n                    <h2 className=\"chapter-section-title\">\r\n                        طراحی سیستم با استفاده از مشخصات میرایی سیستم{\" \"}\r\n                    </h2>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Grid container direction=\"column\" spacing={gridSpacing}>\r\n                    <Grid\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        item\r\n                    >\r\n                        <DesignSystemByCharsLecture />\r\n                    </Grid>\r\n\r\n                    <Grid sx={{ margin: \"auto\", width: \"100%\" }} item>\r\n                        <SubCard sx={{ direction: \"ltr\" }}>\r\n                            <Grid\r\n                                id=\"formulaBox\"\r\n                                sx={{ margin: \"auto\" }}\r\n                                container\r\n                                direction=\"row\"\r\n                            >\r\n                                {systems instanceof Array &&\r\n                                    systems.map((sys, index) => {\r\n                                        const formula = stepResponse(\r\n                                            sys.G_s,\r\n                                            sys.C_t,\r\n                                            index + 1\r\n                                        );\r\n\r\n                                        return (\r\n                                            <Grid\r\n                                                style={{ fontSize: \"18px\" }}\r\n                                                xs={12}\r\n                                                item\r\n                                            >\r\n                                                <MathJax>{formula}</MathJax>\r\n                                            </Grid>\r\n                                        );\r\n                                    })}\r\n                                {!isGraphCatured && (\r\n                                    <Grid style={{ fontSize: \"18px\" }} xs={12}>\r\n                                        <MathJax>{response}</MathJax>\r\n                                    </Grid>\r\n                                )}\r\n                            </Grid>\r\n                        </SubCard>\r\n                    </Grid>\r\n                    <Grid\r\n                        spacing={2}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        container\r\n                    >\r\n                        <Grid\r\n                            md={3}\r\n                            sm={12}\r\n                            xs={12}\r\n                            sx={{ marginTop: \"1%\", width: \"100%\" }}\r\n                            container\r\n                        >\r\n                            <Grid xs={12}>\r\n                                <DesignSystemByCharsParameters\r\n                                    M_p={M_p}\r\n                                    t_rise={t_rise}\r\n                                    t_i={t_i}\r\n                                    t_f={t_f}\r\n                                    $M_p={$M_p}\r\n                                    $t_rise={$t_rise}\r\n                                    $t_i={$t_i}\r\n                                    $t_f={$t_f}\r\n                                    N={N}\r\n                                    $N={$N}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid md={9} sm={12} xs={12} item>\r\n                            <SubCard>\r\n                                <GraphMenu\r\n                                    capture={capture}\r\n                                    reset={() => $systems([])}\r\n                                    update={(changes) => update(changes)}\r\n                                    toggle3DPlot={toggle3DPlot}\r\n                                />\r\n                            </SubCard>\r\n                            <hr />\r\n                            <Grid xs={12} item>\r\n                                <SubCard>\r\n                                    <PlotlyBox\r\n                                        title=\"پاسخ پله\"\r\n                                        traces={traces}\r\n                                    />\r\n                                </SubCard>\r\n                            </Grid>\r\n                            <hr />\r\n                            <Grid xs={12} item>\r\n                                {GInfo && <GInfo.Explain />}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default DesignSystemByCharacteristics;\r\n"],"names":["PinchPanCard","title","border","Grid","xs","item","Typography","sx","px","style","lineHeight","MathJax","parameterFormulas","parameterUnits","M_p","t_rise","$M_p","$t_rise","t_i","t_f","$t_i","$t_f","N","$N","SubCard","darkBorder","direction","textAlign","height","spacing","container","SimpleParametersList","parameters","setters","value","labels","units","mt","md","sm","CoordinateSystem","point","y","x","select","extra","options","pointSize","grids","stepResponse","tf","c_t","step","index","undefined","label","symbols","useState","systems","$systems","traces","$traces","thickness","$thickness","isGraphCatured","$graphCaptured","is3DPlotEnabled","$3DPlotEnabled","C_t","$C_t","G_s","$G_s","GInfo","$GInfo","response","$response","useEffect","gtf","TransferFunction","tstep","Describer","calculus","$","all","map","e","M_p2","tgtf","xi","z","Array","length","fill","line","width","type","mode","name","legend","findIndex","sys","push","MainCard","gridSpacing","className","margin","id","formula","fontSize","marginTop","GraphMenu","capture","capturedSystems","toString","reset","update","changes","toggle3DPlot","PlotlyBox","Explain"],"sourceRoot":""}