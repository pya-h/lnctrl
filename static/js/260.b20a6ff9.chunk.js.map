{"version":3,"file":"static/js/260.b20a6ff9.chunk.js","mappings":"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","sources":["math/describer.js","../javascript/esm|/home/py/projects/react/lnctrl/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","views/input-boxes/CoordinateSystem.jsx","views/input-boxes/SimpleParametersList.jsx","views/plotter/GraphBox.jsx","views/plotter/GraphMenu.jsx"],"sourcesContent":["import Complex from \"math/algebra/complex\";\r\nimport Algebra from \"math/algebra\";\r\nimport TransferFunction from \"math/algebra/functions/transfer\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport { strictPrecisionFormat } from \"./calculus\";\r\n\r\nexport default class Describer {\r\n    Explain = ({ language = \"fa\" }) => {\r\n        let describes = [];\r\n        if (language === \"fa\") describes = this.toPersian();\r\n        // and other langs ....\r\n        if (describes) {\r\n            return (\r\n                <Grid spacing={gridSpacing} container>\r\n                    <Grid lg={6} md={6} sm={12} xs={12}  item>\r\n                        <SubCard>\r\n                            <Grid\r\n                                style={{ textAlign: \"center\"}}\r\n                                spacing={gridSpacing}\r\n                                container\r\n                            >\r\n                                {describes.types &&\r\n                                    describes.types.map((info, i) => (\r\n                                        <Grid\r\n                                            lg={i % 2 ? 9 : 3}\r\n                                            md={i % 2 ? 9 : 3}\r\n                                            sm={12}\r\n                                            xs={12}\r\n                                            style={{\r\n                                                color: \"rgba(150, 50, 150, 255)\",\r\n                                            }}\r\n                                            item\r\n                                        >\r\n                                            <MathJax> {info} </MathJax>\r\n                                        </Grid>\r\n                                    ))}\r\n                            </Grid>\r\n                        </SubCard>\r\n                    </Grid>\r\n                    <Grid lg={6} md={6} sm={12} xs={12} item>\r\n                        <SubCard>\r\n                            <Grid\r\n                                style={{ textAlign: \"center\" }}\r\n                                spacing={gridSpacing}\r\n                                container\r\n                            >\r\n                                {describes.params &&\r\n                                    describes.params.map((info, i) => (\r\n                                        <Grid\r\n                                            lg={6}\r\n                                            md={6}\r\n                                            sm={12}\r\n                                            xs={12}\r\n                                            style={{\r\n                                                color: \"rgba(150, 50, 150, 255)\",\r\n                                            }}\r\n                                            item\r\n                                        >\r\n                                            <MathJax> {info} </MathJax>\r\n                                        </Grid>\r\n                                    ))}\r\n                            </Grid>\r\n                        </SubCard>\r\n                    </Grid>\r\n                </Grid>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n    constructor(algebra) {\r\n        if (algebra instanceof TransferFunction) {\r\n            this.type = \"TrnasferFunction\";\r\n            // this.tf = algebra.copy();\r\n            this.tf = algebra; // it just reads the data, no need to make copy of and make app slower;\r\n            if (algebra.order) this.Order = algebra.order;\r\n            this.Zeros = Algebra.identify(algebra.getZeros());\r\n            this.Poles = Algebra.identify(algebra.getPoles());\r\n            this.RealPoles = algebra.poles.filter(\r\n                (pi) => !(pi instanceof Complex) || pi.isReal()\r\n            );\r\n            this.ImaginaryPoles = algebra.poles.filter(\r\n                (pi) => pi instanceof Complex && !pi.real() && pi.imaginary()\r\n            );\r\n            this.ComplexPoles = algebra.poles.filter(\r\n                (pi) => pi instanceof Complex\r\n            );\r\n            this.MultiplePoles = [];\r\n            for (const pi of algebra.poles) {\r\n                const r = algebra.poleOrder(pi);\r\n                if (r > 1) {\r\n                    // repeated rootss!!!\r\n                    if (\r\n                        this.MultiplePoles.filter((pj) =>\r\n                            Algebra.areTheseTwoEqual(pi, pj)\r\n                        ).length === 0\r\n                    )\r\n                        this.MultiplePoles.push({\r\n                            pole: pi.toString(),\r\n                            order: r,\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    functionGroup = () => {\r\n        if (this.type === \"TrnasferFunction\") {\r\n            if (this.Order === 2 && this.Poles.length === 2) {\r\n                const p1 =\r\n                    this.Poles[0] instanceof Complex\r\n                        ? this.Poles[0].real()\r\n                        : this.Poles[0];\r\n                const p2 =\r\n                    this.Poles[1] instanceof Complex\r\n                        ? this.Poles[1].real()\r\n                        : this.Poles[1];\r\n                if (p1 <= 0 && p2 <= 0) {\r\n                    if (this.tf.w_n) {\r\n                        // meaning that the transfer function is in parametric form\r\n                        const { zeta } = this.tf;\r\n                        if (zeta > 1)\r\n                            return {\r\n                                name: \"میرای شدید\",\r\n                                status: \"دو قطب حقیقی پایدار در سمت چپ محور موهومی\",\r\n                            };\r\n                        else if (zeta === 1)\r\n                            return {\r\n                                name: \"میرای بحرانی\",\r\n                                status: \"دو قطب حقیقی تکراری پایدار در سمت چپ محور موهومی\",\r\n                            };\r\n                        else if (zeta > 0)\r\n                            return {\r\n                                name: \"میرای ضعیف نوسانی\",\r\n                                status: \"دو قطب مختلط مزدوج پایدار در سمت چپ محور موهومی\",\r\n                            };\r\n                        else if (zeta === 0)\r\n                            return {\r\n                                name: \"نوسانی\",\r\n                                status: \"دو قطب مختلط مزدوج  پایدار روی محور موهومی\",\r\n                            };\r\n                        else if (zeta > -1)\r\n                            return {\r\n                                name: \"نامیرای ضعیف نوسانی\",\r\n                                status: \"دو قطب مختلط مزدوج ناپایدار در سمت راست محور موهومی\",\r\n                            };\r\n                        else if (zeta === -1)\r\n                            return {\r\n                                name: \"نامیرای بحرانی\",\r\n                                status: \"دو قطب حقیقی تکراری ناپایدار در سمت راست محور موهومی\",\r\n                            };\r\n                        else\r\n                            return {\r\n                                name: \"نامیرای شدید\",\r\n                                status: \"دو قطب حقیقی در سمت راست محور موهومی\",\r\n                            };\r\n                    } else if (\r\n                        !this.RealPoles.length &&\r\n                        this.ComplexPoles.length === 2\r\n                    ) {\r\n                        if (\r\n                            this.ComplexPoles[0].isConjugateWith(\r\n                                this.ComplexPoles[1]\r\n                            )\r\n                        )\r\n                            return {\r\n                                name: \"میرای ضعیف نوسانی\",\r\n                                status: \"دو قطب مختلط مزدوج با در سمت چپ محور موهومی\",\r\n                            };\r\n                    } else if (\r\n                        this.RealPoles.length === 2 &&\r\n                        !this.ComplexPoles.length\r\n                    )\r\n                        if (this.MultiplePoles.length > 0)\r\n                            return {\r\n                                name: \"میرای بحرانی\",\r\n                                status: \"دو قطب حقیقی تکراری در سمت چپ محور موهومی\",\r\n                            };\r\n                        else\r\n                            return {\r\n                                name: \"میرای شدید\",\r\n                                status: \"دو قطب حقیقی در سمت چپ محور موهومی\",\r\n                            };\r\n                }\r\n                const numberOfUnstablePoles =\r\n                    this.RealPoles.filter((pi) => pi > 0).length +\r\n                    this.ComplexPoles.filter((cp) => cp.real() > 0).length;\r\n                let status = `شامل ${numberOfUnstablePoles} قطب ناپایدار در سمت راست محور موهومی`;\r\n                const numberOfStablePoles =\r\n                    this.Poles.length - numberOfUnstablePoles;\r\n                if (numberOfStablePoles)\r\n                    status += ` و ${numberOfStablePoles} قطب پایدار در سمت چپ`;\r\n                return {\r\n                    name: \"ناپایدار\",\r\n                    status,\r\n                };\r\n            } else if (this.Order === 1) return \"پاسخ تابع تبدیل مرتبه اول\";\r\n        }\r\n    };\r\n\r\n    valueOf = () => {\r\n        return {\r\n            poles: {\r\n                multiple: this.MultiplePoles,\r\n                complex: this.ComplexPoles,\r\n                real: this.RealPoles,\r\n                imaginary: this.ImaginaryPoles,\r\n            },\r\n        };\r\n    };\r\n\r\n    toPersian = () => {\r\n        // return a string containing all zero pole and step response infor mation\r\n        const types = [],\r\n            params = [];\r\n        if (this.type === \"TrnasferFunction\") {\r\n            if (this.Order) {\r\n                types.push(\"نوع : \");\r\n                types.push(`تابع تبدیل مرتبه ی ${this.Order}`);\r\n            }\r\n            types.push(\"صفرها : \");\r\n            types.push(\r\n                this.Zeros != null && this.Zeros.length\r\n                    ? this.Zeros.join(\" , \")\r\n                    : \"ندارد\"\r\n            );\r\n\r\n            \r\n            const tfGroup = this.functionGroup();\r\n            types.push(\"وضعیت قطب ها :\");\r\n            types.push(tfGroup.status);\r\n            types.push(\"نوع پاسخ پله :\");\r\n            types.push(tfGroup.name);\r\n            types.push(\"قطب ها : \");\r\n            types.push(\r\n                this.Poles != null && \"$$\" + this.Poles.length\r\n                    ? this.Poles.join(\" , \")\r\n                    : \"ندارد\"\r\n            );\r\n\r\n            params.push(\"ثابت زمانی :\");\r\n            params.push(\r\n                this.tf.timeConstant ? this.tf.timeConstant + \" s\" : \"-\"\r\n            );\r\n            params.push(\"زمان نشست :\");\r\n            params.push(this.tf.t_settle ? this.tf.t_settle + \" s\" : \"-\");\r\n            params.push(\"فرکانس طبیعی میراشده :\");\r\n\r\n            params.push(\r\n                this.tf.w_d ? strictPrecisionFormat(this.tf.w_d) + \" Hz\" : \"-\"\r\n            );\r\n            params.push(\"زمان اوج :\");\r\n\r\n            params.push(\r\n                this.tf.t_rise\r\n                    ? strictPrecisionFormat(this.tf.t_rise) + \" s\"\r\n                    : \"-\"\r\n            );\r\n\r\n            params.push(\"بالازدگی :\");\r\n            params.push(\r\n                this.tf.overshoot\r\n                    ? strictPrecisionFormat(this.tf.overshoot) + \" %\"\r\n                    : \"-\"\r\n            );\r\n            \r\n            const {Kr, Ka, Ks} = this.tf.errors();\r\n            params.push(\"ثابت خطای پله (موقعیت) :\");\r\n            params.push(strictPrecisionFormat(Ks));\r\n            params.push(\"ثابت خطای شیب (سرعت) :\");\r\n            params.push(strictPrecisionFormat(Kr));\r\n            params.push(\"ثابت خطای سهمی (شتاب) :\");\r\n            params.push(strictPrecisionFormat(Ka)); \r\n        }\r\n        return { params, types };\r\n    };\r\n}\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useCallback } from \"react\";\r\nimport \"./input-boxes.css\";\r\nimport calculus from \"math/calculus/index\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport ReactCursorPosition from \"react-cursor-position\";\r\nimport { Grid, InputAdornment, TextField } from \"@mui/material\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\n\r\n/* react-cursor-position props\r\n{\r\n    detectedEnvironment: {\r\n        isMouseDetected: false,\r\n        isTouchDetected: false,\r\n    },\r\n    elementDimensions: {\r\n        width: Number,\r\n        height: Number\r\n    },\r\n    isActive: Boolean,\r\n    isPositionOutside: Boolean,\r\n    position: {\r\n        x: Number,\r\n        y: Number\r\n    }\r\n}\r\n\r\n*/\r\n// for enabling mouse down to drag a point\r\nconst useInterval = (callback, delay) => {\r\n    const savedCallback = useRef();\r\n\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    useEffect(() => {\r\n        const tick = () => {\r\n            savedCallback.current();\r\n        };\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n};\r\n\r\nconst axisOffsets = (psize, grids = 5) =>\r\n    grids >= 5\r\n        ? psize * (0.2 / 7 + (grids - 5) / ((grids + 1) * (grids + 5)))\r\n        : -(psize / 10) / (1 + 3.5 * grids) + (psize * 0.2) / 7;\r\n\r\nconst CURSOR_Y_OFFSET = 38,\r\n    DEFAULT_GRIDS = 6;\r\n\r\nconst CoordinateSystemContent = ({\r\n    elementDimensions, // react-cursor-position\r\n    position, // react-cursor-position\r\n    isPositionOutside, // react-cursor-position\r\n    point = { x: 0, y: 0, select: () => {} },\r\n    extra, // = {point: null, select: null},\r\n    options = { pointSize: 7, grids: DEFAULT_GRIDS, pointColor: null }, // pointCOLOR\r\n    scale = 1,\r\n    viewpoint,\r\n}) => {\r\n    const [x, $x] = useState(0);\r\n    const [y, $y] = useState(0);\r\n    // css grid\r\n    const [grids, $grids] = useState(5); // 5x5\r\n    const [pointSize, $pointSize] = useState(7);\r\n\r\n    /* OLD version : \r\n        const update = (e) => {\r\n            const xmax = boxObject.offsetWidth / 2,\r\n                ymax = (boxObject.offsetHeight + 1) / 2; // + 1 is NEEDED?\r\n            const dx = calculus.round((e.clientX - xmax) / xmax),\r\n                dy = calculus.round((ymax - e.nativeEvent.offsetY) / ymax);\r\n            $x(dx * scale);\r\n            $y(dy * scale);};\r\n     */\r\n    const update = (e) => {\r\n        // const boxObject = document.getElementById(\"#box\");\r\n        if (!isPositionOutside) {\r\n            const xmax = elementDimensions.width / 2,\r\n                ymax = (elementDimensions.height - CURSOR_Y_OFFSET) / 2; // + 1 is NEEDED?\r\n            const dx = calculus.round((position.x - xmax) / xmax),\r\n                dy = calculus.round((ymax - position.y) / ymax);\r\n            const vx = dx * scale * grids,\r\n                vy = dy * scale * grids;\r\n            $x(vx);\r\n            $y(vy);\r\n            viewpoint(vx, vy);\r\n        }\r\n    };\r\n\r\n    const updatePointLocation = useCallback(\r\n        (px, py, index = 0) => {\r\n            // update CSS\r\n            const objectPoint = document.getElementById(`#point${index}`);\r\n            objectPoint.style.setProperty(\"--x\", px);\r\n            objectPoint.style.setProperty(\r\n                \"--y\",\r\n                py - axisOffsets(pointSize, grids)\r\n            );\r\n        },\r\n        [pointSize, grids]\r\n    );\r\n\r\n    const registerPoint = (isExtra = false) => {\r\n        // update(e);\r\n        // put a point inside the box\r\n        // update the values in the caller component (e.g. parameter boxes in examples)\r\n        if (!isExtra) {\r\n            if (point && point.select) point.select({ x, y });\r\n            // for extra point (second point)\r\n        } else if (extra && extra.select) extra.select({ x, y });\r\n\r\n        viewpoint(x, y);\r\n        // after updating values in the parameter.js components => point prop will be updated => view updater useEffect (immediately in below) will be triggered\r\n    };\r\n\r\n    const [isMouseDown, setMouseDown] = useState(false);\r\n    useInterval(registerPoint, isMouseDown ? 10 : null);\r\n    const [isMouseDownForXpoint, setMouseDownForXpoint] = useState(false);\r\n    useInterval(() => registerPoint(true), isMouseDownForXpoint ? 10 : null);\r\n\r\n    useEffect(() => {\r\n        // view updater useEffect\r\n        if (point && scale !== 0) {\r\n            // if(point.x !== x || (point.y !== null && point.y !== y))\r\n            const px = Number(point.x),\r\n                py = Number(point.y);\r\n            const ndx = calculus.round(px / (grids * scale)),\r\n                ndy = calculus.round(py / (grids * scale));\r\n            updatePointLocation(ndx * grids, ndy * grids, 0);\r\n\r\n            // $x(px);\r\n            // $y(py);\r\n        }\r\n    }, [point, scale, grids, updatePointLocation]);\r\n\r\n    // for extra point changes\r\n    useEffect(() => {\r\n        // view updater useEffect\r\n        if (extra && scale !== 0) {\r\n            // if(extra.x !== x || (extra.y !== null && extra.y !== y))\r\n            const px = Number(extra.x),\r\n                py = Number(extra.y);\r\n            const ndx = calculus.round(px / (grids * scale)),\r\n                ndy = calculus.round(py / (grids * scale));\r\n            updatePointLocation(ndx * grids, ndy * grids, 1);\r\n\r\n            // $x(px);\r\n            // $y(py);\r\n        }\r\n    }, [extra, scale, grids, updatePointLocation]);\r\n\r\n    useEffect(() => {\r\n        // if dragging put the point out of range of the scale\r\n        // scale will be expanded\r\n        // stop dragging to avoid mouse drag bugs\r\n        setMouseDown(false);\r\n        setMouseDownForXpoint(false);\r\n    }, [scale]);\r\n    // set options:\r\n    useEffect(() => {\r\n        if (options.pointSize && options.pointSize >= 0)\r\n            $pointSize(options.pointSize);\r\n\r\n        if (options.grids && options.grids >= 0) $grids(options.grids);\r\n    }, [options]);\r\n\r\n    useEffect(() => {\r\n        if (grids >= 0 && grids >= 0) {\r\n            document.documentElement.style.setProperty(\"--grids-x\", grids);\r\n            document.documentElement.style.setProperty(\"--grids-y\", grids);\r\n            document.documentElement.style.setProperty(\r\n                \"--grids-total\",\r\n                grids * 2\r\n            );\r\n        }\r\n    }, [grids]);\r\n\r\n    useEffect(() => {\r\n        if (pointSize >= 0)\r\n            document.documentElement.style.setProperty(\r\n                \"--point-size\",\r\n                pointSize\r\n            );\r\n    }, [pointSize]);\r\n\r\n    return (\r\n        <div\r\n            id=\"#box\"\r\n            onMouseEnter={(e) => update(e)}\r\n            onMouseLeave={(e) => update(e)}\r\n            onMouseMove={(e) => update(e)}\r\n            // onClick={() => registerPoint(false)}\r\n            onMouseUp={() => {\r\n                setMouseDown(false);\r\n                setMouseDownForXpoint(false);\r\n            }}\r\n            className=\"coordinate-box\"\r\n        >\r\n            <div\r\n                id=\"#point0\"\r\n                onMouseDown={() => setMouseDown(true)}\r\n                onMouseUp={() => setMouseDown(false)}\r\n                className=\"coordinate-point\"\r\n            ></div>\r\n            {extra && (\r\n                <div\r\n                    id=\"#point1\"\r\n                    onMouseDown={() => setMouseDownForXpoint(true)}\r\n                    onMouseUp={() => setMouseDownForXpoint(false)}\r\n                    className=\"coordinate-point extra-point-color\"\r\n                ></div>\r\n            )}\r\n        </div>\r\n        /* <i className=\"arrow right\"></i> */\r\n    );\r\n};\r\n\r\nconst outOfRange = (num, range) =>\r\n    num > range || num < -range || range - Math.abs(num) < 1.0;\r\n    \r\nconst CoordinateSystem = (props) => {\r\n    const [x, $x] = useState(0);\r\n    const [y, $y] = useState(0);\r\n\r\n    const { options, point, extra } = props;\r\n    let { grids, defaultScale } = options ? options : { grids: DEFAULT_GRIDS, defaultScale: 1 };\r\n\r\n    const [scale, $scale] = useState(defaultScale || 1);\r\n    const viewpoint = (x, y) => {\r\n        // updates the vallue of coordinates givent by the child component\r\n        $x(x);\r\n        $y(y);\r\n    };\r\n\r\n    // auto expand axis range when the value is near to scale\r\n    useEffect(() => {\r\n        const range = grids\r\n            ? Math.abs(scale * grids)\r\n            : Math.abs(scale * DEFAULT_GRIDS);\r\n\r\n        if (\r\n            range > 0 &&\r\n            (outOfRange(point.x, range) ||\r\n                outOfRange(point.y, range) ||\r\n                (extra && (outOfRange(extra.x, range) || outOfRange(extra.y, range))))\r\n        )\r\n            $scale(scale + 1);\r\n    }, [point, extra, scale, grids]);\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid xs={12} item>\r\n                <ReactCursorPosition>\r\n                    <CoordinateSystemContent\r\n                        {...props}\r\n                        viewpoint={viewpoint}\r\n                        scale={scale}\r\n                    />\r\n                </ReactCursorPosition>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n                <p style={{ textAlign: \"center\" }}>{\"(\" + calculus.strictPrecisionFormat(x) + \", \" + calculus.strictPrecisionFormat(y) + \")\"}</p>\r\n            </Grid>\r\n            <Grid xs={12} item>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    value={scale}\r\n                    sx={{ width: \"100%\" }}\r\n                    onChange={(e) => $scale(e.target.value)}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"left\">\r\n                                <MathJax>{\"$$\\\\times$$\"}</MathJax>\r\n                            </InputAdornment>\r\n                        ),\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"left\">\r\n                                مقیاس\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default CoordinateSystem;\r\n","import { Grid, InputAdornment, TextField } from \"@mui/material\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst SimpleParametersList = ({ parameters, setters, labels, units }) => {\r\n    return (\r\n        <Fragment>\r\n            {parameters instanceof Array &&\r\n                parameters.map((param, i) => (\r\n                    <Grid md={12} sm={4} xs={6} item>\r\n                        <TextField\r\n                            onChange={(e) => setters[i](e.target.value)}\r\n                            value={param}\r\n                            sx={{ width: \"100%\" }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"left\">\r\n                                        <MathJax>{labels[i]}</MathJax>\r\n                                    </InputAdornment>\r\n                                ),\r\n                                endAdornment: units[i] && (\r\n                                    <InputAdornment position=\"right\">\r\n                                        <MathJax>{units[i]}</MathJax>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SimpleParametersList;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nconst GraphBox = ({ traces, title, width, height = 500, logX }) => {\r\n    /*const temp_layout = {\r\n        xaxis: {\r\n            zeroline: true,\r\n            rangemode: \"tozero\",\r\n            autotick: false,\r\n            ticks: \"outside\",\r\n            tick0: 0,\r\n            dtick: 0.25,\r\n            ticklen: 8,\r\n            tickwidth: 4,\r\n            tickcolor: \"#000\",\r\n        },\r\n        yaxis: {\r\n            zeroline: true,\r\n            rangemode: \"tozero\",\r\n            autotick: false,\r\n            ticks: \"outside\",\r\n            tick0: 0,\r\n            dtick: 0.25,\r\n            ticklen: 8,\r\n            tickwidth: 4,\r\n            tickcolor: \"#000\",\r\n        },\r\n    };*/\r\n\r\n    return (\r\n        <Plot \r\n            style={{ textAlign: \"center\" }}\r\n            //id=\"graphBox\"\r\n            data={traces}\r\n            layout={{\r\n                // width: 1000,\r\n                // autosize: true,\r\n                margin: {\r\n                    t: 30, //top margin\r\n                    l: 30, //left margin\r\n                    r: 20, //right margin\r\n                    b: 30, //bottom margin\r\n                },\r\n                xaxis: {\r\n                    rangemode: \"tozero\",\r\n                    zeroline: true,\r\n                    type: !logX ? \"dec\" : \"log\"\r\n                },\r\n                yaxis: {\r\n                    rangemode: \"tozero\",\r\n                    zeroline: true\r\n\r\n                },\r\n                height,\r\n                title,\r\n                // hoverlabel: { bgcolor: \"#FFF\" },\r\n                hoverlabel: {align:'auto', boxmode: 'overlay', font:{color:'#000000FF'}},\r\n                legend: {orientation: 'h'}//, y: -0.3},\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default GraphBox;\r\n","import PhotoCamera from \"@mui/icons-material/PhotoCamera\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport FullScreen from \"@mui/icons-material/Fullscreen\";\r\nimport FilterCenterFocusIcon from \"@mui/icons-material/FilterCenterFocus\";\r\nimport { Grid, IconButton, Slider, Stack } from \"@mui/material\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ThreeDRotationIcon from \"@mui/icons-material/ThreeDRotation\";\r\nimport ThreeSixtyIcon from \"@mui/icons-material/ThreeSixty\";\r\n\r\nconst GraphMenu = ({\r\n    capture,\r\n    reset,\r\n    update,\r\n    toggle3DPlot,\r\n}) => {\r\n    const [is3DModeEnabled, set3DModeEnaabled] = useState(false);\r\n    const [thicknessSliderPercentage, setThicknessSliderPercentage] =\r\n        useState(20);\r\n\r\n    const toggle3DMode = () => {\r\n        set3DModeEnaabled(!is3DModeEnabled);\r\n        toggle3DPlot();\r\n    };\r\n\r\n    useEffect(() => {\r\n        update({ thickness: thicknessSliderPercentage / 20.0 + 0.1 });\r\n    }, [thicknessSliderPercentage, update]);\r\n\r\n    return (\r\n        <Grid sx={{ direction: \"rtl\" }} container direction=\"row\">\r\n            <Grid md={10} sm={8} xs={6} sx={{ direction: \"rtl\" }} item>\r\n                {toggle3DPlot && (\r\n                    <IconButton\r\n                        color=\"secondary\"\r\n                        aria-label=\"capture graph\"\r\n                        component=\"span\"\r\n                        onClick={toggle3DMode}\r\n                    >\r\n                        {is3DModeEnabled ? (\r\n                            <ThreeSixtyIcon />\r\n                        ) : (\r\n                            <ThreeDRotationIcon />\r\n                        )}\r\n                    </IconButton>\r\n                )}\r\n                {capture && <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"capture graph\"\r\n                    component=\"span\"\r\n                    onClick={capture}\r\n                >\r\n                    <PhotoCamera />\r\n                </IconButton>}\r\n\r\n                {reset && <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"capture graph\"\r\n                    component=\"span\"\r\n                    onClick={reset}\r\n                >\r\n                    <DeleteIcon />\r\n                </IconButton>}\r\n            </Grid>\r\n            <Grid md={2} sm={4} xs={6} item>\r\n                <Stack\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    sx={{ mt: 0.5, direction: \"ltr\" }}\r\n                    alignItems=\"center\"\r\n                >\r\n                    <FullScreen />\r\n                    <Slider\r\n                        aria-label=\"Volume\"\r\n                        value={thicknessSliderPercentage}\r\n                        onChange={(e, value) =>\r\n                            setThicknessSliderPercentage(value)\r\n                        }\r\n                    />\r\n                    <FilterCenterFocusIcon />\r\n                </Stack>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default GraphMenu;\r\n"],"names":["Describer","algebra","Explain","language","describes","toPersian","Grid","spacing","gridSpacing","container","lg","md","sm","xs","item","SubCard","style","textAlign","types","map","info","i","color","MathJax","params","functionGroup","type","Order","Poles","length","p1","Complex","real","p2","tf","w_n","zeta","name","status","RealPoles","ComplexPoles","MultiplePoles","isConjugateWith","numberOfUnstablePoles","filter","pi","cp","numberOfStablePoles","valueOf","poles","multiple","complex","imaginary","ImaginaryPoles","push","Zeros","join","tfGroup","timeConstant","t_settle","w_d","strictPrecisionFormat","t_rise","overshoot","errors","Kr","Ka","Ks","TransferFunction","this","order","Algebra","getZeros","getPoles","isReal","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","r","poleOrder","pj","pole","toString","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","axisOffsets","psize","grids","CoordinateSystemContent","elementDimensions","position","isPositionOutside","point","x","y","select","extra","options","pointSize","pointColor","scale","viewpoint","useState","$x","$y","$grids","$pointSize","update","xmax","width","ymax","height","dx","calculus","dy","vx","vy","updatePointLocation","useCallback","px","py","index","objectPoint","document","getElementById","setProperty","registerPoint","isExtra","isMouseDown","setMouseDown","isMouseDownForXpoint","setMouseDownForXpoint","Number","ndx","ndy","documentElement","onMouseEnter","onMouseLeave","onMouseMove","onMouseUp","className","onMouseDown","outOfRange","num","range","Math","abs","props","defaultScale","$scale","variant","sx","onChange","target","InputProps","startAdornment","endAdornment","parameters","setters","labels","units","Fragment","param","traces","title","logX","data","layout","margin","t","l","b","xaxis","rangemode","zeroline","yaxis","hoverlabel","align","boxmode","font","legend","orientation","capture","reset","toggle3DPlot","is3DModeEnabled","set3DModeEnaabled","thicknessSliderPercentage","setThicknessSliderPercentage","thickness","direction","component","onClick","mt","alignItems"],"sourceRoot":""}