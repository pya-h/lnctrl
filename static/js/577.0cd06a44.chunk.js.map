{"version":3,"file":"static/js/577.0cd06a44.chunk.js","mappings":"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","sources":["views/input-boxes/CoordinateSystem.jsx","views/input-boxes/SimpleParametersList.jsx","views/plotter/GraphMenu.jsx","views/plotter/PlotlyBox.jsx","views/topics/chapter03/first-order-tf-examining/lecture.jsx","views/topics/chapter03/first-order-tf-examining/parameters.jsx","views/topics/chapter03/first-order-tf-examining/index.jsx","views/ui-component/cards/MainCard.jsx","views/ui-component/cards/PinchPanCard.jsx"],"sourcesContent":["import React, { useCallback } from \"react\";\r\nimport \"./input-boxes.css\";\r\nimport calculus from \"math/calculus\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport ReactCursorPosition from \"react-cursor-position\";\r\nimport { Grid, InputAdornment, TextField, Typography } from \"@mui/material\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\n\r\n/* react-cursor-position props\r\n{\r\n    detectedEnvironment: {\r\n        isMouseDetected: false,\r\n        isTouchDetected: false,\r\n    },\r\n    elementDimensions: {\r\n        width: Number,\r\n        height: Number\r\n    },\r\n    isActive: Boolean,\r\n    isPositionOutside: Boolean,\r\n    position: {\r\n        x: Number,\r\n        y: Number\r\n    }\r\n}\r\n\r\n*/\r\n// for enabling mouse down to drag a point\r\nconst useInterval = (callback, delay) => {\r\n    const savedCallback = useRef();\r\n\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    useEffect(() => {\r\n        const tick = () => {\r\n            savedCallback.current();\r\n        };\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n};\r\n\r\nconst axisOffsets = (psize, grids = 5) =>\r\n    grids >= 5\r\n        ? psize * (0.2 / 7 + (grids - 5) / ((grids + 1) * (grids + 5)))\r\n        : -(psize / 10) / (1 + 3.5 * grids) + (psize * 0.2) / 7;\r\n\r\nconst CURSOR_Y_OFFSET = 38,\r\n    DEFAULT_GRIDS = 6;\r\n\r\nconst CoordinateSystemContent = ({\r\n    elementDimensions, // react-cursor-position\r\n    position, // react-cursor-position\r\n    isPositionOutside, // react-cursor-position\r\n    point = { x: 0, y: 0, select: () => {} },\r\n    extra, // = {point: null, select: null},\r\n    options = { pointSize: 7, grids: DEFAULT_GRIDS, pointColor: null }, // pointCOLOR\r\n    scale = 1,\r\n    viewpoint,\r\n}) => {\r\n    const [x, $x] = useState(0);\r\n    const [y, $y] = useState(0);\r\n    // css grid\r\n    const [grids, $grids] = useState(5); // 5x5\r\n    const [pointSize, $pointSize] = useState(7);\r\n\r\n    /* OLD version : \r\n        const update = (e) => {\r\n            const xmax = boxObject.offsetWidth / 2,\r\n                ymax = (boxObject.offsetHeight + 1) / 2; // + 1 is NEEDED?\r\n            const dx = calculus.round((e.clientX - xmax) / xmax),\r\n                dy = calculus.round((ymax - e.nativeEvent.offsetY) / ymax);\r\n            $x(dx * scale);\r\n            $y(dy * scale);};\r\n     */\r\n    const update = (e) => {\r\n        // const boxObject = document.getElementById(\"#box\");\r\n        if (!isPositionOutside) {\r\n            const xmax = elementDimensions.width / 2,\r\n                ymax = (elementDimensions.height - CURSOR_Y_OFFSET) / 2; // + 1 is NEEDED?\r\n            const dx = calculus.round((position.x - xmax) / xmax),\r\n                dy = calculus.round((ymax - position.y) / ymax);\r\n            const vx = dx * scale * grids,\r\n                vy = dy * scale * grids;\r\n            $x(vx);\r\n            $y(vy);\r\n            viewpoint(vx, vy);\r\n        }\r\n    };\r\n\r\n    const updatePointLocation = useCallback(\r\n        (px, py, index = 0) => {\r\n            // update CSS\r\n            const objectPoint = document.getElementById(`#point${index}`);\r\n            objectPoint.style.setProperty(\"--x\", px);\r\n            objectPoint.style.setProperty(\r\n                \"--y\",\r\n                py - axisOffsets(pointSize, grids)\r\n            );\r\n        },\r\n        [pointSize, grids]\r\n    );\r\n\r\n    const registerPoint = (isExtra = false) => {\r\n        // update(e);\r\n        // put a point inside the box\r\n        // update the values in the caller component (e.g. parameter boxes in examples)\r\n        if (!isExtra) {\r\n            if (point && point.select) point.select({ x, y });\r\n            // for extra point (second point)\r\n        } else if (extra && extra.select) extra.select({ x, y });\r\n\r\n        viewpoint(x, y);\r\n        // after updating values in the parameter.js components => point prop will be updated => view updater useEffect (immediately in below) will be triggered\r\n    };\r\n\r\n    const [isMouseDown, setMouseDown] = useState(false);\r\n    useInterval(registerPoint, isMouseDown ? 10 : null);\r\n    const [isMouseDownForXpoint, setMouseDownForXpoint] = useState(false);\r\n    useInterval(() => registerPoint(true), isMouseDownForXpoint ? 10 : null);\r\n\r\n    useEffect(() => {\r\n        // view updater useEffect\r\n        if (point && scale !== 0) {\r\n            // if(point.x !== x || (point.y !== null && point.y !== y))\r\n            const px = Number(point.x),\r\n                py = Number(point.y);\r\n            const ndx = calculus.round(px / (grids * scale)),\r\n                ndy = calculus.round(py / (grids * scale));\r\n            updatePointLocation(ndx * grids, ndy * grids, 0);\r\n\r\n            // $x(px);\r\n            // $y(py);\r\n        }\r\n    }, [point, scale, grids, updatePointLocation]);\r\n\r\n    // for extra point changes\r\n    useEffect(() => {\r\n        // view updater useEffect\r\n        if (extra && scale !== 0) {\r\n            // if(extra.x !== x || (extra.y !== null && extra.y !== y))\r\n            const px = Number(extra.x),\r\n                py = Number(extra.y);\r\n            const ndx = calculus.round(px / (grids * scale)),\r\n                ndy = calculus.round(py / (grids * scale));\r\n            updatePointLocation(ndx * grids, ndy * grids, 1);\r\n\r\n            // $x(px);\r\n            // $y(py);\r\n        }\r\n    }, [extra, scale, grids, updatePointLocation]);\r\n\r\n    useEffect(() => {\r\n        // if dragging put the point out of range of the scale\r\n        // scale will be expanded\r\n        // stop dragging to avoid mouse drag bugs\r\n        setMouseDown(false);\r\n        setMouseDownForXpoint(false);\r\n    }, [scale]);\r\n    // set options:\r\n    useEffect(() => {\r\n        if (options.pointSize && options.pointSize >= 0)\r\n            $pointSize(options.pointSize);\r\n\r\n        if (options.grids && options.grids >= 0) $grids(options.grids);\r\n    }, [options]);\r\n\r\n    useEffect(() => {\r\n        if (grids >= 0 && grids >= 0) {\r\n            document.documentElement.style.setProperty(\"--grids-x\", grids);\r\n            document.documentElement.style.setProperty(\"--grids-y\", grids);\r\n            document.documentElement.style.setProperty(\r\n                \"--grids-total\",\r\n                grids * 2\r\n            );\r\n        }\r\n    }, [grids]);\r\n\r\n    useEffect(() => {\r\n        if (pointSize >= 0)\r\n            document.documentElement.style.setProperty(\r\n                \"--point-size\",\r\n                pointSize\r\n            );\r\n    }, [pointSize]);\r\n\r\n    return (\r\n        <div\r\n            id=\"#box\"\r\n            onMouseEnter={(e) => update(e)}\r\n            onMouseLeave={(e) => update(e)}\r\n            onMouseMove={(e) => update(e)}\r\n            // onClick={() => registerPoint(false)}\r\n            onMouseUp={() => {\r\n                setMouseDown(false);\r\n                setMouseDownForXpoint(false);\r\n            }}\r\n            className=\"coordinate-box\"\r\n        >\r\n            <div\r\n                id=\"#point0\"\r\n                onMouseDown={() => setMouseDown(true)}\r\n                onMouseUp={() => setMouseDown(false)}\r\n                className=\"coordinate-point\"\r\n            ></div>\r\n            {extra && (\r\n                <div\r\n                    id=\"#point1\"\r\n                    onMouseDown={() => setMouseDownForXpoint(true)}\r\n                    onMouseUp={() => setMouseDownForXpoint(false)}\r\n                    className=\"coordinate-point extra-point-color\"\r\n                ></div>\r\n            )}\r\n        </div>\r\n        /* <i className=\"arrow right\"></i> */\r\n    );\r\n};\r\n\r\nconst outOfRange = (num, range) =>\r\n    num > range || num < -range || range - Math.abs(num) < 1.0;\r\n    \r\nconst CoordinateSystem = (props) => {\r\n    const [x, $x] = useState(0);\r\n    const [y, $y] = useState(0);\r\n\r\n    const { options, point, extra } = props;\r\n    let { grids, defaultScale } = options ? options : { grids: DEFAULT_GRIDS, defaultScale: 1 };\r\n\r\n    const [scale, $scale] = useState(defaultScale || 1);\r\n    const viewpoint = (x, y) => {\r\n        // updates the vallue of coordinates givent by the child component\r\n        $x(x);\r\n        $y(y);\r\n    };\r\n\r\n    // auto expand axis range when the value is near to scale\r\n    useEffect(() => {\r\n        const range = grids\r\n            ? Math.abs(scale * grids)\r\n            : Math.abs(scale * DEFAULT_GRIDS);\r\n\r\n        if (\r\n            range > 0 &&\r\n            (outOfRange(point.x, range) ||\r\n                outOfRange(point.y, range) ||\r\n                (extra && (outOfRange(extra.x, range) || outOfRange(extra.y, range))))\r\n        )\r\n            $scale(scale + 1);\r\n    }, [point, extra, scale, grids]);\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid xs={12} item>\r\n                <ReactCursorPosition>\r\n                    <CoordinateSystemContent\r\n                        {...props}\r\n                        viewpoint={viewpoint}\r\n                        scale={scale}\r\n                    />\r\n                </ReactCursorPosition>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n                <Typography style={{ textAlign: \"center\" }}>{\"(\" + calculus.strictPrecisionFormat(x) + \", \" + calculus.strictPrecisionFormat(y) + \")\"}</Typography>\r\n            </Grid>\r\n            <Grid xs={12} item>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    value={scale}\r\n                    sx={{ width: \"100%\" }}\r\n                    onChange={(e) => $scale(e.target.value)}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"left\">\r\n                                <MathJax>{\"$$\\\\times$$\"}</MathJax>\r\n                            </InputAdornment>\r\n                        ),\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"left\">\r\n                                مقیاس\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default CoordinateSystem;\r\n","import { Grid, InputAdornment, TextField } from \"@mui/material\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst SimpleParametersList = ({ parameters, setters, labels, units }) => {\r\n    return (\r\n        <Fragment>\r\n            {parameters instanceof Array &&\r\n                parameters.map((param, i) => (\r\n                    <Grid md={12} sm={4} xs={6} item>\r\n                        <TextField\r\n                            onChange={(e) => setters[i](e.target.value)}\r\n                            value={param}\r\n                            sx={{ width: \"100%\" }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"left\">\r\n                                        <MathJax>{labels[i]}</MathJax>\r\n                                    </InputAdornment>\r\n                                ),\r\n                                endAdornment: units[i] && (\r\n                                    <InputAdornment position=\"right\">\r\n                                        <MathJax>{units[i]}</MathJax>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SimpleParametersList;\r\n","import PhotoCamera from \"@mui/icons-material/PhotoCamera\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport FullScreen from \"@mui/icons-material/Fullscreen\";\r\nimport FilterCenterFocusIcon from \"@mui/icons-material/FilterCenterFocus\";\r\nimport { Grid, IconButton, Slider, Stack } from \"@mui/material\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ThreeDRotationIcon from \"@mui/icons-material/ThreeDRotation\";\r\nimport ThreeSixtyIcon from \"@mui/icons-material/ThreeSixty\";\r\n\r\nconst GraphMenu = ({\r\n    capture,\r\n    reset,\r\n    update,\r\n    toggle3DPlot,\r\n}) => {\r\n    const [is3DModeEnabled, set3DModeEnaabled] = useState(false);\r\n    const [thicknessSliderPercentage, setThicknessSliderPercentage] =\r\n        useState(20);\r\n\r\n    const toggle3DMode = () => {\r\n        set3DModeEnaabled(!is3DModeEnabled);\r\n        toggle3DPlot();\r\n    };\r\n\r\n    useEffect(() => {\r\n        update({ thickness: thicknessSliderPercentage / 20.0 + 0.1 });\r\n    }, [thicknessSliderPercentage,]);\r\n\r\n    return (\r\n        <Grid sx={{ direction: \"rtl\" }} container direction=\"row\">\r\n            <Grid md={10} sm={8} xs={6} sx={{ direction: \"rtl\" }} item>\r\n                {toggle3DPlot && (\r\n                    <IconButton\r\n                        color=\"secondary\"\r\n                        aria-label=\"capture graph\"\r\n                        component=\"span\"\r\n                        onClick={toggle3DMode}\r\n                    >\r\n                        {is3DModeEnabled ? (\r\n                            <ThreeSixtyIcon />\r\n                        ) : (\r\n                            <ThreeDRotationIcon />\r\n                        )}\r\n                    </IconButton>\r\n                )}\r\n                {capture && <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"capture graph\"\r\n                    component=\"span\"\r\n                    onClick={capture}\r\n                >\r\n                    <PhotoCamera />\r\n                </IconButton>}\r\n\r\n                {reset && <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"capture graph\"\r\n                    component=\"span\"\r\n                    onClick={reset}\r\n                >\r\n                    <DeleteIcon />\r\n                </IconButton>}\r\n            </Grid>\r\n            <Grid md={2} sm={4} xs={6} item>\r\n                <Stack\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    sx={{ mt: 0.5, direction: \"ltr\" }}\r\n                    alignItems=\"center\"\r\n                >\r\n                    <FullScreen />\r\n                    <Slider\r\n                        aria-label=\"Volume\"\r\n                        value={thicknessSliderPercentage}\r\n                        onChange={(e, value) =>\r\n                            setThicknessSliderPercentage(value)\r\n                        }\r\n                    />\r\n                    <FilterCenterFocusIcon />\r\n                </Stack>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default GraphMenu;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { MapInteractionCSS } from \"react-map-interaction\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PlotlyBox = ({\r\n    traces,\r\n    title,\r\n    width,\r\n    height = 500,\r\n    logX,\r\n    hideX,\r\n    hideY,\r\n    yRange,\r\n    hideLegends,\r\n}) => {\r\n    /*const temp_layout = {\r\n        xaxis: {\r\n            zeroline: true,\r\n            rangemode: \"tozero\",\r\n            autotick: false,\r\n            ticks: \"outside\",\r\n            tick0: 0,\r\n            dtick: 0.25,\r\n            ticklen: 8,\r\n            tickwidth: 4,\r\n            tickcolor: \"#000\",\r\n        },\r\n        yaxis: {\r\n            zeroline: true,\r\n            rangemode: \"tozero\",\r\n            autotick: false,\r\n            ticks: \"outside\",\r\n            tick0: 0,\r\n            dtick: 0.25,\r\n            ticklen: 8,\r\n            tickwidth: 4,\r\n            tickcolor: \"#000\",\r\n        },\r\n    };*/\r\n    const customization = useSelector((state) => state.customization);\r\n    const plot = (\r\n        <Plot\r\n            style={{ textAlign: \"center\" }}\r\n            //id=\"PlotlyBox\"\r\n            data={traces}\r\n            layout={{\r\n                // width: 1000,\r\n                // autosize: true,\r\n                showlegend: !hideLegends,\r\n                margin: {\r\n                    t: 30, //top margin\r\n                    l: 30, //left margin\r\n                    r: 20, //right margin\r\n                    b: 30, //bottom margin\r\n                },\r\n                xaxis: {\r\n                    rangemode: \"tozero\",\r\n                    zeroline: true,\r\n                    type: !logX ? \"dec\" : \"log\",\r\n                    visible: !hideX,\r\n                },\r\n                yaxis: {\r\n                    rangemode: \"tozero\",\r\n                    zeroline: true,\r\n                    visible: !hideY,\r\n                    range: yRange,\r\n                },\r\n\r\n                height,\r\n                title,\r\n                // hoverlabel: { bgcolor: \"#FFF\" },\r\n                hoverlabel: {\r\n                    align: \"auto\",\r\n                    boxmode: \"overlay\",\r\n                    font: { color: \"#000000FF\" },\r\n                },\r\n                legend: { orientation: \"h\" }, //, y: -0.3},\r\n            }}\r\n        />\r\n    );\r\n    return customization.enableZoom ? (\r\n        <MapInteractionCSS disablePan={true}>{plot}</MapInteractionCSS>\r\n    ) : (\r\n        plot\r\n    );\r\n};\r\n\r\nexport default PlotlyBox;\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport simple_LTI_system from \"./visual/simple_lti_system.png\";\r\nimport \"views/topics/topics.css\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport PinchPanCard from \"views/ui-component/cards/PinchPanCard\";\r\n\r\nconst firstOrderTransferFunctionFormFormula = \"$$G(s) = \\\\frac{k}{s + a}$$\";\r\nconst firstOrderTransferFunctionSteadyStateTransientFormula =\r\n    \"$$c(t) = c_{tr}(t) + c_{ss}(t)$$\";\r\n\r\nconst steadyStateCalculationsFormula =\r\n    \"$$\\\\begin{cases} \\\\lim\\\\limits_{t \\\\to \\\\infty}c_{tr}(t) = 0 \\\\\\\\ \\\\lim\\\\limits_{t \\\\to \\\\infty}c_{ss}(t) = c_{ss} \\\\end{cases} \\\\rightarrow c_{ss} = \\\\lim\\\\limits_{t \\\\to \\\\infty}c(t)$$\";\r\nconst resultOfFinalValueTheorem =\r\n    \"$$c_{ss} = \\\\lim\\\\limits_{t \\\\to \\\\infty}c_{ss}(t) = \\\\lim\\\\limits_{s \\\\to 0}sC(s)$$\";\r\n\r\nconst stepFunctionFormula = \"$$r(t) = u(t) \\\\rightarrow R(s) = \\\\frac{1}{s}$$\";\r\nconst stepResponseOfFirstOrderTfInLaplaceDomain =\r\n    \"$$C(s) = G(s)R(s) = \\\\frac{k}{s(s + 1)}$$\";\r\nconst stepResponseOfFirstOrderTfInTimeDomain =\r\n    \"$$c(t) = (\\\\frac{k}{a} - \\\\frac{k}{a}e^{-at})u(t)$$\";\r\nconst stepInputSteadyStateValueForFirstOrderTf =\r\n    \"$$c_{ss} = \\\\lim\\\\limits_{s \\\\to 0}sC(s) = \\\\lim\\\\limits_{s \\\\to 0}\\\\frac{k}{s + a} = \\\\frac{k}{a}$$\";\r\n\r\nconst rampFunctionFormula =\r\n    \"$$r(t) = tu(t) \\\\rightarrow R(s) = \\\\frac{1}{s^2}$$\";\r\nconst rampResponseOfFirstOrderTfInLaplaceDomain =\r\n    \"$$C(s) = G(s)R(s) = \\\\frac{k}{s^2(s + 1)}$$\";\r\nconst rampResponseOfFirstOrderTfInTimeDomain =\r\n    \"$$c(t) = \\\\frac{k}{a}(t - \\\\frac{1}{a})u(t) + \\\\frac{k}{a^2}e^{-at}u(t)$$\";\r\nconst rampInputSteadyStateValueForFirstOrderTf =\r\n    \"$$c_{ss} = \\\\lim\\\\limits_{s \\\\to 0}sC(s) = \\\\lim\\\\limits_{s \\\\to 0}\\\\frac{k}{s(s + a)} = \\\\infty$$\";\r\n\r\nconst FOTFLecture = () => {\r\n    return (\r\n        <PinchPanCard title=\"تابع تبدیل مرتبه یک\" border={true}>\r\n            <Grid container>\r\n                <Grid xs={12} sx={{m: \"auto\"}}  item>\r\n                    <Typography sx={{ px: 2 }} style={{ lineHeight: \"2.5\" }}>\r\n                        این توابع تبدیل به فرم زیر می باشند:\r\n                        <MathJax style={{ fontSize: \"18px\" }}>\r\n                            {firstOrderTransferFunctionFormFormula}\r\n                        </MathJax>\r\n                        <h1 style={{ marginTop: \"5%\", marginBottom: \"3%\" }}>\r\n                            &nbsp;پاسخ حالت ماندگار\r\n                        </h1>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; دیاگرام یک سیستم LTI ساده\r\n                        بصورت زیر می باشد:\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid xs={12} sx={{ m: \"auto\" }} item>\r\n                    <img\r\n                        className=\"lecture-image\"\r\n                        src={simple_LTI_system}\r\n                        alt=\"بارگذاری تصویر با مشکل مواجه شد\"\r\n                    />\r\n                </Grid>\r\n                <Grid xs={12} sx={{m: \"auto\"}} item>\r\n                    <Typography sx={{ px: 2 }} style={{ lineHeight: \"2.5\" }}>\r\n                        <MathJax style={{ fontSize: \"18px\" }}>\r\n                            {\r\n                                firstOrderTransferFunctionSteadyStateTransientFormula\r\n                            }\r\n                        </MathJax>\r\n                        <MathJax style={{ fontSize: \"18px\" }}>\r\n                            {steadyStateCalculationsFormula}\r\n                        </MathJax>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; نکته:‌طبق قضیه مقدار نهایی\r\n                        داریم:\r\n                        <MathJax style={{ fontSize: \"18px\" }}>\r\n                            {resultOfFinalValueTheorem}\r\n                        </MathJax>\r\n                        <h1\r\n                            style={{\r\n                                marginTop: \"5%\",\r\n                                marginBottom: \"3%\",\r\n                            }}\r\n                        >\r\n                            &nbsp; پاسخ پله واحد\r\n                        </h1>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; حال پاسخ حالت ماندگار به\r\n                        ورودی پله واحد را برای سیستم مذکور را محاسبه می کنیم:\r\n                        <MathJax style={{ fontSize: \"18px\" }}>\r\n                            {stepFunctionFormula}\r\n                        </MathJax>\r\n                        <MathJax style={{ fontSize: \"18px\" }}>\r\n                            {stepResponseOfFirstOrderTfInLaplaceDomain}\r\n                        </MathJax>\r\n                        <MathJax style={{ fontSize: \"18px\" }}>\r\n                            {stepResponseOfFirstOrderTfInTimeDomain}\r\n                        </MathJax>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; در نتیجه مقدار حالت ماندگار\r\n                        سیستم عبارت است از:\r\n                        <MathJax style={{ fontSize: \"18px\" }}>\r\n                            {stepInputSteadyStateValueForFirstOrderTf}\r\n                        </MathJax>\r\n                        <h1\r\n                            style={{\r\n                                marginTop: \"5%\",\r\n                                marginBottom: \"3%\",\r\n                            }}\r\n                        >\r\n                            &nbsp; پاسخ شیب واحد\r\n                        </h1>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; حال پاسخ حالت ماندگار به\r\n                        ورودی شییب واحد را برای سیستم مذکور را محاسبه می کنیم:\r\n                        <MathJax style={{ fontSize: \"18px\" }}>\r\n                            {rampFunctionFormula}\r\n                        </MathJax>\r\n                        <MathJax style={{ fontSize: \"18px\" }}>\r\n                            {rampResponseOfFirstOrderTfInLaplaceDomain}\r\n                        </MathJax>\r\n                        <MathJax style={{ fontSize: \"18px\" }}>\r\n                            {rampResponseOfFirstOrderTfInTimeDomain}\r\n                        </MathJax>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; در نتیجه مقدار حالت ماندگار\r\n                        سیستم عبارت است از:\r\n                        <MathJax style={{ fontSize: \"18px\" }}>\r\n                            {rampInputSteadyStateValueForFirstOrderTf}\r\n                        </MathJax>\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </PinchPanCard>\r\n    );\r\n};\r\n\r\nexport default FOTFLecture;\r\n","import { Grid, Button, Typography } from \"@mui/material\";\r\nimport CoordinateSystem from \"views/input-boxes/CoordinateSystem\";\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport SimpleParametersList from \"views/input-boxes/SimpleParametersList\";\r\nimport { gridSpacing } from '../../../../store/constant';\r\n\r\nconst parameterFormulas = [\r\n    \"$$a = $$\",\r\n    \"$$k = $$\",\r\n    \"$$t_i = $$\",\r\n    \"$$t_f = $$\",\r\n    \"$$N = $$\"\r\n];\r\nconst parameterUnits = [null, null, \"$$sec$$\", \"$$sec$$\", null];\r\n\r\nconst FOTFParameters = ({\r\n    k,\r\n    a,\r\n    $k,\r\n    $a,\r\n    t_i,\r\n    t_f,\r\n    $t_i,\r\n    $t_f,\r\n    inputSignal,\r\n    $inputSignal,\r\n    N,\r\n    $N\r\n}) => {\r\n    const grids = 10;\r\n    const selectRealPart = (point) => {\r\n        if (point) $a(-point.x);\r\n    };\r\n\r\n    return (\r\n        <SubCard\r\n            darkBorder\r\n            title=\"پارامترها\"\r\n            sx={{\r\n                direction: \"ltr\",\r\n                textAlign: \"right\",\r\n                height: \"100%\",\r\n            }}\r\n        >\r\n            <Grid xs={12} container>\r\n                <Grid xs={6} sx={{ pr: 1, pb: 1 }} item>\r\n                    <Button\r\n                        onClick={() => $inputSignal(0)}\r\n                        style={{ width: \"100%\", textTransform: \"none\" }}\r\n                        variant={inputSignal === 0 ? \"contained\" : \"outlined\"}\r\n                    >\r\n                        پله\r\n                    </Button>\r\n                </Grid>\r\n                <Grid sx={{ pb: 1 }} xs={6} item>\r\n                    <Button\r\n                        onClick={() => $inputSignal(1)}\r\n                        style={{ width: \"100%\", textTransform: \"none\" }}\r\n                        variant={inputSignal === 1 ? \"contained\" : \"outlined\"}\r\n                    >\r\n                        رمپ\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid spacing={gridSpacing} container direction=\"row\">\r\n            \r\n                <SimpleParametersList parameters={[a, k, t_i, t_f, N]} setters={[$a, $k, $t_i, $t_f, $N]} labels={parameterFormulas} units={parameterUnits} />\r\n                \r\n                <Grid sx={{ mt: 1 }} md={12} sm={4} xs={6} item>\r\n                    <Typography style={{textAlign: 'center'}}>محل قطب را انتخاب کنید</Typography>\r\n                    <CoordinateSystem\r\n                        point={{ x: -a, y: 0, select: selectRealPart }}\r\n                        options={{ pointSize: 10, grids }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default FOTFParameters;\r\n","import FirstOrderTfLecture from \"./lecture\";\r\n\r\n// project imports\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport calculus from \"../../../../math/calculus\";\r\nimport { useState, useEffect } from \"react\";\r\nimport GraphMenu from \"views/plotter/GraphMenu\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport PlotlyBox from \"views/plotter/PlotlyBox\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport FirstOrderTfParameters from \"./parameters\";\r\nimport TransferFunction from \"math/algebra/functions/fraction\";\r\nimport MainCard from \"views/ui-component/cards/MainCard\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { getCache, cacheParameters } from 'toolshed';\r\n\r\n\r\nconst realCoeficientValue = (coef) => {\r\n    if (coef === -1) return \"-\";\r\n    if (coef === 1) return \"\";\r\n    return calculus.strictPrecisionFormat(coef);\r\n};\r\n\r\nconst realAdditionTermsValue = (term) =>\r\n    term > 0\r\n        ? \" + \" + calculus.strictPrecisionFormat(term)\r\n        : \" - \" + calculus.strictPrecisionFormat(term) * -1;\r\n\r\nconst realAdditionalCoefficientValue = (coef) => {\r\n    let result = \"\";\r\n    if (coef < 0) {\r\n        result += \"-\";\r\n        coef *= -1;\r\n    } else if (coef > 0) result += \"+\";\r\n    if (coef !== 1) result += calculus.strictPrecisionFormat(coef);\r\n    return result;\r\n};\r\nconst stepResponse = (k, a) =>\r\n    \"$$\\\\begin{cases}G(s) = \" +\r\n    TransferFunction.Shortcuts.$1(k, -a).toString() +\r\n    (a !== 0\r\n        ? \" \\\\\\\\ \\\\\\\\ c(t) = \" +\r\n          realCoeficientValue(k / a) +\r\n          \"(1 - e^{\" +\r\n          realCoeficientValue(-a) +\r\n          \"t})u(t) \"\r\n        : \"} \\\\\\\\ \\\\\\\\ c(t) = tu(t) \") +\r\n    \"\\\\end{cases}$$\";\r\n\r\nconst indexedStepResponse = (k, a, index) =>\r\n    \"$$\\\\begin{cases}G_{\" +\r\n    index +\r\n    \"}(s) = \" +\r\n    TransferFunction.Shortcuts.$1(k, -a).toString() +\r\n    (a !== 0\r\n        ? \" \\\\\\\\ \\\\\\\\ c_{\" +\r\n          index +\r\n          \"}(t) = \" +\r\n          realCoeficientValue(k / a) +\r\n          \"(1 - e^{\" +\r\n          realCoeficientValue(-a) +\r\n          \"t})u(t)\"\r\n        : \" \\\\\\\\ \\\\\\\\ c_{\" + index + \"}(t) = tu(t)\") +\r\n    \"\\\\end{cases}$$\";\r\n\r\nconst rampResponse = (k, a) =>\r\n    \"$$\\\\begin{cases}G(s) = \" +\r\n    TransferFunction.Shortcuts.$1(k, -a).toString() +\r\n    (a !== 0\r\n        ? \" \\\\\\\\ \\\\\\\\ c(t) = \" +\r\n          realCoeficientValue(k / a) +\r\n          \"(t\" +\r\n          realAdditionTermsValue(-1 / a) +\r\n          \")u(t)\" +\r\n          realAdditionalCoefficientValue(k / (a * a)) +\r\n          \"e^{\" +\r\n          realCoeficientValue(-a) +\r\n          \"t}u(t) \"\r\n        : \"} \\\\\\\\ \\\\\\\\ c(t) = t^2u(t) \") +\r\n    \"\\\\end{cases}$$\";\r\n\r\nconst indexedRampResponse = (k, a, index) =>\r\n    \"$$\\\\begin{cases}G_{\" +\r\n    index +\r\n    \"}(s) = \" +\r\n    TransferFunction.Shortcuts.$1(k, -a).toString() +\r\n    (a !== 0\r\n        ? \" \\\\\\\\ \\\\\\\\ c_{\" +\r\n          index +\r\n          \"}(t) = \" +\r\n          realCoeficientValue(k / a) +\r\n          \"(t\" +\r\n          realAdditionTermsValue(-1 / a) +\r\n          \")u(t)\" +\r\n          realAdditionalCoefficientValue(k / (a * a)) +\r\n          \"e^{\" +\r\n          realCoeficientValue(-a) +\r\n          \"t}u(t) \"\r\n        : \"} \\\\\\\\ \\\\\\\\ c_{\" + index + \"}(t) = t^2u(t) \") +\r\n    \"\\\\end{cases}$$\";\r\n\r\nconst symbols = {\r\n    in: \"t\",\r\n    out: \"c\",\r\n};\r\n\r\nconst FirstOrderTransferFunctionExamining = () => {\r\n\r\n    const [a, $a] = useState(getCache(\"ch3-1tf\", \"a\", 1.0));\r\n    const [k, $k] = useState(getCache(\"ch3-1tf\", \"k\", 1.0));\r\n    const [t_i, $t_i] = useState(getCache(\"ch3-1tf\", \"t_i\", 0));\r\n    const [t_f, $t_f] = useState(getCache(\"ch3-1tf\", \"t_f\", 5));\r\n    const [inputSignal, $inputSignal] = useState(getCache(\"ch3-1tf\", \"inputSignal\", 0)); // 0 as step | 1 as ramp === assume this state's value as the gradiant value of th input signal function\r\n    // gradiant of u(t) is 0 and unit ramp is one\r\n    const [systems, $systems] = useState([]);\r\n    const [traces, $traces] = useState([]);\r\n    const [response, $response] = useState(null);\r\n    const [thickness, $thickness] = useState(1.0); // graph line thickness\r\n    const [isGraphCatured, $graphCaptured] = useState(false);\r\n    const [is3DPlotEnabled, $3DPlotEnabled] = useState(false);\r\n    const [N, $N] = useState(1000);\r\n\r\n    const toggle3DPlot = () => $3DPlotEnabled(!is3DPlotEnabled);\r\n\r\n    const capture = () => {\r\n        const capturedSystems = [...systems];\r\n        const index = capturedSystems.findIndex(\r\n            (sys) =>\r\n                sys.a === +a && sys.k === +k && sys.inputSignal === inputSignal\r\n        );\r\n        if (index === -1) {\r\n            // if current system has not been captured before => then capture it; o.w. its not needed\r\n            capturedSystems.push({\r\n                a: +a,\r\n                k: +k,\r\n                inputSignal,\r\n                thickness,\r\n                legend:\r\n                    \"$$\" +\r\n                    symbols.out +\r\n                    \"_{\" +\r\n                    (systems.length + 1).toString() +\r\n                    \"}$$\",\r\n            });\r\n            $systems(capturedSystems);\r\n            $graphCaptured(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        let g_t = null;\r\n        if (!inputSignal) {\r\n            // step\r\n            g_t = calculus.LTI.step(1, +k, +a);\r\n            $response(stepResponse(+k, +a));\r\n        } else {\r\n            g_t = calculus.LTI.ramp(1, +k, +a);\r\n            $response(rampResponse(+k, +a));\r\n        }\r\n        const [x, y] = calculus.pointify(g_t, +t_i, +t_f, +N);\r\n        // parameters changed => load again all traces(traces); this is for when shared params changes(ti, tf, ...),\r\n        // so that the traces will be loaded with new conditions\r\n        const all = systems.map((e, index) => {\r\n            let g_t = null;\r\n\r\n            if (!e.inputSignal) {\r\n                // step\r\n                g_t = calculus.LTI.step(1, e.k, e.a);\r\n            } else {\r\n                g_t = calculus.LTI.ramp(1, e.k, e.a);\r\n            }\r\n            const [xi, yi] = calculus.pointify(g_t, +t_i, +t_f, +N);\r\n\r\n            return {\r\n                x: xi,\r\n                y: yi,\r\n                z: is3DPlotEnabled ? Array(xi.length).fill(0) : null,\r\n                line: {\r\n                    // color: e.color...\r\n                    width: e.thickness,\r\n                },\r\n                // color,\r\n                type: \"scatter\" + (is3DPlotEnabled ? \"3d\" : \"\"),\r\n                mode: \"lines\",\r\n                name: e.legend,\r\n            };\r\n        });\r\n\r\n        const index = systems.findIndex(\r\n            (sys) =>\r\n                sys.a === +a && sys.k === +k && sys.inputSignal === inputSignal\r\n        );\r\n        if (index === -1)\r\n            // if current system isnt in traces list => add it temperory to plot\r\n            all.push({\r\n                x,\r\n                y,\r\n                z: is3DPlotEnabled ? Array(x.length).fill(0) : null,\r\n                // color,\r\n                line: {\r\n                    // color:'rgb(17, 157, 255)'\r\n                    width: thickness,\r\n                },\r\n                type: \"scatter\" + (is3DPlotEnabled ? \"3d\" : \"\"),\r\n                mode: \"lines\",\r\n                name: `${symbols.out}(${symbols.in})`,\r\n            });\r\n\r\n        $traces(all);\r\n        cacheParameters(\"ch3-1tf\", {a, k, t_i, t_f, inputSignal});\r\n    }, [a, k, t_i, t_f, inputSignal, is3DPlotEnabled, thickness, systems, N]);\r\n\r\n    useEffect(() => {\r\n        $graphCaptured(false);\r\n    }, [a, k, inputSignal]);\r\n\r\n    const update = (changes) => {\r\n        if (changes) $thickness(changes.thickness);\r\n        //and so...\r\n    };\r\n    return (\r\n        <MainCard>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Typography>\r\n                    <h2 className=\"chapter-section-title\">\r\n                        توابع تبدیل مرتبه یک\r\n                    </h2>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Grid container direction=\"column\" spacing={1}>\r\n                    <Grid\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        item\r\n                    >\r\n                        <FirstOrderTfLecture />\r\n                    </Grid>\r\n\r\n                    <Grid sx={{ margin: \"auto\", width: \"100%\" }} item>\r\n                        <SubCard sx={{ direction: \"ltr\" }}>\r\n                            <Grid\r\n                                id=\"formulaBox\"\r\n                                sx={{ margin: \"auto\" }}\r\n                                container\r\n                                direction=\"row\"\r\n                            >\r\n                                {systems.map((sys, index) => {\r\n                                    let formula = null;\r\n                                    if (!sys.inputSignal)\r\n                                        formula = indexedStepResponse(\r\n                                            sys.k,\r\n                                            sys.a,\r\n                                            index + 1\r\n                                        );\r\n                                    else\r\n                                        formula = indexedRampResponse(\r\n                                            sys.k,\r\n                                            sys.a,\r\n                                            index + 1\r\n                                        );\r\n\r\n                                    return (\r\n                                        <Grid\r\n                                            style={{ fontSize: \"18px\" }}\r\n                                            md={6}\r\n                                            sm={12}\r\n                                            item\r\n                                        >\r\n                                            <MathJax>{formula}</MathJax>\r\n                                        </Grid>\r\n                                    );\r\n                                })}\r\n                                {!isGraphCatured && (\r\n                                    <Grid\r\n                                        style={{ fontSize: \"18px\" }}\r\n                                        md={6}\r\n                                        sm={12}\r\n                                    >\r\n                                        <MathJax>{response}</MathJax>\r\n                                    </Grid>\r\n                                )}\r\n                            </Grid>\r\n                        </SubCard>\r\n                    </Grid>\r\n                    <Grid\r\n                        spacing={2}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        container\r\n                    >\r\n                        <Grid\r\n                            md={3}\r\n                            sm={12}\r\n                            xs={12}\r\n                            sx={{ marginTop: \"1%\", width: \"100%\" }}\r\n                            container\r\n                        >\r\n                            <Grid xs={12}>\r\n                                <FirstOrderTfParameters\r\n                                    a={a}\r\n                                    k={k}\r\n                                    t_i={t_i}\r\n                                    t_f={t_f}\r\n                                    $a={$a}\r\n                                    $k={$k}\r\n                                    $t_i={$t_i}\r\n                                    $t_f={$t_f}\r\n                                    inputSignal={inputSignal}\r\n                                    $inputSignal={$inputSignal}\r\n                                    N={N}\r\n                                    $N={$N}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid md={9} sm={12} xs={12} item>\r\n                            <SubCard>\r\n                                <GraphMenu\r\n                                    capture={capture}\r\n                                    reset={() => $systems([])}\r\n                                    update={(changes) => update(changes)}\r\n                                    toggle3DPlot={toggle3DPlot}\r\n                                />\r\n                            </SubCard>\r\n                            <hr />\r\n                            <Grid xs={12} item>\r\n                                <SubCard>\r\n                                    <PlotlyBox\r\n                                        title=\"پاسخ پله/رمپ\"\r\n                                        traces={traces}\r\n                                    />\r\n                                </SubCard>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default FirstOrderTransferFunctionExamining;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// constant\r\nconst headerSX = {\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n// ==============================|| CUSTOM MAIN CARD ||============================== //\r\n\r\nconst MainCard = forwardRef(\r\n    (\r\n        {\r\n            border = true,\r\n            boxShadow,\r\n            children,\r\n            content = true,\r\n            contentClass = '',\r\n            contentSX = {},\r\n            darkTitle,\r\n            secondary,\r\n            shadow,\r\n            sx = {},\r\n            title,\r\n            ...others\r\n        },\r\n        ref\r\n    ) => {\r\n        const theme = useTheme();\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                {...others}\r\n                sx={{\r\n                    overflowY: 'auto',\r\n                    border: border ? '1px solid' : 'none',\r\n                    borderColor: theme.palette.primary[200] + 75,\r\n                    ':hover': {\r\n                        boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\r\n                    },\r\n                    ...sx\r\n                }}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\r\n                {darkTitle && title && (\r\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\r\n                )}\r\n\r\n                {/* content & header divider */}\r\n                {title && <Divider />}\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={contentSX} className={contentClass}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nMainCard.propTypes = {\r\n    border: PropTypes.bool,\r\n    boxShadow: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    contentSX: PropTypes.object,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    shadow: PropTypes.string,\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nexport default MainCard;\r\n","import SubCard from \"./SubCard\";\r\nimport { MapInteractionCSS } from \"react-map-interaction\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PinchPanCard = ({ children, title, border }) => {\r\n    const customization = useSelector((state) => state.customization);\r\n    return (\r\n        <SubCard title={title} darkBorder={border} sx={{ direction: \"rtl\" }}>\r\n            <MapInteractionCSS disableZoom={!customization.enableZoom}>\r\n                {children}\r\n            </MapInteractionCSS>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default PinchPanCard;\r\n"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","axisOffsets","psize","grids","CoordinateSystemContent","elementDimensions","position","isPositionOutside","point","x","y","select","extra","options","pointSize","pointColor","scale","viewpoint","useState","$x","$y","$grids","$pointSize","update","e","xmax","width","ymax","height","dx","calculus","dy","vx","vy","updatePointLocation","useCallback","px","py","index","objectPoint","document","getElementById","style","setProperty","registerPoint","isExtra","isMouseDown","setMouseDown","isMouseDownForXpoint","setMouseDownForXpoint","Number","ndx","ndy","documentElement","onMouseEnter","onMouseLeave","onMouseMove","onMouseUp","className","onMouseDown","outOfRange","num","range","Math","abs","props","defaultScale","$scale","container","xs","item","textAlign","variant","value","sx","onChange","target","InputProps","startAdornment","endAdornment","parameters","setters","labels","units","Fragment","Array","map","param","i","md","sm","capture","reset","toggle3DPlot","is3DModeEnabled","set3DModeEnaabled","thicknessSliderPercentage","setThicknessSliderPercentage","thickness","direction","color","component","onClick","spacing","mt","alignItems","traces","title","logX","hideX","hideY","yRange","hideLegends","customization","useSelector","state","plot","data","layout","showlegend","margin","t","l","r","b","xaxis","rangemode","zeroline","type","visible","yaxis","hoverlabel","align","boxmode","font","legend","orientation","enableZoom","MapInteractionCSS","disablePan","PinchPanCard","border","Grid","m","Typography","lineHeight","MathJax","fontSize","marginTop","marginBottom","src","simple_LTI_system","alt","parameterFormulas","parameterUnits","k","a","$k","$a","t_i","t_f","$t_i","$t_f","inputSignal","$inputSignal","N","$N","SubCard","darkBorder","pr","pb","Button","textTransform","gridSpacing","SimpleParametersList","CoordinateSystem","realCoeficientValue","coef","realAdditionTermsValue","term","realAdditionalCoefficientValue","result","symbols","getCache","systems","$systems","$traces","response","$response","$thickness","isGraphCatured","$graphCaptured","is3DPlotEnabled","$3DPlotEnabled","g_t","TransferFunction","toString","rampResponse","stepResponse","all","xi","z","length","fill","line","mode","name","findIndex","sys","push","cacheParameters","MainCard","formula","indexedRampResponse","indexedStepResponse","GraphMenu","capturedSystems","changes","PlotlyBox","headerSX","mr","forwardRef","ref","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","others","theme","useTheme","overflowY","borderColor","palette","primary","action","disableZoom"],"sourceRoot":""}