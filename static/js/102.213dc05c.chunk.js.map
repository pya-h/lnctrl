{"version":3,"file":"static/js/102.213dc05c.chunk.js","mappings":"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","sources":["views/topics/chapter05/root-locus/lecture.jsx","views/topics/chapter05/root-locus/parameters.jsx","views/topics/chapter05/root-locus/index.jsx","views/ui-component/progressbar/ProgressBar.jsx"],"sourcesContent":["import SubCard from \"views/ui-component/cards/SubCard\";\r\nimport { Grid } from \"@mui/material\";\r\nimport \"../../topics.css\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { mathjaxSpaces } from \"toolshed\";\r\n\r\nconst t_riseFormula =\r\n    \"$$ t_{pk} = \\\\frac{k\\\\pi}{\\\\omega_n \\\\sqrt{1 - \\\\zeta^2}} = \\\\frac{k\\\\pi}{\\\\omega_d} \" +\r\n    mathjaxSpaces(3) +\r\n    \" k = 1, 2, 3, ...\\\\\\\\\" +\r\n    \" t_{rise} = t_p = \\\\frac{\\\\pi}{\\\\omega_d} $$\";\r\nconst overshootFormula = `$$M_p = e^{\\\\frac{-\\\\zeta \\\\pi}{\\\\sqrt{1 - \\\\zeta^2}}} = e ^ {-\\\\pi cot\\\\theta} \\\\\\\\\r\n    \\\\zeta = \\\\frac{-\\\\ln M_p}{\\\\sqrt{\\\\pi^2 + \\\\lgroup \\\\ln M_p \\\\rgroup ^ 2}} $$`;\r\n\r\nconst RootLocusLecture = () => {\r\n    return (\r\n        <SubCard\r\n            title=\"طراحی سیستم از طریق مشخصات میرایی\"\r\n            darkBorder={true}\r\n            sx={{ direction: \"rtl\" }}\r\n            spacing={gridSpacing}\r\n        >\r\n            <Grid className=\"lecture-text\" style={{ fontSize: \"20px\" }} item>\r\n                <p>&nbsp; &nbsp; &nbsp; &nbsp; \r\n                    زمان اوج (Rise Time)</p>\r\n            </Grid>\r\n            <Grid style={{ fontSize: \"20px\" }} item>\r\n                <MathJax>{t_riseFormula}</MathJax>\r\n            </Grid>\r\n            <Grid className=\"lecture-text\" style={{ fontSize: \"20px\" }} item>\r\n                <p>&nbsp; &nbsp; &nbsp; &nbsp; بالازدگی (Overshoot)</p>\r\n            </Grid>\r\n            <Grid style={{ fontSize: \"20px\" }} item>\r\n                <MathJax>{overshootFormula}</MathJax>\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default RootLocusLecture;\r\n","import { Button, Grid } from \"@mui/material\";\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport SimpleParametersList from \"views/input-boxes/SimpleParametersList\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport ProgressBar from \"views/ui-component/progressbar/ProgressBar\";\r\n\r\nconst startLebels = [\r\n    \"$$Num = [$$\",\r\n    \"$$Den = [$$\",\r\n    \"$$k_{min} = $$\",\r\n    \"$$k_{max} = $$\",\r\n    \"$$N = $$\",\r\n];\r\nconst endLabels = [\"$$]$$\", \"$$]$$\", null, null, null];\r\n\r\nconst RootLocusParameters = ({\r\n    rawNumerator,\r\n    rawDenominator,\r\n    $rawNumerator,\r\n    $rawDenominator,\r\n    k_min,\r\n    k_max,\r\n    $k_min,\r\n    $k_max,\r\n    updatePlot,\r\n    responseTime,\r\n    N,\r\n    $N,\r\n}) => (\r\n    <SubCard\r\n        darkBorder\r\n        title=\"پارامترها\"\r\n        sx={{\r\n            direction: \"ltr\",\r\n            textAlign: \"right\",\r\n            height: \"100%\",\r\n        }}\r\n    >\r\n        <Grid spacing={gridSpacing} container direction=\"row\">\r\n            <SimpleParametersList\r\n                parameters={[rawNumerator, rawDenominator, k_min, k_max, N]}\r\n                setters={[$rawNumerator, $rawDenominator, $k_min, $k_max, $N]}\r\n                labels={startLebels}\r\n                units={endLabels}\r\n            />\r\n            <Grid md={12} sm={4} xs={6} item>\r\n                <Button\r\n                    onClick={updatePlot}\r\n                    style={{\r\n                        width: \"100%\",\r\n                        textTransform: \"none\",\r\n                        background: \"coral\",\r\n                    }}\r\n                    variant=\"contained\"\r\n                >\r\n                    مشاهده\r\n                </Button>\r\n            </Grid>\r\n            <Grid xs={12} sx={{ mt: 1 }} item>\r\n                <ProgressBar id=\"progressbar\" />\r\n            </Grid>\r\n            {responseTime && (\r\n                <Grid xs={12} sx={{ mt: 1 }} item>\r\n                    <p style={{ textAlign: \"center\", color: \"coral\" }}>\r\n                        مدت زمان عملیات: {responseTime} ثانیه\r\n                    </p>\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    </SubCard>\r\n);\r\n\r\nexport default RootLocusParameters;\r\n","import RootLocusLecture from \"./lecture\";\r\n\r\n// project imports\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport calculus from \"math/calculus\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport GraphBox from \"math/GraphBox\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport RootLocusParameters from \"./parameters\";\r\nimport TransferFunction from \"math/algebra/functions/transfer\";\r\nimport { gridSpacing } from \"store/constant\";\r\n// import Describer from \"math/describer\";\r\nimport MainCard from \"views/ui-component/cards/MainCard\";\r\nimport { makeProgress } from \"toolshed\";\r\n\r\nconst stepResponse = (tf, index = undefined) =>\r\n    \"$$ \" + tf.label(\"G\", index) + \" $$\";\r\n\r\nconst RootLocus = () => {\r\n    const [rawNumerator, $rawNumerator] = useState(\"1\");\r\n    const [rawDenominator, $rawDenominator] = useState(\"1 5 12\");\r\n\r\n    const [k_min, $k_min] = useState(0);\r\n    const [k_max, $k_max] = useState(50);\r\n    // gradiant of u(t) is 0 and unit ramp is one\r\n    const [trace, $trace] = useState({ x: [], y: [] });\r\n    const [G_s, $G_s] = useState(null);\r\n    // const [GInfo, $GInfo] = useState(\"\");\r\n    const [response, $response] = useState(null);\r\n    const [responseTime, setResponseTime] = useState(null); //the time that takes for plotting rootlocus\r\n    const [N, $N] = useState(1000);\r\n    //update\r\n    useEffect(() => {\r\n        // k * num / den\r\n        $G_s(\r\n            new TransferFunction(\r\n                calculus.stringToArray(rawNumerator),\r\n                calculus.stringToArray(rawDenominator)\r\n            )\r\n        );\r\n    }, [rawNumerator, rawDenominator]);\r\n\r\n    const updatePlot = async () => {\r\n        try {\r\n            // const updateProgressBar =\r\n            if (G_s) {\r\n                // $GInfo(new Describer(G_s));\r\n                const progressBar = document.getElementById(\"progressbar\");\r\n                const startTime = new Date();\r\n                const [x, y] = await G_s.rootLocus(\r\n                    +k_min,\r\n                    +k_max,\r\n                    progressBar, // send progress bar element to root locus for showing progres and preventing the browser from locking\r\n                    +N\r\n                );\r\n                const endTime = new Date();\r\n                $response(stepResponse(G_s));\r\n                $trace({\r\n                    x,\r\n                    y,\r\n                    type: \"scatter\",\r\n                    mode: \"markers\",\r\n                    name: `root-locus`,\r\n                });\r\n                setResponseTime((+endTime - +startTime) / 1000);\r\n\r\n                setTimeout(async () => {\r\n                    await makeProgress(progressBar, 0);\r\n                }, [1000]);\r\n            }\r\n        } catch (ex) {\r\n            console.log(ex);\r\n        }\r\n    };\r\n    return (\r\n        <MainCard>\r\n            <Grid item spacing={gridSpacing}>\r\n                <h2 className=\"chapter-section-title\">\r\n                    مکان هندسی قطب های سیستم\r\n                </h2>\r\n            </Grid>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Grid container direction=\"column\" spacing={gridSpacing}>\r\n                    <Grid\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        item\r\n                    >\r\n                        <RootLocusLecture />\r\n                    </Grid>\r\n\r\n                    <Grid sx={{ margin: \"auto\", width: \"100%\" }} item>\r\n                        <SubCard sx={{ direction: \"ltr\" }}>\r\n                            <Grid\r\n                                id=\"formulaBox\"\r\n                                sx={{ margin: \"auto\" }}\r\n                                container\r\n                                direction=\"row\"\r\n                            >\r\n                                <MathJax>{response}</MathJax>\r\n                            </Grid>\r\n                        </SubCard>\r\n                    </Grid>\r\n                    <Grid\r\n                        spacing={2}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        container\r\n                    >\r\n                        <Grid\r\n                            md={4}\r\n                            sm={12}\r\n                            xs={12}\r\n                            sx={{ marginTop: \"1%\", width: \"100%\" }}\r\n                            container\r\n                        >\r\n                            <Grid xs={12}>\r\n                                <RootLocusParameters\r\n                                    rawNumerator={rawNumerator}\r\n                                    rawDenominator={rawDenominator}\r\n                                    k_min={k_min}\r\n                                    k_max={k_max}\r\n                                    $rawNumerator={$rawNumerator}\r\n                                    $rawDenominator={$rawDenominator}\r\n                                    $k_min={$k_min}\r\n                                    $k_max={$k_max}\r\n                                    updatePlot={updatePlot}\r\n                                    responseTime={responseTime}\r\n                                    N={N}\r\n                                    $N={$N}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid md={8} sm={12} xs={12} item>\r\n                            <Grid lg={12} md={12} sm={12} xs={12} item>\r\n                                <SubCard>\r\n                                    <GraphBox\r\n                                        title=\"مکان هندسی\"\r\n                                        traces={[trace]}\r\n                                    />\r\n                                </SubCard>\r\n                            </Grid>\r\n                            <hr />\r\n                            {/* <Grid lg={12} md={12} sm={12} xs={12} item>\r\n                                {GInfo && <GInfo.Explain />}\r\n                            </Grid> */}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default RootLocus;\r\n","const ProgressBar = ({\r\n    id,\r\n    color = \"white\",\r\n    background = \"lightgreen\",\r\n    borderRadius = \"10px\",\r\n}) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"0%\",\r\n                textAlign: \"right\",\r\n                background,\r\n                color,\r\n                borderRadius,\r\n                padding: \"1%\",\r\n            }}\r\n            id={id}\r\n        ></div>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;\r\n"],"names":["t_riseFormula","mathjaxSpaces","SubCard","title","darkBorder","sx","direction","spacing","gridSpacing","Grid","className","style","fontSize","item","MathJax","startLebels","endLabels","rawNumerator","rawDenominator","$rawNumerator","$rawDenominator","k_min","k_max","$k_min","$k_max","updatePlot","responseTime","N","$N","textAlign","height","container","SimpleParametersList","parameters","setters","labels","units","md","sm","xs","Button","onClick","width","textTransform","background","variant","mt","ProgressBar","id","color","stepResponse","tf","index","undefined","label","useState","x","y","trace","$trace","G_s","$G_s","response","$response","setResponseTime","useEffect","TransferFunction","calculus","progressBar","document","getElementById","startTime","Date","rootLocus","endTime","type","mode","name","setTimeout","makeProgress","console","log","MainCard","margin","marginTop","lg","GraphBox","traces","borderRadius","padding"],"sourceRoot":""}