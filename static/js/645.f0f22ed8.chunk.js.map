{"version":3,"file":"static/js/645.f0f22ed8.chunk.js","mappings":"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","sources":["views/ui-component/buttons/Switcher.jsx","views/topics/chapter03/second-order-tf-examining/by-params/lecture.jsx","views/topics/chapter03/second-order-tf-examining/by-params/parameters.jsx","views/topics/chapter03/second-order-tf-examining/by-params/index.jsx","views/topics/chapter03/second-order-tf-examining/by-poles/lecture.jsx","views/topics/chapter03/second-order-tf-examining/by-poles/parameters.jsx","views/topics/chapter03/second-order-tf-examining/by-poles/index.jsx","views/topics/chapter03/second-order-tf-examining/index.jsx","../node_modules/@mui/material/Button/buttonClasses.js","../node_modules/@mui/material/ButtonGroup/ButtonGroupContext.js","../node_modules/@mui/material/Button/Button.js"],"sourcesContent":["import Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { purple } from \"@mui/material/colors\";\r\nimport { Grid } from \"@mui/material\";\r\nimport \"./buttons.css\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Switcher({ setSwitch, choices}) {\r\n    const [selected, setSelected] = useState(0); // 0 right, 1 left\r\n\r\n    // const selectedStyle = {variant: \"contained\", style: { width: '75%', backgroundColor: purple[600], color: 'white'}};\r\n    // const notSelectedStyle = {variant: \"outline\", style:{width: '25%' }};\r\n\r\n    return (\r\n        <Stack \r\n            className=\"switcher-stack\"\r\n            // sx={{py: 1}}\r\n            xs={12}\r\n            spacing={1}\r\n            direction=\"row\"\r\n        >\r\n            <Grid xs={12} dir=\"rtl\" container>\r\n                <Button\r\n                    onClick={() => {\r\n                        setSelected(1);\r\n                        if(choices.length > 1)\r\n                            setSwitch(1);\r\n                    }}\r\n                    className=\"switcher-button\"\r\n                    variant={\"outlined\"}\r\n                    style={{\r\n                        width: selected ? \"75%\" : \"25%\",\r\n                        background: selected ? purple[600] : \"transparent\",\r\n                        color: selected ? \"white\" : purple[700],\r\n                    }}\r\n                    // style={{width: selected ? '75%' : '25%'}}\r\n                    // {... (selected ? selectedStyle: notSelectedStyle)}\r\n                >\r\n                    {choices[1]}\r\n                </Button>\r\n                <Button\r\n                    onClick={() => {\r\n                        setSelected(0);\r\n                        if(choices.length > 0)\r\n                            setSwitch(0);\r\n                    }}\r\n                    className=\"switcher-button\"\r\n                    // {... (!selected ? selectedStyle: notSelectedStyle)}\r\n                    color=\"primary\"\r\n                    variant={\"contained\"}\r\n                    style={{\r\n                        width: !selected ? \"75%\" : \"25%\",\r\n                        background: !selected ? purple[600] : \"transparent\",\r\n                        color: !selected ? \"white\" : purple[700],\r\n                    }}\r\n                >\r\n                    {choices[0]}\r\n                </Button>\r\n            </Grid>\r\n        </Stack>\r\n    );\r\n}\r\n","import SubCard from \"views/ui-component/cards/SubCard\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport \"../../../topics.css\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { mathjaxSpaces } from \"toolshed\";\r\n\r\nconst sotfExtremeMortalFormula =\r\n    \"$$ s_{1,2} = -\\\\zeta\\\\omega_n \\\\pm\\\\omega_n \\\\sqrt{\\\\zeta ^ 2 - 1} \\\\\\\\ \" +\r\n    \" G(s) = \\\\frac{\\\\omega_n ^ 2}{s^2 + 2\\\\zeta\\\\omega_n s + \\\\omega_n ^ 2} \\\\\\\\\" +\r\n    \"C(s) = \\\\frac{\\\\omega_n ^ 2}{s(s^2 + 2\\\\zeta\\\\omega_n s + \\\\omega_n ^ 2)} \\\\\\\\\" +\r\n    \"\\\\Longrightarrow c_{ss} = \\\\lim\\\\limits_{s \\\\to 0}sC(s) = \\\\frac{\\\\omega_n ^ 2}{\\\\omega_n ^ 2} = 1 $$\";\r\nconst sotfTransientStepResponseFormula =\r\n    \"$$c(t) = 1 - e^{-\\\\zeta\\\\omega_n t} \\\\lgroup cos\\\\omega_d t + \\\\frac{\\\\zeta}{\\\\sqrt{1 - \\\\zeta^2}}sin\\\\omega_d t \\\\rgroup, \" +\r\n    mathjaxSpaces(3) +\r\n    \"\\\\omega_d = \\\\omega_n \\\\sqrt{1 - \\\\zeta^2} \\\\\\\\ \" +\r\n    \" \\\\\\\\ c(t) = 1 - \\\\frac{1}{\\\\sqrt{\\\\zeta ^ 2 - 1}}e^{-\\\\zeta \\\\omega_n t}sin(\\\\omega_n \\\\lgroup\\\\sqrt{\\\\zeta ^ 2 - 1}\\\\rgroup t + cos^{-1}\\\\zeta) \\\\\\\\\" +\r\n    \"c(t) = 1 - \\\\frac{e ^ {-\\\\zeta \\\\omega_n t}}{\\\\sqrt{1 - \\\\zeta ^ 2}}sin \\\\lgroup \\\\omega_d t + tan^{-1}\\\\frac{\\\\sqrt{1 - \\\\zeta^2}}{\\\\zeta} \\\\rgroup$$\";\r\n\r\nconst sotfTransientImpulseResponseFormula =\r\n    \"$$c(t) = \\\\frac{\\\\omega_n}{\\\\sqrt{\\\\zeta ^ 2 - 1}}e^{-\\\\zeta \\\\omega_n t}sin(\\\\omega_n \\\\lgroup\\\\sqrt{\\\\zeta ^ 2 - 1}\\\\rgroup t)$$\";\r\n\r\nconst SOTFByParamsLecture = () => {\r\n    return (\r\n        <SubCard\r\n            title=\"تابع تبدیل مرتبه دو- بررسی پارامتری\"\r\n            darkBorder={true}\r\n            sx={{ direction: \"rtl\" }}\r\n            spacing={gridSpacing}\r\n        >\r\n            <Typography>\r\n                <Grid\r\n                    className=\"lecture-text\"\r\n                    style={{ fontSize: \"20px\" }}\r\n                    item\r\n                >\r\n                    <p>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; پاسخ سیستم مرتبه دوم به\r\n                        ورودی پله یکی از سه حالت زیر می باشد:\r\n                    </p>\r\n                </Grid>\r\n                <SubCard>\r\n                    <Grid style={{ fontSize: \"20px\" }} item>\r\n                        <MathJax>{sotfExtremeMortalFormula}</MathJax>\r\n                    </Grid>\r\n                    <Grid\r\n                        className=\"lecture-text\"\r\n                        style={{ fontSize: \"20px\" }}\r\n                        item\r\n                    >\r\n                        <p>\r\n                            &nbsp; &nbsp; &nbsp; &nbsp; پاسخ حالت گذرای ورودی\r\n                            پله:\r\n                        </p>\r\n                    </Grid>\r\n                    <Grid style={{ fontSize: \"20px\" }} item>\r\n                        <MathJax>{sotfTransientStepResponseFormula}</MathJax>\r\n                    </Grid>\r\n                    <Grid\r\n                        className=\"lecture-text\"\r\n                        style={{ fontSize: \"20px\" }}\r\n                        item\r\n                    >\r\n                        <p>\r\n                            &nbsp; &nbsp; &nbsp; &nbsp; پاسخ حالت گذرای ورودی\r\n                            ضربه:\r\n                        </p>\r\n                    </Grid>\r\n                    <Grid style={{ fontSize: \"20px\" }} item>\r\n                        <MathJax>{sotfTransientImpulseResponseFormula}</MathJax>\r\n                    </Grid>\r\n                </SubCard>\r\n            </Typography>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default SOTFByParamsLecture;\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport CoordinateSystem from \"views/input-boxes/CoordinateSystem\";\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport SimpleParametersList from \"views/input-boxes/SimpleParametersList\";\r\n\r\nconst parameterFormulas = [\r\n    \"$$\\\\omega_{n} = $$\",\r\n    \"$$\\\\zeta = $$\",\r\n    \"$$t_i = $$\",\r\n    \"$$t_f = $$\",\r\n    \"$$N = $$\"\r\n];\r\nconst parameterUnits = [null, null, \"$$sec$$\", \"$$sec$$\", null];\r\n\r\nconst SOTFByParamsInputs = ({\r\n    w_n,\r\n    zeta,\r\n    $w_n,\r\n    $zeta,\r\n    t_i,\r\n    t_f,\r\n    $t_i,\r\n    $t_f,\r\n    N,\r\n    $N\r\n}) => {\r\n    const grids = 10;\r\n    const checkSetW_N = (value) => value && $w_n(value);\r\n    return (\r\n        <SubCard\r\n            darkBorder\r\n            title=\"پارامترها\"\r\n            sx={{\r\n                direction: \"ltr\",\r\n                textAlign: \"right\",\r\n                height: \"100%\",\r\n            }}\r\n        >\r\n            <Grid spacing={0.6} container direction=\"row\">\r\n                <SimpleParametersList\r\n                    parameters={[w_n, zeta, t_i, t_f, N]}\r\n                    setters={[\r\n                        checkSetW_N,\r\n                        $zeta,\r\n                        $t_i,\r\n                        $t_f,\r\n                        $N\r\n                    ]}\r\n                    labels={parameterFormulas}\r\n                    units={parameterUnits}\r\n                />\r\n\r\n                <Grid sx={{ mt: 1 }} md={12} sm={4} xs={6} item>\r\n                    <Typography style={{ textAlign: \"center\" }}>\r\n                        مقدار پارامترها را از اینجا هم می توانید تغییر دهید\r\n                    </Typography>\r\n\r\n                    <CoordinateSystem\r\n                        point={{\r\n                            x: w_n,\r\n                            y: 0,\r\n                            select: ({x}) => {\r\n                                if(x) $w_n(x)\r\n                            }\r\n                        }}\r\n                        extra={{\r\n                            x: 0,\r\n                            y: zeta,\r\n                            select: ({y}) => {\r\n                                if(y) $zeta(y)\r\n                            }\r\n                        }}\r\n                        options={{ pointSize: 10, grids }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default SOTFByParamsInputs;\r\n","import SOTFByParamsLecture from \"./lecture\";\r\n\r\n// project imports\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport calculus from \"math/calculus\";\r\nimport { useState, useEffect } from \"react\";\r\nimport GraphMenu from \"views/plotter/GraphMenu\";\r\nimport { Grid } from \"@mui/material\";\r\nimport GraphBox from \"views/plotter/GraphBox\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport SOTFByParamsInputs from \"./parameters\";\r\nimport TransferFunction from \"math/algebra/functions/transfer\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport Describer from \"math/describer\";\r\n\r\nconst stepResponse = (tf, c_t = tf.step(), index = undefined) =>\r\n    \"$$\\\\begin{cases} \" +\r\n    tf.label(\"G\", index) +\r\n    \" \\\\\\\\ \\\\\\\\ \" +\r\n    c_t.label(\"c\", index) +\r\n    \"\\\\end{cases}$$\";\r\n\r\nconst symbols = {\r\n    in: \"t\",\r\n    out: \"c\",\r\n};\r\n\r\nconst SOTFExamineByParams = () => {\r\n    const [w_n, $w_n] = useState(1);\r\n    const [zeta, $zeta] = useState(0.1);\r\n    const [t_i, $t_i] = useState(0);\r\n    const [t_f, $t_f] = useState(5);\r\n    // gradiant of u(t) is 0 and unit ramp is one\r\n    const [systems, $systems] = useState([]);\r\n    const [traces, $traces] = useState([]);\r\n    const [thickness, $thickness] = useState(1.0); // graph line thickness\r\n    const [isGraphCatured, $graphCaptured] = useState(false);\r\n    const [is3DPlotEnabled, $3DPlotEnabled] = useState(false);\r\n    const [C_t, $C_t] = useState(null);\r\n    const [G_s, $G_s] = useState(null);\r\n    const [GInfo, $GInfo] = useState(\"\");\r\n    const [N, $N] = useState(1000);\r\n    const [response, $response] = useState(null);\r\n\r\n    const toggle3DPlot = () => $3DPlotEnabled(!is3DPlotEnabled);\r\n\r\n    //update\r\n    const capture = () => {\r\n        const capturedSystems = [...systems];\r\n        const index = capturedSystems.findIndex(\r\n            (sys) => w_n === sys.w_n && zeta === sys.zeta\r\n        );\r\n        if (index === -1) {\r\n            // if current system has not been captured before => then capture it; o.w. its not needed\r\n            capturedSystems.push({\r\n                w_n,\r\n                zeta,\r\n                G_s,\r\n                C_t,\r\n                thickness,\r\n                legend:\r\n                    \"$$\" +\r\n                    symbols.out +\r\n                    \"_{\" +\r\n                    (systems.length + 1).toString() +\r\n                    \"}$$\",\r\n            });\r\n            $systems(capturedSystems);\r\n            $graphCaptured(true);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        let gtf = TransferFunction.Shortcuts.$WnZ(w_n, zeta);\r\n        const tstep = gtf.step();\r\n        $G_s(gtf);\r\n        if (gtf) {\r\n            $C_t(tstep);\r\n            $GInfo(new Describer(gtf));\r\n            const [x, y] = calculus.pointify(tstep.$, +t_i, +t_f, +N);\r\n            $response(stepResponse(gtf));\r\n            // parameters changed => load again all traces(traces); this is for when shared params changes(ti, tf, ...),\r\n            // so that the traces will be loaded with new conditions\r\n            const all = systems.map((e, index) => {\r\n                const w_n2 = e.w_n * e.w_n;\r\n                let tgtf = new TransferFunction(\r\n                    [w_n2],\r\n                    [1, 2 * e.zeta * e.w_n, w_n2]\r\n                );\r\n\r\n                const [xi, yi] = calculus.pointify(tgtf.step().$, +t_i, +t_f, +N);\r\n\r\n                return {\r\n                    x: xi,\r\n                    y: yi,\r\n                    z: is3DPlotEnabled ? Array(xi.length).fill(0) : null,\r\n                    line: {\r\n                        // color: e.color...\r\n                        width: e.thickness,\r\n                    },\r\n                    // color,\r\n                    type: \"scatter\" + (is3DPlotEnabled ? \"3d\" : \"\"),\r\n                    mode: \"lines\",\r\n                    name: e.legend,\r\n                };\r\n            });\r\n\r\n            const index = systems.findIndex(\r\n                (sys) => +w_n === sys.w_n && +zeta === sys.zeta\r\n            );\r\n            if (index === -1)\r\n                // if current system isnt in traces list => add it temperory to plot\r\n                all.push({\r\n                    x,\r\n                    y,\r\n                    z: is3DPlotEnabled ? Array(x.length).fill(0) : null,\r\n                    // color,\r\n                    line: {\r\n                        // color:'rgb(17, 157, 255)'\r\n                        width: thickness,\r\n                    },\r\n                    type: \"scatter\" + (is3DPlotEnabled ? \"3d\" : \"\"),\r\n                    mode: \"lines\",\r\n                    name: `${symbols.out}(${symbols.in})`,\r\n                });\r\n\r\n            $traces(all);\r\n        }\r\n    }, [w_n, zeta, t_i, t_f, is3DPlotEnabled, thickness, systems, N]);\r\n\r\n    useEffect(() => {\r\n        $graphCaptured(false);\r\n    }, [w_n, zeta]);\r\n\r\n    const update = (changes) => {\r\n        if (changes) $thickness(changes.thickness);\r\n        //and so...\r\n    };\r\n    return (\r\n        <Grid container direction=\"column\" spacing={gridSpacing}>\r\n            <Grid\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    margin: \"auto\",\r\n                    direction: \"ltr\",\r\n                }}\r\n                item\r\n            >\r\n                <SOTFByParamsLecture />\r\n            </Grid>\r\n\r\n            <Grid sx={{ margin: \"auto\", width: \"100%\" }} item>\r\n                <SubCard sx={{ direction: \"ltr\" }}>\r\n                    <Grid\r\n                        id=\"formulaBox\"\r\n                        sx={{ margin: \"auto\" }}\r\n                        container\r\n                        direction=\"row\"\r\n                    >\r\n                        {systems instanceof Array &&\r\n                            systems.map((sys, index) => {\r\n                                const formula = stepResponse(\r\n                                    sys.G_s,\r\n                                    sys.C_t,\r\n                                    index + 1\r\n                                );\r\n\r\n                                return (\r\n                                    <Grid\r\n                                        style={{ fontSize: \"18px\" }}\r\n                                        xs={12}\r\n                                        item\r\n                                    >\r\n                                        <MathJax>{formula}</MathJax>\r\n                                    </Grid>\r\n                                );\r\n                            })}\r\n                        {!isGraphCatured && (\r\n                            <Grid style={{ fontSize: \"18px\" }} xs={12}>\r\n                                <MathJax>{response}</MathJax>\r\n                            </Grid>\r\n                        )}\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid\r\n                spacing={2}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    margin: \"auto\",\r\n                    direction: \"ltr\",\r\n                }}\r\n                container\r\n            >\r\n                <Grid\r\n                    md={3}\r\n                    sm={12}\r\n                    xs={12}\r\n                    sx={{ marginTop: \"1%\", width: \"100%\" }}\r\n                    container\r\n                >\r\n                    <Grid xs={12}>\r\n                        <SOTFByParamsInputs\r\n                            w_n={w_n}\r\n                            zeta={zeta}\r\n                            t_i={t_i}\r\n                            t_f={t_f}\r\n                            $w_n={$w_n}\r\n                            $zeta={$zeta}\r\n                            $t_i={$t_i}\r\n                            $t_f={$t_f}\r\n                            N={N}\r\n                            $N={$N}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid md={9} sm={12} xs={12} item>\r\n                    <SubCard>\r\n                        <GraphMenu\r\n                            capture={capture}\r\n                            reset={() => $systems([])}\r\n                            update={(changes) => update(changes)}\r\n                            toggle3DPlot={toggle3DPlot}\r\n                        />\r\n                    </SubCard>\r\n                    <hr />\r\n                    <Grid xs={12} item>\r\n                        <SubCard>\r\n                            <GraphBox title=\"پاسخ پله\" traces={traces} />\r\n                        </SubCard>\r\n                    </Grid>\r\n                    <hr />\r\n                    <Grid xs={12} item>\r\n                        {GInfo && <GInfo.Explain />}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default SOTFExamineByParams;\r\n","import SubCard from \"views/ui-component/cards/SubCard\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport \"views/topics/topics.css\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport { mathjaxSpaces } from \"toolshed\";\r\nimport { gridSpacing } from \"store/constant\";\r\n\r\nconst sotfExtremeMortalFormula =\r\n    \"$$ G(s) = \\\\frac{k}{(s + \\\\alpha) (s + \\\\beta)}\" +\r\n    mathjaxSpaces(3) +\r\n    \"\\\\alpha,\\\\beta > 0, \\\\quad \\\\alpha \\\\neq \\\\beta \\\\\\\\\" +\r\n    \"C(s) = \\\\frac{1}{s}G(s) = \\\\frac{k}{s(s + \\\\alpha) (s + \\\\beta)}\" +\r\n    \"\\\\Longrightarrow c_{ss} = \\\\lim\\\\limits_{s \\\\to 0}sC(s) = \\\\frac{k}{\\\\alpha\\\\beta} \\\\\\\\\" +\r\n    \"c(t) = (\\\\frac{k}{\\\\alpha\\\\beta} + \\\\frac{k}{\\\\alpha - \\\\beta} \\\\lgroup \\\\frac{e^{-\\\\alpha t}}{\\\\alpha} - \\\\frac{e^{-\\\\beta t}}{\\\\beta}\\\\rgroup)u(t)$$\";\r\nconst sotfCriticalFormula =\r\n    \"$$ G(s) = \\\\frac{k}{(s + \\\\alpha)^2}\" +\r\n    mathjaxSpaces(3) +\r\n    \"\\\\alpha,\\\\beta > 0, \\\\quad \\\\alpha = \\\\beta \\\\\\\\\" +\r\n    \"C(s) = \\\\frac{1}{s}G(s) = \\\\frac{k}{s(s + \\\\alpha)^2}\" +\r\n    \"\\\\Longrightarrow c_{ss} = \\\\lim\\\\limits_{s \\\\to 0}sC(s) = \\\\frac{k}{\\\\alpha^2} \\\\\\\\ \" +\r\n    \"c(t) = (\\\\frac{k}{\\\\alpha^2} - \\\\frac{k}{\\\\alpha^2} \\\\lgroup 1 + \\\\alpha t\\\\rgroup)e^{-\\\\alpha t}u(t)$$\";\r\n\r\nconst sotfWeakFormula =\r\n    \"$$ G(s) = \\\\frac{k}{s + \\\\alpha + j\\\\beta)(s + \\\\alpha - j\\\\beta)}\" +\r\n    mathjaxSpaces(3) +\r\n    \"\\\\alpha > 0 \\\\\\\\\" +\r\n    \" \\\\Longrightarrow G(s) = \\\\frac{k}{(s^2 + 2\\\\alpha s + (\\\\alpha ^ 2 + \\\\beta ^ 2) } \\\\\\\\ \" +\r\n    \"C(s) = \\\\frac{1}{s}G(s) = \\\\frac{k}{s^3 + 2\\\\alpha s^2 + (\\\\alpha ^ 2 + \\\\beta ^ 2)s } =  \" +\r\n    \"\\\\frac{1}{s} \\\\frac{k}{(s + \\\\alpha)^2 + \\\\beta ^ 2 }\\\\\\\\ \" +\r\n    \"\\\\Longrightarrow c_{ss} = \\\\lim\\\\limits_{s \\\\to 0}sC(s) = \\\\frac{k}{\\\\alpha ^ 2 + \\\\beta ^ 2} \\\\\\\\ \" +\r\n    \"c(t) = \\\\frac{k}{\\\\alpha ^ 2 + \\\\beta ^ 2}u(t) - \\\\frac{ke^{-\\\\alpha t}}{\\\\alpha ^ 2 + \\\\beta ^ 2} \\\\lgroup cos\\\\beta t + \\\\frac{\\\\alpha}{\\\\beta}sin\\\\beta t \\\\rgroup u(t) \\\\\\\\\" +\r\n    \"\\\\Longrightarrow c(t) = \\\\frac{k}{\\\\alpha ^ 2 + \\\\beta ^ 2}u(t) - \\\\frac{\\\\sqrt{\\\\alpha ^ 2 + \\\\beta ^ 2}}{\\\\beta}e^{-\\\\alpha t}sin(\\\\beta t + \\\\theta) u(t)$$\";\r\n\r\nconst SOTFByPolesLecture = () => {\r\n    return (\r\n        <SubCard\r\n            title=\"تابع تبدیل مرتبه دو- بررسی پارامتری\"\r\n            darkBorder={true}\r\n            sx={{ direction: \"rtl\" }}\r\n            spacing={gridSpacing}\r\n        >\r\n            <Typography>\r\n                <Grid\r\n                    className=\"lecture-text\"\r\n                    style={{ fontSize: \"20px\" }}\r\n                    item\r\n                >\r\n                    <p>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; پاسخ سیستم مرتبه دوم به\r\n                        ورودی پله یکی از سه حالت زیر می باشد:\r\n                    </p>\r\n                </Grid>\r\n                <SubCard>\r\n                    <Grid sx={{ my: 4 }} className=\"lecture-text\" item>\r\n                        <h1>&nbsp; پاسخ میرای شدید</h1>\r\n                    </Grid>\r\n                    <Grid\r\n                        sx={{ my: 4 }}\r\n                        style={{ fontSize: \"20px\" }}\r\n                        className=\"lecture-text\"\r\n                        item\r\n                    >\r\n                        <p>\r\n                            &nbsp; &nbsp; &nbsp; &nbsp; در این حالت سیستم دو قطب\r\n                            حقیقی منفی دارد.\r\n                        </p>\r\n                    </Grid>\r\n                    <Grid style={{ fontSize: \"20px\" }} item>\r\n                        <MathJax>{sotfExtremeMortalFormula}</MathJax>\r\n                    </Grid>\r\n                </SubCard>\r\n                <SubCard sx={{ my: 4 }}>\r\n                    <Grid className=\"lecture-text\" item>\r\n                        <h1>&nbsp; پاسخ میرای بحرانی</h1>\r\n                    </Grid>\r\n                    <Grid\r\n                        sx={{ my: 4 }}\r\n                        style={{ fontSize: \"20px\" }}\r\n                        className=\"lecture-text\"\r\n                        item\r\n                    >\r\n                        <p>\r\n                            &nbsp; &nbsp; &nbsp; &nbsp; در این حالت سیستم دو قطب\r\n                            حقیقی منفی برابر دارد.\r\n                        </p>\r\n                    </Grid>\r\n                    <Grid style={{ fontSize: \"20px\" }} item>\r\n                        <MathJax>{sotfCriticalFormula}</MathJax>\r\n                    </Grid>\r\n                </SubCard>\r\n                <SubCard sx={{ my: 4 }}>\r\n                    <Grid className=\"lecture-text\" item>\r\n                        <h1>&nbsp; پاسخ میرای ضعیف (نوسانی)</h1>\r\n                    </Grid>\r\n                    <Grid\r\n                        sx={{ my: 4 }}\r\n                        style={{ fontSize: \"20px\" }}\r\n                        className=\"lecture-text\"\r\n                        item\r\n                    >\r\n                        <p>\r\n                            &nbsp; &nbsp; &nbsp; &nbsp; در این حالت سیستم دو قطب\r\n                            مزدوج با مقدار حقیقی منفی دارد.\r\n                        </p>\r\n                    </Grid>\r\n                    <Grid style={{ fontSize: \"20px\" }} item>\r\n                        <MathJax>{sotfWeakFormula}</MathJax>\r\n                    </Grid>\r\n                </SubCard>\r\n                <Grid\r\n                    sx={{ my: 4 }}\r\n                    style={{ fontSize: \"20px\" }}\r\n                    className=\"lecture-text\"\r\n                    item\r\n                >\r\n                    <p>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; پاسخ اکثر سیستم های خطی در\r\n                        عمل به صورت میرای ضعیف است. لذا معیارهای عملکرد در حوزه\r\n                        ی زمان برای بررسی و تحلیل سیستم های کنترل خطی از این\r\n                        پاسخ استخراج می شود.\r\n                    </p>\r\n                </Grid>\r\n            </Typography>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default SOTFByPolesLecture;\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport CoordinateSystem from \"views/input-boxes/CoordinateSystem\";\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport Complex from \"math/algebra/complex\";\r\nimport SimpleParametersList from \"views/input-boxes/SimpleParametersList\";\r\n\r\nconst parameterFormulas = [\r\n    \"$$\\\\alpha = $$\",\r\n    \"$$\\\\beta = $$\",\r\n    \"$$k = $$\",\r\n    \"$$t_i = $$\",\r\n    \"$$t_f = $$\",\r\n    \"$$N = $$\"\r\n];\r\nconst parameterUnits = [null, null, null, \"$$sec$$\", \"$$sec$$\", null];\r\n\r\nconst SOTFByPolesInputs = ({\r\n    k,\r\n    alpha,\r\n    beta,\r\n    $k,\r\n    $alpha,\r\n    $beta,\r\n    t_i,\r\n    t_f,\r\n    $t_i,\r\n    $t_f,\r\n    N,\r\n    $N\r\n}) => {\r\n    const grids = 10;\r\n\r\n    const updatePoles = (newPole, other, $newPole, $other) => {\r\n        $newPole(newPole);\r\n        return newPole.isReal()\r\n            ? $other(other.realify())\r\n            : $other(newPole.conjugate());\r\n    };\r\n\r\n    const selectAlpha = (point) => {\r\n        if (point) {\r\n            const { x, y } = point;\r\n            updatePoles(new Complex(-x, -y), beta, $alpha, $beta);\r\n        }\r\n    };\r\n    const selectBeta = (point) => {\r\n        if (point) {\r\n            const { x, y } = point;\r\n            updatePoles(new Complex(-x, -y), alpha, $beta, $alpha);\r\n        }\r\n    };\r\n\r\n    const alphaTextBoxOnChange = (strValue) =>\r\n        updatePoles(Complex.extract(strValue), beta, $alpha, $beta);\r\n\r\n    const betaTextBoxOnChange = (strValue) =>\r\n        updatePoles(Complex.extract(strValue), alpha, $beta, $alpha);\r\n\r\n    return (\r\n        <SubCard\r\n            darkBorder\r\n            title=\"پارامترها\"\r\n            sx={{\r\n                direction: \"ltr\",\r\n                textAlign: \"right\",\r\n                height: \"100%\",\r\n            }}\r\n        >\r\n            <Grid spacing={0.6} container direction=\"row\">\r\n                <SimpleParametersList\r\n                    parameters={[alpha, beta, k, t_i, t_f, N]}\r\n                    setters={[\r\n                        alphaTextBoxOnChange,\r\n                        betaTextBoxOnChange,\r\n                        $k,\r\n                        $t_i,\r\n                        $t_f,\r\n                        $N\r\n                    ]}\r\n                    labels={parameterFormulas}\r\n                    units={parameterUnits}\r\n                />\r\n\r\n                <Grid sx={{ mt: 1 }} md={12} sm={4} xs={6} item>\r\n                    <Typography style={{ textAlign: \"center\" }}>\r\n                        محل قطب ها را انتخاب کنید\r\n                    </Typography>\r\n\r\n                    <CoordinateSystem\r\n                        point={{\r\n                            x: -alpha.real(),\r\n                            y: -alpha.imaginary(),\r\n                            select: selectAlpha,\r\n                        }}\r\n                        extra={{\r\n                            x: -beta.real(),\r\n                            y: -beta.imaginary(),\r\n                            select: selectBeta,\r\n                        }}\r\n                        options={{ pointSize: 10, grids }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default SOTFByPolesInputs;\r\n","import SOTFByPolesLecture from \"./lecture\";\r\n\r\n// project imports\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport calculus from \"math/calculus\";\r\nimport { useState, useEffect } from \"react\";\r\nimport GraphMenu from \"views/plotter/GraphMenu\";\r\nimport { Grid } from \"@mui/material\";\r\nimport GraphBox from \"views/plotter/GraphBox\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport SOTFByPolesInputs from \"./parameters\";\r\nimport Complex from \"math/algebra/complex\";\r\nimport Algebra from \"math/algebra/index\";\r\nimport TransferFunction from \"math/algebra/functions/transfer\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport Describer from \"math/describer\";\r\n\r\nconst stepResponse = (tf, c_t = tf.step(), index = undefined) =>\r\n    \"$$\\\\begin{cases} \" +\r\n    tf.label(\"G\", index) +\r\n    \" \\\\\\\\ \\\\\\\\ \" +\r\n    c_t.label(\"c\", index) +\r\n    \"\\\\end{cases}$$\";\r\n\r\nconst symbols = {\r\n    in: \"t\",\r\n    out: \"c\",\r\n};\r\n\r\nconst SOTFExamineByPoles = () => {\r\n    const [alpha, $alpha] = useState(new Complex(1, 1));\r\n    const [beta, $beta] = useState(alpha.conjugate());\r\n    const [k, $k] = useState(1.0);\r\n    const [t_i, $t_i] = useState(0);\r\n    const [t_f, $t_f] = useState(5);\r\n    // gradiant of u(t) is 0 and unit ramp is one\r\n    const [systems, $systems] = useState([]);\r\n    const [traces, $traces] = useState([]);\r\n    const [thickness, $thickness] = useState(1.0); // graph line thickness\r\n    const [isGraphCatured, $graphCaptured] = useState(false);\r\n    const [is3DPlotEnabled, $3DPlotEnabled] = useState(false);\r\n    const [C_t, $C_t] = useState(null);\r\n    const [G_s, $G_s] = useState(null);\r\n    const [GInfo, $GInfo] = useState(\"\");\r\n    const [N, $N] = useState(1000);\r\n    const [response, $response] = useState(null);\r\n\r\n    const toggle3DPlot = () => $3DPlotEnabled(!is3DPlotEnabled);\r\n\r\n    //update\r\n    const capture = () => {\r\n        const capturedSystems = [...systems];\r\n        const index = capturedSystems.findIndex(\r\n            (sys) =>\r\n                alpha.equals(sys.alpha) && beta.equals(sys.beta) && sys.k === k\r\n        );\r\n        if (index === -1) {\r\n            // if current system has not been captured before => then capture it; o.w. its not needed\r\n            capturedSystems.push({\r\n                alpha,\r\n                beta,\r\n                k,\r\n                G_s,\r\n                C_t,\r\n                thickness,\r\n                legend:\r\n                    \"$$\" +\r\n                    symbols.out +\r\n                    \"_{\" +\r\n                    (systems.length + 1).toString() +\r\n                    \"}$$\",\r\n            });\r\n            $systems(capturedSystems);\r\n            $graphCaptured(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        let gtf = TransferFunction.Shortcuts.$2(\r\n            +k,\r\n            alpha instanceof Algebra ? alpha.negation() : -alpha,\r\n            beta instanceof Algebra ? beta.negation() : -beta\r\n        );\r\n        const tstep = gtf.step();\r\n        $G_s(gtf);\r\n        if (gtf && alpha.hasSameTypeWith(beta)) {\r\n            $C_t(tstep);\r\n            $GInfo(new Describer(gtf));\r\n            const [x, y] = calculus.pointify(tstep.$, +t_i, +t_f, +N); \r\n            $response(stepResponse(gtf));\r\n            // parameters changed => load again all traces(traces); this is for when shared params changes(ti, tf, ...),\r\n            // so that the traces will be loaded with new conditions\r\n            const all = systems.map((e, index) => {\r\n                let tgtf = TransferFunction.Shortcuts.$2(\r\n                    +e.k,\r\n                    e.alpha instanceof Algebra ? e.alpha.negation() : -e.alpha,\r\n                    e.beta instanceof Algebra ? e.beta.negation() : -e.beta\r\n                );\r\n\r\n                const [xi, yi] = calculus.pointify(\r\n                    tgtf.step().$,\r\n                    +t_i,\r\n                    +t_f,\r\n                    +N\r\n                ); \r\n\r\n                return {\r\n                    x: xi,\r\n                    y: yi,\r\n                    z: is3DPlotEnabled ? Array(xi.length).fill(0) : null,\r\n                    line: {\r\n                        // color: e.color...\r\n                        width: e.thickness,\r\n                    },\r\n                    // color,\r\n                    type: \"scatter\" + (is3DPlotEnabled ? \"3d\" : \"\"),\r\n                    mode: \"lines\",\r\n                    name: e.legend,\r\n                };\r\n            });\r\n\r\n            const index = systems.findIndex(\r\n                (sys) =>\r\n                    alpha.equals(sys.alpha) &&\r\n                    beta.equals(sys.beta) &&\r\n                    sys.k === k\r\n            );\r\n            if (index === -1)\r\n                // if current system isnt in traces list => add it temperory to plot\r\n                all.push({\r\n                    x,\r\n                    y,\r\n                    z: is3DPlotEnabled ? Array(x.length).fill(0) : null,\r\n                    // color,\r\n                    line: {\r\n                        // color:'rgb(17, 157, 255)'\r\n                        width: thickness,\r\n                    },\r\n                    type: \"scatter\" + (is3DPlotEnabled ? \"3d\" : \"\"),\r\n                    mode: \"lines\",\r\n                    name: `${symbols.out}(${symbols.in})`,\r\n                });\r\n\r\n            $traces(all);\r\n        }\r\n    }, [alpha, beta, k, t_i, t_f, is3DPlotEnabled, thickness, systems, N]);\r\n\r\n    useEffect(() => {\r\n        $graphCaptured(false);\r\n    }, [alpha, beta, k]);\r\n\r\n    const update = (changes) => {\r\n        if (changes) $thickness(changes.thickness);\r\n        //and so...\r\n    };\r\n    return (\r\n        <Grid container direction=\"column\" spacing={gridSpacing}>\r\n            <Grid\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    margin: \"auto\",\r\n                    direction: \"ltr\",\r\n                }}\r\n                item\r\n            >\r\n                <SOTFByPolesLecture />\r\n            </Grid>\r\n\r\n            <Grid sx={{ margin: \"auto\", width: \"100%\" }} item>\r\n                <SubCard sx={{ direction: \"ltr\" }}>\r\n                    <Grid\r\n                        id=\"formulaBox\"\r\n                        sx={{ margin: \"auto\" }}\r\n                        container\r\n                        direction=\"row\"\r\n                    >\r\n                        {systems instanceof Array &&\r\n                            systems.map((sys, index) => {\r\n                                const formula = stepResponse(\r\n                                    sys.G_s,\r\n                                    sys.C_t,\r\n                                    index + 1\r\n                                );\r\n\r\n                                return (\r\n                                    <Grid\r\n                                        style={{ fontSize: \"18px\" }}\r\n                                        xs={12}\r\n                                        item\r\n                                    >\r\n                                        <MathJax>{formula}</MathJax>\r\n                                    </Grid>\r\n                                );\r\n                            })}\r\n                        {!isGraphCatured && (\r\n                            <Grid style={{ fontSize: \"18px\" }} xs={12}>\r\n                                <MathJax>{response}</MathJax>\r\n                            </Grid>\r\n                        )}\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid\r\n                spacing={2}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    margin: \"auto\",\r\n                    direction: \"ltr\",\r\n                }}\r\n                container\r\n            >\r\n                <Grid\r\n                    md={3}\r\n                    sm={12}\r\n                    xs={12}\r\n                    sx={{ marginTop: \"1%\", width: \"100%\" }}\r\n                    container\r\n                >\r\n                    <Grid xs={12}>\r\n                        <SOTFByPolesInputs\r\n                            alpha={alpha}\r\n                            beta={beta}\r\n                            k={k}\r\n                            t_i={t_i}\r\n                            t_f={t_f}\r\n                            $alpha={$alpha}\r\n                            $beta={$beta}\r\n                            $k={$k}\r\n                            $t_i={$t_i}\r\n                            $t_f={$t_f}\r\n                            N={N}\r\n                            $N={$N}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid md={9} sm={12} xs={12} item>\r\n                    <SubCard>\r\n                        <GraphMenu\r\n                            capture={capture}\r\n                            reset={() => $systems([])}\r\n                            update={(changes) => update(changes)}\r\n                            toggle3DPlot={toggle3DPlot}\r\n                        />\r\n                    </SubCard>\r\n                    <hr />\r\n                    <Grid xs={12} item>\r\n                        <SubCard>\r\n                            <GraphBox title=\"پاسخ پله\" traces={traces} />\r\n                        </SubCard>\r\n                    </Grid>\r\n                    <hr />\r\n                    <Grid xs={12} item>\r\n                        {GInfo && <GInfo.Explain />}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default SOTFExamineByPoles;\r\n","import { Grid } from \"@mui/material\";\r\n// project imports\r\nimport MainCard from \"views/ui-component/cards/MainCard\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport Switcher from \"views/ui-component/buttons/Switcher\";\r\nimport { useState } from \"react\";\r\nimport SOTFExamineByParams from \"./by-params/index\";\r\nimport SOTFExamineByPoles from \"./by-poles/index\";\r\nimport \"views/topics/topics.css\";\r\n\r\nconst SecondOrderTransferFunctionExamining = () => {\r\n    const [mode, setMode] = useState(0);\r\n    const choices = [\"بررسی قطبی\", \"بررسی پارامتری\"];\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid\r\n                item\r\n                direction=\"row\"\r\n                sx={{ pt: 1 }}\r\n                container\r\n                spacing={gridSpacing}\r\n            >\r\n                <Switcher choices={choices} setSwitch={setMode} />\r\n            </Grid>\r\n            <MainCard style={{ background: \"#F5E1FD\" }}>\r\n                <Grid item spacing={gridSpacing}>\r\n                    {mode === 0 ? (\r\n                        <SOTFExamineByPoles />\r\n                    ) : (\r\n                        <SOTFExamineByParams />\r\n                    )}\r\n                </Grid>\r\n            </MainCard>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default SecondOrderTransferFunctionExamining;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiButton', slot);\n}\nconst buttonClasses = generateUtilityClasses('MuiButton', ['root', 'text', 'textInherit', 'textPrimary', 'textSecondary', 'outlined', 'outlinedInherit', 'outlinedPrimary', 'outlinedSecondary', 'contained', 'containedInherit', 'containedPrimary', 'containedSecondary', 'disableElevation', 'focusVisible', 'disabled', 'colorInherit', 'textSizeSmall', 'textSizeMedium', 'textSizeLarge', 'outlinedSizeSmall', 'outlinedSizeMedium', 'outlinedSizeLarge', 'containedSizeSmall', 'containedSizeMedium', 'containedSizeLarge', 'sizeMedium', 'sizeSmall', 'sizeLarge', 'fullWidth', 'startIcon', 'endIcon', 'iconSizeSmall', 'iconSizeMedium', 'iconSizeLarge']);\nexport default buttonClasses;","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst ButtonGroupContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ButtonGroupContext.displayName = 'ButtonGroupContext';\n}\n\nexport default ButtonGroupContext;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"color\", \"component\", \"className\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { internal_resolveProps as resolveProps } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport buttonClasses, { getButtonUtilityClass } from './buttonClasses';\nimport ButtonGroupContext from '../ButtonGroup/ButtonGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    disableElevation,\n    fullWidth,\n    size,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `${variant}${capitalize(color)}`, `size${capitalize(size)}`, `${variant}Size${capitalize(size)}`, color === 'inherit' && 'colorInherit', disableElevation && 'disableElevation', fullWidth && 'fullWidth'],\n    label: ['label'],\n    startIcon: ['startIcon', `iconSize${capitalize(size)}`],\n    endIcon: ['endIcon', `iconSize${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst commonIconStyles = ownerState => _extends({}, ownerState.size === 'small' && {\n  '& > *:nth-of-type(1)': {\n    fontSize: 18\n  }\n}, ownerState.size === 'medium' && {\n  '& > *:nth-of-type(1)': {\n    fontSize: 20\n  }\n}, ownerState.size === 'large' && {\n  '& > *:nth-of-type(1)': {\n    fontSize: 22\n  }\n});\n\nconst ButtonRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color)}`], styles[`size${capitalize(ownerState.size)}`], styles[`${ownerState.variant}Size${capitalize(ownerState.size)}`], ownerState.color === 'inherit' && styles.colorInherit, ownerState.disableElevation && styles.disableElevation, ownerState.fullWidth && styles.fullWidth];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.button, {\n  minWidth: 64,\n  padding: '6px 16px',\n  borderRadius: theme.shape.borderRadius,\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color', 'color'], {\n    duration: theme.transitions.duration.short\n  }),\n  '&:hover': _extends({\n    textDecoration: 'none',\n    backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {\n    backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }, ownerState.variant === 'outlined' && ownerState.color !== 'inherit' && {\n    border: `1px solid ${theme.palette[ownerState.color].main}`,\n    backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }, ownerState.variant === 'contained' && {\n    backgroundColor: theme.palette.grey.A100,\n    boxShadow: theme.shadows[4],\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      boxShadow: theme.shadows[2],\n      backgroundColor: theme.palette.grey[300]\n    }\n  }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {\n    backgroundColor: theme.palette[ownerState.color].dark,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.palette[ownerState.color].main\n    }\n  }),\n  '&:active': _extends({}, ownerState.variant === 'contained' && {\n    boxShadow: theme.shadows[8]\n  }),\n  [`&.${buttonClasses.focusVisible}`]: _extends({}, ownerState.variant === 'contained' && {\n    boxShadow: theme.shadows[6]\n  }),\n  [`&.${buttonClasses.disabled}`]: _extends({\n    color: theme.palette.action.disabled\n  }, ownerState.variant === 'outlined' && {\n    border: `1px solid ${theme.palette.action.disabledBackground}`\n  }, ownerState.variant === 'outlined' && ownerState.color === 'secondary' && {\n    border: `1px solid ${theme.palette.action.disabled}`\n  }, ownerState.variant === 'contained' && {\n    color: theme.palette.action.disabled,\n    boxShadow: theme.shadows[0],\n    backgroundColor: theme.palette.action.disabledBackground\n  })\n}, ownerState.variant === 'text' && {\n  padding: '6px 8px'\n}, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {\n  color: theme.palette[ownerState.color].main\n}, ownerState.variant === 'outlined' && {\n  padding: '5px 15px',\n  border: `1px solid ${theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'}`\n}, ownerState.variant === 'outlined' && ownerState.color !== 'inherit' && {\n  color: theme.palette[ownerState.color].main,\n  border: `1px solid ${alpha(theme.palette[ownerState.color].main, 0.5)}`\n}, ownerState.variant === 'contained' && {\n  color: theme.palette.getContrastText(theme.palette.grey[300]),\n  backgroundColor: theme.palette.grey[300],\n  boxShadow: theme.shadows[2]\n}, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {\n  color: theme.palette[ownerState.color].contrastText,\n  backgroundColor: theme.palette[ownerState.color].main\n}, ownerState.color === 'inherit' && {\n  color: 'inherit',\n  borderColor: 'currentColor'\n}, ownerState.size === 'small' && ownerState.variant === 'text' && {\n  padding: '4px 5px',\n  fontSize: theme.typography.pxToRem(13)\n}, ownerState.size === 'large' && ownerState.variant === 'text' && {\n  padding: '8px 11px',\n  fontSize: theme.typography.pxToRem(15)\n}, ownerState.size === 'small' && ownerState.variant === 'outlined' && {\n  padding: '3px 9px',\n  fontSize: theme.typography.pxToRem(13)\n}, ownerState.size === 'large' && ownerState.variant === 'outlined' && {\n  padding: '7px 21px',\n  fontSize: theme.typography.pxToRem(15)\n}, ownerState.size === 'small' && ownerState.variant === 'contained' && {\n  padding: '4px 10px',\n  fontSize: theme.typography.pxToRem(13)\n}, ownerState.size === 'large' && ownerState.variant === 'contained' && {\n  padding: '8px 22px',\n  fontSize: theme.typography.pxToRem(15)\n}, ownerState.fullWidth && {\n  width: '100%'\n}), ({\n  ownerState\n}) => ownerState.disableElevation && {\n  boxShadow: 'none',\n  '&:hover': {\n    boxShadow: 'none'\n  },\n  [`&.${buttonClasses.focusVisible}`]: {\n    boxShadow: 'none'\n  },\n  '&:active': {\n    boxShadow: 'none'\n  },\n  [`&.${buttonClasses.disabled}`]: {\n    boxShadow: 'none'\n  }\n});\nconst ButtonStartIcon = styled('span', {\n  name: 'MuiButton',\n  slot: 'StartIcon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.startIcon, styles[`iconSize${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inherit',\n  marginRight: 8,\n  marginLeft: -4\n}, ownerState.size === 'small' && {\n  marginLeft: -2\n}, commonIconStyles(ownerState)));\nconst ButtonEndIcon = styled('span', {\n  name: 'MuiButton',\n  slot: 'EndIcon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.endIcon, styles[`iconSize${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inherit',\n  marginRight: -4,\n  marginLeft: 8\n}, ownerState.size === 'small' && {\n  marginRight: -2\n}, commonIconStyles(ownerState)));\nconst Button = /*#__PURE__*/React.forwardRef(function Button(inProps, ref) {\n  // props priority: `inProps` > `contextProps` > `themeDefaultProps`\n  const contextProps = React.useContext(ButtonGroupContext);\n  const resolvedProps = resolveProps(contextProps, inProps);\n  const props = useThemeProps({\n    props: resolvedProps,\n    name: 'MuiButton'\n  });\n\n  const {\n    children,\n    color = 'primary',\n    component = 'button',\n    className,\n    disabled = false,\n    disableElevation = false,\n    disableFocusRipple = false,\n    endIcon: endIconProp,\n    focusVisibleClassName,\n    fullWidth = false,\n    size = 'medium',\n    startIcon: startIconProp,\n    type,\n    variant = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    disableElevation,\n    disableFocusRipple,\n    fullWidth,\n    size,\n    type,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const startIcon = startIconProp && /*#__PURE__*/_jsx(ButtonStartIcon, {\n    className: classes.startIcon,\n    ownerState: ownerState,\n    children: startIconProp\n  });\n\n  const endIcon = endIconProp && /*#__PURE__*/_jsx(ButtonEndIcon, {\n    className: classes.endIcon,\n    ownerState: ownerState,\n    children: endIconProp\n  });\n\n  return /*#__PURE__*/_jsxs(ButtonRoot, _extends({\n    ownerState: ownerState,\n    className: clsx(className, contextProps.className),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other, {\n    classes: classes,\n    children: [startIcon, children, endIcon]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'success', 'error', 'info', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   * @default false\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default Button;"],"names":["Switcher","setSwitch","choices","useState","selected","setSelected","Stack","className","xs","spacing","direction","Grid","dir","container","Button","onClick","length","variant","style","width","background","purple","color","sotfTransientStepResponseFormula","mathjaxSpaces","SubCard","title","darkBorder","sx","gridSpacing","Typography","fontSize","item","MathJax","parameterFormulas","parameterUnits","w_n","zeta","$w_n","$zeta","t_i","t_f","$t_i","$t_f","N","$N","textAlign","height","SimpleParametersList","parameters","setters","value","labels","units","mt","md","sm","CoordinateSystem","point","x","y","select","extra","options","pointSize","grids","stepResponse","tf","c_t","step","index","undefined","label","symbols","systems","$systems","traces","$traces","thickness","$thickness","isGraphCatured","$graphCaptured","is3DPlotEnabled","$3DPlotEnabled","C_t","$C_t","G_s","$G_s","GInfo","$GInfo","response","$response","useEffect","gtf","TransferFunction","tstep","Describer","calculus","$","all","map","e","w_n2","tgtf","xi","z","Array","fill","line","type","mode","name","legend","findIndex","sys","push","margin","id","formula","marginTop","GraphMenu","capture","capturedSystems","toString","reset","update","changes","toggle3DPlot","GraphBox","Explain","sotfExtremeMortalFormula","sotfCriticalFormula","sotfWeakFormula","my","k","alpha","beta","$k","$alpha","$beta","updatePoles","newPole","other","$newPole","$other","isReal","realify","conjugate","strValue","Complex","real","imaginary","Algebra","negation","hasSameTypeWith","equals","setMode","pt","MainCard","getButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","React","_excluded","commonIconStyles","ownerState","_extends","size","ButtonRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","root","capitalize","colorInherit","disableElevation","fullWidth","theme","typography","button","minWidth","padding","borderRadius","shape","transition","transitions","create","duration","short","textDecoration","backgroundColor","palette","text","primary","action","hoverOpacity","main","border","grey","A100","boxShadow","shadows","dark","buttonClasses","disabled","disabledBackground","getContrastText","contrastText","borderColor","pxToRem","ButtonStartIcon","startIcon","display","marginRight","marginLeft","ButtonEndIcon","endIcon","inProps","ref","contextProps","ButtonGroupContext","resolvedProps","resolveProps","useThemeProps","children","component","disableFocusRipple","endIconProp","focusVisibleClassName","startIconProp","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","_jsx","_jsxs","clsx","focusRipple","focusVisible"],"sourceRoot":""}