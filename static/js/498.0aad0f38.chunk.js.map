{"version":3,"file":"static/js/498.0aad0f38.chunk.js","mappings":"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","sources":["views/topics/chapter05/root-locus/lecture.jsx","views/topics/chapter05/root-locus/parameters.jsx","views/topics/chapter05/root-locus/index.jsx"],"sourcesContent":["import SubCard from \"views/ui-component/cards/SubCard\";\r\nimport { Grid } from \"@mui/material\";\r\nimport \"../../topics.css\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { mathjaxSpaces } from \"toolshed\";\r\n\r\nconst t_riseFormula =\r\n    \"$$ t_{pk} = \\\\frac{k\\\\pi}{\\\\omega_n \\\\sqrt{1 - \\\\zeta^2}} = \\\\frac{k\\\\pi}{\\\\omega_d} \" +\r\n    mathjaxSpaces(3) +\r\n    \" k = 1, 2, 3, ...\\\\\\\\\" +\r\n    \" t_{rise} = t_p = \\\\frac{\\\\pi}{\\\\omega_d} $$\";\r\nconst overshootFormula = `$$M_p = e^{\\\\frac{-\\\\zeta \\\\pi}{\\\\sqrt{1 - \\\\zeta^2}}} = e ^ {-\\\\pi cot\\\\theta} \\\\\\\\\r\n    \\\\zeta = \\\\frac{-\\\\ln M_p}{\\\\sqrt{\\\\pi^2 + \\\\lgroup \\\\ln M_p \\\\rgroup ^ 2}} $$`;\r\n\r\nconst RootLocusLecture = () => {\r\n    return (\r\n        <SubCard\r\n            title=\"طراحی سیستم از طریق مشخصات میرایی\"\r\n            darkBorder={true}\r\n            sx={{ direction: \"rtl\" }}\r\n            spacing={gridSpacing}\r\n        >\r\n            <Grid className=\"lecture-text\" style={{ fontSize: \"20px\" }} item>\r\n                <p>&nbsp; &nbsp; &nbsp; &nbsp; \r\n                    زمان اوج (Rise Time)</p>\r\n            </Grid>\r\n            <Grid style={{ fontSize: \"20px\" }} item>\r\n                <MathJax>{t_riseFormula}</MathJax>\r\n            </Grid>\r\n            <Grid className=\"lecture-text\" style={{ fontSize: \"20px\" }} item>\r\n                <p>&nbsp; &nbsp; &nbsp; &nbsp; بالازدگی (Overshoot)</p>\r\n            </Grid>\r\n            <Grid style={{ fontSize: \"20px\" }} item>\r\n                <MathJax>{overshootFormula}</MathJax>\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default RootLocusLecture;\r\n","import { Grid } from \"@mui/material\";\r\nimport CoordinateSystem from \"views/input-boxes/CoordinateSystem\";\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport SimpleParametersList from \"views/input-boxes/SimpleParametersList\";\r\n\r\nconst startLebels = [\r\n    \"$$Num = [$$\",\r\n    \"$$Den = [$$\",\r\n    \"$$k_{min} = $$\",\r\n    \"$$k_{max} = $$\",\r\n];\r\nconst endLabels = [\"$$]$$\", \"$$]$$\", null, null];\r\n\r\nconst RootLocusParameters = ({\r\n    rawNumerator,\r\n    rawDenominator,\r\n    $rawNumerator,\r\n    $rawDenominator,\r\n    k_min,\r\n    k_max,\r\n    $k_min,\r\n    $k_max,\r\n}) => {\r\n    const grids = 10;\r\n    \r\n    return (\r\n        <SubCard\r\n            darkBorder\r\n            title=\"پارامترها\"\r\n            sx={{\r\n                direction: \"ltr\",\r\n                textAlign: \"right\",\r\n                height: \"100%\",\r\n            }}\r\n        >\r\n            <Grid spacing={0.6} container direction=\"row\">\r\n                <SimpleParametersList\r\n                    parameters={[ rawNumerator, rawDenominator, k_min, k_max]}\r\n                    setters={[ $rawNumerator, $rawDenominator, $k_min, $k_max]}\r\n                    labels={startLebels}\r\n                    units={endLabels}\r\n                />\r\n\r\n                <Grid sx={{ mt: 1 }} md={12} sm={4} xs={6} item>\r\n                    <p style={{ textAlign: \"center\" }}>\r\n                        محدوده ی بهره را مشخص کنید\r\n                    </p>\r\n\r\n                    <CoordinateSystem\r\n                        point={{\r\n                            y: 0,\r\n                            x: k_min,\r\n                            select: ({ x }) => {\r\n                                if (x) $k_min(x);\r\n                            },\r\n                        }}\r\n                        extra={{\r\n                            y: 0,\r\n                            x: k_max,\r\n                            select: ({ x }) => {\r\n                                if (x && x >= k_min) $k_max(x);\r\n                            },\r\n                        }}\r\n                        options={{ pointSize: 20, grids}}\r\n                   />\r\n                </Grid>\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default RootLocusParameters;\r\n","import RootLocusLecture from \"./lecture\";\r\n\r\n// project imports\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport calculus from \"math/calculus\";\r\nimport { useState, useEffect } from \"react\";\r\nimport GraphMenu from \"math/GraphMenu\";\r\nimport { Grid } from \"@mui/material\";\r\nimport GraphBox from \"math/GraphBox\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport RootLocusParameters from \"./parameters\";\r\nimport TransferFunction from \"math/algebra/functions/transfer\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport Describer from \"math/describer\";\r\nimport MainCard from \"views/ui-component/cards/MainCard\";\r\n\r\nconst stepResponse = (tf, index = undefined) =>\r\n    \"$$ \" + tf.label(\"G\", index) + \" $$\";\r\n\r\nconst RootLocus = () => {\r\n    const [rawNumerator, $rawNumerator] = useState(\"1\");\r\n    const [rawDenominator, $rawDenominator] = useState(\"1 5 12\");\r\n\r\n    const [k_min, $k_min] = useState(0);\r\n    const [k_max, $k_max] = useState(5);\r\n    // gradiant of u(t) is 0 and unit ramp is one\r\n    const [systems, $systems] = useState([]);\r\n    const [traces, $traces] = useState([]);\r\n    const [thickness, $thickness] = useState(1.0); // graph line thickness\r\n    const [isGraphCatured, $graphCaptured] = useState(false);\r\n    const [G_s, $G_s] = useState(null);\r\n    const [GInfo, $GInfo] = useState(\"\");\r\n\r\n    const [response, $response] = useState(null);\r\n\r\n    //update\r\n    useEffect(() => {\r\n        // k * num / den\r\n        $G_s(\r\n            new TransferFunction(\r\n                calculus.stringToArray(rawNumerator),\r\n                calculus.stringToArray(rawDenominator)\r\n            )\r\n        );\r\n    }, [rawNumerator, rawDenominator]);\r\n\r\n    const capture = () => {\r\n        const capturedSystems = [...systems];\r\n        const index = capturedSystems.findIndex((sys) => G_s.equals(sys.G_s));\r\n        if (index === -1) {\r\n            // if current system has not been captured before => then capture it; o.w. its not needed\r\n            capturedSystems.push({\r\n                G_s,\r\n                thickness,\r\n                legend: \"$$_{\" + (systems.length + 1).toString() + \"}$$\",\r\n            });\r\n            $systems(capturedSystems);\r\n            $graphCaptured(true);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (G_s) {\r\n            // $GInfo(new Describer(G_s));\r\n            const [x, y] = G_s.rootLocus(k_min, k_max);\r\n            $response(stepResponse(G_s));\r\n            // parameters changed => load again all traces(traces); this is for when shared params changes(ti, tf, ...),\r\n            // so that the traces will be loaded with new conditions\r\n            const all = systems.map((e, index) => {\r\n                const [xi, yi] = calculus.pointify(\r\n                    e.G_s.$,\r\n                    Number(k_min),\r\n                    Number(k_max)\r\n                ); // N: 100\r\n\r\n                return {\r\n                    x: xi,\r\n                    y: yi,\r\n                    // z: is3DPlotEnabled ? Array(xi.length).fill(0) : null,\r\n                    line: {\r\n                        // color: e.color...\r\n                        width: e.thickness,\r\n                    },\r\n                    // color,\r\n                    type: \"scatter\",\r\n                    mode: 'markers',\r\n                    name: e.legend,\r\n                };\r\n            });\r\n\r\n            if (systems.findIndex((sys) => G_s.equals(sys.G_s)) === -1)\r\n                // if current system isnt in traces list => add it temperory to plot\r\n                all.push({\r\n                    x,\r\n                    y,\r\n                    // color,\r\n                    line: {\r\n                        // color:'rgb(17, 157, 255)'\r\n                        width: thickness,\r\n                    },\r\n                    type: \"scatter\",\r\n                    mode: 'markers',\r\n                   \r\n                    name: `c(t)`,\r\n                });\r\n\r\n            $traces(all);\r\n        }\r\n    }, [G_s, k_min, k_max, thickness, systems]);\r\n\r\n    useEffect(() => {\r\n        $graphCaptured(false);\r\n    }, [rawNumerator, rawDenominator]);\r\n\r\n    const update = (changes) => {\r\n        if (changes) $thickness(changes.thickness);\r\n        //and so...\r\n    };\r\n    return (\r\n        <MainCard>\r\n            <Grid item spacing={gridSpacing}>\r\n                <h2 className=\"chapter-section-title\">\r\n                    طراحی سیستم با استفاده از مشخصات میرایی سیستم{\" \"}\r\n                </h2>\r\n            </Grid>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Grid container direction=\"column\" spacing={gridSpacing}>\r\n                    <Grid\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        item\r\n                    >\r\n                        <RootLocusLecture />\r\n                    </Grid>\r\n\r\n                    <Grid sx={{ margin: \"auto\", width: \"100%\" }} item>\r\n                        <SubCard sx={{ direction: \"ltr\" }}>\r\n                            <Grid\r\n                                id=\"formulaBox\"\r\n                                sx={{ margin: \"auto\" }}\r\n                                container\r\n                                direction=\"row\"\r\n                            >\r\n                                {systems instanceof Array &&\r\n                                    systems.map((sys, index) => {\r\n                                        const formula = stepResponse(\r\n                                            sys.G_s,\r\n                                            index + 1\r\n                                        );\r\n\r\n                                        return (\r\n                                            <Grid\r\n                                                style={{ fontSize: \"18px\" }}\r\n                                                xs={12}\r\n                                                item\r\n                                            >\r\n                                                <MathJax>{formula}</MathJax>\r\n                                            </Grid>\r\n                                        );\r\n                                    })}\r\n                                {!isGraphCatured && (\r\n                                    <Grid style={{ fontSize: \"18px\" }} xs={12}>\r\n                                        <MathJax>{response}</MathJax>\r\n                                    </Grid>\r\n                                )}\r\n                            </Grid>\r\n                        </SubCard>\r\n                    </Grid>\r\n                    <Grid\r\n                        spacing={2}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        container\r\n                    >\r\n                        <Grid\r\n                            md={4}\r\n                            sm={12}\r\n                            xs={12}\r\n                            sx={{ marginTop: \"1%\", width: \"100%\" }}\r\n                            container\r\n                        >\r\n                            <Grid xs={12}>\r\n                                <RootLocusParameters\r\n                                    rawNumerator={rawNumerator}\r\n                                    rawDenominator={rawDenominator}\r\n                                    k_min={k_min}\r\n                                    k_max={k_max}\r\n                                    $rawNumerator={$rawNumerator}\r\n                                    $rawDenominator={$rawDenominator}\r\n                                    $k_min={$k_min}\r\n                                    $k_max={$k_max}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid md={8} sm={12} xs={12} item>\r\n                            <SubCard>\r\n                                <GraphMenu\r\n                                    capture={capture}\r\n                                    formulaFileName={\r\n                                        \"Water Tank Level Equations _ \" +\r\n                                        [\r\n                                            ...systems.map((sys) => sys.legend),\r\n                                        ].join() +\r\n                                        \".png\"\r\n                                    }\r\n                                    graphFileName={\r\n                                        [\r\n                                            ...systems.map(\r\n                                                (sys) =>\r\n                                                    `${\r\n                                                        sys.legend\r\n                                                    }{rawNumerator=_rawDenominator=_k=${\r\n                                                        sys.k\r\n                                                    }_in=${\r\n                                                        sys.inputSignal\r\n                                                            ? \"ramp\"\r\n                                                            : \"step\"\r\n                                                    }}`\r\n                                            ),\r\n                                        ].join(\", \") + \".png\"\r\n                                    }\r\n                                    reset={() => $systems([])}\r\n                                    update={(changes) => update(changes)}\r\n                                />\r\n                            </SubCard>\r\n                            <hr />\r\n                            <Grid lg={12} md={12} sm={12} xs={12} item>\r\n                                <SubCard>\r\n                                    <GraphBox\r\n                                        title=\"پاسخ پله\"\r\n                                        traces={traces}\r\n                                    />\r\n                                </SubCard>\r\n                            </Grid>\r\n                            <hr />\r\n                            <Grid lg={12} md={12} sm={12} xs={12} item>\r\n                                {GInfo && <GInfo.Explain />}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default RootLocus;\r\n"],"names":["t_riseFormula","mathjaxSpaces","SubCard","title","darkBorder","sx","direction","spacing","gridSpacing","Grid","className","style","fontSize","item","MathJax","startLebels","endLabels","rawNumerator","rawDenominator","$rawNumerator","$rawDenominator","k_min","k_max","$k_min","$k_max","textAlign","height","container","SimpleParametersList","parameters","setters","labels","units","mt","md","sm","xs","CoordinateSystem","point","y","x","select","extra","options","pointSize","grids","stepResponse","tf","index","undefined","label","useState","systems","$systems","traces","$traces","thickness","$thickness","isGraphCatured","$graphCaptured","G_s","$G_s","GInfo","response","$response","useEffect","TransferFunction","calculus","rootLocus","all","map","e","$","Number","line","width","type","mode","name","legend","findIndex","sys","equals","push","MainCard","margin","id","Array","formula","marginTop","GraphMenu","capture","capturedSystems","length","toString","formulaFileName","join","graphFileName","k","inputSignal","reset","update","changes","lg","GraphBox","Explain"],"sourceRoot":""}