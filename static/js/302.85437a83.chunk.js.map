{"version":3,"file":"static/js/302.85437a83.chunk.js","mappings":"yIA2DA,IAxDiB,SAAC,GAA4C,IAA1CA,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,MAAiC,KAA1BC,MAA0B,EAAnBC,QAAAA,OAAmB,MAAV,IAAU,EA0BzD,OACI,SAAC,IAAD,CACIC,MAAO,CAAEC,UAAW,UAEpBC,KAAMN,EACNO,OAAQ,CAGJC,OAAQ,CACJC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,IAEPC,MAAO,CACHC,UAAW,UAEfC,MAAO,CACHD,UAAW,UAEfX,OAAAA,EACAF,MAAAA,EAEAe,WAAY,CAACC,MAAM,OAAQC,QAAS,UAAWC,KAAK,CAACC,MAAM,cAC3DC,OAAQ,CAACC,YAAa,U,mNCoEtC,IA7GkB,SAAC,GAOZ,IANHC,EAME,EANFA,QACAC,EAKE,EALFA,cACAC,EAIE,EAJFA,gBACAC,EAGE,EAHFA,MACAC,EAEE,EAFFA,OACAC,EACE,EADFA,aAEA,GAA6CC,EAAAA,EAAAA,WAAS,GAAtD,eAAOC,EAAP,KAAwBC,EAAxB,KACA,GACIF,EAAAA,EAAAA,UAAS,IADb,eAAOG,EAAP,KAAkCC,EAAlC,KAqCA,OAJAC,EAAAA,EAAAA,YAAU,WACNP,EAAO,CAAEQ,UAAWH,EAA4B,GAAO,OACxD,CAACA,EAA2BL,KAG3B,UAAC,KAAD,CAAMS,GAAI,CAAEC,UAAW,OAASC,WAAS,EAACD,UAAU,MAApD,WACI,UAAC,KAAD,CAAME,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGL,GAAI,CAAEC,UAAW,OAASK,MAAI,EAA1D,WACI,SAAC,IAAD,CACItB,MAAM,YACN,aAAW,gBACXuB,UAAU,OACVC,QAzCK,WACjBb,GAAmBD,GACnBF,KAmCQ,SAMKE,GACG,SAAC,IAAD,KAEA,SAAC,IAAD,OAGR,SAAC,IAAD,CACIV,MAAM,YACN,aAAW,gBACXuB,UAAU,OACVC,QAASrB,EAJb,UAMI,SAAC,IAAD,OAEJ,SAAC,IAAD,CACIH,MAAM,YACN,aAAW,iBACXuB,UAAU,OACVC,QAxDH,WACT,IAAMC,EAAkBC,SAASC,eAAe,YAG1CC,EAAuBF,SAASG,cAAc,UACpDD,EAAqB9C,MAAQ2C,EAAgB3C,MAC7C8C,EAAqB7C,OAAS0C,EAAgB1C,OAE9C,IAAM+C,EAAMF,EAAqBG,WAAW,MAC5CD,EAAIE,UAAY,QAChBF,EAAIG,SAAS,EAAG,EAAGR,EAAgB3C,MAAO2C,EAAgB1C,QAE1D+C,EAAII,UAAUT,EAAiB,EAAG,GAElCG,EAAqBO,QAAO,SAACC,IACzBC,EAAAA,EAAAA,QAAOD,EAAMhC,MAGjBkC,GAAAA,CAAYZ,SAASC,eAAe,eAAeY,MAAK,SAACC,GACrDA,EAAOL,QAAO,SAACC,IACXC,EAAAA,EAAAA,QAAOD,EAAM/B,UAgCb,UAMI,SAAC,IAAD,OAGJ,SAAC,IAAD,CACIL,MAAM,YACN,aAAW,gBACXuB,UAAU,OACVC,QAASlB,EAJb,UAMI,SAAC,IAAD,UAGR,SAAC,KAAD,CAAMa,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,MAAI,EAA/B,UACI,UAAC,IAAD,CACImB,QAAS,EACTxB,UAAU,MACVD,GAAI,CAAE0B,GAAI,GAAKzB,UAAW,OAC1B0B,WAAW,SAJf,WAMI,SAAC,IAAD,KACA,SAAC,KAAD,CACI,aAAW,SACXC,MAAOhC,EACPiC,SAAU,SAACC,EAAGF,GAAJ,OACN/B,EAA6B+B,OAGrC,SAAC,IAAD,c,sGChFpB,IA7B6B,SAAC,GAA4C,IAA1CG,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MACzD,OACI,SAAC,EAAAC,SAAD,UACKJ,aAAsBK,OACnBL,EAAWM,KAAI,SAACC,EAAOC,GAAR,OACX,SAAC,KAAD,CAAMpC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,MAAI,EAAhC,UACI,SAAC,IAAD,CACIuB,SAAU,SAACC,GAAD,OAAOE,EAAQO,IAAGC,EAAAA,EAAAA,IAASV,EAAEW,OAAOb,SAC9CA,MAAOU,EACPtC,GAAI,CAAElC,MAAO,QACb4E,WAAY,CACRC,gBACI,SAAC,IAAD,CAAgBC,SAAS,OAAzB,UACI,SAAC,IAAD,UAAUX,EAAOM,OAGzBM,aAAcX,EAAMK,KAChB,SAAC,IAAD,CAAgBK,SAAS,QAAzB,UACI,SAAC,IAAD,UAAUV,EAAMK,mB,mLC2CxD,EApD8B,WAC1B,OACI,UAACO,EAAA,EAAD,CACIjF,MAAM,gGACNkF,YAAY,EACZ/C,GAAI,CAAEC,UAAW,OAHrB,WAKI,SAAC+C,EAAA,GAAD,CAAMC,UAAU,eAAe3C,MAAI,EAAnC,UACI,qmEAWJ,UAAC0C,EAAA,GAAD,CAAMC,UAAU,eAAe3C,MAAI,EAAnC,WACI,6OAIA,gBACI2C,UAAU,gBACVC,IAAKC,EACLC,IAAI,uBAGZ,SAACJ,EAAA,GAAD,CAAM1C,MAAI,EAAV,UACI,SAAC+C,EAAA,EAAD,UAnCZ,8HAqCQ,SAACL,EAAA,GAAD,CAAM1C,MAAI,EAAV,UACA,SAAC+C,EAAA,EAAD,UApCR,sHAuCQ,SAACL,EAAA,GAAD,CAAMC,UAAU,eAAe3C,MAAI,EAAnC,UACI,8oBAMJ,SAAC0C,EAAA,GAAD,CAAM1C,MAAI,EAAV,UACA,SAAC+C,EAAA,EAAD,UApDR,mD,gCCHEC,EAAoB,CAAC,WAAY,WAAY,gBAAiB,aAAc,aAAc,cAC1FC,EAAiB,CAAC,qBAAsB,UAAW,qBAAsB,QAAS,UAAW,WAsCnG,EApC4B,SAAC,GAatB,IAZHC,EAYE,EAZFA,EACAC,EAWE,EAXFA,EACAC,EAUE,EAVFA,IACAC,EASE,EATFA,GACAC,EAQE,EARFA,GACAC,EAOE,EAPFA,GACAC,EAME,EANFA,KACAC,EAKE,EALFA,KACAC,EAIE,EAJFA,OACAC,EAGE,EAHFA,MACAC,EAEE,EAFFA,MACAC,EACE,EADFA,MAEA,OACI,SAACrB,EAAA,EAAD,CACIC,YAAU,EACVlF,MAAM,yDACNmC,GAAI,CACAC,UAAW,MACXhC,UAAW,QACXF,OAAQ,QANhB,UASI,SAACiF,EAAA,GAAD,CAAMvB,QAAS,GAAKvB,WAAS,EAACD,UAAU,MAAxC,UACI,SAACmE,EAAA,EAAD,CACIrC,WAAY,CAACyB,EAAGC,EAAGC,EAAKC,EAAIC,EAAIC,GAChC7B,QAAS,CAAC8B,EAAMC,EAAMC,EAAQC,EAAOC,EAAOC,GAC5ClC,OAAQqB,EACRpB,MAAOqB,S,kEC2B3B,SAASc,EAAgBC,GACrB,IAAIC,EAAS,CACTxG,OAASuG,EAAME,MAAO,KAE1B,OACI,gBAAKxG,MAAOuG,EAAQtB,UAAU,UAKtC,MApEMwB,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAOF,aAAc,IAAD,yBACT,gBANJC,MAAQ,CACJC,WAAY,GACZC,QAAS,MAGA,EAKbC,gBAAkB,WACd,MAAqB,EAAKP,MAAnBQ,EAAP,EAAOA,GAAIC,EAAX,EAAWA,EAAGC,EAAd,EAAcA,IACd,EAAKzC,EAAI,EACT0C,cAAc,EAAKP,MAAME,SAEzB,IAAMA,EAAUM,aAAa,WACtB,EAAK3C,GAAKwC,EAAEI,QACXF,cAAcL,GAClB,EAAKrC,IACL,EAAK6C,SAAS,CAACT,WAAY,IAAMI,EAAE,EAAKxC,GAAKyC,MAC9C,CAAM,IAALF,IACJ,EAAKM,SAAS,CAACR,QAAAA,KAhBN,EAmBbS,eAAiB,WACbJ,cAAc,EAAKP,MAAME,SACzB,EAAKrC,EAAI,EACT,EAAK6C,SAAS,CAACR,QAAS,QApBxB,EAAKrC,EAAI,EAFA,EAgDZ,OA7CA,8BAsBD,WAEI,OACI,UAACO,EAAA,EAAD,CAAS9C,GAAI,CAAClC,MAAM,QAApB,WACI,UAACkF,EAAA,GAAD,CAAM9C,WAAS,EAAf,WACI,SAAC8C,EAAA,GAAD,CAAM3C,GAAI,EAAV,UACI,SAACiF,EAAA,EAAD,CAAQ9E,QAAS+E,KAAKF,eAAgBrF,GAAI,CAAClC,MAAO,QAAlD,yCAEJ,SAACkF,EAAA,GAAD,CAAM3C,GAAI,EAAV,UACI,SAACiF,EAAA,EAAD,CAAQ9E,QAAS+E,KAAKV,gBAAiB7E,GAAI,CAAClC,MAAO,QAAnD,4CAGR,mBACA,SAACkF,EAAA,GAAD,WACI,gBAAKC,UAAU,iBAAf,UACI,gBAAKA,UAAU,OAAf,UACI,SAACoB,EAAD,CAAgBG,MAAOe,KAAKb,MAAMC,0BAOzD,EAvDCF,CAAwBe,EAAAA,W,WCuBxBC,EAAiB,IAAjBA,EAA0B,IAyOhC,EAvO8B,WAC1B,OAA4BhG,EAAAA,EAAAA,UAAS,IAArC,eAAOiG,EAAP,KAAiBC,EAAjB,KACA,GAA4BlG,EAAAA,EAAAA,UAAS,GAArC,eAAOmG,EAAP,KAAeC,EAAf,KACA,GAAkBpG,EAAAA,EAAAA,UAAS,KAA3B,eAAO+D,EAAP,KAAUM,EAAV,KACA,GAAkBrE,EAAAA,EAAAA,UAAS,GAA3B,eAAOgE,EAAP,KAAUM,EAAV,KACA,GAAsBtE,EAAAA,EAAAA,UAAS,GAA/B,eAAOiE,EAAP,KAAYM,EAAZ,KACA,GAAoBvE,EAAAA,EAAAA,UAAS,GAA7B,eAAOmE,EAAP,KAAWM,EAAX,KACA,GAAoBzE,EAAAA,EAAAA,UAAS,GAA7B,eAAOoE,EAAP,KAAWM,EAAX,KACA,GAAoB1E,EAAAA,EAAAA,UAAS,IAA7B,eAAOkE,EAAP,KAAWM,EAAX,KACA,GAA8BxE,EAAAA,EAAAA,UAAS,IAAvC,eAAOqG,EAAP,KAAgBC,EAAhB,KACA,GAA4BtG,EAAAA,EAAAA,UAAS,IAArC,eAAO7B,EAAP,KAAeoI,GAAf,KACA,IAAwCvG,EAAAA,EAAAA,UAAS,MAAjD,iBAAOwG,GAAP,MAAqBC,GAArB,MACA,IAAkCzG,EAAAA,EAAAA,UAAS,GAA3C,iBAAOM,GAAP,MAAkBoG,GAAlB,MACA,IAA2C1G,EAAAA,EAAAA,WAAS,GAApD,iBAAO2G,GAAP,MAAuBC,GAAvB,MAEA,IAA4C5G,EAAAA,EAAAA,WAAS,GAArD,iBAAO6G,GAAP,MAAwBC,GAAxB,OAyBAzG,EAAAA,EAAAA,YAAU,WASN,IAAM0G,EAAMC,EAAAA,GAAAA,IAAAA,OAAoBjD,EAAIC,EAAG,EAAGD,EAAIE,EAAKC,GACnD,EAAe8C,EAAAA,GAAAA,SAAkBD,EAAKE,OAAO9C,GAAK8C,OAAO7C,IAAzD,eAAO8C,EAAP,KAAU5B,EAAV,KAEAc,EAAUc,EAAE,GAAKA,EAAE,IACnBhB,EAAQZ,GACRmB,GAtEwB,SAAC1C,EAAGC,EAAGC,GAAP,MAC5B,KACA+C,EAAAA,GAAAA,sBAA+BjD,EAAIC,GACnC,8BACAgD,EAAAA,GAAAA,sBAA+BjD,EAAIE,GACnC,KAiEoBkD,CAAwBpD,EAAGC,EAAGC,IAC9C,IAAMmD,EAAMf,EAAQzD,KAAI,SAACP,EAAGgF,GAQxB,IAAMC,EAAON,EAAAA,GAAAA,IAAAA,OAAoB3E,EAAE0B,EAAI1B,EAAE2B,EAAG,EAAG3B,EAAE0B,EAAI1B,EAAE4B,IAAK5B,EAAE6B,IAC9D,EAAiB8C,EAAAA,GAAAA,SAAkBM,EAAMnD,EAAIC,GAA7C,eAAOmD,EAAP,KACA,MAAO,CACHL,EAAGK,EACHjC,EAHJ,KAIIkC,EAAGX,GAAkBlE,MAAM4E,EAAG7B,QAAQ+B,KAAK,GAAK,KAChDC,KAAM,CAEFrJ,MAAOgE,EAAE/B,WAGbqH,KAAM,WAAad,GAAkB,KAAO,IAC5Ce,KAAMvF,EAAE7C,OACRqI,KAAM,aAQC,IAJDxB,EAAQyB,WAClB,SAACC,GAAD,OACIA,EAAI7D,KAAOA,GAAM6D,EAAIhE,IAAMA,GAAKgE,EAAI/D,IAAMA,GAAK+D,EAAI9D,MAAQA,MAI/DmD,EAAIY,KAAK,CACLd,EAAAA,EACA5B,EAAAA,EACAkC,EAAGX,GAAkBlE,MAAMuE,EAAExB,QAAQ+B,KAAK,GAAK,KAE/CC,KAAM,CAEFrJ,MAAOiC,IAEXqH,KAAM,WAAad,GAAkB,KAAO,IAE5CgB,KAAM,QACND,KAAK,GAAD,OAAK5B,EAAL,YAAoBA,EAApB,OAGZO,GAAUa,KACX,CAACrD,EAAGC,EAAGC,EAAKE,EAAIC,EAAIF,EAAI2C,GAAiBvG,GAAW+F,KAEvDhG,EAAAA,EAAAA,YAAU,WACNuG,IAAiB,KAClB,CAAC7C,EAAGC,EAAGE,EAAID,IAKd,OACI,UAACV,EAAA,GAAD,CAAM9C,WAAS,EAACD,UAAU,SAASwB,QAAS,EAA5C,WACI,SAACuB,EAAA,GAAD,CACIhF,MAAO,CACHF,MAAO,OACPC,OAAQ,OACRK,OAAQ,OACR6B,UAAW,OAEfK,MAAI,EAPR,UASI,SAAC,EAAD,OAGJ,SAAC0C,EAAA,GAAD,CAAMhD,GAAI,CAAE5B,OAAQ,OAAQN,MAAO,QAAUwC,MAAI,EAAjD,UACI,SAACwC,EAAA,EAAD,CAAS9C,GAAI,CAAEC,UAAW,OAA1B,UACI,UAAC+C,EAAA,GAAD,CACI0E,GAAG,aACH1H,GAAI,CAAE5B,OAAQ,QACd8B,WAAS,EACTD,UAAU,MAJd,UAMK6F,EAAQzD,KAAI,SAACmF,EAAKV,GACf,IAAMa,EA/IK,SAACnE,EAAGC,EAAGC,EAAKoD,GAAZ,MACnC,KACAL,EAAAA,GAAAA,sBAA+BjD,EAAIC,GADnC,qBAEcqD,EAFd,0BAEqCA,EAFrC,WAGAL,EAAAA,GAAAA,sBAA+BjD,EAAIE,GACnC,KA0IwCkE,CACZJ,EAAIhE,EACJgE,EAAI/D,EACJ+D,EAAI9D,IACJoD,EAAQ,GAEZ,OACI,SAAC9D,EAAA,GAAD,CAAM7C,GAAI,EAAGC,GAAI,GAAIE,MAAI,EAAzB,UACI,SAAC+C,EAAA,EAAD,UAAUsE,UAIpBvB,KACE,SAACpD,EAAA,GAAD,CAAM7C,GAAI,EAAGC,GAAI,GAAjB,UACI,SAACiD,EAAA,EAAD,UAAU4C,eAM9B,UAACjD,EAAA,GAAD,CACIvB,QAAS,EACTzD,MAAO,CACHF,MAAO,OACPC,OAAQ,OACRK,OAAQ,OACR6B,UAAW,OAEfC,WAAS,EARb,WAUI,UAAC8C,EAAA,GAAD,CACI7C,GAAI,EACJC,GAAI,GACJC,GAAI,GACJL,GAAI,CAAE6H,UAAW,KAAM/J,MAAO,QAC9BoC,WAAS,EALb,WAOI,SAAC8C,EAAA,GAAD,CAAM3C,GAAI,GAAV,UACI,SAAC,EAAD,CACImD,EAAGA,EACHC,EAAGA,EACHC,IAAKA,EACLC,GAAIA,EACJC,GAAIA,EACJC,GAAIA,EACJC,KAAMA,EACNC,KAAMA,EACNE,MAAOA,EACPD,OAAQA,EACRE,MAAOA,EACPC,MAAOA,OAGf,SAACnB,EAAA,GAAD,CAAMhD,GAAI,CAAE6H,UAAW,MAAQxH,GAAI,GAAnC,SACKqF,GAAYA,EAASP,SAClB,SAAC,EAAD,CACIL,GAAIc,EACJb,EAAGW,EACHV,IAAK8C,KAAK9C,IAAI+C,MAAMD,KAAMpC,WAK1C,UAAC1C,EAAA,GAAD,CAAM7C,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,MAAI,EAAjC,WACI,SAACwC,EAAA,EAAD,WACI,SAACkF,EAAA,EAAD,CACI7I,QArLR,WACZ,IAAM8I,GAAe,OAAOnC,IAKb,IAJDmC,EAAgBV,WAC1B,SAACC,GAAD,OACIA,EAAI7D,KAAOA,GAAM6D,EAAIhE,IAAMA,GAAKgE,EAAI/D,IAAMA,GAAK+D,EAAI9D,MAAQA,OAI/DuE,EAAgBR,KAAK,CACjB9D,GAAAA,EACAH,EAAAA,EACAC,EAAAA,EACAC,IAAAA,EACA3D,UAAAA,GACAd,OAAQ,KAAOwG,EAAc,MAAQK,EAAQX,OAAS,GAAG+C,WAAa,QAE1EnC,EAAWkC,GACX5B,IAAiB,KAqKDhH,gBACI,iCACA,OAAIyG,EAAQzD,KAAI,SAACmF,GAAD,OAASA,EAAIvI,WAASkJ,OACtC,OAEJ/I,eACI,OACO0G,EAAQzD,KACP,SAACmF,GAAD,gBACOA,EAAIvI,OADX,cACuBuI,EAAIhE,EAD3B,cACkCgE,EAAI/D,EADtC,eAC8C+D,EAAI7D,GADlD,gBAC4D6D,EAAI9D,IADhE,UAGNyE,KAAK,MAAQ,OAEnB7I,MAAO,kBAAMyG,EAAW,KACxBxG,OAAQ,SAAC6I,GAAD,OA5GjB,SAACA,GACRA,GAASjC,GAAaiC,EAAQrI,WA2GOR,CAAO6I,IAC5B5I,aAvMH,kBAAM+G,IAAkBD,UA0M7B,mBACA,SAACtD,EAAA,GAAD,CAAMqF,GAAI,GAAIlI,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,MAAI,EAA1C,UACI,SAACwC,EAAA,EAAD,WACI,SAACwF,EAAA,EAAD,CAAUzK,MAAM,6EAAiBD,OAAQA,kBCvOrE,EAdiC,WAE7B,OACI,UAAC2K,EAAA,EAAD,CAAUvK,MAAO,CAACwK,WAAY,eAA9B,WACI,SAACxF,EAAA,GAAD,CAAM1C,MAAI,EAACmB,QAASgH,EAAAA,GAApB,UACI,eAAIxF,UAAU,wBAAd,qKAEJ,SAACD,EAAA,GAAD,CAAM1C,MAAI,EAACmB,QAASgH,EAAAA,GAApB,UACI,SAAC,EAAD,W,ylXCfD,SAASC,EAAQC,GAG9B,OAAOD,EAAU,mBAAqBE,QAAU,iBAAmBA,OAAOC,SAAW,SAAUF,GAC7F,cAAcA,GACZ,SAAUA,GACZ,OAAOA,GAAO,mBAAqBC,QAAUD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,GACvHD,EAAQC,G,eCLE,SAASK,EAA2BC,EAAMC,GACvD,GAAIA,IAA2B,WAAlBR,EAAQQ,IAAsC,oBAATA,GAChD,OAAOA,EACF,QAAa,IAATA,EACT,MAAM,IAAIC,UAAU,4DAGtB,OAAO,EAAAC,EAAA,GAAsBH,GCNhB,SAASI,EAAaC,GACnC,IAAIC,GAA4B,EAAAC,EAAA,KAChC,OAAO,WACL,IACIC,EADAC,GAAQ,EAAAC,EAAA,GAAeL,GAG3B,GAAIC,EAA2B,CAC7B,IAAIK,GAAY,EAAAD,EAAA,GAAepE,MAAMuD,YACrCW,EAASI,QAAQC,UAAUJ,EAAOK,UAAWH,QAE7CH,EAASC,EAAM3B,MAAMxC,KAAMwE,WAG7B,OAAO,EAA0BxE,KAAMkE,M,sBChB5B,SAASO,EAAgBC,GAItC,OAHAD,EAAkBE,OAAOC,eAAiBD,OAAOP,eAAiB,SAAyBM,GACzF,OAAOA,EAAEG,WAAaF,OAAOP,eAAeM,IAEvCD,EAAgBC,G,sGCHV,SAASI,EAAUC,EAAUC,GAC1C,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIpB,UAAU,sDAGtBe,OAAOM,eAAeF,EAAU,YAAa,CAC3C1I,MAAOsI,OAAOO,OAAOF,GAAcA,EAAWxB,UAAW,CACvDD,YAAa,CACXlH,MAAO0I,EACPI,UAAU,EACVC,cAAc,KAGlBD,UAAU,IAERH,IAAY,OAAeD,EAAUC,K,sBChB5B,SAASK,IACtB,GAAuB,qBAAZf,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUe,KAAM,OAAO,EACnC,GAAqB,oBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,QAAQhC,UAAUiC,QAAQ9B,KAAKW,QAAQC,UAAUiB,QAAS,IAAI,iBACvD,EACP,MAAOjJ,GACP,OAAO,G","sources":["math/GraphBox.jsx","math/GraphMenu.jsx","views/input-boxes/SimpleParametersList.jsx","views/topics/chapter02/water-tank/lecture.jsx","views/topics/chapter02/water-tank/parameters.jsx","views/topics/chapter02/water-tank/visual/WaterTank.js","views/topics/chapter02/water-tank/index.jsx","views/topics/chapter02/HydraulicSystemsModeling.jsx","../javascript/esm|/home/py/projects/react/lnctrl/node_modules/@babel/runtime/helpers/esm/typeof.js","../javascript/esm|/home/py/projects/react/lnctrl/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../javascript/esm|/home/py/projects/react/lnctrl/node_modules/@babel/runtime/helpers/esm/createSuper.js","../javascript/esm|/home/py/projects/react/lnctrl/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../javascript/esm|/home/py/projects/react/lnctrl/node_modules/@babel/runtime/helpers/esm/inherits.js","../javascript/esm|/home/py/projects/react/lnctrl/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js"],"sourcesContent":["import React from \"react\";\nimport Plot from \"react-plotly.js\";\n\nconst GraphBox = ({ traces, title, width, height = 500 }) => {\n    const temp_layout = {\n        xaxis: {\n            zeroline: true,\n            rangemode: \"tozero\",\n            autotick: false,\n            ticks: \"outside\",\n            tick0: 0,\n            dtick: 0.25,\n            ticklen: 8,\n            tickwidth: 4,\n            tickcolor: \"#000\",\n        },\n        yaxis: {\n            zeroline: true,\n            rangemode: \"tozero\",\n            autotick: false,\n            ticks: \"outside\",\n            tick0: 0,\n            dtick: 0.25,\n            ticklen: 8,\n            tickwidth: 4,\n            tickcolor: \"#000\",\n        },\n    };\n\n    return (\n        <Plot\n            style={{ textAlign: \"center\" }}\n            //id=\"graphBox\"\n            data={traces}\n            layout={{\n                // width: 1000,\n                // autosize: true,\n                margin: {\n                    t: 30, //top margin\n                    l: 30, //left margin\n                    r: 20, //right margin\n                    b: 30, //bottom margin\n                },\n                xaxis: {\n                    rangemode: \"tozero\",\n                },\n                yaxis: {\n                    rangemode: \"tozero\",\n                },\n                height,\n                title,\n                // hoverlabel: { bgcolor: \"#FFF\" },\n                hoverlabel: {align:'auto', boxmode: 'overlay', font:{color:'#000000FF'}},\n                legend: {orientation: 'h'}//, y: -0.3},\n            }}\n        />\n    );\n};\n\nexport default GraphBox;\n","import SaveAltIcon from \"@mui/icons-material/SaveAlt\";\r\nimport PhotoCamera from \"@mui/icons-material/PhotoCamera\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport FullScreen from \"@mui/icons-material/Fullscreen\";\r\nimport FilterCenterFocusIcon from \"@mui/icons-material/FilterCenterFocus\";\r\nimport { Grid, IconButton, Slider, Stack } from \"@mui/material\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { useState, useEffect } from \"react\";\r\nimport html2canvas from \"html2canvas\";\r\nimport ThreeDRotationIcon from \"@mui/icons-material/ThreeDRotation\";\r\nimport ThreeSixtyIcon from \"@mui/icons-material/ThreeSixty\";\r\n\r\nconst GraphMenu = ({\r\n    capture,\r\n    graphFileName,\r\n    formulaFileName,\r\n    reset,\r\n    update,\r\n    toggle3DPlot,\r\n}) => {\r\n    const [is3DModeEnabled, set3DModeEnaabled] = useState(false);\r\n    const [thicknessSliderPercentage, setThicknessSliderPercentage] =\r\n        useState(20);\r\n\r\n    const toggle3DMode = () => {\r\n        set3DModeEnaabled(!is3DModeEnabled);\r\n        toggle3DPlot();\r\n    };\r\n\r\n    const save = () => {\r\n        const graphBoxElement = document.getElementById(\"graphBox\");\r\n        // normal .blob has dark bakground\r\n        // convert background to light\r\n        const canvasWithBackground = document.createElement(\"canvas\");\r\n        canvasWithBackground.width = graphBoxElement.width;\r\n        canvasWithBackground.height = graphBoxElement.height;\r\n\r\n        const ctx = canvasWithBackground.getContext(\"2d\");\r\n        ctx.fillStyle = \"white\";\r\n        ctx.fillRect(0, 0, graphBoxElement.width, graphBoxElement.height);\r\n\r\n        ctx.drawImage(graphBoxElement, 0, 0);\r\n        // save\r\n        canvasWithBackground.toBlob((blob) => {\r\n            saveAs(blob, graphFileName);\r\n        });\r\n\r\n        html2canvas(document.getElementById(\"formulaBox\")).then((canvas) => {\r\n            canvas.toBlob((blob) => {\r\n                saveAs(blob, formulaFileName);\r\n            });\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        update({ thickness: thicknessSliderPercentage / 20.0 + 0.1 });\r\n    }, [thicknessSliderPercentage, update]);\r\n\r\n    return (\r\n        <Grid sx={{ direction: \"rtl\" }} container direction=\"row\">\r\n            <Grid md={10} sm={8} xs={6} sx={{ direction: \"rtl\" }} item>\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"capture graph\"\r\n                    component=\"span\"\r\n                    onClick={toggle3DMode}\r\n                >\r\n                    {is3DModeEnabled ? (\r\n                        <ThreeSixtyIcon />\r\n                    ) : (\r\n                        <ThreeDRotationIcon />\r\n                    )}\r\n                </IconButton>\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"capture graph\"\r\n                    component=\"span\"\r\n                    onClick={capture}\r\n                >\r\n                    <PhotoCamera />\r\n                </IconButton>\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"download graph\"\r\n                    component=\"span\"\r\n                    onClick={save}\r\n                >\r\n                    <SaveAltIcon />\r\n                </IconButton>\r\n\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"capture graph\"\r\n                    component=\"span\"\r\n                    onClick={reset}\r\n                >\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </Grid>\r\n            <Grid md={2} sm={4} xs={6} item>\r\n                <Stack\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    sx={{ mt: 0.5, direction: \"ltr\" }}\r\n                    alignItems=\"center\"\r\n                >\r\n                    <FullScreen />\r\n                    <Slider\r\n                        aria-label=\"Volume\"\r\n                        value={thicknessSliderPercentage}\r\n                        onChange={(e, value) =>\r\n                            setThicknessSliderPercentage(value)\r\n                        }\r\n                    />\r\n                    <FilterCenterFocusIcon />\r\n                </Stack>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default GraphMenu;\r\n","import { Grid, InputAdornment, TextField } from \"@mui/material\";\nimport { MathJax } from \"better-react-mathjax\";\nimport { evaluate } from \"math/calculus\";\nimport { Fragment } from \"react\";\n\nconst SimpleParametersList = ({ parameters, setters, labels, units }) => {\n    return (\n        <Fragment>\n            {parameters instanceof Array &&\n                parameters.map((param, i) => (\n                    <Grid md={12} sm={4} xs={6} item>\n                        <TextField\n                            onChange={(e) => setters[i](evaluate(e.target.value))}\n                            value={param}\n                            sx={{ width: \"100%\" }}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"left\">\n                                        <MathJax>{labels[i]}</MathJax>\n                                    </InputAdornment>\n                                ),\n                                endAdornment: units[i] && (\n                                    <InputAdornment position=\"right\">\n                                        <MathJax>{units[i]}</MathJax>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </Grid>\n                ))}\n        </Fragment>\n    );\n};\n\nexport default SimpleParametersList;\n","import SubCard from \"../../../ui-component/cards/SubCard\";\r\nimport { Grid } from \"@mui/material\";\r\nimport hydralic_system_equivalent_circuit_image from \"./images/eq-circuit.png\";\r\nimport \"../../topics.css\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\n\r\nconst formulaDifferentialHydralicEquation =\r\n    \"$$RC\\\\frac{dh(t)}{dt} + h(t) = RQ_{in}$$\";\r\n\r\nconst formulaHydraulicResistanceDefinition =\r\n    \"$$R = \\\\frac{Fluid \\\\, Level \\\\, Changes}{Fluid \\\\, Flow  \\\\, Changes} = \\\\frac{\\\\Delta H}{\\\\Delta Q} \\\\frac{s}{m^2}$$\";\r\nconst formulaHydraulicCapacitanceDefinition =\r\n    \"$$C = \\\\frac{Fluid \\\\, Volume \\\\, Changes}{Fluid \\\\, Height  \\\\, Changes} = \\\\frac{\\\\Delta V}{\\\\Delta H} m^2$$\";\r\n\r\nconst WaterTankLevelLecture = () => {\r\n    return (\r\n        <SubCard\r\n            title=\"نمودار سطح آب مخزن\"\r\n            darkBorder={true}\r\n            sx={{ direction: \"rtl\" }}\r\n        >\r\n            <Grid className=\"lecture-text\" item>\r\n                <p>\r\n                    &nbsp; &nbsp; &nbsp; &nbsp; فرآیندهای صنعتی اغلب شامل جریان\r\n                    مایعات از طریق اتصال لوله‌ها و مخازن می‌شوند. جریان در چنین\r\n                    فرآیندهایی اغلب متلاطم است. سیستم‌های مربوط به جریان متلاطم\r\n                    اغلب باید توسط معادلات دیفرانسیل غیرخطی نشان داده شوند. حال\r\n                    اگر منطقه بهره برداری محدود باشد، چنین معادلات دیفرانسیل\r\n                    غیرخطی می توانند خطی شوند. به همین طریق در سیستم های\r\n                    سیالاتی، می‌توان معادل مقاومت و خازن در سیستم های الکتریکی\r\n                    را به صورت معادلات زیر نشان داد.\r\n                </p>\r\n            </Grid>\r\n            <Grid className=\"lecture-text\" item>\r\n                <p>\r\n                    &nbsp; &nbsp; &nbsp; &nbsp; حال مدار معادل سیستم را ترسیم می\r\n                    کنیم:\r\n                </p>\r\n                <img\r\n                    className=\"lecture-image\"\r\n                    src={hydralic_system_equivalent_circuit_image}\r\n                    alt=\"Loading Failed\"\r\n                />\r\n            </Grid>\r\n            <Grid item>\r\n                <MathJax>{formulaHydraulicResistanceDefinition}</MathJax>\r\n            </Grid>\r\n            <Grid item>\r\n            <MathJax>{formulaHydraulicCapacitanceDefinition}</MathJax>\r\n\r\n            </Grid>\r\n            <Grid className=\"lecture-text\" item>\r\n                <p>\r\n                    &nbsp; &nbsp; &nbsp; &nbsp; نهایتا معادله دیفرانسیل حاکم بر\r\n                    این سیستم بصورت زیر خواهد بود؛ در این رابطه Qin همان تغییرات\r\n                    دبی ورودی در هر ثانیه می باشد.\r\n                </p>\r\n            </Grid>\r\n            <Grid item>\r\n            <MathJax>{formulaDifferentialHydralicEquation}</MathJax>\r\n\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default WaterTankLevelLecture;\r\n","import { Grid } from \"@mui/material\";\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport SimpleParametersList from 'views/input-boxes/SimpleParametersList';\r\n\r\nconst parameterFormulas = [\"$$R = $$\", \"$$C = $$\", \"$$Q_{in} = $$\", \"$$h_i = $$\", \"$$t_i = $$\", \"$$t_f = $$\"];\r\nconst parameterUnits = [\"$$\\\\frac{s}{m^2}$$\", \"$$m^2$$\", \"$$\\\\frac{m^3}{s}$$\", \"$$m$$\", \"$$sec$$\", \"$$sec$$\"];\r\n\r\nconst WaterTankParameters = ({\r\n    R,\r\n    C,\r\n    Qin,\r\n    hi,\r\n    ti,\r\n    tf,\r\n    setR,\r\n    setC,\r\n    setQin,\r\n    setHi,\r\n    setTi,\r\n    setTf,\r\n}) => {\r\n    return (\r\n        <SubCard\r\n            darkBorder\r\n            title=\"پارامترها\"\r\n            sx={{\r\n                direction: \"ltr\",\r\n                textAlign: \"right\",\r\n                height: \"100%\",\r\n            }}\r\n        >\r\n            <Grid spacing={0.6} container direction=\"row\">\r\n                <SimpleParametersList\r\n                    parameters={[R, C, Qin, hi, ti, tf]}\r\n                    setters={[setR, setC, setQin, setHi, setTi, setTf]}\r\n                    labels={parameterFormulas}\r\n                    units={parameterUnits}\r\n                />\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default WaterTankParameters;\r\n","import React from 'react';\nimport './WaterTank.css';\nimport SubCard from \"views/ui-component/cards/SubCard\";\nimport { Button, Grid } from '@mui/material';\n\nclass VisualWaterTank extends React.Component {\n\n    state = {\n        waterLevel: 80,\n        timerID: null\n    };\n\n    constructor(){\n        super();\n        this.i = 0;\n    }\n\n    startSimulation = () => {\n        const {dt, y, max} = this.props;\n        this.i = 0;\n        clearInterval(this.state.timerID);\n        \n        const timerID = setInterval( () => {\n            if(this.i >= y.length)\n                clearInterval(timerID);\n            this.i++;\n            this.setState({waterLevel: 100 * y[this.i] / max});\n        }, [dt * 1000]);\n        this.setState({timerID});\n    }\n\n    stopSimulation = () => {\n        clearInterval(this.state.timerID);\n        this.i = 0;\n        this.setState({timerID: null});\n    }\n    \n    render () {\n\n        return (\n            <SubCard sx={{width:\"100%\"}} >\n                <Grid container>\n                    <Grid xs={6}>\n                        <Button onClick={this.stopSimulation} sx={{width: '100%'}}>توقف</Button>\n                    </Grid>\n                    <Grid xs={6}>\n                        <Button onClick={this.startSimulation} sx={{width: '100%'}}>شروع</Button>\n                    </Grid>\n                </Grid>\n                <hr />\n                <Grid>\n                    <div className=\"main-container\">\n                        <div className=\"tank\">\n                            <WaterContainer level={this.state.waterLevel}/>\n                        </div>\n\n                    </div>\n                </Grid>\n            </SubCard>\n        );\n    }\n}\n\nfunction WaterContainer (props) {\n    let styles = {\n        height : props.level +'%'\n    }\n    return (\n        <div style={styles} className=\"water\"></div>\n    )\n}\n\n\nexport default VisualWaterTank;","import WaterTankLevelLecture from \"./lecture\";\r\n\r\n// project imports\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport calculus from \"../../../../math/calculus/index\";\r\nimport { useState, useEffect } from \"react\";\r\nimport WaterTankParameters from \"./parameters\";\r\n\r\nimport GraphMenu from \"math/GraphMenu\";\r\nimport { Grid } from \"@mui/material\";\r\nimport VisualWaterTank from \"./visual/WaterTank\";\r\nimport GraphBox from \"math/GraphBox\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\n\r\nconst hydraulicSystemEquation = (R, C, Qin) =>\r\n    \"$$\" +\r\n    calculus.strictPrecisionFormat(R * C) +\r\n    \"\\\\frac{dh(t)}{dt} + h(t) = \" +\r\n    calculus.strictPrecisionFormat(R * Qin) +\r\n    \"$$\";\r\n\r\nconst indexedHydraulicSystemEquation = (R, C, Qin, index) =>\r\n    \"$$\" +\r\n    calculus.strictPrecisionFormat(R * C) +\r\n    `\\\\frac{dh_{${index}}(t)}{dt} + h_{${index}}(t) = ` +\r\n    calculus.strictPrecisionFormat(R * Qin) +\r\n    \"$$\";\r\n\r\nconst symbols = { out: \"h\", in: \"t\" };\r\n\r\nconst WaterTankLevelExample = () => {\r\n    const [currentY, selectY] = useState([]);\r\n    const [deltaX, setDeltaX] = useState(0);\r\n    const [R, setR] = useState(100);\r\n    const [C, setC] = useState(1.0);\r\n    const [Qin, setQin] = useState(0.0);\r\n    const [ti, setTi] = useState(0);\r\n    const [tf, setTf] = useState(5);\r\n    const [hi, setHi] = useState(10.0);\r\n    const [systems, setSystems] = useState([]);\r\n    const [traces, setTraces] = useState([]);\r\n    const [diffEquation, setDiffEquation] = useState(null);\r\n    const [thickness, setThickness] = useState(1.0); // graph line thickness\r\n    const [isGraphCatured, setGraphCaptured] = useState(false);\r\n\r\n    const [is3DPlotEnabled, set3DPlotEnabled] = useState(false);\r\n\r\n    const toggle3DPlot = () => set3DPlotEnabled(!is3DPlotEnabled);\r\n\r\n    const capture = () => {\r\n        const capturedSystems = [...systems];\r\n        const index = capturedSystems.findIndex(\r\n            (sys) =>\r\n                sys.hi === hi && sys.R === R && sys.C === C && sys.Qin === Qin\r\n        );\r\n        if (index === -1) {\r\n            // if current system has not been captured before => then capture it; o.w. its not needed\r\n            capturedSystems.push({\r\n                hi,\r\n                R,\r\n                C,\r\n                Qin,\r\n                thickness,\r\n                legend: \"$$\" + symbols.out + \"_{\" + (systems.length + 1).toString() + \"}$$\",\r\n            });\r\n            setSystems(capturedSystems);\r\n            setGraphCaptured(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Euiler (an approximation method):\r\n        // const [x, y] = calculus.ODE.euiler(1,\r\n        //     Number(ti),\r\n        //     Number(tf),\r\n        //     {y0: Number(hi),\r\n        //     fyt: (t, f) => Number(-f / (R * C).toFixed(2) + Qin / C)}\r\n        // );\r\n\r\n        const h_t = calculus.ODE.cc1ode(R * C, 1, R * Qin, hi);\r\n        const [x, y] = calculus.pointify(h_t, Number(ti), Number(tf)); // N: 100\r\n\r\n        setDeltaX(x[1] - x[0]);\r\n        selectY(y); // currentY = y\r\n        setDiffEquation(hydraulicSystemEquation(R, C, Qin));\r\n        const all = systems.map((e, index) => {\r\n            // const [xi, yi] = calculus.ODE.euiler(\r\n            //     Number(ti),\r\n            //     Number(tf),\r\n            //     Number(e.hi),\r\n            //     1000,\r\n            //     (t, f) => Number(-f / (e.R * e.C) + e.Qin / e.C)\r\n            // );\r\n            const hi_t = calculus.ODE.cc1ode(e.R * e.C, 1, e.R * e.Qin, e.hi);\r\n            const [xi, yi] = calculus.pointify(hi_t, ti, tf); // N: 100\r\n            return {\r\n                x: xi,\r\n                y: yi,\r\n                z: is3DPlotEnabled ? Array(xi.length).fill(0) : null,\r\n                line: {\r\n                    // color: e.color...\r\n                    width: e.thickness,\r\n                },\r\n                // color,\r\n                type: \"scatter\" + (is3DPlotEnabled ? \"3d\" : \"\"),\r\n                name: e.legend,\r\n                mode: \"lines\",\r\n            };\r\n        });\r\n\r\n        const index = systems.findIndex(\r\n            (sys) =>\r\n                sys.hi === hi && sys.R === R && sys.C === C && sys.Qin === Qin\r\n        );\r\n        if (index === -1)\r\n            // if current system isnt in traces list => add it temperory to plot\r\n            all.push({\r\n                x,\r\n                y,\r\n                z: is3DPlotEnabled ? Array(x.length).fill(0) : null,\r\n                // color,\r\n                line: {\r\n                    // color:'rgb(17, 157, 255)'\r\n                    width: thickness,\r\n                },\r\n                type: \"scatter\" + (is3DPlotEnabled ? \"3d\" : \"\"),\r\n\r\n                mode: \"lines\",\r\n                name: `${symbols.out}(${symbols.in})`,\r\n            });\r\n\r\n        setTraces(all);\r\n    }, [R, C, Qin, ti, tf, hi, is3DPlotEnabled, thickness, systems]);\r\n\r\n    useEffect(() => {\r\n        setGraphCaptured(false);\r\n    }, [R, C, hi, Qin]);\r\n    const update = (changes) => {\r\n        if (changes) setThickness(changes.thickness);\r\n        //and so...\r\n    };\r\n    return (\r\n        <Grid container direction=\"column\" spacing={1}>\r\n            <Grid\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    margin: \"auto\",\r\n                    direction: \"ltr\",\r\n                }}\r\n                item\r\n            >\r\n                <WaterTankLevelLecture />\r\n            </Grid>\r\n\r\n            <Grid sx={{ margin: \"auto\", width: \"100%\" }} item>\r\n                <SubCard sx={{ direction: \"ltr\" }}>\r\n                    <Grid\r\n                        id=\"formulaBox\"\r\n                        sx={{ margin: \"auto\" }}\r\n                        container\r\n                        direction=\"row\"\r\n                    >\r\n                        {systems.map((sys, index) => {\r\n                            const formula = indexedHydraulicSystemEquation(\r\n                                sys.R,\r\n                                sys.C,\r\n                                sys.Qin,\r\n                                index + 1\r\n                            );\r\n                            return (\r\n                                <Grid md={6} sm={12} item>\r\n                                    <MathJax>{formula}</MathJax>\r\n                                </Grid>\r\n                            );\r\n                        })}\r\n                        {!isGraphCatured && (\r\n                            <Grid md={6} sm={12}>\r\n                                <MathJax>{diffEquation}</MathJax>\r\n                            </Grid>\r\n                        )}\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid\r\n                spacing={2}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    margin: \"auto\",\r\n                    direction: \"ltr\",\r\n                }}\r\n                container\r\n            >\r\n                <Grid\r\n                    md={3}\r\n                    sm={12}\r\n                    xs={12}\r\n                    sx={{ marginTop: \"1%\", width: \"100%\" }}\r\n                    container\r\n                >\r\n                    <Grid xs={12}>\r\n                        <WaterTankParameters\r\n                            R={R}\r\n                            C={C}\r\n                            Qin={Qin}\r\n                            hi={hi}\r\n                            ti={ti}\r\n                            tf={tf}\r\n                            setR={setR}\r\n                            setC={setC}\r\n                            setHi={setHi}\r\n                            setQin={setQin}\r\n                            setTi={setTi}\r\n                            setTf={setTf}\r\n                        />\r\n                    </Grid>\r\n                    <Grid sx={{ marginTop: \"3%\" }} xs={12}>\r\n                        {currentY && currentY.length && (\r\n                            <VisualWaterTank\r\n                                dt={deltaX}\r\n                                y={currentY}\r\n                                max={Math.max.apply(Math, currentY)}\r\n                            />\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid md={9} sm={12} xs={12} item>\r\n                    <SubCard>\r\n                        <GraphMenu\r\n                            capture={capture}\r\n                            formulaFileName={\r\n                                \"Water Tank Level Equations _ \" +\r\n                                [...systems.map((sys) => sys.legend)].join() +\r\n                                \".png\"\r\n                            }\r\n                            graphFileName={\r\n                                [\r\n                                    ...systems.map(\r\n                                        (sys) =>\r\n                                            `${sys.legend}{R=${sys.R}_C=${sys.C}_hi=${sys.hi}_Qin=${sys.Qin}} `\r\n                                    ),\r\n                                ].join(\", \") + \".png\"\r\n                            }\r\n                            reset={() => setSystems([])}\r\n                            update={(changes) => update(changes)}\r\n                            toggle3DPlot={toggle3DPlot}\r\n                        />\r\n                    </SubCard>\r\n                    <hr />\r\n                    <Grid lg={12} md={12} sm={12} xs={12} item>\r\n                        <SubCard>\r\n                            <GraphBox title=\"ارتفاع آب مخزن\" traces={traces} />\r\n                        </SubCard>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default WaterTankLevelExample;\r\n","import \"views/topics/topics.css\";\r\nimport { Grid } from \"@mui/material\";\r\n// project imports\r\nimport MainCard from \"views/ui-component/cards/MainCard\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport WaterTankLevelExample from \"./water-tank\";\r\n\r\nconst HydraulicSystemsModeling = () => {\r\n\r\n    return (\r\n        <MainCard style={{background: 'transparent'}}>\r\n            <Grid item spacing={gridSpacing}>\r\n                <h2 className=\"chapter-section-title\">مدل سازی سیستم های هیدرولیکی</h2>\r\n            </Grid>\r\n            <Grid item spacing={gridSpacing}>\r\n                <WaterTankLevelExample />\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default HydraulicSystemsModeling;\r\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  Object.defineProperty(subClass, \"prototype\", {\n    value: Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    }),\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}"],"names":["traces","title","width","height","style","textAlign","data","layout","margin","t","l","r","b","xaxis","rangemode","yaxis","hoverlabel","align","boxmode","font","color","legend","orientation","capture","graphFileName","formulaFileName","reset","update","toggle3DPlot","useState","is3DModeEnabled","set3DModeEnaabled","thicknessSliderPercentage","setThicknessSliderPercentage","useEffect","thickness","sx","direction","container","md","sm","xs","item","component","onClick","graphBoxElement","document","getElementById","canvasWithBackground","createElement","ctx","getContext","fillStyle","fillRect","drawImage","toBlob","blob","saveAs","html2canvas","then","canvas","spacing","mt","alignItems","value","onChange","e","parameters","setters","labels","units","Fragment","Array","map","param","i","evaluate","target","InputProps","startAdornment","position","endAdornment","SubCard","darkBorder","Grid","className","src","hydralic_system_equivalent_circuit_image","alt","MathJax","parameterFormulas","parameterUnits","R","C","Qin","hi","ti","tf","setR","setC","setQin","setHi","setTi","setTf","SimpleParametersList","WaterContainer","props","styles","level","VisualWaterTank","state","waterLevel","timerID","startSimulation","dt","y","max","clearInterval","setInterval","length","setState","stopSimulation","Button","this","React","symbols","currentY","selectY","deltaX","setDeltaX","systems","setSystems","setTraces","diffEquation","setDiffEquation","setThickness","isGraphCatured","setGraphCaptured","is3DPlotEnabled","set3DPlotEnabled","h_t","calculus","Number","x","hydraulicSystemEquation","all","index","hi_t","xi","z","fill","line","type","name","mode","findIndex","sys","push","id","formula","indexedHydraulicSystemEquation","marginTop","Math","apply","GraphMenu","capturedSystems","toString","join","changes","lg","GraphBox","MainCard","background","gridSpacing","_typeof","obj","Symbol","iterator","constructor","prototype","_possibleConstructorReturn","self","call","TypeError","assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","result","Super","getPrototypeOf","NewTarget","Reflect","construct","arguments","_getPrototypeOf","o","Object","setPrototypeOf","__proto__","_inherits","subClass","superClass","defineProperty","create","writable","configurable","_isNativeReflectConstruct","sham","Proxy","Boolean","valueOf"],"sourceRoot":""}