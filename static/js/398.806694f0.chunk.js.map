{"version":3,"file":"static/js/398.806694f0.chunk.js","mappings":"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","sources":["views/input-boxes/SimpleParametersList.jsx","views/plotter/GraphMenu.jsx","views/plotter/PlotlyBox.jsx","views/topics/chapter06/bode-plot/parameters.jsx","views/topics/chapter06/bode-plot/lecture.jsx","views/topics/chapter06/bode-plot/index.jsx","views/ui-component/cards/MainCard.jsx","views/ui-component/cards/PinchPanCard.jsx","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/FilterCenterFocus.js","../node_modules/@mui/icons-material/Fullscreen.js","../node_modules/@mui/icons-material/PhotoCamera.js","../node_modules/@mui/icons-material/ThreeDRotation.js","../node_modules/@mui/icons-material/ThreeSixty.js"],"sourcesContent":["import { Grid, InputAdornment, TextField } from \"@mui/material\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst SimpleParametersList = ({ parameters, setters, labels, units }) => {\r\n    return (\r\n        <Fragment>\r\n            {parameters instanceof Array &&\r\n                parameters.map((param, i) => (\r\n                    <Grid md={12} sm={4} xs={6} item>\r\n                        <TextField\r\n                            onChange={(e) => setters[i](e.target.value)}\r\n                            value={param}\r\n                            sx={{ width: \"100%\" }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"left\">\r\n                                        <MathJax>{labels[i]}</MathJax>\r\n                                    </InputAdornment>\r\n                                ),\r\n                                endAdornment: units[i] && (\r\n                                    <InputAdornment position=\"right\">\r\n                                        <MathJax>{units[i]}</MathJax>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SimpleParametersList;\r\n","import PhotoCamera from \"@mui/icons-material/PhotoCamera\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport FullScreen from \"@mui/icons-material/Fullscreen\";\r\nimport FilterCenterFocusIcon from \"@mui/icons-material/FilterCenterFocus\";\r\nimport { Grid, IconButton, Slider, Stack } from \"@mui/material\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ThreeDRotationIcon from \"@mui/icons-material/ThreeDRotation\";\r\nimport ThreeSixtyIcon from \"@mui/icons-material/ThreeSixty\";\r\n\r\nconst GraphMenu = ({\r\n    capture,\r\n    reset,\r\n    update,\r\n    toggle3DPlot,\r\n}) => {\r\n    const [is3DModeEnabled, set3DModeEnaabled] = useState(false);\r\n    const [thicknessSliderPercentage, setThicknessSliderPercentage] =\r\n        useState(20);\r\n\r\n    const toggle3DMode = () => {\r\n        set3DModeEnaabled(!is3DModeEnabled);\r\n        toggle3DPlot();\r\n    };\r\n\r\n    useEffect(() => {\r\n        update({ thickness: thicknessSliderPercentage / 20.0 + 0.1 });\r\n    }, [thicknessSliderPercentage, update]);\r\n\r\n    return (\r\n        <Grid sx={{ direction: \"rtl\" }} container direction=\"row\">\r\n            <Grid md={10} sm={8} xs={6} sx={{ direction: \"rtl\" }} item>\r\n                {toggle3DPlot && (\r\n                    <IconButton\r\n                        color=\"secondary\"\r\n                        aria-label=\"capture graph\"\r\n                        component=\"span\"\r\n                        onClick={toggle3DMode}\r\n                    >\r\n                        {is3DModeEnabled ? (\r\n                            <ThreeSixtyIcon />\r\n                        ) : (\r\n                            <ThreeDRotationIcon />\r\n                        )}\r\n                    </IconButton>\r\n                )}\r\n                {capture && <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"capture graph\"\r\n                    component=\"span\"\r\n                    onClick={capture}\r\n                >\r\n                    <PhotoCamera />\r\n                </IconButton>}\r\n\r\n                {reset && <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"capture graph\"\r\n                    component=\"span\"\r\n                    onClick={reset}\r\n                >\r\n                    <DeleteIcon />\r\n                </IconButton>}\r\n            </Grid>\r\n            <Grid md={2} sm={4} xs={6} item>\r\n                <Stack\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    sx={{ mt: 0.5, direction: \"ltr\" }}\r\n                    alignItems=\"center\"\r\n                >\r\n                    <FullScreen />\r\n                    <Slider\r\n                        aria-label=\"Volume\"\r\n                        value={thicknessSliderPercentage}\r\n                        onChange={(e, value) =>\r\n                            setThicknessSliderPercentage(value)\r\n                        }\r\n                    />\r\n                    <FilterCenterFocusIcon />\r\n                </Stack>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default GraphMenu;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { MapInteractionCSS } from \"react-map-interaction\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PlotlyBox = ({\r\n    traces,\r\n    title,\r\n    width,\r\n    height = 500,\r\n    logX,\r\n    hideX,\r\n    hideY,\r\n    yRange,\r\n    hideLegends,\r\n}) => {\r\n    /*const temp_layout = {\r\n        xaxis: {\r\n            zeroline: true,\r\n            rangemode: \"tozero\",\r\n            autotick: false,\r\n            ticks: \"outside\",\r\n            tick0: 0,\r\n            dtick: 0.25,\r\n            ticklen: 8,\r\n            tickwidth: 4,\r\n            tickcolor: \"#000\",\r\n        },\r\n        yaxis: {\r\n            zeroline: true,\r\n            rangemode: \"tozero\",\r\n            autotick: false,\r\n            ticks: \"outside\",\r\n            tick0: 0,\r\n            dtick: 0.25,\r\n            ticklen: 8,\r\n            tickwidth: 4,\r\n            tickcolor: \"#000\",\r\n        },\r\n    };*/\r\n    const customization = useSelector((state) => state.customization);\r\n    const plot = (\r\n        <Plot\r\n            style={{ textAlign: \"center\" }}\r\n            //id=\"PlotlyBox\"\r\n            data={traces}\r\n            layout={{\r\n                // width: 1000,\r\n                // autosize: true,\r\n                showlegend: !hideLegends,\r\n                margin: {\r\n                    t: 30, //top margin\r\n                    l: 30, //left margin\r\n                    r: 20, //right margin\r\n                    b: 30, //bottom margin\r\n                },\r\n                xaxis: {\r\n                    rangemode: \"tozero\",\r\n                    zeroline: true,\r\n                    type: !logX ? \"dec\" : \"log\",\r\n                    visible: !hideX,\r\n                },\r\n                yaxis: {\r\n                    rangemode: \"tozero\",\r\n                    zeroline: true,\r\n                    visible: !hideY,\r\n                    range: yRange,\r\n                },\r\n\r\n                height,\r\n                title,\r\n                // hoverlabel: { bgcolor: \"#FFF\" },\r\n                hoverlabel: {\r\n                    align: \"auto\",\r\n                    boxmode: \"overlay\",\r\n                    font: { color: \"#000000FF\" },\r\n                },\r\n                legend: { orientation: \"h\" }, //, y: -0.3},\r\n            }}\r\n        />\r\n    );\r\n    return customization.enableZoom ? (\r\n        <MapInteractionCSS disablePan={true}>{plot}</MapInteractionCSS>\r\n    ) : (\r\n        plot\r\n    );\r\n};\r\n\r\nexport default PlotlyBox;\r\n","import {\r\n    Grid,\r\n    Button,\r\n    Fab,\r\n    Slider,\r\n    TextField,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport SimpleParametersList from \"views/input-boxes/SimpleParametersList\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport AnimateButton from \"../../../ui-component/extended/AnimateButton\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport { useState } from \"react\";\r\n\r\nconst parameterFormulas = [\r\n    \"$$Num = [$$\",\r\n    \"$$Den = [$$\",\r\n    \"$$\\\\omega_{min} = $$\",\r\n    \"$$\\\\omega_{max} = $$\",\r\n    \"$$N = $$\",\r\n];\r\nconst parameterUnits = [\"$$]$$\", \"$$]$$\", \"$$Hz$$\", \"$$Hz$$\", null];\r\n\r\nconst BodePlotParameters = ({\r\n    rawNumerator,\r\n    rawDenominator,\r\n    $rawNumerator,\r\n    $rawDenominator,\r\n    w_min,\r\n    w_max,\r\n    $w_min,\r\n    $w_max,\r\n    phaseInRadianScale,\r\n    setPhaseInRadianScale,\r\n    N,\r\n    $N,\r\n    multiplier,\r\n    $K,\r\n}) => {\r\n    const [kMax, setkMax] = useState(100);\r\n\r\n    return (\r\n        <SubCard\r\n            darkBorder\r\n            title=\"پارامترها\"\r\n            sx={{\r\n                direction: \"ltr\",\r\n                textAlign: \"right\",\r\n                height: \"100%\",\r\n            }}\r\n        >\r\n            <Grid spacing={gridSpacing} container direction=\"row\">\r\n                <SimpleParametersList\r\n                    parameters={[rawNumerator, rawDenominator, w_min, w_max, N]}\r\n                    setters={[\r\n                        $rawNumerator,\r\n                        $rawDenominator,\r\n                        $w_min,\r\n                        $w_max,\r\n                        $N,\r\n                    ]}\r\n                    labels={parameterFormulas}\r\n                    units={parameterUnits}\r\n                />\r\n                <Grid xs={12} item>\r\n                    <hr />\r\n                </Grid>\r\n                <Grid xs={12} style={{ paddingLeft: \"3%\" }} container>\r\n                    <Grid xs={12} item>\r\n                        <Typography dir=\"rtl\" style={{ textAlign: \"center\" }}>\r\n                            خروجی فاز بر حسب:\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid xs={6} sx={{ p: 1 }} item>\r\n                        <Button\r\n                            onClick={() => setPhaseInRadianScale(false)}\r\n                            style={{ width: \"100%\", textTransform: \"none\" }}\r\n                            variant={\r\n                                !phaseInRadianScale ? \"contained\" : \"outlined\"\r\n                            }\r\n                        >\r\n                            درجه\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid xs={6} sx={{ p: 1 }} item>\r\n                        <Button\r\n                            onClick={() => setPhaseInRadianScale(\"rad\")}\r\n                            style={{ width: \"100%\", textTransform: \"none\" }}\r\n                            variant={\r\n                                phaseInRadianScale ? \"contained\" : \"outlined\"\r\n                            }\r\n                        >\r\n                            رادیان\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <hr />\r\n            <Grid\r\n                xs={12}\r\n                sx={{ pt: gridSpacing }}\r\n                spacing={gridSpacing}\r\n                style={{ textAlign: \"center\" }}\r\n                container\r\n            >\r\n                <Grid xs={12} item>\r\n                    <Typography>\r\n                        تاثیر ضرب اسکالر سیستم در نمودار بود\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid xs={4} item>\r\n                    <Fab\r\n                        size=\"large\"\r\n                        variant=\"circular\"\r\n                        onClick={() => multiplier(0.1)}\r\n                    >\r\n                        <AnimateButton type=\"scale\" direction=\"down\">\r\n                            <MathJax>{\"$$\\\\times\\\\frac{1}{10}$$\"}</MathJax>\r\n                        </AnimateButton>\r\n                    </Fab>\r\n                </Grid>\r\n                <Grid xs={4} item>\r\n                    <Fab\r\n                        size=\"large\"\r\n                        variant=\"circular\"\r\n                        onClick={() => multiplier(10)}\r\n                    >\r\n                        <AnimateButton type=\"scale\" direction=\"down\">\r\n                            <MathJax>{\"$$\\\\times 10$$\"}</MathJax>\r\n                        </AnimateButton>\r\n                    </Fab>\r\n                </Grid>\r\n                <Grid xs={4} item>\r\n                    <Fab\r\n                        size=\"large\"\r\n                        variant=\"circular\"\r\n                        onClick={() => multiplier(-1)}\r\n                    >\r\n                        <AnimateButton type=\"scale\" direction=\"down\">\r\n                            <MathJax>{\"$$\\\\lgroup - \\\\rgroup$$\"}</MathJax>\r\n                        </AnimateButton>\r\n                    </Fab>\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n\r\n            <hr />\r\n            <br />\r\n            <Grid\r\n                xs={12}\r\n                style={{\r\n                    textAlign: \"center\",\r\n                    border: \"1px solid grey\",\r\n                    borderRadius: \"1rem\",\r\n                    paddingBottom: \"0.5rem\",\r\n                    paddingRight: \"0.5rem\",\r\n                    margin: \"auto\",\r\n                }}\r\n                spacing={gridSpacing}\r\n                container\r\n            >\r\n                <Grid xs={12} item>\r\n                    <Typography>تاثیر تغییر بهره در نمودار بود</Typography>\r\n                </Grid>\r\n                <Grid xs={9} item>\r\n                    <Slider\r\n                        sx={{ mt: 1 }}\r\n                        aria-label=\"Volume\"\r\n                        onChange={(e, value) => $K((value * kMax) / 100)}\r\n                    />\r\n                </Grid>\r\n                <Grid xs={3} item>\r\n                    <TextField\r\n                        onChange={(e) => setkMax(e.target.value)}\r\n                        value={kMax}\r\n                        sx={{ width: \"100%\" }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default BodePlotParameters;\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport \"views/topics/topics.css\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport img_formula_22 from \"./img/formula_22.jpg\";\r\nimport img_formula_23 from \"./img/formula_23.jpg\";\r\nimport img_zero_poles_type_in_bode from \"./img/zero_pole_types_in_bode.JPG\";\r\nimport img_standard_second_degree_system from \"./img/standard_second_degree_system.jpg\";\r\nimport img_m_pw_plot from \"./img/m_pw_plot.png\";\r\nimport img_bode_plot_manual from \"./img/bode_plot_manual.jpg\";\r\nimport PinchPanCard from \"views/ui-component/cards/PinchPanCard\";\r\n\r\nconst BodePlotLecture = () => {\r\n    return (\r\n        <PinchPanCard title=\"نمودار بود\" border={true}>\r\n            <Grid container>\r\n                <Grid item>\r\n                    <Typography sx={{ px: 2 }} style={{ lineHeight: \"2.5\" }}>\r\n                        <h1>نمودار بود</h1>\r\n                        نمودار اندازه پاسخ فرکانسی برحسب لگاریتم و نمودار فاز آن\r\n                        را نمودار بود گویند.\r\n                        <MathJax\r\n                            style={{ fontSize: \"18px\" }}\r\n                        >{`$$ G(j\\\\omega) = |G(j\\\\omega)|e^{j\\\\theta} $$`}</MathJax>\r\n                        لگاریتم دامنه تابع تبدیل G(jω) بر حسب دسی بل بیان\r\n                        می‌گردد و به صورت زیر است.\r\n                        <MathJax\r\n                            style={{ fontSize: \"18px\" }}\r\n                        >{`$$ LmG(j\\\\omega) = 20log|G(j\\\\omega)| $$`}</MathJax>\r\n                        دو واحدی که برای بیان باندهای فرکانسی یا نسبت‌های\r\n                        فرکانسی استفاده می‌شوند، اکتاو (octave) و دهه (decade)\r\n                        هستند.\r\n                        <br />\r\n                        <br />\r\n                        فاصله بین این دو فرکانس یک اکتاو است.\r\n                        <MathJax inline={true} style={{ fontSize: \"18px\" }}>\r\n                            {`\\\\( \\\\frac{\\\\omega_1}{\\\\omega_2} = 2 \\\\Rightarrow \\\\)`}\r\n                        </MathJax>\r\n                        <br />\r\n                        فاصله بین این دو فرکانس یک دهه است.\r\n                        <MathJax inline={true} style={{ fontSize: \"18px\" }}>\r\n                            {`\\\\( \\\\frac{\\\\omega_1}{\\\\omega_2} = 10 \\\\Rightarrow \\\\)`}\r\n                        </MathJax>\r\n                        <br />\r\n                        <br />\r\n                        <b> مزایای استفاده از لگاریتم در اندازه:</b>\r\n                        <br />\r\n                        1. تبدیل ضرب به جمع و تقسیم به تفریق\r\n                        <br />\r\n                        2. نمایش گسترده‌تری از پاسخ فرکانسی\r\n                        <br />\r\n                        <br />\r\n                        <b>مزایای استفاده از نمایش لگاریتمی ω</b>\r\n                        <br />\r\n                        1. رسم ساده‌تر\r\n                        <br />\r\n                        2. نمایش محدوده فرکانسی گسترده‌تر\r\n                        <br /> <br />\r\n                        <b>تابع تبدیل یک سیستم در حالت کلی:</b>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid xs={12} sx={{ m: \"auto\" }} item>\r\n                    <img\r\n                        className=\"lecture-image\"\r\n                        src={img_formula_22}\r\n                        alt=\"بارگذاری تصویر با مشکل مواجه شد\"\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography sx={{ px: 2 }} style={{ lineHeight: \"2.5\" }}>\r\n                        برای تابع تبدیل بالا، دو دسته معادلات برای لگاریتم دامنه\r\n                        و فاز خواهیم داشت:\r\n                        <h3>لگاریتم دامنه</h3>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid xs={12} sx={{ m: \"auto\" }} item>\r\n                    <img\r\n                        className=\"lecture-image\"\r\n                        src={img_formula_23}\r\n                        alt=\"بارگذاری تصویر با مشکل مواجه شد\"\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography sx={{ px: 2 }} style={{ lineHeight: \"2.5\" }}>\r\n                        <h3>فاز</h3>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid xs={12} sx={{ m: \"auto\" }} item>\r\n                    <MathJax\r\n                        style={{ fontSize: \"18px\" }}\r\n                    >{`$$ \\\\phi(\\\\omega) = +\\\\sum\\\\limits_{i=1}^Q tan^{-1}(\\\\omega \\\\tau_i) - N(90°) -\r\n                     \\\\sum\\\\limits_{m=1}^M tan^{-1}(\\\\omega \\\\tau_m) \\\\\\\\ \\\\qquad - \\\r\n                     \\\\sum\\\\limits_{k=1}^R tan^{-1} \\\\frac{2\\\\zeta_k \\\\omega_{n_k} \\\\omega}{\\\\omega^2 _{n_k} - \\\\omega^2}\r\n                     \\\\sum\\\\limits_{l=1}^P tan^{-1} \\\\frac{2\\\\zeta_l \\\\omega_{n_l} \\\\omega}{\\\\omega^2 _{n_l} - \\\\omega^2} $$`}</MathJax>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography sx={{ px: 2 }} style={{ lineHeight: \"2.5\" }}>\r\n                        <h3>ترسیم نمودارهای بود</h3>\r\n                        برای رسم کامل نمودار بود ابتدا چهار عبارت زیر را رسم\r\n                        می‌کنیم:\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid xs={12} sx={{ m: \"auto\" }} item>\r\n                    <img\r\n                        className=\"lecture-image\"\r\n                        src={img_zero_poles_type_in_bode}\r\n                        style={{ maxWidth: \"30rem\", height: \"auto\" }}\r\n                        alt=\"بارگذاری تصویر با مشکل مواجه شد\"\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography sx={{ px: 2 }} style={{ lineHeight: \"2.5\" }}>\r\n                        <h3>فرکانس شکست</h3>\r\n                        به فرکانس &nbsp;\r\n                        <MathJax inline={true} style={{ fontSize: \"18px\" }}>\r\n                            {`\\\\( \\\\omega = \\\\frac{1}{T} = \\\\omega_1 \\\\)`}\r\n                        </MathJax>\r\n                        ، فرکانس شکست یا فرکانس گوشه می‌گویند. فرکانس &nbsp;\r\n                        <MathJax inline={true} style={{ fontSize: \"18px\" }}>\r\n                            {`\\\\( \\\\omega = \\\\frac{1}{T} \\\\)`}\r\n                        </MathJax>\r\n                        &nbsp; را از آن جهت فرکانس شکست گویند که در این فرکانس\r\n                        شکستی در شیب منحنی دامنه رخ می‌دهد. همچنین فرکانس &nbsp;\r\n                        <MathJax inline={true} style={{ fontSize: \"18px\" }}>\r\n                            {`\\\\( \\\\omega = \\\\frac{1}{T} \\\\)`}\r\n                        </MathJax>\r\n                        &nbsp; را به علت اینکه نمودار مجانبی دامنه در این فرکانس\r\n                        در گوشه دو خط راست است، فرکانس گوشه نیز می‌نامند.\r\n                        <br />\r\n                        <b>توجه:</b> &nbsp; محدوده ی مهم پاسخ فرکانسی (در\r\n                        نمودارهای لگاریتم دامنه و زاویه فاز) معمولاً &nbsp;\r\n                        <MathJax inline={true} style={{ fontSize: \"18px\" }}>\r\n                            {`\\\\( \\\\pm1 \\\\)`}\r\n                        </MathJax>\r\n                        &nbsp; دهه از فرکانس شکست است.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography sx={{ px: 2 }} style={{ lineHeight: \"2.5\" }}>\r\n                        <h3>فرکانس تشدید</h3>\r\n                        اگر ξ بین 0 و1 باشد ما دو قطب مختلط داریم. با تغییر\r\n                        مقدار آن نمودار بود نیز به صورت مقابل تغییر می‌کند. در\r\n                        واقع برآمدگی به‌وجود‌آمده در فرکانس خاصی رخ می‌دهد که\r\n                        آنرا فرکانس تشدید می‌گویند.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid xs={12} sx={{ m: \"auto\" }} item>\r\n                    <img\r\n                        className=\"lecture-image\"\r\n                        src={img_standard_second_degree_system}\r\n                        alt=\"بارگذاری تصویر با مشکل مواجه شد\"\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <MathJax\r\n                        style={{ fontSize: \"18px\" }}\r\n                    >{`$$ \\\\omega_r = \\\\omega_n \\\\sqrt{1 - 2\\\\zeta^2} \\\\\\\\\r\n                    m_{p\\\\omega} = \\\\begin{cases} \r\n                            \\\\frac{1}{2\\\\zeta \\\\sqrt{1 - \\\\zeta^2}} \\\\qquad \\\\zeta < \\\\frac{1}{2} \\\\\\\\\r\n                            1 \\\\qquad \\\\qquad 1 > \\\\zeta > \\\\frac{1}{\\\\sqrt2}\r\n                        \\\\end{cases}\r\n                $$`}</MathJax>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography sx={{ px: 2 }} style={{ lineHeight: \"2.5\" }}>\r\n                        هر چه پهنای باند &nbsp;\r\n                        <MathJax inline={true} style={{ fontSize: \"18px\" }}>\r\n                            {`\\\\( \\\\omega_B \\\\)`}\r\n                        </MathJax>\r\n                        &nbsp; افزایش پیدا کند، زمان صعود پاسخ پله کاهش پیدا\r\n                        می‌کند. فراجهش پاسخ پله هم به &nbsp;\r\n                        <MathJax inline={true} style={{ fontSize: \"18px\" }}>\r\n                            {`\\\\( m_{p\\\\omega} \\\\)`}\r\n                        </MathJax>\r\n                        &nbsp; به خاطر ξ مرتبط است. هر چه &nbsp;\r\n                        <MathJax inline={true} style={{ fontSize: \"18px\" }}>\r\n                            {`\\\\( m_{p\\\\omega} \\\\)`}\r\n                        </MathJax>\r\n                        &nbsp; افزایش می‌یابد، درصد فراجهش هم افزایش می‌یابد.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid xs={12} sx={{ m: \"auto\" }} item>\r\n                    <img\r\n                        className=\"lecture-image\"\r\n                        src={img_m_pw_plot}\r\n                        alt=\"بارگذاری تصویر با مشکل مواجه شد\"\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography sx={{ px: 2 }} style={{ lineHeight: \"2.5\" }}>\r\n                        <h2>مراحل ترسیم نمودار بود</h2>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid xs={12} sx={{ m: \"auto\" }} item>\r\n                    <img\r\n                        className=\"lecture-image\"\r\n                        src={img_bode_plot_manual}\r\n                        style={{ maxWidth: \"30rem\", height: \"auto\" }}\r\n                        alt=\"بارگذاری تصویر با مشکل مواجه شد\"\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography sx={{ px: 2 }} style={{ lineHeight: \"2.5\" }}>\r\n                        <b>نکته: </b>\r\n                        اگر سیستمی را در عدد 10 ضرب کنیم، در نمودار اندازه 20dB\r\n                        بالا می‌رود و در فاز تغییری ایجاد نمی‌شود.\r\n                        <br />\r\n                        <b>نکته: </b>\r\n                        اگر سیستمی را در عدد &nbsp;\r\n                        <MathJax inline={true} style={{ fontSize: \"18px\" }}>\r\n                            {`\\\\( \\\\frac{-1}{10} \\\\)`}\r\n                        </MathJax>\r\n                        &nbsp; ضرب کنیم، در نمودار اندازه 20dB پایین می‌رود و در\r\n                        فاز 180درجه جابجا می‌شود.\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </PinchPanCard>\r\n    );\r\n};\r\n\r\nexport default BodePlotLecture;\r\n","// project imports\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport calculus from \"../../../../math/calculus\";\r\nimport { useState, useEffect } from \"react\";\r\nimport GraphMenu from \"views/plotter/GraphMenu\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport PlotlyBox from \"views/plotter/PlotlyBox\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport BodePlotParameters from \"./parameters\";\r\nimport TransferFunction from \"math/algebra/functions/fraction\";\r\nimport MainCard from \"views/ui-component/cards/MainCard\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { browserLockBreaker } from \"toolshed\";\r\nimport BodePlotLecture from \"./lecture\";\r\nconst symbols = {\r\n    in: \"jw\",\r\n    out: \"H\",\r\n};\r\nlet currentRawNum = \"\",\r\n    currentRawDen = \"\";\r\n\r\nconst BodePlot = () => {\r\n    const [rawNumerator, $rawNumerator] = useState(\"1\");\r\n    const [rawDenominator, $rawDenominator] = useState(\"1 1\");\r\n    const [H_s, $H_s] = useState(null);\r\n    const [ktrace, $ktrace] = useState({\r\n        amplitude: [],\r\n        phase: [],\r\n        degreePhase: [],\r\n    });\r\n    const [w_min, $w_min] = useState(0);\r\n    const [w_max, $w_max] = useState(10);\r\n    // gradiant of u(t) is 0 and unit ramp is one\r\n    const [systems, $systems] = useState([]);\r\n    const [traces, $traces] = useState({\r\n        phase: [],\r\n        amplitude: [],\r\n        degreePhase: [],\r\n    });\r\n    const [response, $response] = useState(null);\r\n    const [thickness, $thickness] = useState(1.0); // graph line thickness\r\n    const [isGraphCatured, $graphCaptured] = useState(false);\r\n    const [is3DPlotEnabled, $3DPlotEnabled] = useState(false);\r\n    const [phaseInRadianScale, setPhaseInRadianScale] = useState(true); // for degree => 180 / PI, for radian scale => 1.0\r\n    const [N, $N] = useState(1000);\r\n    const [K, $K] = useState(1);\r\n    const toggle3DPlot = () => $3DPlotEnabled(!is3DPlotEnabled);\r\n    const capture = () => {\r\n        const capturedSystems = [...systems];\r\n\r\n        if (capturedSystems.findIndex((sys) => H_s.equals(sys.H)) === -1) {\r\n            // if current system has not been captured before => then capture it; o.w. its not needed\r\n            capturedSystems.push({\r\n                H_s,\r\n                thickness,\r\n                legend:\r\n                    symbols.out + \"_{\" + (systems.length + 1).toString() + \"}\",\r\n            });\r\n            $systems(capturedSystems);\r\n            $graphCaptured(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // plot\r\n        if (H_s instanceof TransferFunction) {\r\n            (async () => {\r\n                try {\r\n                    $response(\"$$\" + H_s.label(\"H\") + \"$$\");\r\n                    // parameters changed => load again all traces(traces); this is for when shared params changes(ti, tf, ...),\r\n                    // so that the traces will be loaded with new conditions\r\n                    let repeatedSystem = false;\r\n                    const all = {\r\n                        amplitude: Array(systems.length),\r\n                        phase: Array(systems.length),\r\n                        degreePhase: Array(systems.length),\r\n                    };\r\n\r\n                    for (let i = 0; i < systems.length; i++) {\r\n                        if (i % 5 === 0) await browserLockBreaker();\r\n                        all.amplitude[i] = calculus.systemToTrace(\r\n                            systems[i].H_s.bode,\r\n                            +w_min,\r\n                            +w_max,\r\n                            systems[i].thickness,\r\n                            systems[i].legend,\r\n                            is3DPlotEnabled,\r\n                            +N\r\n                        );\r\n                        all.phase[i] = calculus.systemToTrace(\r\n                            systems[i].H_s.phase,\r\n                            +w_min,\r\n                            +w_max,\r\n                            systems[i].thickness,\r\n                            systems[i].legend,\r\n                            is3DPlotEnabled,\r\n                            +N\r\n                        );\r\n                        all.degreePhase[i] = { ...all.phase[i] };\r\n                        all.degreePhase[i].y = all.degreePhase[i].y.map(\r\n                            (yi) => yi * calculus.RadianToDegree\r\n                        );\r\n                        if (H_s.equals(systems[i].H_s)) repeatedSystem = true;\r\n                    }\r\n\r\n                    if (!repeatedSystem) {\r\n                        const amp = calculus.systemToTrace(\r\n                                H_s.bode,\r\n                                +w_min,\r\n                                +w_max,\r\n                                thickness,\r\n                                `${symbols.out}(${symbols.in})`,\r\n                                is3DPlotEnabled,\r\n                                +N\r\n                            ),\r\n                            phase = calculus.systemToTrace(\r\n                                H_s.phase,\r\n                                +w_min,\r\n                                +w_max,\r\n                                thickness,\r\n                                `${symbols.out}(${symbols.in})`,\r\n                                is3DPlotEnabled,\r\n                                +N\r\n                            );\r\n                        const degreePhase = { ...phase };\r\n                        degreePhase.y = degreePhase.y.map(\r\n                            (yi) => yi * calculus.RadianToDegree\r\n                        );\r\n                        all.phase.push(phase);\r\n                        all.degreePhase.push(degreePhase);\r\n                        all.amplitude.push(amp);\r\n                    }\r\n                    $traces(all);\r\n                } catch (err) {\r\n                    console.log(err);\r\n                }\r\n            })();\r\n        }\r\n    }, [H_s, systems, w_min, w_max, is3DPlotEnabled, thickness, N]);\r\n\r\n    useEffect(() => {\r\n        if (H_s instanceof TransferFunction && +K && +K !== 1) {\r\n            const KH_s = H_s.multiply(K);\r\n            const amplitude = calculus.systemToTrace(\r\n                KH_s.bode,\r\n                +w_min,\r\n                +w_max,\r\n                thickness,\r\n                `K=${K}`,\r\n                is3DPlotEnabled,\r\n                +N\r\n            );\r\n            const phase = calculus.systemToTrace(\r\n                KH_s.phase,\r\n                +w_min,\r\n                +w_max,\r\n                thickness,\r\n                `K=${K}`,\r\n                is3DPlotEnabled,\r\n                +N\r\n            );\r\n\r\n            const degreePhase = { ...phase };\r\n            degreePhase.y = degreePhase.y.map(\r\n                (yi) => yi * calculus.RadianToDegree\r\n            );\r\n\r\n            $ktrace({ amplitude, phase, degreePhase });\r\n        } else $ktrace({ amplitude: [], phase: [], degreePhase: [] });\r\n    }, [K, H_s, N, is3DPlotEnabled, w_min, w_max, thickness]);\r\n\r\n    const multiplyPlotBy = (value) => {\r\n        const currentLength = systems.length;\r\n        const multipliedSystem = H_s.multiply(value);\r\n        const newSystemList = systems.filter(\r\n            (sys) => !sys.H_s.equals(multipliedSystem)\r\n        );\r\n        if (newSystemList.length === currentLength) capture();\r\n        else $systems(newSystemList);\r\n        $H_s(multipliedSystem);\r\n    };\r\n\r\n    useEffect(() => {\r\n        try {\r\n            if (\r\n                rawNumerator.trim() !== currentRawNum ||\r\n                rawDenominator.trim() !== currentRawDen\r\n            ) {\r\n                const num = calculus.stringToArray(rawNumerator),\r\n                    den = calculus.stringToArray(rawDenominator);\r\n                const h_s = new TransferFunction(num, den);\r\n                currentRawNum = rawNumerator;\r\n                currentRawDen = rawDenominator;\r\n                $K(1);\r\n                $H_s(h_s);\r\n            }\r\n        } catch (ex) {\r\n            console.log(ex);\r\n        }\r\n    }, [rawNumerator, rawDenominator]);\r\n\r\n    useEffect(() => {\r\n        $graphCaptured(false);\r\n    }, [rawNumerator, rawDenominator]);\r\n\r\n    const update = (changes) => {\r\n        if (changes) $thickness(changes.thickness);\r\n        //and so...\r\n    };\r\n    return (\r\n        <MainCard>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Typography>\r\n                    <h2 className=\"chapter-section-title\">نمودار بود</h2>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Grid container direction=\"column\" spacing={gridSpacing}>\r\n                    <Grid\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                        }}\r\n                        item\r\n                    >\r\n                        <BodePlotLecture />\r\n                    </Grid>\r\n                    <Grid sx={{ margin: \"auto\", width: \"100%\" }} item>\r\n                        <SubCard sx={{ direction: \"ltr\" }}>\r\n                            <Grid\r\n                                id=\"formulaBox\"\r\n                                sx={{ margin: \"auto\" }}\r\n                                container\r\n                                direction=\"row\"\r\n                            >\r\n                                {systems.map((sys, index) => {\r\n                                    let formula =\r\n                                        \"$$\" +\r\n                                        sys.H_s.label(\"H\", index + 1) +\r\n                                        \"$$\";\r\n\r\n                                    return (\r\n                                        <Grid\r\n                                            style={{ fontSize: \"18px\" }}\r\n                                            md={6}\r\n                                            sm={12}\r\n                                            item\r\n                                        >\r\n                                            <MathJax>{formula}</MathJax>\r\n                                        </Grid>\r\n                                    );\r\n                                })}\r\n                                {!isGraphCatured && (\r\n                                    <Grid\r\n                                        style={{ fontSize: \"18px\" }}\r\n                                        md={6}\r\n                                        sm={12}\r\n                                    >\r\n                                        <MathJax>{response}</MathJax>\r\n                                    </Grid>\r\n                                )}\r\n                            </Grid>\r\n                        </SubCard>\r\n                    </Grid>\r\n                    <Grid\r\n                        spacing={2}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        container\r\n                    >\r\n                        <Grid\r\n                            md={3}\r\n                            sm={12}\r\n                            xs={12}\r\n                            sx={{ marginTop: \"1%\", width: \"100%\" }}\r\n                            container\r\n                        >\r\n                            <Grid xs={12}>\r\n                                <BodePlotParameters\r\n                                    rawNumerator={rawNumerator}\r\n                                    rawDenominator={rawDenominator}\r\n                                    $rawNumerator={$rawNumerator}\r\n                                    $rawDenominator={$rawDenominator}\r\n                                    w_min={w_min}\r\n                                    w_max={w_max}\r\n                                    $w_min={$w_min}\r\n                                    $w_max={$w_max}\r\n                                    phaseInRadianScale={phaseInRadianScale}\r\n                                    setPhaseInRadianScale={\r\n                                        setPhaseInRadianScale\r\n                                    }\r\n                                    N={N}\r\n                                    $N={$N}\r\n                                    $K={$K}\r\n                                    multiplier={multiplyPlotBy}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid md={9} sm={12} xs={12} item>\r\n                            <SubCard>\r\n                                <GraphMenu\r\n                                    capture={capture}\r\n                                    reset={() => $systems([])}\r\n                                    update={(changes) => update(changes)}\r\n                                    toggle3DPlot={toggle3DPlot}\r\n                                />\r\n                            </SubCard>\r\n                            <hr />\r\n                            <Grid xs={12} item>\r\n                                <SubCard>\r\n                                    <Grid xs={12} item>\r\n                                        <PlotlyBox\r\n                                            logX={true}\r\n                                            title=\"نمودار بود\"\r\n                                            traces={[\r\n                                                ...traces.amplitude,\r\n                                                ktrace.amplitude,\r\n                                            ]}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid xs={12} item>\r\n                                        <PlotlyBox\r\n                                            title=\"فاز\"\r\n                                            logX={true}\r\n                                            traces={\r\n                                                phaseInRadianScale\r\n                                                    ? [\r\n                                                          ...traces.phase,\r\n                                                          ktrace.phase,\r\n                                                      ]\r\n                                                    : [\r\n                                                          ...traces.degreePhase,\r\n                                                          ktrace.degreePhase,\r\n                                                      ]\r\n                                            }\r\n                                        />\r\n                                    </Grid>\r\n                                </SubCard>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default BodePlot;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// constant\r\nconst headerSX = {\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n// ==============================|| CUSTOM MAIN CARD ||============================== //\r\n\r\nconst MainCard = forwardRef(\r\n    (\r\n        {\r\n            border = true,\r\n            boxShadow,\r\n            children,\r\n            content = true,\r\n            contentClass = '',\r\n            contentSX = {},\r\n            darkTitle,\r\n            secondary,\r\n            shadow,\r\n            sx = {},\r\n            title,\r\n            ...others\r\n        },\r\n        ref\r\n    ) => {\r\n        const theme = useTheme();\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                {...others}\r\n                sx={{\r\n                    overflowY: 'auto',\r\n                    border: border ? '1px solid' : 'none',\r\n                    borderColor: theme.palette.primary[200] + 75,\r\n                    ':hover': {\r\n                        boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\r\n                    },\r\n                    ...sx\r\n                }}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\r\n                {darkTitle && title && (\r\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\r\n                )}\r\n\r\n                {/* content & header divider */}\r\n                {title && <Divider />}\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={contentSX} className={contentClass}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nMainCard.propTypes = {\r\n    border: PropTypes.bool,\r\n    boxShadow: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    contentSX: PropTypes.object,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    shadow: PropTypes.string,\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nexport default MainCard;\r\n","import SubCard from \"./SubCard\";\r\nimport { MapInteractionCSS } from \"react-map-interaction\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PinchPanCard = ({ children, title, border }) => {\r\n    const customization = useSelector((state) => state.customization);\r\n    return (\r\n        <SubCard title={title} darkBorder={border} sx={{ direction: \"rtl\" }}>\r\n            <MapInteractionCSS disableZoom={!customization.enableZoom}>\r\n                {children}\r\n            </MapInteractionCSS>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default PinchPanCard;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 15H3v4c0 1.1.9 2 2 2h4v-2H5v-4zM5 5h4V3H5c-1.1 0-2 .9-2 2v4h2V5zm14-2h-4v2h4v4h2V5c0-1.1-.9-2-2-2zm0 16h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4zM12 9c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'FilterCenterFocus');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"\n}), 'Fullscreen');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"3.2\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 2 7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n}, \"1\")], 'PhotoCamera');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.52 21.48C4.25 19.94 1.91 16.76 1.55 13H.05C.56 19.16 5.71 24 12 24l.66-.03-3.81-3.81-1.33 1.32zm.89-6.52c-.19 0-.37-.03-.52-.08-.16-.06-.29-.13-.4-.24-.11-.1-.2-.22-.26-.37-.06-.14-.09-.3-.09-.47h-1.3c0 .36.07.68.21.95.14.27.33.5.56.69.24.18.51.32.82.41.3.1.62.15.96.15.37 0 .72-.05 1.03-.15.32-.1.6-.25.83-.44s.42-.43.55-.72c.13-.29.2-.61.2-.97 0-.19-.02-.38-.07-.56-.05-.18-.12-.35-.23-.51-.1-.16-.24-.3-.4-.43-.17-.13-.37-.23-.61-.31.2-.09.37-.2.52-.33.15-.13.27-.27.37-.42.1-.15.17-.3.22-.46.05-.16.07-.32.07-.48 0-.36-.06-.68-.18-.96-.12-.28-.29-.51-.51-.69-.2-.19-.47-.33-.77-.43C9.1 8.05 8.76 8 8.39 8c-.36 0-.69.05-1 .16-.3.11-.57.26-.79.45-.21.19-.38.41-.51.67-.12.26-.18.54-.18.85h1.3c0-.17.03-.32.09-.45s.14-.25.25-.34c.11-.09.23-.17.38-.22.15-.05.3-.08.48-.08.4 0 .7.1.89.31.19.2.29.49.29.86 0 .18-.03.34-.08.49-.05.15-.14.27-.25.37-.11.1-.25.18-.41.24-.16.06-.36.09-.58.09H7.5v1.03h.77c.22 0 .42.02.6.07s.33.13.45.23c.12.11.22.24.29.4.07.16.1.35.1.57 0 .41-.12.72-.35.93-.23.23-.55.33-.95.33zm8.55-5.92c-.32-.33-.7-.59-1.14-.77-.43-.18-.92-.27-1.46-.27H12v8h2.3c.55 0 1.06-.09 1.51-.27.45-.18.84-.43 1.16-.76.32-.33.57-.73.74-1.19.17-.47.26-.99.26-1.57v-.4c0-.58-.09-1.1-.26-1.57-.18-.47-.43-.87-.75-1.2zm-.39 3.16c0 .42-.05.79-.14 1.13-.1.33-.24.62-.43.85-.19.23-.43.41-.71.53-.29.12-.62.18-.99.18h-.91V9.12h.97c.72 0 1.27.23 1.64.69.38.46.57 1.12.57 1.99v.4zM12 0l-.66.03 3.81 3.81 1.33-1.33c3.27 1.55 5.61 4.72 5.96 8.48h1.5C23.44 4.84 18.29 0 12 0z\"\n}), 'ThreeDRotation');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7C6.48 7 2 9.24 2 12c0 2.24 2.94 4.13 7 4.77V20l4-4-4-4v2.73c-3.15-.56-5-1.9-5-2.73 0-1.06 3.04-3 8-3s8 1.94 8 3c0 .73-1.46 1.89-4 2.53v2.05c3.53-.77 6-2.53 6-4.58 0-2.76-4.48-5-10-5z\"\n}), 'ThreeSixty');\n\nexports.default = _default;"],"names":["parameters","setters","labels","units","Fragment","Array","map","param","i","md","sm","xs","item","onChange","e","target","value","sx","width","InputProps","startAdornment","position","endAdornment","capture","reset","update","toggle3DPlot","useState","is3DModeEnabled","set3DModeEnaabled","thicknessSliderPercentage","setThicknessSliderPercentage","useEffect","thickness","direction","container","color","component","onClick","spacing","mt","alignItems","traces","title","height","logX","hideX","hideY","yRange","hideLegends","customization","useSelector","state","plot","style","textAlign","data","layout","showlegend","margin","t","l","r","b","xaxis","rangemode","zeroline","type","visible","yaxis","range","hoverlabel","align","boxmode","font","legend","orientation","enableZoom","MapInteractionCSS","disablePan","parameterFormulas","parameterUnits","rawNumerator","rawDenominator","$rawNumerator","$rawDenominator","w_min","w_max","$w_min","$w_max","phaseInRadianScale","setPhaseInRadianScale","N","$N","multiplier","$K","kMax","setkMax","SubCard","darkBorder","Grid","gridSpacing","SimpleParametersList","paddingLeft","Typography","dir","p","Button","textTransform","variant","pt","Fab","size","AnimateButton","MathJax","border","borderRadius","paddingBottom","paddingRight","Slider","TextField","PinchPanCard","px","lineHeight","fontSize","inline","m","className","src","img_formula_22","alt","img_formula_23","img_zero_poles_type_in_bode","maxWidth","img_standard_second_degree_system","img_m_pw_plot","img_bode_plot_manual","symbols","currentRawNum","currentRawDen","H_s","$H_s","amplitude","phase","degreePhase","ktrace","$ktrace","systems","$systems","$traces","response","$response","$thickness","isGraphCatured","$graphCaptured","is3DPlotEnabled","$3DPlotEnabled","K","capturedSystems","findIndex","sys","equals","H","push","length","toString","TransferFunction","label","repeatedSystem","all","browserLockBreaker","calculus","bode","y","yi","amp","console","log","KH_s","multiply","trim","num","den","h_s","ex","MainCard","id","index","formula","marginTop","currentLength","multipliedSystem","newSystemList","filter","GraphMenu","changes","PlotlyBox","headerSX","mr","forwardRef","ref","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","others","theme","useTheme","overflowY","borderColor","palette","primary","action","disableZoom","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","cx","cy"],"sourceRoot":""}