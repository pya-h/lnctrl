{"version":3,"file":"static/js/102.38bca9c6.chunk.js","mappings":"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","sources":["views/input-boxes/CoordinateSystem.jsx","views/topics/chapter05/root-locus/lecture.jsx","views/topics/chapter05/root-locus/parameters.jsx","views/topics/chapter05/root-locus/index.jsx","views/ui-component/progressbar/ProgressBar.jsx"],"sourcesContent":["import React, { useCallback } from \"react\";\r\nimport \"./input-boxes.css\";\r\nimport calculus from \"math/calculus/index\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport ReactCursorPosition from \"react-cursor-position\";\r\nimport { Grid, InputAdornment, TextField } from \"@mui/material\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\n\r\n/* react-cursor-position props\r\n{\r\n    detectedEnvironment: {\r\n        isMouseDetected: false,\r\n        isTouchDetected: false,\r\n    },\r\n    elementDimensions: {\r\n        width: Number,\r\n        height: Number\r\n    },\r\n    isActive: Boolean,\r\n    isPositionOutside: Boolean,\r\n    position: {\r\n        x: Number,\r\n        y: Number\r\n    }\r\n}\r\n\r\n*/\r\n// for enabling mouse down to drag a point\r\nconst useInterval = (callback, delay) => {\r\n    const savedCallback = useRef();\r\n\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    useEffect(() => {\r\n        const tick = () => {\r\n            savedCallback.current();\r\n        };\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n};\r\n\r\nconst axisOffsets = (psize, grids = 5) =>\r\n    grids >= 5\r\n        ? psize * (0.2 / 7 + (grids - 5) / ((grids + 1) * (grids + 5)))\r\n        : -(psize / 10) / (1 + 3.5 * grids) + (psize * 0.2) / 7;\r\n\r\nconst CURSOR_Y_OFFSET = 38,\r\n    DEFAULT_GRIDS = 6;\r\n\r\nconst CoordinateSystemContent = ({\r\n    elementDimensions, // react-cursor-position\r\n    position, // react-cursor-position\r\n    isPositionOutside, // react-cursor-position\r\n    point = { x: 0, y: 0, select: () => {} },\r\n    extra, // = {point: null, select: null},\r\n    options = { pointSize: 7, grids: DEFAULT_GRIDS, pointColor: null }, // pointCOLOR\r\n    scale = 1,\r\n    viewpoint,\r\n}) => {\r\n    const [x, $x] = useState(0);\r\n    const [y, $y] = useState(0);\r\n    // css grid\r\n    const [grids, $grids] = useState(5); // 5x5\r\n    const [pointSize, $pointSize] = useState(7);\r\n\r\n    /* OLD version : \r\n        const update = (e) => {\r\n            const xmax = boxObject.offsetWidth / 2,\r\n                ymax = (boxObject.offsetHeight + 1) / 2; // + 1 is NEEDED?\r\n            const dx = calculus.round((e.clientX - xmax) / xmax),\r\n                dy = calculus.round((ymax - e.nativeEvent.offsetY) / ymax);\r\n            $x(dx * scale);\r\n            $y(dy * scale);};\r\n     */\r\n    const update = (e) => {\r\n        // const boxObject = document.getElementById(\"#box\");\r\n        if (!isPositionOutside) {\r\n            const xmax = elementDimensions.width / 2,\r\n                ymax = (elementDimensions.height - CURSOR_Y_OFFSET) / 2; // + 1 is NEEDED?\r\n            const dx = calculus.round((position.x - xmax) / xmax),\r\n                dy = calculus.round((ymax - position.y) / ymax);\r\n            const vx = dx * scale * grids,\r\n                vy = dy * scale * grids;\r\n            $x(vx);\r\n            $y(vy);\r\n            viewpoint(vx, vy);\r\n        }\r\n    };\r\n\r\n    const updatePointLocation = useCallback(\r\n        (px, py, index = 0) => {\r\n            // update CSS\r\n            const objectPoint = document.getElementById(`#point${index}`);\r\n            objectPoint.style.setProperty(\"--x\", px);\r\n            objectPoint.style.setProperty(\r\n                \"--y\",\r\n                py - axisOffsets(pointSize, grids)\r\n            );\r\n        },\r\n        [pointSize, grids]\r\n    );\r\n\r\n    const registerPoint = (isExtra = false) => {\r\n        // update(e);\r\n        // put a point inside the box\r\n        // update the values in the caller component (e.g. parameter boxes in examples)\r\n        if (!isExtra) {\r\n            if (point && point.select) point.select({ x, y });\r\n            // for extra point (second point)\r\n        } else if (extra && extra.select) extra.select({ x, y });\r\n\r\n        viewpoint(x, y);\r\n        // after updating values in the parameter.js components => point prop will be updated => view updater useEffect (immediately in below) will be triggered\r\n    };\r\n\r\n    const [isMouseDown, setMouseDown] = useState(false);\r\n    useInterval(registerPoint, isMouseDown ? 10 : null);\r\n    const [isMouseDownForXpoint, setMouseDownForXpoint] = useState(false);\r\n    useInterval(() => registerPoint(true), isMouseDownForXpoint ? 10 : null);\r\n\r\n    useEffect(() => {\r\n        // view updater useEffect\r\n        if (point && scale !== 0) {\r\n            // if(point.x !== x || (point.y !== null && point.y !== y))\r\n            const px = Number(point.x),\r\n                py = Number(point.y);\r\n            const ndx = calculus.round(px / (grids * scale)),\r\n                ndy = calculus.round(py / (grids * scale));\r\n            updatePointLocation(ndx * grids, ndy * grids, 0);\r\n\r\n            // $x(px);\r\n            // $y(py);\r\n        }\r\n    }, [point, scale, grids, updatePointLocation]);\r\n\r\n    // for extra point changes\r\n    useEffect(() => {\r\n        // view updater useEffect\r\n        if (extra && scale !== 0) {\r\n            // if(extra.x !== x || (extra.y !== null && extra.y !== y))\r\n            const px = Number(extra.x),\r\n                py = Number(extra.y);\r\n            const ndx = calculus.round(px / (grids * scale)),\r\n                ndy = calculus.round(py / (grids * scale));\r\n            updatePointLocation(ndx * grids, ndy * grids, 1);\r\n\r\n            // $x(px);\r\n            // $y(py);\r\n        }\r\n    }, [extra, scale, grids, updatePointLocation]);\r\n\r\n    useEffect(() => {\r\n        // if dragging put the point out of range of the scale\r\n        // scale will be expanded\r\n        // stop dragging to avoid mouse drag bugs\r\n        setMouseDown(false);\r\n        setMouseDownForXpoint(false);\r\n    }, [scale]);\r\n    // set options:\r\n    useEffect(() => {\r\n        if (options.pointSize && options.pointSize >= 0)\r\n            $pointSize(options.pointSize);\r\n\r\n        if (options.grids && options.grids >= 0) $grids(options.grids);\r\n    }, [options]);\r\n\r\n    useEffect(() => {\r\n        if (grids >= 0 && grids >= 0) {\r\n            document.documentElement.style.setProperty(\"--grids-x\", grids);\r\n            document.documentElement.style.setProperty(\"--grids-y\", grids);\r\n            document.documentElement.style.setProperty(\r\n                \"--grids-total\",\r\n                grids * 2\r\n            );\r\n        }\r\n    }, [grids]);\r\n\r\n    useEffect(() => {\r\n        if (pointSize >= 0)\r\n            document.documentElement.style.setProperty(\r\n                \"--point-size\",\r\n                pointSize\r\n            );\r\n    }, [pointSize]);\r\n\r\n    return (\r\n        <div\r\n            id=\"#box\"\r\n            onMouseEnter={(e) => update(e)}\r\n            onMouseLeave={(e) => update(e)}\r\n            onMouseMove={(e) => update(e)}\r\n            // onClick={() => registerPoint(false)}\r\n            onMouseUp={() => {\r\n                setMouseDown(false);\r\n                setMouseDownForXpoint(false);\r\n            }}\r\n            className=\"coordinate-box\"\r\n        >\r\n            <div\r\n                id=\"#point0\"\r\n                onMouseDown={() => setMouseDown(true)}\r\n                onMouseUp={() => setMouseDown(false)}\r\n                className=\"coordinate-point\"\r\n            ></div>\r\n            {extra && (\r\n                <div\r\n                    id=\"#point1\"\r\n                    onMouseDown={() => setMouseDownForXpoint(true)}\r\n                    onMouseUp={() => setMouseDownForXpoint(false)}\r\n                    className=\"coordinate-point extra-point-color\"\r\n                ></div>\r\n            )}\r\n        </div>\r\n        /* <i className=\"arrow right\"></i> */\r\n    );\r\n};\r\n\r\nconst outOfRange = (num, range) =>\r\n    num > range || num < -range || range - Math.abs(num) < 1.0;\r\n    \r\nconst CoordinateSystem = (props) => {\r\n    const [x, $x] = useState(0);\r\n    const [y, $y] = useState(0);\r\n\r\n    const { options, point, extra } = props;\r\n    let { grids, defaultScale } = options ? options : { grids: DEFAULT_GRIDS, defaultScale: 1 };\r\n\r\n    const [scale, $scale] = useState(defaultScale || 1);\r\n    const viewpoint = (x, y) => {\r\n        // updates the vallue of coordinates givent by the child component\r\n        $x(x);\r\n        $y(y);\r\n    };\r\n\r\n    // auto expand axis range when the value is near to scale\r\n    useEffect(() => {\r\n        const range = grids\r\n            ? Math.abs(scale * grids)\r\n            : Math.abs(scale * DEFAULT_GRIDS);\r\n\r\n        if (\r\n            range > 0 &&\r\n            (outOfRange(point.x, range) ||\r\n                outOfRange(point.y, range) ||\r\n                (extra && (outOfRange(extra.x, range) || outOfRange(extra.y, range))))\r\n        )\r\n            $scale(scale + 1);\r\n    }, [point, extra, scale, grids]);\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid xs={12} item>\r\n                <ReactCursorPosition>\r\n                    <CoordinateSystemContent\r\n                        {...props}\r\n                        viewpoint={viewpoint}\r\n                        scale={scale}\r\n                    />\r\n                </ReactCursorPosition>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n                <p style={{ textAlign: \"center\" }}>{\"(\" + calculus.strictPrecisionFormat(x) + \", \" + calculus.strictPrecisionFormat(y) + \")\"}</p>\r\n            </Grid>\r\n            <Grid xs={12} item>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    value={scale}\r\n                    sx={{ width: \"100%\" }}\r\n                    onChange={(e) => $scale(e.target.value)}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"left\">\r\n                                <MathJax>{\"$$\\\\times$$\"}</MathJax>\r\n                            </InputAdornment>\r\n                        ),\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"left\">\r\n                                مقیاس\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default CoordinateSystem;\r\n","import SubCard from \"views/ui-component/cards/SubCard\";\r\nimport { Grid } from \"@mui/material\";\r\nimport \"../../topics.css\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { mathjaxSpaces } from \"toolshed\";\r\n\r\nconst t_riseFormula =\r\n    \"$$ t_{pk} = \\\\frac{k\\\\pi}{\\\\omega_n \\\\sqrt{1 - \\\\zeta^2}} = \\\\frac{k\\\\pi}{\\\\omega_d} \" +\r\n    mathjaxSpaces(3) +\r\n    \" k = 1, 2, 3, ...\\\\\\\\\" +\r\n    \" t_{rise} = t_p = \\\\frac{\\\\pi}{\\\\omega_d} $$\";\r\nconst overshootFormula = `$$M_p = e^{\\\\frac{-\\\\zeta \\\\pi}{\\\\sqrt{1 - \\\\zeta^2}}} = e ^ {-\\\\pi cot\\\\theta} \\\\\\\\\r\n    \\\\zeta = \\\\frac{-\\\\ln M_p}{\\\\sqrt{\\\\pi^2 + \\\\lgroup \\\\ln M_p \\\\rgroup ^ 2}} $$`;\r\n\r\nconst RootLocusLecture = () => {\r\n    return (\r\n        <SubCard\r\n            title=\"طراحی سیستم از طریق مشخصات میرایی\"\r\n            darkBorder={true}\r\n            sx={{ direction: \"rtl\" }}\r\n            spacing={gridSpacing}\r\n        >\r\n            <Grid className=\"lecture-text\" style={{ fontSize: \"20px\" }} item>\r\n                <p>&nbsp; &nbsp; &nbsp; &nbsp; \r\n                    زمان اوج (Rise Time)</p>\r\n            </Grid>\r\n            <Grid style={{ fontSize: \"20px\" }} item>\r\n                <MathJax>{t_riseFormula}</MathJax>\r\n            </Grid>\r\n            <Grid className=\"lecture-text\" style={{ fontSize: \"20px\" }} item>\r\n                <p>&nbsp; &nbsp; &nbsp; &nbsp; بالازدگی (Overshoot)</p>\r\n            </Grid>\r\n            <Grid style={{ fontSize: \"20px\" }} item>\r\n                <MathJax>{overshootFormula}</MathJax>\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default RootLocusLecture;\r\n","import { Button, Grid } from \"@mui/material\";\r\nimport CoordinateSystem from \"views/input-boxes/CoordinateSystem\";\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport SimpleParametersList from \"views/input-boxes/SimpleParametersList\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport ProgressBar from \"views/ui-component/progressbar/ProgressBar\";\r\n\r\nconst startLebels = [\r\n    \"$$Num = [$$\",\r\n    \"$$Den = [$$\",\r\n    \"$$k_{min} = $$\",\r\n    \"$$k_{max} = $$\",\r\n];\r\nconst endLabels = [\"$$]$$\", \"$$]$$\", null, null];\r\n\r\nconst RootLocusParameters = ({\r\n    rawNumerator,\r\n    rawDenominator,\r\n    $rawNumerator,\r\n    $rawDenominator,\r\n    k_min,\r\n    k_max,\r\n    $k_min,\r\n    $k_max,\r\n    updatePlot,\r\n    responseTime\r\n}) => (\r\n    <SubCard\r\n        darkBorder\r\n        title=\"پارامترها\"\r\n        sx={{\r\n            direction: \"ltr\",\r\n            textAlign: \"right\",\r\n            height: \"100%\",\r\n        }}\r\n    >\r\n        <Grid spacing={gridSpacing} container direction=\"row\">\r\n            <SimpleParametersList\r\n                parameters={[rawNumerator, rawDenominator, k_min, k_max]}\r\n                setters={[$rawNumerator, $rawDenominator, $k_min, $k_max]}\r\n                labels={startLebels}\r\n                units={endLabels}\r\n            />\r\n            <Grid md={12} sm={4} xs={6} item>\r\n                <Button\r\n                    onClick={updatePlot}\r\n                    style={{\r\n                        width: \"100%\",\r\n                        textTransform: \"none\",\r\n                        background: \"coral\",\r\n                    }}\r\n                    variant=\"contained\"\r\n                >\r\n                    مشاهده\r\n                </Button>\r\n            </Grid>\r\n            <Grid xs={12} sx={{ mt: 1 }} item>\r\n                <ProgressBar id=\"progressbar\" />\r\n            </Grid>\r\n            {responseTime && <Grid xs={12} sx={{ mt: 1 }} item>\r\n                <p style={{textAlign: 'center', color: 'coral'}}>مدت زمان عملیات: {responseTime} ثانیه</p> \r\n            </Grid>}\r\n        </Grid>\r\n    </SubCard>\r\n);\r\n\r\nexport default RootLocusParameters;\r\n","import RootLocusLecture from \"./lecture\";\r\n\r\n// project imports\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport calculus from \"math/calculus\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport GraphBox from \"math/GraphBox\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport RootLocusParameters from \"./parameters\";\r\nimport TransferFunction from \"math/algebra/functions/transfer\";\r\nimport { gridSpacing } from \"store/constant\";\r\n// import Describer from \"math/describer\";\r\nimport MainCard from \"views/ui-component/cards/MainCard\";\r\nimport { makeProgress } from \"toolshed\";\r\n\r\nconst stepResponse = (tf, index = undefined) =>\r\n    \"$$ \" + tf.label(\"G\", index) + \" $$\";\r\n\r\nconst RootLocus = () => {\r\n    const [rawNumerator, $rawNumerator] = useState(\"1\");\r\n    const [rawDenominator, $rawDenominator] = useState(\"1 5 12\");\r\n\r\n    const [k_min, $k_min] = useState(0);\r\n    const [k_max, $k_max] = useState(50);\r\n    // gradiant of u(t) is 0 and unit ramp is one\r\n    const [trace, $trace] = useState({ x: [], y: [] });\r\n    const [G_s, $G_s] = useState(null);\r\n    // const [GInfo, $GInfo] = useState(\"\");\r\n    const [response, $response] = useState(null);\r\n    const [responseTime, setResponseTime] = useState(null); //the time that takes for plotting rootlocus\r\n    //update\r\n    useEffect(() => {\r\n        // k * num / den\r\n        $G_s(\r\n            new TransferFunction(\r\n                calculus.stringToArray(rawNumerator),\r\n                calculus.stringToArray(rawDenominator)\r\n            )\r\n        );\r\n    }, [rawNumerator, rawDenominator]);\r\n\r\n    const updatePlot = async () => {\r\n        try {\r\n            // const updateProgressBar =\r\n            if (G_s) {\r\n                // $GInfo(new Describer(G_s));\r\n                const progressBar = document.getElementById(\"progressbar\");\r\n                const startTime = new Date();\r\n                const [x, y] = await G_s.rootLocus(\r\n                    k_min,\r\n                    k_max,\r\n                    progressBar // send progress bar element to root locus for showing progres and preventing the browser from locking\r\n                );\r\n                const endTime = new Date();\r\n                $response(stepResponse(G_s));\r\n                $trace({\r\n                    x,\r\n                    y,\r\n                    type: \"scatter\",\r\n                    mode: \"markers\",\r\n                    name: `root-locus`,\r\n                });\r\n                setResponseTime((+endTime - +startTime) / 1000);\r\n\r\n                setTimeout(async () => {\r\n                    await makeProgress(progressBar, 0);\r\n                }, [1000]);\r\n            }\r\n        } catch (ex) {\r\n            console.log(ex);\r\n        }\r\n    };\r\n    return (\r\n        <MainCard>\r\n            <Grid item spacing={gridSpacing}>\r\n                <h2 className=\"chapter-section-title\">\r\n                    مکان هندسی قطب های سیستم\r\n                </h2>\r\n            </Grid>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Grid container direction=\"column\" spacing={gridSpacing}>\r\n                    <Grid\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        item\r\n                    >\r\n                        <RootLocusLecture />\r\n                    </Grid>\r\n\r\n                    <Grid sx={{ margin: \"auto\", width: \"100%\" }} item>\r\n                        <SubCard sx={{ direction: \"ltr\" }}>\r\n                            <Grid\r\n                                id=\"formulaBox\"\r\n                                sx={{ margin: \"auto\" }}\r\n                                container\r\n                                direction=\"row\"\r\n                            >\r\n                                <MathJax>{response}</MathJax>\r\n                            </Grid>\r\n                        </SubCard>\r\n                    </Grid>\r\n                    <Grid\r\n                        spacing={2}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        container\r\n                    >\r\n                        <Grid\r\n                            md={4}\r\n                            sm={12}\r\n                            xs={12}\r\n                            sx={{ marginTop: \"1%\", width: \"100%\" }}\r\n                            container\r\n                        >\r\n                            <Grid xs={12}>\r\n                                <RootLocusParameters\r\n                                    rawNumerator={rawNumerator}\r\n                                    rawDenominator={rawDenominator}\r\n                                    k_min={k_min}\r\n                                    k_max={k_max}\r\n                                    $rawNumerator={$rawNumerator}\r\n                                    $rawDenominator={$rawDenominator}\r\n                                    $k_min={$k_min}\r\n                                    $k_max={$k_max}\r\n                                    updatePlot={updatePlot}\r\n                                    responseTime={responseTime}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid md={8} sm={12} xs={12} item>\r\n                            <Grid lg={12} md={12} sm={12} xs={12} item>\r\n                                <SubCard>\r\n                                    <GraphBox\r\n                                        title=\"مکان هندسی\"\r\n                                        traces={[trace]}\r\n                                    />\r\n                                </SubCard>\r\n                            </Grid>\r\n                            <hr />\r\n                            {/* <Grid lg={12} md={12} sm={12} xs={12} item>\r\n                                {GInfo && <GInfo.Explain />}\r\n                            </Grid> */}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default RootLocus;\r\n","const ProgressBar = ({\r\n    id,\r\n    color = \"white\",\r\n    background = \"lightgreen\",\r\n    borderRadius = \"10px\",\r\n}) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"0%\",\r\n                textAlign: \"right\",\r\n                background,\r\n                color,\r\n                borderRadius,\r\n                padding: \"1%\",\r\n            }}\r\n            id={id}\r\n        ></div>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;\r\n"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","axisOffsets","psize","grids","CoordinateSystemContent","elementDimensions","position","isPositionOutside","point","x","y","select","extra","options","pointSize","pointColor","scale","viewpoint","useState","$x","$y","$grids","$pointSize","update","e","xmax","width","ymax","height","dx","calculus","dy","vx","vy","updatePointLocation","useCallback","px","py","index","objectPoint","document","getElementById","style","setProperty","registerPoint","isExtra","isMouseDown","setMouseDown","isMouseDownForXpoint","setMouseDownForXpoint","Number","ndx","ndy","documentElement","onMouseEnter","onMouseLeave","onMouseMove","onMouseUp","className","onMouseDown","outOfRange","num","range","Math","abs","props","defaultScale","$scale","container","xs","item","textAlign","variant","value","sx","onChange","target","InputProps","startAdornment","endAdornment","t_riseFormula","mathjaxSpaces","SubCard","title","darkBorder","direction","spacing","gridSpacing","Grid","fontSize","MathJax","startLebels","endLabels","rawNumerator","rawDenominator","$rawNumerator","$rawDenominator","k_min","k_max","$k_min","$k_max","updatePlot","responseTime","SimpleParametersList","parameters","setters","labels","units","md","sm","Button","onClick","textTransform","background","mt","ProgressBar","color","stepResponse","tf","undefined","label","trace","$trace","G_s","$G_s","response","$response","setResponseTime","TransferFunction","progressBar","startTime","Date","rootLocus","endTime","type","mode","name","setTimeout","makeProgress","console","log","MainCard","margin","marginTop","lg","GraphBox","traces","borderRadius","padding"],"sourceRoot":""}