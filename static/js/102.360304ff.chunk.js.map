{"version":3,"file":"static/js/102.360304ff.chunk.js","mappings":"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","sources":["views/input-boxes/SimpleParametersList.jsx","views/plotter/PlotlyBox.jsx","views/topics/chapter05/root-locus/lecture.jsx","views/topics/chapter05/root-locus/parameters.jsx","views/topics/chapter05/root-locus/index.jsx","views/ui-component/cards/MainCard.jsx","views/ui-component/cards/PinchPanCard.jsx","views/ui-component/progressbar/ProgressBar.jsx"],"sourcesContent":["import { Grid, InputAdornment, TextField } from \"@mui/material\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst SimpleParametersList = ({ parameters, setters, labels, units }) => {\r\n    return (\r\n        <Fragment>\r\n            {parameters instanceof Array &&\r\n                parameters.map((param, i) => (\r\n                    <Grid md={12} sm={4} xs={6} item>\r\n                        <TextField\r\n                            onChange={(e) => setters[i](e.target.value)}\r\n                            value={param}\r\n                            sx={{ width: \"100%\" }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"left\">\r\n                                        <MathJax>{labels[i]}</MathJax>\r\n                                    </InputAdornment>\r\n                                ),\r\n                                endAdornment: units[i] && (\r\n                                    <InputAdornment position=\"right\">\r\n                                        <MathJax>{units[i]}</MathJax>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SimpleParametersList;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { MapInteractionCSS } from \"react-map-interaction\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PlotlyBox = ({\r\n    traces,\r\n    title,\r\n    width,\r\n    height = 500,\r\n    logX,\r\n    hideX,\r\n    hideY,\r\n    yRange,\r\n    hideLegends,\r\n}) => {\r\n    /*const temp_layout = {\r\n        xaxis: {\r\n            zeroline: true,\r\n            rangemode: \"tozero\",\r\n            autotick: false,\r\n            ticks: \"outside\",\r\n            tick0: 0,\r\n            dtick: 0.25,\r\n            ticklen: 8,\r\n            tickwidth: 4,\r\n            tickcolor: \"#000\",\r\n        },\r\n        yaxis: {\r\n            zeroline: true,\r\n            rangemode: \"tozero\",\r\n            autotick: false,\r\n            ticks: \"outside\",\r\n            tick0: 0,\r\n            dtick: 0.25,\r\n            ticklen: 8,\r\n            tickwidth: 4,\r\n            tickcolor: \"#000\",\r\n        },\r\n    };*/\r\n    const customization = useSelector((state) => state.customization);\r\n    const plot = (\r\n        <Plot\r\n            style={{ textAlign: \"center\" }}\r\n            //id=\"PlotlyBox\"\r\n            data={traces}\r\n            layout={{\r\n                // width: 1000,\r\n                // autosize: true,\r\n                showlegend: !hideLegends,\r\n                margin: {\r\n                    t: 30, //top margin\r\n                    l: 30, //left margin\r\n                    r: 20, //right margin\r\n                    b: 30, //bottom margin\r\n                },\r\n                xaxis: {\r\n                    rangemode: \"tozero\",\r\n                    zeroline: true,\r\n                    type: !logX ? \"dec\" : \"log\",\r\n                    visible: !hideX,\r\n                },\r\n                yaxis: {\r\n                    rangemode: \"tozero\",\r\n                    zeroline: true,\r\n                    visible: !hideY,\r\n                    range: yRange,\r\n                },\r\n\r\n                height,\r\n                title,\r\n                // hoverlabel: { bgcolor: \"#FFF\" },\r\n                hoverlabel: {\r\n                    align: \"auto\",\r\n                    boxmode: \"overlay\",\r\n                    font: { color: \"#000000FF\" },\r\n                },\r\n                legend: { orientation: \"h\" }, //, y: -0.3},\r\n            }}\r\n        />\r\n    );\r\n    return customization.enableZoom ? (\r\n        <MapInteractionCSS disablePan={true}>{plot}</MapInteractionCSS>\r\n    ) : (\r\n        plot\r\n    );\r\n};\r\n\r\nexport default PlotlyBox;\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport \"views/topics/topics.css\";\r\nimport temp_part1 from \"./temp/part1.png\";\r\nimport temp_part2 from \"./temp/part2.png\";\r\nimport PinchPanCard from \"views/ui-component/cards/PinchPanCard\";\r\n\r\nconst RootLocusLecture = () => {\r\n    return (\r\n        <PinchPanCard title=\"مکان هندسی فاز ثابت\" border={true}>\r\n            <Typography>\r\n                <Grid item>\r\n                    <img\r\n                        className=\"lecture-image\"\r\n                        src={temp_part1}\r\n                        alt=\"بارگذاری تصویر با مشکل مواجه شد\"\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <img\r\n                        className=\"lecture-image\"\r\n                        src={temp_part2}\r\n                        alt=\"بارگذاری تصویر با مشکل مواجه شد\"\r\n                    />\r\n                </Grid>\r\n            </Typography>\r\n        </PinchPanCard>\r\n    );\r\n};\r\n\r\nexport default RootLocusLecture;\r\n","import { Button, Grid, Typography } from \"@mui/material\";\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport SimpleParametersList from \"views/input-boxes/SimpleParametersList\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport ProgressBar from \"views/ui-component/progressbar/ProgressBar\";\r\n\r\nconst startLebels = [\r\n    \"$$Num = [$$\",\r\n    \"$$Den = [$$\",\r\n    \"$$k_{min} = $$\",\r\n    \"$$k_{max} = $$\",\r\n    \"$$N = $$\",\r\n];\r\nconst endLabels = [\"$$]$$\", \"$$]$$\", null, null, null];\r\n\r\nconst RootLocusParameters = ({\r\n    rawNumerator,\r\n    rawDenominator,\r\n    $rawNumerator,\r\n    $rawDenominator,\r\n    k_min,\r\n    k_max,\r\n    $k_min,\r\n    $k_max,\r\n    updatePlot,\r\n    responseTime,\r\n    N,\r\n    $N,\r\n    method,\r\n    changeMethod,\r\n}) => (\r\n    <SubCard\r\n        darkBorder\r\n        title=\"پارامترها\"\r\n        sx={{\r\n            direction: \"ltr\",\r\n            textAlign: \"right\",\r\n            height: \"100%\",\r\n        }}\r\n    >\r\n        <Grid spacing={gridSpacing} container direction=\"row\">\r\n            <SimpleParametersList\r\n                parameters={[rawNumerator, rawDenominator, k_min, k_max, N]}\r\n                setters={[$rawNumerator, $rawDenominator, $k_min, $k_max, $N]}\r\n                labels={startLebels}\r\n                units={endLabels}\r\n            />\r\n        </Grid>\r\n        <Grid xs={12} container>\r\n            <Grid xs={6} sx={{ py: 2, pr: 1 }} item>\r\n                <Button\r\n                    onClick={() => {changeMethod(\"second\"); $N(200)}}\r\n                    style={{ width: \"100%\", textTransform: \"none\" }}\r\n                    variant={method === \"second\" ? \"contained\" : \"outlined\"}\r\n                >\r\n                    روش دوم\r\n                </Button>\r\n            </Grid>\r\n            <Grid xs={6} sx={{ py: 2, pl: 1 }} item>\r\n                <Button\r\n                    onClick={() => {changeMethod(\"first\"); $N(500)}}\r\n                    style={{ width: \"100%\", textTransform: \"none\" }}\r\n                    variant={method === \"first\" ? \"contained\" : \"outlined\"}\r\n                >\r\n                    روش اول\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n        <Grid xs={12} item>\r\n            <Button\r\n                onClick={updatePlot}\r\n                style={{\r\n                    width: \"100%\",\r\n                    textTransform: \"none\",\r\n                    background: \"coral\",\r\n                }}\r\n                variant=\"contained\"\r\n            >\r\n                مشاهده\r\n            </Button>\r\n        </Grid>\r\n        <Grid xs={12} sx={{ mt: 2}} item>\r\n            <ProgressBar id=\"progressbar\" />\r\n        </Grid>\r\n        {responseTime && (\r\n            <Grid xs={12} sx={{ mt: 2 }} item>\r\n                <Typography style={{ textAlign: \"center\", color: \"coral\" }}>\r\n                    مدت زمان عملیات: {responseTime} ثانیه\r\n                </Typography>\r\n            </Grid>\r\n        )}\r\n    </SubCard>\r\n);\r\n\r\nexport default RootLocusParameters;\r\n","import RootLocusLecture from \"./lecture\";\r\n\r\n// project imports\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport calculus from \"math/calculus\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport PlotlyBox from \"views/plotter/PlotlyBox\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport RootLocusParameters from \"./parameters\";\r\nimport TransferFunction from \"math/algebra/functions/fraction\";\r\nimport { gridSpacing } from \"store/constant\";\r\n// import Describer from \"math/describer\";\r\nimport MainCard from \"views/ui-component/cards/MainCard\";\r\nimport { makeProgress } from \"toolshed\";\r\nimport Complex from \"math/algebra/complex\";\r\n\r\nconst tfFormula = (tf, index = undefined) =>\r\n    \"$$ \" + tf.label(\"G\", index) + \" $$\";\r\n\r\nconst RootLocus = () => {\r\n    const [rawNumerator, $rawNumerator] = useState(\"1\");\r\n    const [rawDenominator, $rawDenominator] = useState(\"1 5 12\");\r\n\r\n    const [k_min, $k_min] = useState(-100);\r\n    const [k_max, $k_max] = useState(100);\r\n    // gradiant of u(t) is 0 and unit ramp is one\r\n    const [rootLocusTrace, $rootLocusTrace] = useState({ x: [], y: [] });\r\n    const [zerosTrace, $zerosTrace] = useState({ x: [], y: [] });\r\n    const [polesTrace, $polesTrace] = useState({ x: [], y: [] });\r\n\r\n    const [G_s, $G_s] = useState(null);\r\n    // const [GInfo, $GInfo] = useState(\"\");\r\n    const [formula, $formula] = useState(null);\r\n    const [responseTime, setResponseTime] = useState(null); //the time that takes for plotting rootlocus\r\n    const [method, changeMethod] = useState(\"first\");\r\n    const [N, $N] = useState(1000);\r\n\r\n    //update\r\n    useEffect(() => {\r\n        // k * num / den\r\n        const g_s = new TransferFunction(\r\n            calculus.stringToArray(rawNumerator),\r\n            calculus.stringToArray(rawDenominator)\r\n        );\r\n        $G_s(g_s);\r\n        $formula(tfFormula(g_s));\r\n    }, [rawNumerator, rawDenominator]);\r\n\r\n    const updatePlot = async () => {\r\n        try {\r\n            // const updateProgressBar =\r\n            if (G_s instanceof TransferFunction) {\r\n                $rootLocusTrace({ x: [], y: [] });\r\n                const startTime = new Date();\r\n\r\n                const [zeros, poles] = G_s.roots();\r\n                const [zx, zy] = Complex.ToCouples(zeros);\r\n                $zerosTrace({\r\n                    x: zx,\r\n                    y: zy,\r\n                    type: \"scatter\",\r\n                    mode: \"markers\",\r\n                    marker: {\r\n                        size: 10,\r\n                        color: \"black\",\r\n                        // symbol: 'diamond'\r\n                    },\r\n                    name: \"Zero\",\r\n                });\r\n                const [px, py] = Complex.ToCouples(poles);\r\n                $polesTrace({\r\n                    x: px,\r\n                    y: py,\r\n                    type: \"scatter\",\r\n                    mode: \"markers\",\r\n                    marker: {\r\n                        color: \"red\",\r\n                        symbol: \"x\",\r\n                        size: 10,\r\n                    },\r\n                    name: \"Pole\",\r\n                });\r\n\r\n                // $GInfo(new Describer(G_s));\r\n                const progressBar = document.getElementById(\"progressbar\");\r\n                const [x, y] = await (method === \"second\"\r\n                    ? G_s.rootLocus\r\n                    : G_s.rootsByAlgebriteLocus)(\r\n                    +k_min,\r\n                    +k_max,\r\n                    progressBar, // send progress bar element to root locus for showing progres and preventing the browser from locking\r\n                    +N\r\n                );\r\n                console.log(x, y);\r\n                const endTime = new Date();\r\n                $rootLocusTrace({\r\n                    x,\r\n                    y,\r\n                    type: \"scatter\",\r\n                    mode: \"markers\",\r\n                    marker: {\r\n                        size: 3,\r\n                    },\r\n                    name: \"Root-Locus\",\r\n                });\r\n                setResponseTime((+endTime - +startTime) / 1000);\r\n\r\n                setTimeout(async () => {\r\n                    await makeProgress(progressBar, 0);\r\n                }, [1000]);\r\n            }\r\n        } catch (ex) {\r\n            console.log(ex);\r\n        }\r\n    };\r\n    return (\r\n        <MainCard>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Typography>\r\n                    <h2 className=\"chapter-section-title\">\r\n                        مکان هندسی قطب های سیستم\r\n                    </h2>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Grid container direction=\"column\" spacing={gridSpacing}>\r\n                    <Grid\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        item\r\n                    >\r\n                        <RootLocusLecture />\r\n                    </Grid>\r\n\r\n                    <Grid sx={{ margin: \"auto\", width: \"100%\" }} item>\r\n                        <SubCard>\r\n                            <Grid id=\"formulaBox\" container direction=\"row\">\r\n                                <MathJax style={{ margin: \"auto\" }}>\r\n                                    {formula}\r\n                                </MathJax>\r\n                            </Grid>\r\n                        </SubCard>\r\n                    </Grid>\r\n                    <Grid\r\n                        spacing={2}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        container\r\n                    >\r\n                        <Grid\r\n                            md={4}\r\n                            sm={12}\r\n                            xs={12}\r\n                            sx={{ marginTop: \"1%\", width: \"100%\" }}\r\n                            container\r\n                        >\r\n                            <Grid xs={12}>\r\n                                <RootLocusParameters\r\n                                    rawNumerator={rawNumerator}\r\n                                    rawDenominator={rawDenominator}\r\n                                    k_min={k_min}\r\n                                    k_max={k_max}\r\n                                    $rawNumerator={$rawNumerator}\r\n                                    $rawDenominator={$rawDenominator}\r\n                                    $k_min={$k_min}\r\n                                    $k_max={$k_max}\r\n                                    updatePlot={updatePlot}\r\n                                    responseTime={responseTime}\r\n                                    N={N}\r\n                                    $N={$N}\r\n                                    method={method}\r\n                                    changeMethod={changeMethod}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid md={8} sm={12} xs={12} item>\r\n                            <Grid xs={12} item>\r\n                                <SubCard>\r\n                                    <PlotlyBox\r\n                                        title=\"مکان هندسی\"\r\n                                        traces={[\r\n                                            rootLocusTrace,\r\n                                            zerosTrace,\r\n                                            polesTrace,\r\n                                        ]}\r\n                                    />\r\n                                </SubCard>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default RootLocus;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// constant\r\nconst headerSX = {\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n// ==============================|| CUSTOM MAIN CARD ||============================== //\r\n\r\nconst MainCard = forwardRef(\r\n    (\r\n        {\r\n            border = true,\r\n            boxShadow,\r\n            children,\r\n            content = true,\r\n            contentClass = '',\r\n            contentSX = {},\r\n            darkTitle,\r\n            secondary,\r\n            shadow,\r\n            sx = {},\r\n            title,\r\n            ...others\r\n        },\r\n        ref\r\n    ) => {\r\n        const theme = useTheme();\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                {...others}\r\n                sx={{\r\n                    overflowY: 'auto',\r\n                    border: border ? '1px solid' : 'none',\r\n                    borderColor: theme.palette.primary[200] + 75,\r\n                    ':hover': {\r\n                        boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\r\n                    },\r\n                    ...sx\r\n                }}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\r\n                {darkTitle && title && (\r\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\r\n                )}\r\n\r\n                {/* content & header divider */}\r\n                {title && <Divider />}\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={contentSX} className={contentClass}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nMainCard.propTypes = {\r\n    border: PropTypes.bool,\r\n    boxShadow: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    contentSX: PropTypes.object,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    shadow: PropTypes.string,\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nexport default MainCard;\r\n","import SubCard from \"./SubCard\";\r\nimport { MapInteractionCSS } from \"react-map-interaction\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PinchPanCard = ({ children, title, border }) => {\r\n    const customization = useSelector((state) => state.customization);\r\n    return (\r\n        <SubCard title={title} darkBorder={border} sx={{ direction: \"rtl\" }}>\r\n            <MapInteractionCSS disableZoom={!customization.enableZoom}>\r\n                {children}\r\n            </MapInteractionCSS>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default PinchPanCard;\r\n","const ProgressBar = ({\r\n    id,\r\n    color = \"white\",\r\n    background = \"lightgreen\",\r\n    borderRadius = \"10px\",\r\n}) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"0%\",\r\n                textAlign: \"right\",\r\n                background,\r\n                color,\r\n                borderRadius,\r\n                padding: \"1%\",\r\n            }}\r\n            id={id}\r\n        ></div>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;\r\n"],"names":["parameters","setters","labels","units","Fragment","Array","map","param","i","md","sm","xs","item","onChange","e","target","value","sx","width","InputProps","startAdornment","position","endAdornment","traces","title","height","logX","hideX","hideY","yRange","hideLegends","customization","useSelector","state","plot","style","textAlign","data","layout","showlegend","margin","t","l","r","b","xaxis","rangemode","zeroline","type","visible","yaxis","range","hoverlabel","align","boxmode","font","color","legend","orientation","enableZoom","MapInteractionCSS","disablePan","PinchPanCard","border","Typography","Grid","className","src","temp_part1","alt","temp_part2","startLebels","endLabels","rawNumerator","rawDenominator","$rawNumerator","$rawDenominator","k_min","k_max","$k_min","$k_max","updatePlot","responseTime","N","$N","method","changeMethod","SubCard","darkBorder","direction","spacing","gridSpacing","container","SimpleParametersList","py","pr","Button","onClick","textTransform","variant","pl","background","mt","ProgressBar","id","useState","x","y","rootLocusTrace","$rootLocusTrace","zerosTrace","$zerosTrace","polesTrace","$polesTrace","G_s","$G_s","formula","$formula","setResponseTime","useEffect","g_s","TransferFunction","calculus","tf","index","undefined","label","tfFormula","startTime","Date","roots","zeros","poles","Complex","zx","zy","mode","marker","size","name","px","symbol","progressBar","document","getElementById","rootLocus","rootsByAlgebriteLocus","console","log","endTime","setTimeout","makeProgress","MainCard","MathJax","marginTop","PlotlyBox","headerSX","mr","forwardRef","ref","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","others","theme","useTheme","overflowY","borderColor","palette","primary","action","disableZoom","borderRadius","padding"],"sourceRoot":""}