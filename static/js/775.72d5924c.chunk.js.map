{"version":3,"file":"static/js/775.72d5924c.chunk.js","mappings":"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","sources":["math/GraphBox.jsx","math/GraphMenu.jsx","views/input-boxes/CoordinateSystem.jsx","views/input-boxes/SimpleParametersList.jsx","views/topics/chapter03/first-order-tf-examining/lecture.jsx","views/topics/chapter03/first-order-tf-examining/parameters.jsx","views/topics/chapter03/first-order-tf-examining/index.jsx"],"sourcesContent":["import React from \"react\";\nimport Plot from \"react-plotly.js\";\n\nconst GraphBox = ({ traces, title, width, height = 500 }) => {\n    const temp_layout = {\n        xaxis: {\n            zeroline: true,\n            rangemode: \"tozero\",\n            autotick: false,\n            ticks: \"outside\",\n            tick0: 0,\n            dtick: 0.25,\n            ticklen: 8,\n            tickwidth: 4,\n            tickcolor: \"#000\",\n        },\n        yaxis: {\n            zeroline: true,\n            rangemode: \"tozero\",\n            autotick: false,\n            ticks: \"outside\",\n            tick0: 0,\n            dtick: 0.25,\n            ticklen: 8,\n            tickwidth: 4,\n            tickcolor: \"#000\",\n        },\n    };\n\n    return (\n        <Plot\n            style={{ textAlign: \"center\" }}\n            //id=\"graphBox\"\n            data={traces}\n            layout={{\n                // width: 1000,\n                // autosize: true,\n                margin: {\n                    t: 30, //top margin\n                    l: 30, //left margin\n                    r: 20, //right margin\n                    b: 30, //bottom margin\n                },\n                xaxis: {\n                    rangemode: \"tozero\",\n                },\n                yaxis: {\n                    rangemode: \"tozero\",\n                },\n                height,\n                title,\n                // hoverlabel: { bgcolor: \"#FFF\" },\n                hoverlabel: {align:'auto', boxmode: 'overlay', font:{color:'#000000FF'}},\n                legend: {orientation: 'h'}//, y: -0.3},\n            }}\n        />\n    );\n};\n\nexport default GraphBox;\n","import SaveAltIcon from \"@mui/icons-material/SaveAlt\";\r\nimport PhotoCamera from \"@mui/icons-material/PhotoCamera\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport FullScreen from \"@mui/icons-material/Fullscreen\";\r\nimport FilterCenterFocusIcon from \"@mui/icons-material/FilterCenterFocus\";\r\nimport { Grid, IconButton, Slider, Stack } from \"@mui/material\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { useState, useEffect } from \"react\";\r\nimport html2canvas from \"html2canvas\";\r\nimport ThreeDRotationIcon from \"@mui/icons-material/ThreeDRotation\";\r\nimport ThreeSixtyIcon from \"@mui/icons-material/ThreeSixty\";\r\n\r\nconst GraphMenu = ({\r\n    capture,\r\n    graphFileName,\r\n    formulaFileName,\r\n    reset,\r\n    update,\r\n    toggle3DPlot,\r\n}) => {\r\n    const [is3DModeEnabled, set3DModeEnaabled] = useState(false);\r\n    const [thicknessSliderPercentage, setThicknessSliderPercentage] =\r\n        useState(20);\r\n\r\n    const toggle3DMode = () => {\r\n        set3DModeEnaabled(!is3DModeEnabled);\r\n        toggle3DPlot();\r\n    };\r\n\r\n    const save = () => {\r\n        const graphBoxElement = document.getElementById(\"graphBox\");\r\n        // normal .blob has dark bakground\r\n        // convert background to light\r\n        const canvasWithBackground = document.createElement(\"canvas\");\r\n        canvasWithBackground.width = graphBoxElement.width;\r\n        canvasWithBackground.height = graphBoxElement.height;\r\n\r\n        const ctx = canvasWithBackground.getContext(\"2d\");\r\n        ctx.fillStyle = \"white\";\r\n        ctx.fillRect(0, 0, graphBoxElement.width, graphBoxElement.height);\r\n\r\n        ctx.drawImage(graphBoxElement, 0, 0);\r\n        // save\r\n        canvasWithBackground.toBlob((blob) => {\r\n            saveAs(blob, graphFileName);\r\n        });\r\n\r\n        html2canvas(document.getElementById(\"formulaBox\")).then((canvas) => {\r\n            canvas.toBlob((blob) => {\r\n                saveAs(blob, formulaFileName);\r\n            });\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        update({ thickness: thicknessSliderPercentage / 20.0 + 0.1 });\r\n    }, [thicknessSliderPercentage, update]);\r\n\r\n    return (\r\n        <Grid sx={{ direction: \"rtl\" }} container direction=\"row\">\r\n            <Grid md={10} sm={8} xs={6} sx={{ direction: \"rtl\" }} item>\r\n                {toggle3DPlot && (\r\n                    <IconButton\r\n                        color=\"secondary\"\r\n                        aria-label=\"capture graph\"\r\n                        component=\"span\"\r\n                        onClick={toggle3DMode}\r\n                    >\r\n                        {is3DModeEnabled ? (\r\n                            <ThreeSixtyIcon />\r\n                        ) : (\r\n                            <ThreeDRotationIcon />\r\n                        )}\r\n                    </IconButton>\r\n                )}{\" \"}\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"capture graph\"\r\n                    component=\"span\"\r\n                    onClick={capture}\r\n                >\r\n                    <PhotoCamera />\r\n                </IconButton>\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"download graph\"\r\n                    component=\"span\"\r\n                    onClick={save}\r\n                >\r\n                    <SaveAltIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"capture graph\"\r\n                    component=\"span\"\r\n                    onClick={reset}\r\n                >\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </Grid>\r\n            <Grid md={2} sm={4} xs={6} item>\r\n                <Stack\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    sx={{ mt: 0.5, direction: \"ltr\" }}\r\n                    alignItems=\"center\"\r\n                >\r\n                    <FullScreen />\r\n                    <Slider\r\n                        aria-label=\"Volume\"\r\n                        value={thicknessSliderPercentage}\r\n                        onChange={(e, value) =>\r\n                            setThicknessSliderPercentage(value)\r\n                        }\r\n                    />\r\n                    <FilterCenterFocusIcon />\r\n                </Stack>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default GraphMenu;\r\n","import React, { useCallback } from \"react\";\nimport \"./input-boxes.css\";\nimport calculus from \"math/calculus/index\";\nimport { useState, useEffect, useRef } from \"react\";\nimport ReactCursorPosition from \"react-cursor-position\";\nimport { Grid, InputAdornment, TextField } from \"@mui/material\";\nimport { MathJax } from \"better-react-mathjax\";\n\n/* react-cursor-position props\n{\n    detectedEnvironment: {\n        isMouseDetected: false,\n        isTouchDetected: false,\n    },\n    elementDimensions: {\n        width: Number,\n        height: Number\n    },\n    isActive: Boolean,\n    isPositionOutside: Boolean,\n    position: {\n        x: Number,\n        y: Number\n    }\n}\n\n*/\n// for enabling mouse down to drag a point\nconst useInterval = (callback, delay) => {\n    const savedCallback = useRef();\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    useEffect(() => {\n        const tick = () => {\n            savedCallback.current();\n        };\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n};\n\nconst axisOffsets = (psize, grids = 5) =>\n    grids >= 5\n        ? psize * (0.2 / 7 + (grids - 5) / ((grids + 1) * (grids + 5)))\n        : -(psize / 10) / (1 + 3.5 * grids) + (psize * 0.2) / 7;\n\nconst CURSOR_Y_OFFSET = 38,\n    DEFAULT_GRIDS = 6;\n\nconst CoordinateSystemContent = ({\n    elementDimensions, // react-cursor-position\n    position, // react-cursor-position\n    isPositionOutside, // react-cursor-position\n    point = { x: 0, y: 0, select: () => {} },\n    extra, // = {point: null, select: null},\n    options = { pointSize: 7, grids: DEFAULT_GRIDS, pointColor: null }, // pointCOLOR\n    scale = 1,\n    viewpoint,\n}) => {\n    const [x, $x] = useState(0);\n    const [y, $y] = useState(0);\n    // css grid\n    const [grids, $grids] = useState(5); // 5x5\n    const [pointSize, $pointSize] = useState(7);\n\n    /* OLD version : \n        const update = (e) => {\n            const xmax = boxObject.offsetWidth / 2,\n                ymax = (boxObject.offsetHeight + 1) / 2; // + 1 is NEEDED?\n            const dx = calculus.round((e.clientX - xmax) / xmax),\n                dy = calculus.round((ymax - e.nativeEvent.offsetY) / ymax);\n            $x(dx * scale);\n            $y(dy * scale);};\n     */\n    const update = (e) => {\n        // const boxObject = document.getElementById(\"#box\");\n        if (!isPositionOutside) {\n            const xmax = elementDimensions.width / 2,\n                ymax = (elementDimensions.height - CURSOR_Y_OFFSET) / 2; // + 1 is NEEDED?\n            const dx = calculus.round((position.x - xmax) / xmax),\n                dy = calculus.round((ymax - position.y) / ymax);\n            const vx = dx * scale * grids,\n                vy = dy * scale * grids;\n            $x(vx);\n            $y(vy);\n            viewpoint(vx, vy);\n        }\n    };\n\n    const updatePointLocation = useCallback(\n        (px, py, index = 0) => {\n            // update CSS\n            const objectPoint = document.getElementById(`#point${index}`);\n            objectPoint.style.setProperty(\"--x\", px);\n            objectPoint.style.setProperty(\n                \"--y\",\n                py - axisOffsets(pointSize, grids)\n            );\n        },\n        [pointSize, grids]\n    );\n\n    const registerPoint = (isExtra = false) => {\n        // update(e);\n        // put a point inside the box\n        // update the values in the caller component (e.g. parameter boxes in examples)\n        if (!isExtra) {\n            if (point && point.select) point.select({ x, y });\n            // for extra point (second point)\n        } else if (extra && extra.select) extra.select({ x, y });\n\n        viewpoint(x, y);\n        // after updating values in the parameter.js components => point prop will be updated => view updater useEffect (immediately in below) will be triggered\n    };\n\n    const [isMouseDown, setMouseDown] = useState(false);\n    useInterval(registerPoint, isMouseDown ? 10 : null);\n    const [isMouseDownForXpoint, setMouseDownForXpoint] = useState(false);\n    useInterval(() => registerPoint(true), isMouseDownForXpoint ? 10 : null);\n\n    useEffect(() => {\n        // view updater useEffect\n        if (point && scale !== 0) {\n            // if(point.x !== x || (point.y !== null && point.y !== y))\n            const px = Number(point.x),\n                py = Number(point.y);\n            const ndx = calculus.round(px / (grids * scale)),\n                ndy = calculus.round(py / (grids * scale));\n            updatePointLocation(ndx * grids, ndy * grids, 0);\n\n            // $x(px);\n            // $y(py);\n        }\n    }, [point, scale, grids, updatePointLocation]);\n\n    // for extra point changes\n    useEffect(() => {\n        // view updater useEffect\n        if (extra && scale !== 0) {\n            // if(extra.x !== x || (extra.y !== null && extra.y !== y))\n            const px = Number(extra.x),\n                py = Number(extra.y);\n            const ndx = calculus.round(px / (grids * scale)),\n                ndy = calculus.round(py / (grids * scale));\n            updatePointLocation(ndx * grids, ndy * grids, 1);\n\n            // $x(px);\n            // $y(py);\n        }\n    }, [extra, scale, grids, updatePointLocation]);\n\n    useEffect(() => {\n        // if dragging put the point out of range of the scale\n        // scale will be expanded\n        // stop dragging to avoid mouse drag bugs\n        setMouseDown(false);\n        setMouseDownForXpoint(false);\n    }, [scale]);\n    // set options:\n    useEffect(() => {\n        if (options.pointSize && options.pointSize >= 0)\n            $pointSize(options.pointSize);\n\n        if (options.grids && options.grids >= 0) $grids(options.grids);\n    }, [options]);\n\n    useEffect(() => {\n        if (grids >= 0 && grids >= 0) {\n            document.documentElement.style.setProperty(\"--grids-x\", grids);\n            document.documentElement.style.setProperty(\"--grids-y\", grids);\n            document.documentElement.style.setProperty(\n                \"--grids-total\",\n                grids * 2\n            );\n        }\n    }, [grids]);\n\n    useEffect(() => {\n        if (pointSize >= 0)\n            document.documentElement.style.setProperty(\n                \"--point-size\",\n                pointSize\n            );\n    }, [pointSize]);\n\n    return (\n        <div\n            id=\"#box\"\n            onMouseEnter={(e) => update(e)}\n            onMouseLeave={(e) => update(e)}\n            onMouseMove={(e) => update(e)}\n            // onClick={() => registerPoint(false)}\n            onMouseUp={() => {\n                setMouseDown(false);\n                setMouseDownForXpoint(false);\n            }}\n            className=\"coordinate-box\"\n        >\n            <div\n                id=\"#point0\"\n                onMouseDown={() => setMouseDown(true)}\n                onMouseUp={() => setMouseDown(false)}\n                className=\"coordinate-point\"\n            ></div>\n            {extra && (\n                <div\n                    id=\"#point1\"\n                    onMouseDown={() => setMouseDownForXpoint(true)}\n                    onMouseUp={() => setMouseDownForXpoint(false)}\n                    className=\"coordinate-point extra-point-color\"\n                ></div>\n            )}\n        </div>\n        /* <i className=\"arrow right\"></i> */\n    );\n};\n\nconst outOfRange = (num, range) =>\n    num > range || num < -range || range - Math.abs(num) < 1.0;\n    \nconst CoordinateSystem = (props) => {\n    const [x, $x] = useState(0);\n    const [y, $y] = useState(0);\n\n    const { options, point, extra } = props;\n    let { grids, defaultScale } = options ? options : { grids: DEFAULT_GRIDS, defaultScale: 1 };\n\n    const [scale, $scale] = useState(defaultScale || 1);\n    const viewpoint = (x, y) => {\n        // updates the vallue of coordinates givent by the child component\n        $x(x);\n        $y(y);\n    };\n\n    // auto expand axis range when the value is near to scale\n    useEffect(() => {\n        const range = grids\n            ? Math.abs(scale * grids)\n            : Math.abs(scale * DEFAULT_GRIDS);\n\n        if (\n            range > 0 &&\n            (outOfRange(point.x, range) ||\n                outOfRange(point.y, range) ||\n                (extra && (outOfRange(extra.x, range) || outOfRange(extra.y, range))))\n        )\n            $scale(scale + 1);\n    }, [point, extra, scale, grids]);\n\n    return (\n        <Grid container>\n            <Grid xs={12} item>\n                <ReactCursorPosition>\n                    <CoordinateSystemContent\n                        {...props}\n                        viewpoint={viewpoint}\n                        scale={scale}\n                    />\n                </ReactCursorPosition>\n            </Grid>\n            <Grid xs={12}>\n                <p style={{ textAlign: \"center\" }}>{\"(\" + calculus.strictPrecisionFormat(x) + \", \" + calculus.strictPrecisionFormat(y) + \")\"}</p>\n            </Grid>\n            <Grid xs={12} item>\n                <TextField\n                    variant=\"outlined\"\n                    value={scale}\n                    sx={{ width: \"100%\" }}\n                    onChange={(e) => $scale(e.target.value)}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"left\">\n                                <MathJax>{\"$$\\\\times$$\"}</MathJax>\n                            </InputAdornment>\n                        ),\n                        endAdornment: (\n                            <InputAdornment position=\"left\">\n                                مقیاس\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default CoordinateSystem;\n","import { Grid, InputAdornment, TextField } from \"@mui/material\";\nimport { MathJax } from \"better-react-mathjax\";\nimport { evaluate } from \"math/calculus\";\nimport { Fragment } from \"react\";\n\nconst SimpleParametersList = ({ parameters, setters, labels, units }) => {\n    return (\n        <Fragment>\n            {parameters instanceof Array &&\n                parameters.map((param, i) => (\n                    <Grid md={12} sm={4} xs={6} item>\n                        <TextField\n                            onChange={(e) => setters[i](e.target.value)}\n                            value={param}\n                            sx={{ width: \"100%\" }}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"left\">\n                                        <MathJax>{labels[i]}</MathJax>\n                                    </InputAdornment>\n                                ),\n                                endAdornment: units[i] && (\n                                    <InputAdornment position=\"right\">\n                                        <MathJax>{units[i]}</MathJax>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </Grid>\n                ))}\n        </Fragment>\n    );\n};\n\nexport default SimpleParametersList;\n","import SubCard from \"../../../ui-component/cards/SubCard\";\r\nimport { Grid } from \"@mui/material\";\r\nimport simple_LTI_system from \"./visual/simple_lti_system.png\";\r\nimport \"views/topics/topics.css\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\n\r\nconst firstOrderTransferFunctionFormFormula = \"$$G(s) = \\\\frac{k}{s + a}$$\";\r\nconst firstOrderTransferFunctionSteadyStateTransientFormula =\r\n    \"$$c(t) = c_{tr}(t) + c_{ss}(t)$$\";\r\n\r\nconst steadyStateCalculationsFormula =\r\n    \"$$\\\\begin{cases} \\\\lim\\\\limits_{t \\\\to \\\\infty}c_{tr}(t) = 0 \\\\\\\\ \\\\lim\\\\limits_{t \\\\to \\\\infty}c_{ss}(t) = c_{ss} \\\\end{cases} \\\\rightarrow c_{ss} = \\\\lim\\\\limits_{t \\\\to \\\\infty}c(t)$$\";\r\nconst resultOfFinalValueTheorem =\r\n    \"$$c_{ss} = \\\\lim\\\\limits_{t \\\\to \\\\infty}c_{ss}(t) = \\\\lim\\\\limits_{s \\\\to 0}sC(s)$$\";\r\n\r\nconst stepFunctionFormula = \"$$r(t) = u(t) \\\\rightarrow R(s) = \\\\frac{1}{s}$$\";\r\nconst stepResponseOfFirstOrderTfInLaplaceDomain =\r\n    \"$$C(s) = G(s)R(s) = \\\\frac{k}{s(s + 1)}$$\";\r\nconst stepResponseOfFirstOrderTfInTimeDomain =\r\n    \"$$c(t) = (\\\\frac{k}{a} - \\\\frac{k}{a}e^{-at})u(t)$$\";\r\nconst stepInputSteadyStateValueForFirstOrderTf =\r\n    \"$$c_{ss} = \\\\lim\\\\limits_{s \\\\to 0}sC(s) = \\\\lim\\\\limits_{s \\\\to 0}\\\\frac{k}{s + a} = \\\\frac{k}{a}$$\";\r\n\r\nconst rampFunctionFormula =\r\n    \"$$r(t) = tu(t) \\\\rightarrow R(s) = \\\\frac{1}{s^2}$$\";\r\nconst rampResponseOfFirstOrderTfInLaplaceDomain =\r\n    \"$$C(s) = G(s)R(s) = \\\\frac{k}{s^2(s + 1)}$$\";\r\nconst rampResponseOfFirstOrderTfInTimeDomain =\r\n    \"$$c(t) = \\\\frac{k}{a}(t - \\\\frac{1}{a})u(t) + \\\\frac{k}{a^2}e^{-at}u(t)$$\";\r\nconst rampInputSteadyStateValueForFirstOrderTf =\r\n    \"$$c_{ss} = \\\\lim\\\\limits_{s \\\\to 0}sC(s) = \\\\lim\\\\limits_{s \\\\to 0}\\\\frac{k}{s(s + a)} = \\\\infty$$\";\r\n\r\nconst FOTFLecture = () => {\r\n    return (\r\n        <SubCard\r\n            title=\"تابع تبدیل مرتبه یک\"\r\n            darkBorder={true}\r\n            sx={{ direction: \"rtl\" }}\r\n        >\r\n            <Grid className=\"lecture-text\" item>\r\n                <p>\r\n                    &nbsp; &nbsp; &nbsp; &nbsp; این توابع تبدیل به فرم زیر می\r\n                    باشند:\r\n                </p>\r\n            </Grid>\r\n            <Grid item>\r\n                <MathJax>{firstOrderTransferFunctionFormFormula}</MathJax>\r\n            </Grid>\r\n            <Grid className=\"lecture-text\" item>\r\n                <h1 style={{ marginTop: \"5%\", marginBottom: \"3%\" }}>\r\n                    &nbsp;پاسخ حالت ماندگار\r\n                </h1>\r\n                <p>\r\n                    &nbsp; &nbsp; &nbsp; &nbsp; دیاگرام یک سیستم LTI ساده بصورت\r\n                    زیر می باشد:\r\n                </p>\r\n            </Grid>\r\n            <Grid item>\r\n                <img\r\n                    className=\"lecture-image\"\r\n                    src={simple_LTI_system}\r\n                    alt=\"بارگذاری تصویر با مشکل مواجه شد\"\r\n                />\r\n            </Grid>\r\n            <Grid style={{ fontSize: \"20px\" }} item>\r\n                <MathJax>\r\n                    {firstOrderTransferFunctionSteadyStateTransientFormula}\r\n                </MathJax>\r\n            </Grid>\r\n            <Grid style={{ fontSize: \"20px\" }} item>\r\n                <MathJax>{steadyStateCalculationsFormula}</MathJax>\r\n            </Grid>\r\n            <Grid className=\"lecture-text\" item>\r\n                <p>\r\n                    &nbsp; &nbsp; &nbsp; &nbsp; نکته:‌طبق قضیه مقدار نهایی\r\n                    داریم:\r\n                </p>\r\n            </Grid>\r\n            <Grid style={{ fontSize: \"20px\" }} item>\r\n                <MathJax>{resultOfFinalValueTheorem}</MathJax>\r\n            </Grid>\r\n            <Grid sx={{ mt: 1 }} item>\r\n                <SubCard>\r\n                    <Grid className=\"lecture-text\" item>\r\n                        <h1 style={{ marginTop: \"5%\", marginBottom: \"3%\" }}>\r\n                            &nbsp; پاسخ پله واحد\r\n                        </h1>\r\n                        <p>\r\n                            &nbsp; &nbsp; &nbsp; &nbsp; حال پاسخ حالت ماندگار به\r\n                            ورودی پله واحد را برای سیستم مذکور را محاسبه می\r\n                            کنیم:\r\n                        </p>\r\n                    </Grid>\r\n                    <Grid style={{ fontSize: \"20px\" }} item>\r\n                        <MathJax>{stepFunctionFormula}</MathJax>\r\n                    </Grid>\r\n                    <Grid style={{ fontSize: \"20px\" }} item>\r\n                        <MathJax>\r\n                            {stepResponseOfFirstOrderTfInLaplaceDomain}\r\n                        </MathJax>\r\n                    </Grid>\r\n                    <Grid style={{ fontSize: \"20px\" }} item>\r\n                        <MathJax>\r\n                            {stepResponseOfFirstOrderTfInTimeDomain}\r\n                        </MathJax>\r\n                    </Grid>\r\n                    <Grid className=\"lecture-text\" item>\r\n                        <p>\r\n                            &nbsp; &nbsp; &nbsp; &nbsp; در نتیجه مقدار حالت\r\n                            ماندگار سیستم عبارت است از:\r\n                        </p>\r\n                    </Grid>\r\n                    <Grid style={{ fontSize: \"20px\" }} item>\r\n                        <MathJax>\r\n                            {stepInputSteadyStateValueForFirstOrderTf}\r\n                        </MathJax>\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid sx={{ mt: 1 }} item>\r\n                <SubCard>\r\n                    <Grid className=\"lecture-text\" item>\r\n                        <h1 style={{ marginTop: \"5%\", marginBottom: \"3%\" }}>\r\n                            &nbsp; پاسخ شیب واحد\r\n                        </h1>\r\n                        <p>\r\n                            &nbsp; &nbsp; &nbsp; &nbsp; حال پاسخ حالت ماندگار به\r\n                            ورودی شییب واحد را برای سیستم مذکور را محاسبه می\r\n                            کنیم:\r\n                        </p>\r\n                    </Grid>\r\n                    <Grid style={{ fontSize: \"20px\" }} item>\r\n                        <MathJax>{rampFunctionFormula}</MathJax>\r\n                    </Grid>\r\n                    <Grid style={{ fontSize: \"20px\" }} item>\r\n                        <MathJax>\r\n                            {rampResponseOfFirstOrderTfInLaplaceDomain}\r\n                        </MathJax>\r\n                    </Grid>\r\n                    <Grid style={{ fontSize: \"20px\" }} item>\r\n                        <MathJax>\r\n                            {rampResponseOfFirstOrderTfInTimeDomain}\r\n                        </MathJax>\r\n                    </Grid>\r\n                    <Grid className=\"lecture-text\" item>\r\n                        <p>\r\n                            &nbsp; &nbsp; &nbsp; &nbsp; در نتیجه مقدار حالت\r\n                            ماندگار سیستم عبارت است از:\r\n                        </p>\r\n                    </Grid>\r\n                    <Grid style={{ fontSize: \"20px\" }} item>\r\n                        <MathJax>\r\n                            {rampInputSteadyStateValueForFirstOrderTf}\r\n                        </MathJax>\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default FOTFLecture;\r\n","import { Grid, Button } from \"@mui/material\";\r\nimport CoordinateSystem from \"views/input-boxes/CoordinateSystem\";\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport SimpleParametersList from \"views/input-boxes/SimpleParametersList\";\r\n\r\nconst parameterFormulas = [\r\n    \"$$a = $$\",\r\n    \"$$k = $$\",\r\n    \"$$t_i = $$\",\r\n    \"$$t_f = $$\",\r\n];\r\nconst parameterUnits = [null, null, \"$$sec$$\", \"$$sec$$\"];\r\n\r\nconst FOTFParameters = ({\r\n    k,\r\n    a,\r\n    $k,\r\n    $a,\r\n    t_i,\r\n    t_f,\r\n    $t_i,\r\n    $t_f,\r\n    inputSignal,\r\n    $inputSignal,\r\n}) => {\r\n    const grids = 10;\r\n    const selectRealPart = (point) => {\r\n        if (point) $a(-point.x);\r\n    };\r\n\r\n    return (\r\n        <SubCard\r\n            darkBorder\r\n            title=\"پارامترها\"\r\n            sx={{\r\n                direction: \"ltr\",\r\n                textAlign: \"right\",\r\n                height: \"100%\",\r\n            }}\r\n        >\r\n            <Grid xs={12} container>\r\n                <Grid xs={6} sx={{ pr: 1, pb: 1 }} item>\r\n                    <Button\r\n                        onClick={() => $inputSignal(0)}\r\n                        style={{ width: \"100%\", textTransform: \"none\" }}\r\n                        variant={inputSignal === 0 ? \"contained\" : \"outlined\"}\r\n                    >\r\n                        پله\r\n                    </Button>\r\n                </Grid>\r\n                <Grid sx={{ pb: 1 }} xs={6} item>\r\n                    <Button\r\n                        onClick={() => $inputSignal(1)}\r\n                        style={{ width: \"100%\", textTransform: \"none\" }}\r\n                        variant={inputSignal === 1 ? \"contained\" : \"outlined\"}\r\n                    >\r\n                        رمپ\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid spacing={0.6} container direction=\"row\">\r\n            \r\n                <SimpleParametersList parameters={[a, k, t_i, t_f]} setters={[$a, $k, $t_i, $t_f]} labels={parameterFormulas} units={parameterUnits} />\r\n                \r\n                <Grid sx={{ mt: 1 }} md={12} sm={4} xs={6} item>\r\n                    <p style={{textAlign: 'center'}}>محل قطب را انتخاب کنید</p>\r\n                    <CoordinateSystem\r\n                        point={{ x: -a, y: 0, select: selectRealPart }}\r\n                        options={{ pointSize: 10, grids }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default FOTFParameters;\r\n","import FirstOrderTfLecture from \"./lecture\";\r\n\r\n// project imports\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport calculus from \"../../../../math/calculus/index\";\r\nimport { useState, useEffect } from \"react\";\r\nimport GraphMenu from \"math/GraphMenu\";\r\nimport { Grid } from \"@mui/material\";\r\nimport GraphBox from \"math/GraphBox\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport FirstOrderTfParameters from \"./parameters\";\r\nimport TransferFunction from \"math/algebra/functions/transfer\";\r\nimport MainCard from \"views/ui-component/cards/MainCard\";\r\nimport { gridSpacing } from \"store/constant\";\r\n\r\nconst realCoeficientValue = (coef) => {\r\n    if (coef === -1) return \"-\";\r\n    if (coef === 1) return \"\";\r\n    return calculus.strictPrecisionFormat(coef);\r\n};\r\n\r\nconst realAdditionTermsValue = (term) =>\r\n    term > 0\r\n        ? \" + \" + calculus.strictPrecisionFormat(term)\r\n        : \" - \" + calculus.strictPrecisionFormat(term) * -1;\r\n\r\nconst realAdditionalCoefficientValue = (coef) => {\r\n    let result = \"\";\r\n    if (coef < 0) {\r\n        result += \"-\";\r\n        coef *= -1;\r\n    } else if (coef > 0) result += \"+\";\r\n    if (coef !== 1) result += calculus.strictPrecisionFormat(coef);\r\n    return result;\r\n};\r\nconst stepResponse = (k, a) =>\r\n    \"$$\\\\begin{cases}G(s) = \" +\r\n    TransferFunction.Specials.$1(k, -a).toString() +\r\n    (a !== 0\r\n        ? \" \\\\\\\\ \\\\\\\\ c(t) = \" +\r\n          realCoeficientValue(k / a) +\r\n          \"(1 - e^{\" +\r\n          realCoeficientValue(-a) +\r\n          \"t})u(t) \"\r\n        : \"} \\\\\\\\ \\\\\\\\ c(t) = tu(t) \") +\r\n    \"\\\\end{cases}$$\";\r\n\r\nconst indexedStepResponse = (k, a, index) =>\r\n    \"$$\\\\begin{cases}G_{\" +\r\n    index +\r\n    \"}(s) = \" +\r\n    TransferFunction.Specials.$1(k, -a).toString() +\r\n    (a !== 0\r\n        ? \" \\\\\\\\ \\\\\\\\ c_{\" +\r\n          index +\r\n          \"}(t) = \" +\r\n          realCoeficientValue(k / a) +\r\n          \"(1 - e^{\" +\r\n          realCoeficientValue(-a) +\r\n          \"t})u(t)\"\r\n        : \" \\\\\\\\ \\\\\\\\ c_{\" + index + \"}(t) = tu(t)\") +\r\n    \"\\\\end{cases}$$\";\r\n\r\nconst rampResponse = (k, a) =>\r\n    \"$$\\\\begin{cases}G(s) = \" +\r\n    TransferFunction.Specials.$1(k, -a).toString() +\r\n    (a !== 0\r\n        ? \" \\\\\\\\ \\\\\\\\ c(t) = \" +\r\n          realCoeficientValue(k / a) +\r\n          \"(t\" +\r\n          realAdditionTermsValue(-1 / a) +\r\n          \")u(t)\" +\r\n          realAdditionalCoefficientValue(k / (a * a)) +\r\n          \"e^{\" +\r\n          realCoeficientValue(-a) +\r\n          \"t}u(t) \"\r\n        : \"} \\\\\\\\ \\\\\\\\ c(t) = t^2u(t) \") +\r\n    \"\\\\end{cases}$$\";\r\n\r\nconst indexedRampResponse = (k, a, index) =>\r\n    \"$$\\\\begin{cases}G_{\" +\r\n    index +\r\n    \"}(s) = \" +\r\n    TransferFunction.Specials.$1(k, -a).toString() +\r\n    (a !== 0\r\n        ? \" \\\\\\\\ \\\\\\\\ c_{\" +\r\n          index +\r\n          \"}(t) = \" +\r\n          realCoeficientValue(k / a) +\r\n          \"(t\" +\r\n          realAdditionTermsValue(-1 / a) +\r\n          \")u(t)\" +\r\n          realAdditionalCoefficientValue(k / (a * a)) +\r\n          \"e^{\" +\r\n          realCoeficientValue(-a) +\r\n          \"t}u(t) \"\r\n        : \"} \\\\\\\\ \\\\\\\\ c_{\" + index + \"}(t) = t^2u(t) \") +\r\n    \"\\\\end{cases}$$\";\r\n\r\nconst symbols = {\r\n    in: \"t\",\r\n    out: \"c\",\r\n};\r\n\r\nconst FirstOrderTransferFunctionExamining = () => {\r\n    const [a, $a] = useState(1.0);\r\n    const [k, $k] = useState(1.0);\r\n    const [t_i, $t_i] = useState(0);\r\n    const [t_f, $t_f] = useState(5);\r\n    const [inputSignal, $inputSignal] = useState(0); // 0 as step | 1 as ramp === assume this state's value as the gradiant value of th input signal function\r\n    // gradiant of u(t) is 0 and unit ramp is one\r\n    const [systems, $systems] = useState([]);\r\n    const [traces, $traces] = useState([]);\r\n    const [response, $response] = useState(null);\r\n    const [thickness, $thickness] = useState(1.0); // graph line thickness\r\n    const [isGraphCatured, $graphCaptured] = useState(false);\r\n    const [is3DPlotEnabled, $3DPlotEnabled] = useState(false);\r\n\r\n    const toggle3DPlot = () => $3DPlotEnabled(!is3DPlotEnabled);\r\n\r\n    const capture = () => {\r\n        const capturedSystems = [...systems];\r\n        const index = capturedSystems.findIndex(\r\n            (sys) =>\r\n                sys.a === Number(a) &&\r\n                sys.k === Number(k) &&\r\n                sys.inputSignal === inputSignal\r\n        );\r\n        if (index === -1) {\r\n            // if current system has not been captured before => then capture it; o.w. its not needed\r\n            capturedSystems.push({\r\n                a: Number(a),\r\n                k: Number(k),\r\n                inputSignal,\r\n                thickness,\r\n                legend:\r\n                    \"$$\" +\r\n                    symbols.out +\r\n                    \"_{\" +\r\n                    (systems.length + 1).toString() +\r\n                    \"}$$\",\r\n            });\r\n            $systems(capturedSystems);\r\n            $graphCaptured(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        let g_t = null;\r\n        if (!inputSignal) {\r\n            // step\r\n            g_t = calculus.LTI.step(1, Number(k), Number(a));\r\n            $response(stepResponse(Number(k), Number(a)));\r\n        } else {\r\n            g_t = calculus.LTI.ramp(1, Number(k), Number(a));\r\n            $response(rampResponse(Number(k), Number(a)));\r\n        }\r\n        const [x, y] = calculus.pointify(g_t, Number(t_i), Number(t_f), 1000); // N: 100\r\n        // parameters changed => load again all traces(traces); this is for when shared params changes(ti, tf, ...),\r\n        // so that the traces will be loaded with new conditions\r\n        const all = systems.map((e, index) => {\r\n            let g_t = null;\r\n\r\n            if (!e.inputSignal) {\r\n                // step\r\n                g_t = calculus.LTI.step(1, e.k, e.a);\r\n            } else {\r\n                g_t = calculus.LTI.ramp(1, e.k, e.a);\r\n            }\r\n            const [xi, yi] = calculus.pointify(\r\n                g_t,\r\n                Number(t_i),\r\n                Number(t_f),\r\n                1000\r\n            ); // N: 100\r\n\r\n            return {\r\n                x: xi,\r\n                y: yi,\r\n                z: is3DPlotEnabled ? Array(xi.length).fill(0) : null,\r\n                line: {\r\n                    // color: e.color...\r\n                    width: e.thickness,\r\n                },\r\n                // color,\r\n                type: \"scatter\" + (is3DPlotEnabled ? \"3d\" : \"\"),\r\n                mode: \"lines\",\r\n                name: e.legend,\r\n            };\r\n        });\r\n\r\n        const index = systems.findIndex(\r\n            (sys) =>\r\n                sys.a === Number(a) &&\r\n                sys.k === Number(k) &&\r\n                sys.inputSignal === inputSignal\r\n        );\r\n        if (index === -1)\r\n            // if current system isnt in traces list => add it temperory to plot\r\n            all.push({\r\n                x,\r\n                y,\r\n                z: is3DPlotEnabled ? Array(x.length).fill(0) : null,\r\n                // color,\r\n                line: {\r\n                    // color:'rgb(17, 157, 255)'\r\n                    width: thickness,\r\n                },\r\n                type: \"scatter\" + (is3DPlotEnabled ? \"3d\" : \"\"),\r\n                mode: \"lines\",\r\n                name: `${symbols.out}(${symbols.in})`,\r\n            });\r\n\r\n        $traces(all);\r\n    }, [a, k, t_i, t_f, inputSignal, is3DPlotEnabled, thickness, systems]);\r\n\r\n    useEffect(() => {\r\n        $graphCaptured(false);\r\n    }, [a, k, inputSignal]);\r\n\r\n    const update = (changes) => {\r\n        if (changes) $thickness(changes.thickness);\r\n        //and so...\r\n    };\r\n    return (\r\n        <MainCard>\r\n            <Grid item spacing={gridSpacing}>\r\n                <h2 className=\"chapter-section-title\">توابع تبدیل مرتبه یک</h2>\r\n            </Grid>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Grid container direction=\"column\" spacing={1}>\r\n                    <Grid\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        item\r\n                    >\r\n                        <FirstOrderTfLecture />\r\n                    </Grid>\r\n\r\n                    <Grid sx={{ margin: \"auto\", width: \"100%\" }} item>\r\n                        <SubCard sx={{ direction: \"ltr\" }}>\r\n                            <Grid\r\n                                id=\"formulaBox\"\r\n                                sx={{ margin: \"auto\" }}\r\n                                container\r\n                                direction=\"row\"\r\n                            >\r\n                                {systems.map((sys, index) => {\r\n                                    let formula = null;\r\n                                    if (!sys.inputSignal)\r\n                                        formula = indexedStepResponse(\r\n                                            sys.k,\r\n                                            sys.a,\r\n                                            index + 1\r\n                                        );\r\n                                    else\r\n                                        formula = indexedRampResponse(\r\n                                            sys.k,\r\n                                            sys.a,\r\n                                            index + 1\r\n                                        );\r\n\r\n                                    return (\r\n                                        <Grid\r\n                                            style={{ fontSize: \"18px\" }}\r\n                                            md={6}\r\n                                            sm={12}\r\n                                            item\r\n                                        >\r\n                                            <MathJax>{formula}</MathJax>\r\n                                        </Grid>\r\n                                    );\r\n                                })}\r\n                                {!isGraphCatured && (\r\n                                    <Grid\r\n                                        style={{ fontSize: \"18px\" }}\r\n                                        md={6}\r\n                                        sm={12}\r\n                                    >\r\n                                        <MathJax>{response}</MathJax>\r\n                                    </Grid>\r\n                                )}\r\n                            </Grid>\r\n                        </SubCard>\r\n                    </Grid>\r\n                    <Grid\r\n                        spacing={2}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        container\r\n                    >\r\n                        <Grid\r\n                            md={3}\r\n                            sm={12}\r\n                            xs={12}\r\n                            sx={{ marginTop: \"1%\", width: \"100%\" }}\r\n                            container\r\n                        >\r\n                            <Grid xs={12}>\r\n                                <FirstOrderTfParameters\r\n                                    a={a}\r\n                                    k={k}\r\n                                    t_i={t_i}\r\n                                    t_f={t_f}\r\n                                    $a={$a}\r\n                                    $k={$k}\r\n                                    $t_i={$t_i}\r\n                                    $t_f={$t_f}\r\n                                    inputSignal={inputSignal}\r\n                                    $inputSignal={$inputSignal}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid md={9} sm={12} xs={12} item>\r\n                            <SubCard>\r\n                                <GraphMenu\r\n                                    capture={capture}\r\n                                    formulaFileName={\r\n                                        \"Water Tank Level Equations _ \" +\r\n                                        [\r\n                                            ...systems.map((sys) => sys.legend),\r\n                                        ].join() +\r\n                                        \".png\"\r\n                                    }\r\n                                    graphFileName={\r\n                                        [\r\n                                            ...systems.map(\r\n                                                (sys) =>\r\n                                                    `${sys.legend}{alpha=${\r\n                                                        sys.a\r\n                                                    }_k=${sys.k}_in=${\r\n                                                        sys.inputSignal\r\n                                                            ? \"ramp\"\r\n                                                            : \"step\"\r\n                                                    }}`\r\n                                            ),\r\n                                        ].join(\", \") + \".png\"\r\n                                    }\r\n                                    reset={() => $systems([])}\r\n                                    update={(changes) => update(changes)}\r\n                                    toggle3DPlot={toggle3DPlot}\r\n                                />\r\n                            </SubCard>\r\n                            <hr />\r\n                            <Grid lg={12} md={12} sm={12} xs={12} item>\r\n                                <SubCard>\r\n                                    <GraphBox\r\n                                        title=\"پاسخ پله/رمپ\"\r\n                                        traces={traces}\r\n                                    />\r\n                                </SubCard>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default FirstOrderTransferFunctionExamining;\r\n"],"names":["traces","title","width","height","style","textAlign","data","layout","margin","t","l","r","b","xaxis","rangemode","yaxis","hoverlabel","align","boxmode","font","color","legend","orientation","capture","graphFileName","formulaFileName","reset","update","toggle3DPlot","useState","is3DModeEnabled","set3DModeEnaabled","thicknessSliderPercentage","setThicknessSliderPercentage","useEffect","thickness","sx","direction","container","md","sm","xs","item","component","onClick","graphBoxElement","document","getElementById","canvasWithBackground","createElement","ctx","getContext","fillStyle","fillRect","drawImage","toBlob","blob","saveAs","html2canvas","then","canvas","spacing","mt","alignItems","value","onChange","e","useInterval","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","axisOffsets","psize","grids","CoordinateSystemContent","elementDimensions","position","isPositionOutside","point","x","y","select","extra","options","pointSize","pointColor","scale","viewpoint","$x","$y","$grids","$pointSize","xmax","ymax","dx","calculus","dy","vx","vy","updatePointLocation","useCallback","px","py","index","objectPoint","setProperty","registerPoint","isExtra","isMouseDown","setMouseDown","isMouseDownForXpoint","setMouseDownForXpoint","Number","ndx","ndy","documentElement","onMouseEnter","onMouseLeave","onMouseMove","onMouseUp","className","onMouseDown","outOfRange","num","range","Math","abs","props","defaultScale","$scale","variant","target","InputProps","startAdornment","endAdornment","parameters","setters","labels","units","Fragment","Array","map","param","i","SubCard","darkBorder","Grid","MathJax","marginTop","marginBottom","src","simple_LTI_system","alt","fontSize","parameterFormulas","parameterUnits","k","a","$k","$a","t_i","t_f","$t_i","$t_f","inputSignal","$inputSignal","pr","pb","Button","textTransform","SimpleParametersList","CoordinateSystem","realCoeficientValue","coef","realAdditionTermsValue","term","realAdditionalCoefficientValue","result","symbols","systems","$systems","$traces","response","$response","$thickness","isGraphCatured","$graphCaptured","is3DPlotEnabled","$3DPlotEnabled","g_t","TransferFunction","toString","rampResponse","stepResponse","all","xi","z","length","fill","line","type","mode","name","findIndex","sys","push","MainCard","gridSpacing","formula","indexedRampResponse","indexedStepResponse","GraphMenu","capturedSystems","join","changes","lg","GraphBox"],"sourceRoot":""}