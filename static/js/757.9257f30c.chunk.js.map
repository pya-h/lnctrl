{"version":3,"file":"static/js/757.9257f30c.chunk.js","mappings":"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","sources":["views/input-boxes/SimpleParametersList.jsx","views/plotter/GraphBox.jsx","views/topics/chapter05/sketching-root-locus/lecture.jsx","views/topics/chapter05/sketching-root-locus/parameters.jsx","views/topics/chapter05/sketching-root-locus/index.jsx","views/ui-component/cards/MainCard.js","../node_modules/@mui/icons-material/ArrowBackIos.js","../node_modules/@mui/icons-material/ArrowForwardIos.js"],"sourcesContent":["import { Grid, InputAdornment, TextField } from \"@mui/material\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst SimpleParametersList = ({ parameters, setters, labels, units }) => {\r\n    return (\r\n        <Fragment>\r\n            {parameters instanceof Array &&\r\n                parameters.map((param, i) => (\r\n                    <Grid md={12} sm={4} xs={6} item>\r\n                        <TextField\r\n                            onChange={(e) => setters[i](e.target.value)}\r\n                            value={param}\r\n                            sx={{ width: \"100%\" }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"left\">\r\n                                        <MathJax>{labels[i]}</MathJax>\r\n                                    </InputAdornment>\r\n                                ),\r\n                                endAdornment: units[i] && (\r\n                                    <InputAdornment position=\"right\">\r\n                                        <MathJax>{units[i]}</MathJax>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SimpleParametersList;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nconst GraphBox = ({ traces, title, width, height = 500, logX }) => {\r\n    /*const temp_layout = {\r\n        xaxis: {\r\n            zeroline: true,\r\n            rangemode: \"tozero\",\r\n            autotick: false,\r\n            ticks: \"outside\",\r\n            tick0: 0,\r\n            dtick: 0.25,\r\n            ticklen: 8,\r\n            tickwidth: 4,\r\n            tickcolor: \"#000\",\r\n        },\r\n        yaxis: {\r\n            zeroline: true,\r\n            rangemode: \"tozero\",\r\n            autotick: false,\r\n            ticks: \"outside\",\r\n            tick0: 0,\r\n            dtick: 0.25,\r\n            ticklen: 8,\r\n            tickwidth: 4,\r\n            tickcolor: \"#000\",\r\n        },\r\n    };*/\r\n\r\n    return (\r\n        <Plot \r\n            style={{ textAlign: \"center\" }}\r\n            //id=\"graphBox\"\r\n            data={traces}\r\n            layout={{\r\n                // width: 1000,\r\n                // autosize: true,\r\n                margin: {\r\n                    t: 30, //top margin\r\n                    l: 30, //left margin\r\n                    r: 20, //right margin\r\n                    b: 30, //bottom margin\r\n                },\r\n                xaxis: {\r\n                    rangemode: \"tozero\",\r\n                    zeroline: true,\r\n                    type: !logX ? \"dec\" : \"log\"\r\n                },\r\n                yaxis: {\r\n                    rangemode: \"tozero\",\r\n                    zeroline: true\r\n\r\n                },\r\n                height,\r\n                title,\r\n                // hoverlabel: { bgcolor: \"#FFF\" },\r\n                hoverlabel: {align:'auto', boxmode: 'overlay', font:{color:'#000000FF'}},\r\n                legend: {orientation: 'h'}//, y: -0.3},\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default GraphBox;\r\n","import SubCard from \"../../../ui-component/cards/SubCard\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport \"views/topics/topics.css\";\r\nimport temp_part1 from \"./temp/part1.png\";\r\nimport temp_part2 from \"./temp/part2.png\";\r\n\r\nconst SketchingRootLocusLecture = () => {\r\n    return (\r\n        <SubCard\r\n            title=\"مکان هندسی فاز ثابت\"\r\n            darkBorder={true}\r\n            sx={{ direction: \"rtl\" }}\r\n        >\r\n            <Typography>\r\n                <Grid item>\r\n                    <img\r\n                        className=\"lecture-image\"\r\n                        src={temp_part1}\r\n                        alt=\"بارگذاری تصویر با مشکل مواجه شد\"\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <img\r\n                        className=\"lecture-image\"\r\n                        src={temp_part2}\r\n                        alt=\"بارگذاری تصویر با مشکل مواجه شد\"\r\n                    />\r\n                </Grid>\r\n            </Typography>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default SketchingRootLocusLecture;\r\n","import { Fab, Grid } from \"@mui/material\";\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport SimpleParametersList from \"views/input-boxes/SimpleParametersList\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport AnimateButton from \"views/ui-component/extended/AnimateButton\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nconst startLebels = [\"$$Num = [$$\", \"$$Den = [$$\", \"$$N = $$\"];\r\nconst endLabels = [\"$$]$$\", \"$$]$$\", null];\r\n\r\nconst SketchingRootLocusParameters = ({\r\n    rawNumerator,\r\n    rawDenominator,\r\n    $rawNumerator,\r\n    $rawDenominator,\r\n    N,\r\n    $N,\r\n    formula,\r\n}) => (\r\n    <SubCard\r\n        darkBorder\r\n        title=\"پارامترها\"\r\n        sx={{\r\n            direction: \"ltr\",\r\n            textAlign: \"right\",\r\n            height: \"100%\",\r\n        }}\r\n    >\r\n        <SubCard>\r\n            <Grid id=\"formulaBox\" container direction=\"row\">\r\n                <MathJax style={{ margin: \"auto\" }}>{formula}</MathJax>\r\n            </Grid>\r\n        </SubCard>\r\n\r\n        <hr />\r\n        <Grid spacing={gridSpacing} container direction=\"row\">\r\n            <SimpleParametersList\r\n                parameters={[rawNumerator, rawDenominator, N]}\r\n                setters={[$rawNumerator, $rawDenominator, $N]}\r\n                labels={startLebels}\r\n                units={endLabels}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid xs={12} sx={{ mt: 4, pl: 2 }} spacing={gridSpacing} container>\r\n            <Grid style={{ textAlign: \"left\" }} xs={6} item>\r\n                <Fab\r\n                    size=\"large\"\r\n                    sx={{ p: 4 }}\r\n                    variant=\"circular\"\r\n                    onClick={() => {}}\r\n                >\r\n                    <AnimateButton type=\"scale\" direction=\"down\">\r\n                        <Grid sx={{ mt: 1, ml: 1 }}>\r\n                            <ArrowBackIosIcon />\r\n                        </Grid>\r\n                    </AnimateButton>\r\n                </Fab>\r\n            </Grid>\r\n            <Grid xs={6} item>\r\n                <Fab\r\n                    size=\"large\"\r\n                    sx={{ p: 4 }}\r\n                    variant=\"circular\"\r\n                    onClick={() => {}}\r\n                >\r\n                    <AnimateButton type=\"scale\" direction=\"down\">\r\n                        <Grid sx={{ mt: 1 }}>\r\n                            <ArrowForwardIosIcon />\r\n                        </Grid>\r\n                    </AnimateButton>\r\n                </Fab>\r\n            </Grid>\r\n        </Grid>\r\n    </SubCard>\r\n);\r\n\r\nexport default SketchingRootLocusParameters;\r\n","import SketchingRootLocusLecture from \"./lecture\";\r\n\r\n// project imports\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport calculus from \"math/calculus\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport GraphBox from \"views/plotter/GraphBox\";\r\nimport SketchingRootLocusParameters from \"./parameters\";\r\nimport TransferFunction from \"math/algebra/functions/transfer\";\r\nimport { gridSpacing } from \"store/constant\";\r\n// import Describer from \"math/describer\";\r\nimport MainCard from \"views/ui-component/cards/MainCard\";\r\nimport Complex from \"math/algebra/complex\";\r\n\r\nconst tfFormula = (tf, index = undefined) =>\r\n    \"$$ \" + tf.label(\"G\", index) + \" $$\";\r\n\r\nconst SketchingRootLocus = () => {\r\n    const [rawNumerator, $rawNumerator] = useState(\"1\");\r\n    const [rawDenominator, $rawDenominator] = useState(\"1 5 6\");\r\n\r\n    const [rootLocusTrace, $rootLocusTrace] = useState({ x: [], y: [] });\r\n    const [zerosTrace, $zerosTrace] = useState({ x: [], y: [] });\r\n    const [polesTrace, $polesTrace] = useState({ x: [], y: [] });\r\n\r\n    const [G_s, $G_s] = useState(null);\r\n    // const [GInfo, $GInfo] = useState(\"\");\r\n    const [formula, $formula] = useState(null);\r\n    const [N, $N] = useState(1000);\r\n\r\n    //update\r\n    useEffect(() => {\r\n        // k * num / den\r\n        const g_s = new TransferFunction(\r\n            calculus.stringToArray(rawNumerator),\r\n            calculus.stringToArray(rawDenominator)\r\n        );\r\n        $G_s(g_s);\r\n        $formula(tfFormula(g_s));\r\n    }, [rawNumerator, rawDenominator]);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            // const updateProgressBar =\r\n            if (G_s) {\r\n                $rootLocusTrace({ x: [], y: [] });\r\n                const [zeros, poles] = G_s.roots();\r\n                const [zx, zy] = Complex.ToCouples(zeros);\r\n                $zerosTrace({\r\n                    x: zx,\r\n                    y: zy,\r\n                    type: \"scatter\",\r\n                    mode: \"markers\",\r\n                    marker: {\r\n                        size: 10,\r\n                        color: \"black\",\r\n                        // symbol: 'diamond'\r\n                    },\r\n                    name: \"Zero\",\r\n                });\r\n                const [px, py] = Complex.ToCouples(poles);\r\n                $polesTrace({\r\n                    x: px,\r\n                    y: py,\r\n                    type: \"scatter\",\r\n                    mode: \"markers\",\r\n                    marker: {\r\n                        color: \"red\",\r\n                        symbol: \"x\",\r\n                        size: 10,\r\n                    },\r\n                    name: \"Pole\",\r\n                });\r\n\r\n                // $GInfo(new Describer(G_s));\r\n            }\r\n        } catch (ex) {\r\n            console.log(ex);\r\n        }\r\n    }, [G_s]);\r\n    return (\r\n        <MainCard>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Typography>\r\n                    <h2 className=\"chapter-section-title\">\r\n                        مکان هندسی قطب های سیستم\r\n                    </h2>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Grid container direction=\"column\" spacing={gridSpacing}>\r\n                    <Grid\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        item\r\n                    >\r\n                        <SketchingRootLocusLecture />\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                        spacing={2}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            margin: \"auto\",\r\n                            direction: \"ltr\",\r\n                        }}\r\n                        container\r\n                    >\r\n                        <Grid\r\n                            md={4}\r\n                            sm={12}\r\n                            xs={12}\r\n                            sx={{ marginTop: \"1%\", width: \"100%\" }}\r\n                            container\r\n                        >\r\n                            <Grid xs={12}>\r\n                                <SketchingRootLocusParameters\r\n                                    rawNumerator={rawNumerator}\r\n                                    rawDenominator={rawDenominator}\r\n                                    $rawNumerator={$rawNumerator}\r\n                                    $rawDenominator={$rawDenominator}\r\n                                    N={N}\r\n                                    $N={$N}\r\n                                    formula={formula}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid md={8} sm={12} xs={12} item>\r\n                            <Grid xs={12} item>\r\n                                <SubCard>\r\n                                    <GraphBox\r\n                                        title=\"مکان هندسی\"\r\n                                        traces={[\r\n                                            rootLocusTrace,\r\n                                            zerosTrace,\r\n                                            polesTrace,\r\n                                        ]}\r\n                                    />\r\n                                </SubCard>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default SketchingRootLocus;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// constant\r\nconst headerSX = {\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n// ==============================|| CUSTOM MAIN CARD ||============================== //\r\n\r\nconst MainCard = forwardRef(\r\n    (\r\n        {\r\n            border = true,\r\n            boxShadow,\r\n            children,\r\n            content = true,\r\n            contentClass = '',\r\n            contentSX = {},\r\n            darkTitle,\r\n            secondary,\r\n            shadow,\r\n            sx = {},\r\n            title,\r\n            ...others\r\n        },\r\n        ref\r\n    ) => {\r\n        const theme = useTheme();\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                {...others}\r\n                sx={{\r\n                    overflowY: 'auto',\r\n                    border: border ? '1px solid' : 'none',\r\n                    borderColor: theme.palette.primary[200] + 75,\r\n                    ':hover': {\r\n                        boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\r\n                    },\r\n                    ...sx\r\n                }}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\r\n                {darkTitle && title && (\r\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\r\n                )}\r\n\r\n                {/* content & header divider */}\r\n                {title && <Divider />}\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={contentSX} className={contentClass}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nMainCard.propTypes = {\r\n    border: PropTypes.bool,\r\n    boxShadow: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    contentSX: PropTypes.object,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    shadow: PropTypes.string,\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nexport default MainCard;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.67 3.87 9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\"\n}), 'ArrowBackIos');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z\"\n}), 'ArrowForwardIos');\n\nexports.default = _default;"],"names":["parameters","setters","labels","units","Fragment","Array","map","param","i","md","sm","xs","item","onChange","e","target","value","sx","width","InputProps","startAdornment","position","endAdornment","traces","title","height","logX","style","textAlign","data","layout","margin","t","l","r","b","xaxis","rangemode","zeroline","type","yaxis","hoverlabel","align","boxmode","font","color","legend","orientation","SubCard","darkBorder","direction","Typography","Grid","className","src","temp_part1","alt","temp_part2","startLebels","endLabels","rawNumerator","rawDenominator","$rawNumerator","$rawDenominator","N","$N","formula","id","container","MathJax","spacing","gridSpacing","SimpleParametersList","mt","pl","Fab","size","p","variant","onClick","AnimateButton","ml","ArrowBackIos","ArrowForwardIos","useState","x","y","rootLocusTrace","$rootLocusTrace","zerosTrace","$zerosTrace","polesTrace","$polesTrace","G_s","$G_s","$formula","useEffect","g_s","TransferFunction","calculus","tf","index","undefined","label","tfFormula","roots","zeros","poles","Complex","zx","zy","mode","marker","name","px","py","symbol","ex","console","log","MainCard","marginTop","GraphBox","headerSX","mr","forwardRef","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","others","theme","useTheme","overflowY","borderColor","palette","primary","action","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}