{"version":3,"file":"static/js/861.0f86c0bd.chunk.js","mappings":"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","sources":["views/input-boxes/SimpleParametersList.jsx","views/plotter/GraphMenu.jsx","views/plotter/PlotlyBox.jsx","views/topics/chapter02/mass-spring-damper/lecture.jsx","views/topics/chapter02/mass-spring-damper/parameters.jsx","views/topics/chapter02/mass-spring-damper/index.jsx","views/topics/chapter02/MechanicSystemsModeling.jsx","views/ui-component/cards/MainCard.jsx","views/ui-component/cards/PinchPanCard.jsx","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/FilterCenterFocus.js","../node_modules/@mui/icons-material/Fullscreen.js","../node_modules/@mui/icons-material/PhotoCamera.js","../node_modules/@mui/icons-material/ThreeDRotation.js","../node_modules/@mui/icons-material/ThreeSixty.js"],"sourcesContent":["import { Grid, InputAdornment, TextField } from \"@mui/material\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst SimpleParametersList = ({ parameters, setters, labels, units }) => {\r\n    return (\r\n        <Fragment>\r\n            {parameters instanceof Array &&\r\n                parameters.map((param, i) => (\r\n                    <Grid md={12} sm={4} xs={6} item>\r\n                        <TextField\r\n                            onChange={(e) => setters[i](e.target.value)}\r\n                            value={param}\r\n                            sx={{ width: \"100%\" }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"left\">\r\n                                        <MathJax>{labels[i]}</MathJax>\r\n                                    </InputAdornment>\r\n                                ),\r\n                                endAdornment: units[i] && (\r\n                                    <InputAdornment position=\"right\">\r\n                                        <MathJax>{units[i]}</MathJax>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SimpleParametersList;\r\n","import PhotoCamera from \"@mui/icons-material/PhotoCamera\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport FullScreen from \"@mui/icons-material/Fullscreen\";\r\nimport FilterCenterFocusIcon from \"@mui/icons-material/FilterCenterFocus\";\r\nimport { Grid, IconButton, Slider, Stack } from \"@mui/material\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ThreeDRotationIcon from \"@mui/icons-material/ThreeDRotation\";\r\nimport ThreeSixtyIcon from \"@mui/icons-material/ThreeSixty\";\r\n\r\nconst GraphMenu = ({\r\n    capture,\r\n    reset,\r\n    update,\r\n    toggle3DPlot,\r\n}) => {\r\n    const [is3DModeEnabled, set3DModeEnaabled] = useState(false);\r\n    const [thicknessSliderPercentage, setThicknessSliderPercentage] =\r\n        useState(20);\r\n\r\n    const toggle3DMode = () => {\r\n        set3DModeEnaabled(!is3DModeEnabled);\r\n        toggle3DPlot();\r\n    };\r\n\r\n    useEffect(() => {\r\n        update({ thickness: thicknessSliderPercentage / 20.0 + 0.1 });\r\n    }, [thicknessSliderPercentage, update]);\r\n\r\n    return (\r\n        <Grid sx={{ direction: \"rtl\" }} container direction=\"row\">\r\n            <Grid md={10} sm={8} xs={6} sx={{ direction: \"rtl\" }} item>\r\n                {toggle3DPlot && (\r\n                    <IconButton\r\n                        color=\"secondary\"\r\n                        aria-label=\"capture graph\"\r\n                        component=\"span\"\r\n                        onClick={toggle3DMode}\r\n                    >\r\n                        {is3DModeEnabled ? (\r\n                            <ThreeSixtyIcon />\r\n                        ) : (\r\n                            <ThreeDRotationIcon />\r\n                        )}\r\n                    </IconButton>\r\n                )}\r\n                {capture && <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"capture graph\"\r\n                    component=\"span\"\r\n                    onClick={capture}\r\n                >\r\n                    <PhotoCamera />\r\n                </IconButton>}\r\n\r\n                {reset && <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"capture graph\"\r\n                    component=\"span\"\r\n                    onClick={reset}\r\n                >\r\n                    <DeleteIcon />\r\n                </IconButton>}\r\n            </Grid>\r\n            <Grid md={2} sm={4} xs={6} item>\r\n                <Stack\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    sx={{ mt: 0.5, direction: \"ltr\" }}\r\n                    alignItems=\"center\"\r\n                >\r\n                    <FullScreen />\r\n                    <Slider\r\n                        aria-label=\"Volume\"\r\n                        value={thicknessSliderPercentage}\r\n                        onChange={(e, value) =>\r\n                            setThicknessSliderPercentage(value)\r\n                        }\r\n                    />\r\n                    <FilterCenterFocusIcon />\r\n                </Stack>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default GraphMenu;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { MapInteractionCSS } from \"react-map-interaction\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PlotlyBox = ({\r\n    traces,\r\n    title,\r\n    width,\r\n    height = 500,\r\n    logX,\r\n    hideX,\r\n    hideY,\r\n    yRange,\r\n    hideLegends,\r\n}) => {\r\n    /*const temp_layout = {\r\n        xaxis: {\r\n            zeroline: true,\r\n            rangemode: \"tozero\",\r\n            autotick: false,\r\n            ticks: \"outside\",\r\n            tick0: 0,\r\n            dtick: 0.25,\r\n            ticklen: 8,\r\n            tickwidth: 4,\r\n            tickcolor: \"#000\",\r\n        },\r\n        yaxis: {\r\n            zeroline: true,\r\n            rangemode: \"tozero\",\r\n            autotick: false,\r\n            ticks: \"outside\",\r\n            tick0: 0,\r\n            dtick: 0.25,\r\n            ticklen: 8,\r\n            tickwidth: 4,\r\n            tickcolor: \"#000\",\r\n        },\r\n    };*/\r\n    const customization = useSelector((state) => state.customization);\r\n    const plot = (\r\n        <Plot\r\n            style={{ textAlign: \"center\" }}\r\n            //id=\"PlotlyBox\"\r\n            data={traces}\r\n            layout={{\r\n                // width: 1000,\r\n                // autosize: true,\r\n                showlegend: !hideLegends,\r\n                margin: {\r\n                    t: 30, //top margin\r\n                    l: 30, //left margin\r\n                    r: 20, //right margin\r\n                    b: 30, //bottom margin\r\n                },\r\n                xaxis: {\r\n                    rangemode: \"tozero\",\r\n                    zeroline: true,\r\n                    type: !logX ? \"dec\" : \"log\",\r\n                    visible: !hideX,\r\n                },\r\n                yaxis: {\r\n                    rangemode: \"tozero\",\r\n                    zeroline: true,\r\n                    visible: !hideY,\r\n                    range: yRange,\r\n                },\r\n\r\n                height,\r\n                title,\r\n                // hoverlabel: { bgcolor: \"#FFF\" },\r\n                hoverlabel: {\r\n                    align: \"auto\",\r\n                    boxmode: \"overlay\",\r\n                    font: { color: \"#000000FF\" },\r\n                },\r\n                legend: { orientation: \"h\" }, //, y: -0.3},\r\n            }}\r\n        />\r\n    );\r\n    return customization.enableZoom ? (\r\n        <MapInteractionCSS disablePan={true}>{plot}</MapInteractionCSS>\r\n    ) : (\r\n        plot\r\n    );\r\n};\r\n\r\nexport default PlotlyBox;\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport mass_spring_damper_image from \"./images/mass-spring-damper.jpg.webp\";\r\nimport mechanic_system_elements from \"./images/mechanic-system-elements.jpg\";\r\n\r\nimport \"views/topics/topics.css\";\r\n\r\nimport { MathJax } from \"better-react-mathjax\";\r\nimport PinchPanCard from \"views/ui-component/cards/PinchPanCard\";\r\n\r\nconst MassSpringDamperLecture = () => {\r\n    return (\r\n        <PinchPanCard title=\"سیستم جرم فنر دمپر\" border={true}>\r\n            <Grid container>\r\n                <Grid item>\r\n                    <Typography sx={{ px: 2 }} style={{ lineHeight: \"2.5\" }}>\r\n                        همانطور که در سیستم های الکتریکی با یک مدار الکتریکی\r\n                        سروکار داشتیم که شامل ۳ المان اصلی بود،در سیستم های\r\n                        مکانیکی و هیدرولیکی هم عموما سه المان اصلی داریم:\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid xs={12} sx={{ m: \"auto\" }} item>\r\n                    <img\r\n                        className=\"lecture-image\"\r\n                        src={mass_spring_damper_image}\r\n                        alt=\"بارگذاری تصویر با مشکل مواجه شد\"\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography sx={{ px: 2 }} style={{ lineHeight: \"2.5\" }}>\r\n                        <span className=\"lecture-text-titr\">۱)‌ فنر: </span>\r\n                        اولین المان فنر هست که با اعمال یک نیرو می توانیم میزان\r\n                        کشش یا جمع شدگی یا فشردگی فنر را بدست آوریم. K ضریب ثابت\r\n                        فنر است\r\n                        <br />\r\n                        <span className=\"lecture-text-titr\">۲)‌ دمپر: </span>\r\n                        دومین المانی که در سیستم های مکانیکی و هیدرولیکی وجود\r\n                        دارد دمپر هست که با اعمال نیروی F می‌توان آن را باز یا\r\n                        بسته کرد.\r\n                        <br />\r\n                        <span className=\"lecture-text-titr\">۳)‌ جرم: </span>\r\n                        المان سوم، جرم است که اینرسی را در خود ذخیره می کند و با\r\n                        اعمال یک نیرو F می توان آن را جابه جا کرد. در سیستم های\r\n                        مکانیکی به طور معمول بین نیرو و جابه جایی المان یک رابطه\r\n                        برقرار است. در واقع نیرو به عنوان عامل محرک و جابه جایی\r\n                        به عنوان عامل متحرک عمل می‌کند.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid xs={12} sx={{ m: \"auto\" }} item>\r\n                    <img\r\n                        className=\"lecture-image\"\r\n                        src={mechanic_system_elements}\r\n                        alt=\"بارگذاری تصویر با مشکل مواجه شد\"\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography sx={{ px: 2 }} style={{ lineHeight: \"2.5\" }}>\r\n                        پس از تحلیل این سیستم به معادله دیفرانسیل مرتبه دوم زیر\r\n                        می رسیم که پاسخ پاسخ آن در واقع میزان جابه جایی جرم m طی\r\n                        مدت زمان t خواهد بود.\r\n                        <MathJax>\r\n                            {\"$$m\\\\frac{d^2x(t)}{dt^2} + c\\\\frac{dx(t)}{dt} + kx(t) = F(t)$$\"}\r\n                        </MathJax>\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </PinchPanCard>\r\n    );\r\n};\r\n\r\nexport default MassSpringDamperLecture;\r\n","import { Grid, Button } from \"@mui/material\";\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport { useState, useEffect } from \"react\";\r\nimport SimpleParametersList from \"views/input-boxes/SimpleParametersList\";\r\n\r\nconst parameterFormulas = [\r\n    \"$$m = $$\",\r\n    \"$$c = $$\",\r\n    \"$$k = $$\",\r\n    \"$$F(t) = $$\",\r\n    \"$$x_i = $$\",\r\n    \"$$v_i = $$\",\r\n    \"$$t_i = $$\",\r\n    \"$$t_f = $$\",\r\n    \"$$N = $$\"\r\n];\r\nconst parameterUnits = [\r\n    \"$$Kg$$\",\r\n    \"$$\\\\frac{N.s}{m}$$\",\r\n    \"$$\\\\frac{N}{m}$$\",\r\n    \"$$N$$\",\r\n    \"$$m$$\",\r\n    \"$$\\\\frac{m}{s}$$\",\r\n    \"$$sec$$\",\r\n    \"$$sec$$\",\r\n    null\r\n];\r\n\r\nconst MassSpringDamperParameters = ({\r\n    m,\r\n    c,\r\n    k,\r\n    F_t,\r\n    x_i,\r\n    v_i,\r\n    t_i,\r\n    t_f,\r\n    output,\r\n    $m,\r\n    $c,\r\n    $k,\r\n    $F_t,\r\n    $x_i,\r\n    $v_i,\r\n    $t_i,\r\n    $t_f,\r\n    $output,\r\n    N,\r\n    $N\r\n}) => {\r\n    const [out, $out] = useState(null);\r\n\r\n    useEffect(() => {\r\n        $out(output ? output.toLowerCase() : \"y\");\r\n    }, [output]);\r\n\r\n    return (\r\n        <SubCard\r\n            darkBorder\r\n            title=\"پارامترها\"\r\n            sx={{\r\n                direction: \"ltr\",\r\n                textAlign: \"right\",\r\n                height: \"100%\",\r\n            }}\r\n        >\r\n            <Grid spacing={0.6} container direction=\"row\">\r\n                <SimpleParametersList\r\n                    parameters={[m, c, k, F_t, x_i, v_i, t_i, t_f, N]}\r\n                    setters={[$m, $c, $k, $F_t, $x_i, $v_i, $t_i, $t_f, $N]}\r\n                    labels={parameterFormulas}\r\n                    units={parameterUnits}\r\n                />\r\n                <Grid xs={12} container>\r\n                    <Grid xs={4} sx={{ p: 1 }} item>\r\n                        <Button\r\n                            onClick={() => $output(null)}\r\n                            style={{ width: \"100%\", textTransform: \"none\" }}\r\n                            variant={out === \"y\" ? \"contained\" : \"outlined\"}\r\n                        >\r\n                            x\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid xs={4} sx={{ p: 1 }} item>\r\n                        <Button\r\n                            onClick={() => $output(\"dy\")}\r\n                            style={{ width: \"100%\", textTransform: \"none\" }}\r\n                            variant={out === \"dy\" ? \"contained\" : \"outlined\"}\r\n                        >\r\n                            v\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid xs={4} sx={{ p: 1 }} item>\r\n                        <Button\r\n                            onClick={() => $output(\"d2y\")}\r\n                            style={{ width: \"100%\", textTransform: \"none\" }}\r\n                            variant={out === \"d2y\" ? \"contained\" : \"outlined\"}\r\n                        >\r\n                            a\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default MassSpringDamperParameters;\r\n","import MassSpringDamperLecture from \"./lecture\";\r\n\r\n// project imports\r\nimport SubCard from \"views/ui-component/cards/SubCard\";\r\nimport calculus from \"../../../../math/calculus\";\r\nimport { useState, useEffect } from \"react\";\r\nimport MassSpringDamperParameters from \"./parameters\";\r\n\r\nimport GraphMenu from \"views/plotter/GraphMenu\";\r\nimport { Grid } from \"@mui/material\";\r\nimport PlotlyBox from \"views/plotter/PlotlyBox\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\n\r\nconst mechanicSystemEquation = (m, c, k, F_t) =>\r\n    \"$$\" +\r\n    m +\r\n    \"\\\\frac{d^2x(t)}{dt^2}\" +\r\n    (c ? \" + \" + (c !== 1 ? c : \"\") + \"\\\\frac{dx(t)}{dt}\" : \"\") +\r\n    (k ? \" + \" + (k !== 1 ? k : \"\") + \"x(t) = \" : \" = \") +\r\n    F_t +\r\n    \"$$\";\r\n\r\nconst indexedMechanicSystemEquation = (m, c, k, F_t, index) =>\r\n    \"$$\" +\r\n    m +\r\n    `\\\\frac{d^2x_{${index}}(t)}{dt^2}` +\r\n    (c ? ` + ` + (c !== 1 ? c : ``) + `\\\\frac{dx_{${index}}(t)}{dt}` : ``) +\r\n    (k ? ` + ` + (k !== 1 ? k : ``) + `x_{${index}}(t) = ` : ` = `) +\r\n    F_t +\r\n    \"$$\";\r\n\r\nconst symbols = {\r\n    in: \"t\",\r\n    out: (output) => {\r\n        switch (output) {\r\n            case \"dy\":\r\n                return \"v\";\r\n            case \"d2y\":\r\n                return \"a\";\r\n            default:\r\n                return \"x\";\r\n        }\r\n    },\r\n};\r\n\r\nconst MassSpringDamperExample = () => {\r\n    const [m, $m] = useState(100);\r\n    const [c, $c] = useState(1.0);\r\n    const [k, $k] = useState(1.0);\r\n    const [F_t, $F_t] = useState(0.0);\r\n    const [t_i, $t_i] = useState(0);\r\n    const [t_f, $t_f] = useState(5);\r\n    const [x_i, $x_i] = useState(0.0);\r\n    const [v_i, $v_i] = useState(1.0);\r\n    const [systems, setSystems] = useState([]);\r\n    const [traces, setTraces] = useState([]);\r\n    const [diffEquation, setDiffEquation] = useState(null);\r\n    const [thickness, setThickness] = useState(1.0); // graph line thickness\r\n    const [isGraphCatured, setGraphCaptured] = useState(false);\r\n    const [output, $output] = useState(null); // y or null as x(t) | dy as v(t) | d2y as a(t)\r\n    const [is3DPlotEnabled, set3DPlotEnabled] = useState(false);\r\n    const [N, $N] = useState(1000);\r\n\r\n    const toggle3DPlot = () => set3DPlotEnabled(!is3DPlotEnabled);\r\n\r\n    const capture = () => {\r\n        const capturedSystems = [...systems];\r\n        const index = capturedSystems.findIndex(\r\n            (sys) =>\r\n                sys.v_i === +v_i &&\r\n                sys.x_i === +x_i &&\r\n                sys.m === +m &&\r\n                sys.c === +c &&\r\n                sys.k === +k &&\r\n                sys.F_t === F_t &&\r\n                sys.output === output\r\n        );\r\n        if (index === -1) {\r\n            // if current system has not been captured before => then capture it; o.w. its not needed\r\n            capturedSystems.push({\r\n                x_i: +x_i,\r\n                v_i: +v_i,\r\n                m: +m,\r\n                c: +c,\r\n                k: +k,\r\n                F_t,\r\n                output,\r\n                thickness,\r\n                legend:\r\n                    \"$$\" +\r\n                    symbols.out(output) +\r\n                    \"_{\" +\r\n                    (systems.length + 1).toString() +\r\n                    \"}$$\",\r\n            });\r\n            setSystems(capturedSystems);\r\n            setGraphCaptured(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fyt = (t, x, v) => Number((F_t - +c * v - +k * x) / +m);\r\n        const [x, y, dy] = calculus.ODE.euiler(\r\n            2,\r\n            t_i,\r\n            t_f,\r\n            {\r\n                y0: +x_i,\r\n                dy_dt0: +v_i,\r\n                fyt,\r\n                output,\r\n            },\r\n            +N\r\n        ); // solve the diff eq by the eiuler method for 2nd order differential equations\r\n\r\n        if (output && output.toLowerCase() === \"d2y\")\r\n            for (\r\n                let i = 0;\r\n                i < x.length;\r\n                i++ // which one is faster? for loop or xi.map(...)  ? ==> i think for is faster and better\r\n            )\r\n                y[i] = fyt(x[i], y[i], dy[i]); // a(t) is actually the fyt defined above; first calculate x(t) [y] and v(t) [dy_dt] and then use it to calculate a\r\n        setDiffEquation(mechanicSystemEquation(m, c, k, F_t));\r\n\r\n        // parameters changed => load again all traces(traces); this is for when shared params changes(ti, tf, ...),\r\n        // so that the traces will be loaded with new conditions\r\n        const all = systems.map((e, index) => {\r\n            const fyt = (t, x, v) => Number((e.F_t - e.c * v - e.k * x) / e.m);\r\n            let [xi, yi, dyi] = calculus.ODE.euiler(\r\n                2,\r\n                t_i,\r\n                t_f,\r\n                {\r\n                    y0: e.x_i,\r\n                    dy_dt0: e.v_i,\r\n                    fyt,\r\n                    output: e.output,\r\n                },\r\n                +N\r\n            ); // solve the diff eq by the eiuler method for 2nd order differential equations (N: >=100)\r\n\r\n            if (e.output && e.output.toLowerCase() === \"d2y\")\r\n                // using for loop inside a .map method causes error ; so i used xi.map\r\n                yi = xi.map((t, i) => fyt(t, yi[i], dyi[i])); // a(t) is actually the fyt defined above; first calculate x(t) [y] and v(t) [dy_dt] and then use it to calculate a\r\n\r\n            return {\r\n                x: xi,\r\n                y: yi,\r\n                z: is3DPlotEnabled ? Array(xi.length).fill(0) : null,\r\n                line: {\r\n                    // color: e.color...\r\n                    width: e.thickness,\r\n                },\r\n                // color,\r\n                type: \"scatter\" + (is3DPlotEnabled ? \"3d\" : \"\"),\r\n                mode: \"lines\",\r\n                name: e.legend,\r\n            };\r\n        });\r\n\r\n        const index = systems.findIndex(\r\n            (sys) =>\r\n                sys.v_i === +v_i &&\r\n                sys.x_i === +x_i &&\r\n                sys.m === +m &&\r\n                sys.c === +c &&\r\n                sys.k === +k &&\r\n                sys.F_t === F_t &&\r\n                sys.output === output\r\n        );\r\n        if (index === -1)\r\n            // if current system isnt in traces list => add it temperory to plot\r\n            all.push({\r\n                x,\r\n                y,\r\n                z: is3DPlotEnabled ? Array(x.length).fill(0) : null,\r\n                // color,\r\n                line: {\r\n                    // color:'rgb(17, 157, 255)'\r\n                    width: thickness,\r\n                },\r\n                type: \"scatter\" + (is3DPlotEnabled ? \"3d\" : \"\"),\r\n                mode: \"lines\",\r\n                name: `${symbols.out(output)}(${symbols.in})`,\r\n            });\r\n\r\n        setTraces(all);\r\n    }, [\r\n        m,\r\n        c,\r\n        k,\r\n        F_t,\r\n        t_i,\r\n        t_f,\r\n        x_i,\r\n        v_i,\r\n        output,\r\n        is3DPlotEnabled,\r\n        thickness,\r\n        systems,\r\n        N,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        setGraphCaptured(false);\r\n    }, [m, c, k, F_t, x_i, v_i, output]);\r\n\r\n    const update = (changes) => {\r\n        if (changes) setThickness(changes.thickness);\r\n        //and so...\r\n    };\r\n    return (\r\n        <Grid container direction=\"column\" spacing={1}>\r\n            <Grid\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    margin: \"auto\",\r\n                    direction: \"ltr\",\r\n                }}\r\n                item\r\n            >\r\n                <MassSpringDamperLecture />\r\n            </Grid>\r\n\r\n            <Grid sx={{ margin: \"auto\", width: \"100%\" }} item>\r\n                <SubCard sx={{ direction: \"ltr\" }}>\r\n                    <Grid\r\n                        id=\"formulaBox\"\r\n                        sx={{ margin: \"auto\" }}\r\n                        container\r\n                        direction=\"row\"\r\n                    >\r\n                        {systems.map((sys, index) => {\r\n                            if (!index) {\r\n                                sys.index = index + 1;\r\n                            } else if (\r\n                                sys.m === systems[index - 1].m &&\r\n                                sys.c === systems[index - 1].c &&\r\n                                sys.k === systems[index - 1].k &&\r\n                                sys.F_t === systems[index - 1].F_t\r\n                            ) {\r\n                                sys.index = systems[index - 1].index;\r\n                            } else {\r\n                                sys.index = systems[index - 1].index + 1;\r\n                            }\r\n\r\n                            const formula = indexedMechanicSystemEquation(\r\n                                sys.m,\r\n                                sys.c,\r\n                                sys.k,\r\n                                sys.F_t,\r\n                                sys.index\r\n                            );\r\n                            return (\r\n                                <Grid md={6} sm={12} item>\r\n                                    <MathJax>{formula}</MathJax>\r\n                                </Grid>\r\n                            );\r\n                        })}\r\n                        {!isGraphCatured && (\r\n                            <Grid md={6} sm={12}>\r\n                                <MathJax>{diffEquation}</MathJax>\r\n                            </Grid>\r\n                        )}\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid\r\n                spacing={2}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    margin: \"auto\",\r\n                    direction: \"ltr\",\r\n                }}\r\n                container\r\n            >\r\n                <Grid\r\n                    md={3}\r\n                    sm={12}\r\n                    xs={12}\r\n                    sx={{ marginTop: \"1%\", width: \"100%\" }}\r\n                    container\r\n                >\r\n                    <Grid xs={12}>\r\n                        <MassSpringDamperParameters\r\n                            m={m}\r\n                            c={c}\r\n                            k={k}\r\n                            F_t={F_t}\r\n                            x_i={x_i}\r\n                            v_i={v_i}\r\n                            t_i={t_i}\r\n                            t_f={t_f}\r\n                            output={output}\r\n                            $m={$m}\r\n                            $c={$c}\r\n                            $k={$k}\r\n                            $F_t={$F_t}\r\n                            $x_i={$x_i}\r\n                            $v_i={$v_i}\r\n                            $t_i={$t_i}\r\n                            $t_f={$t_f}\r\n                            $output={$output}\r\n                            N={N}\r\n                            $N={$N}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid md={9} sm={12} xs={12} item>\r\n                    <SubCard>\r\n                        <GraphMenu\r\n                            capture={capture}\r\n                            reset={() => setSystems([])}\r\n                            update={(changes) => update(changes)}\r\n                            toggle3DPlot={toggle3DPlot}\r\n                        />\r\n                    </SubCard>\r\n                    <hr />\r\n                    <Grid xs={12} item>\r\n                        <SubCard>\r\n                            <PlotlyBox\r\n                                title=\"منحنی مشخصه های گاری\"\r\n                                traces={traces}\r\n                            />\r\n                        </SubCard>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default MassSpringDamperExample;\r\n","import \"views/topics/topics.css\";\r\n\r\nimport { Grid, Typography } from \"@mui/material\";\r\n// project imports\r\nimport MainCard from \"views/ui-component/cards/MainCard\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport MassSpringDamperExample from \"./mass-spring-damper/index\";\r\n\r\nconst MechanicSystemsModeling = () => {\r\n    return (\r\n        <MainCard style={{ background: \"transparent\" }}>\r\n            <Grid item spacing={gridSpacing}>\r\n                <Typography>\r\n                    <h2 className=\"chapter-section-title\">\r\n                        مدل سازی سیستم های مکانیکی\r\n                    </h2>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item spacing={gridSpacing}>\r\n                <MassSpringDamperExample />\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default MechanicSystemsModeling;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// constant\r\nconst headerSX = {\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n// ==============================|| CUSTOM MAIN CARD ||============================== //\r\n\r\nconst MainCard = forwardRef(\r\n    (\r\n        {\r\n            border = true,\r\n            boxShadow,\r\n            children,\r\n            content = true,\r\n            contentClass = '',\r\n            contentSX = {},\r\n            darkTitle,\r\n            secondary,\r\n            shadow,\r\n            sx = {},\r\n            title,\r\n            ...others\r\n        },\r\n        ref\r\n    ) => {\r\n        const theme = useTheme();\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                {...others}\r\n                sx={{\r\n                    overflowY: 'auto',\r\n                    border: border ? '1px solid' : 'none',\r\n                    borderColor: theme.palette.primary[200] + 75,\r\n                    ':hover': {\r\n                        boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\r\n                    },\r\n                    ...sx\r\n                }}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\r\n                {darkTitle && title && (\r\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\r\n                )}\r\n\r\n                {/* content & header divider */}\r\n                {title && <Divider />}\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={contentSX} className={contentClass}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nMainCard.propTypes = {\r\n    border: PropTypes.bool,\r\n    boxShadow: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    contentSX: PropTypes.object,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    shadow: PropTypes.string,\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nexport default MainCard;\r\n","import SubCard from \"./SubCard\";\r\nimport { MapInteractionCSS } from \"react-map-interaction\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PinchPanCard = ({ children, title, border }) => {\r\n    const customization = useSelector((state) => state.customization);\r\n    return (\r\n        <SubCard title={title} darkBorder={border} sx={{ direction: \"rtl\" }}>\r\n            <MapInteractionCSS disableZoom={!customization.enableZoom}>\r\n                {children}\r\n            </MapInteractionCSS>\r\n        </SubCard>\r\n    );\r\n};\r\n\r\nexport default PinchPanCard;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 15H3v4c0 1.1.9 2 2 2h4v-2H5v-4zM5 5h4V3H5c-1.1 0-2 .9-2 2v4h2V5zm14-2h-4v2h4v4h2V5c0-1.1-.9-2-2-2zm0 16h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4zM12 9c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'FilterCenterFocus');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"\n}), 'Fullscreen');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"3.2\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 2 7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n}, \"1\")], 'PhotoCamera');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.52 21.48C4.25 19.94 1.91 16.76 1.55 13H.05C.56 19.16 5.71 24 12 24l.66-.03-3.81-3.81-1.33 1.32zm.89-6.52c-.19 0-.37-.03-.52-.08-.16-.06-.29-.13-.4-.24-.11-.1-.2-.22-.26-.37-.06-.14-.09-.3-.09-.47h-1.3c0 .36.07.68.21.95.14.27.33.5.56.69.24.18.51.32.82.41.3.1.62.15.96.15.37 0 .72-.05 1.03-.15.32-.1.6-.25.83-.44s.42-.43.55-.72c.13-.29.2-.61.2-.97 0-.19-.02-.38-.07-.56-.05-.18-.12-.35-.23-.51-.1-.16-.24-.3-.4-.43-.17-.13-.37-.23-.61-.31.2-.09.37-.2.52-.33.15-.13.27-.27.37-.42.1-.15.17-.3.22-.46.05-.16.07-.32.07-.48 0-.36-.06-.68-.18-.96-.12-.28-.29-.51-.51-.69-.2-.19-.47-.33-.77-.43C9.1 8.05 8.76 8 8.39 8c-.36 0-.69.05-1 .16-.3.11-.57.26-.79.45-.21.19-.38.41-.51.67-.12.26-.18.54-.18.85h1.3c0-.17.03-.32.09-.45s.14-.25.25-.34c.11-.09.23-.17.38-.22.15-.05.3-.08.48-.08.4 0 .7.1.89.31.19.2.29.49.29.86 0 .18-.03.34-.08.49-.05.15-.14.27-.25.37-.11.1-.25.18-.41.24-.16.06-.36.09-.58.09H7.5v1.03h.77c.22 0 .42.02.6.07s.33.13.45.23c.12.11.22.24.29.4.07.16.1.35.1.57 0 .41-.12.72-.35.93-.23.23-.55.33-.95.33zm8.55-5.92c-.32-.33-.7-.59-1.14-.77-.43-.18-.92-.27-1.46-.27H12v8h2.3c.55 0 1.06-.09 1.51-.27.45-.18.84-.43 1.16-.76.32-.33.57-.73.74-1.19.17-.47.26-.99.26-1.57v-.4c0-.58-.09-1.1-.26-1.57-.18-.47-.43-.87-.75-1.2zm-.39 3.16c0 .42-.05.79-.14 1.13-.1.33-.24.62-.43.85-.19.23-.43.41-.71.53-.29.12-.62.18-.99.18h-.91V9.12h.97c.72 0 1.27.23 1.64.69.38.46.57 1.12.57 1.99v.4zM12 0l-.66.03 3.81 3.81 1.33-1.33c3.27 1.55 5.61 4.72 5.96 8.48h1.5C23.44 4.84 18.29 0 12 0z\"\n}), 'ThreeDRotation');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7C6.48 7 2 9.24 2 12c0 2.24 2.94 4.13 7 4.77V20l4-4-4-4v2.73c-3.15-.56-5-1.9-5-2.73 0-1.06 3.04-3 8-3s8 1.94 8 3c0 .73-1.46 1.89-4 2.53v2.05c3.53-.77 6-2.53 6-4.58 0-2.76-4.48-5-10-5z\"\n}), 'ThreeSixty');\n\nexports.default = _default;"],"names":["parameters","setters","labels","units","Fragment","Array","map","param","i","md","sm","xs","item","onChange","e","target","value","sx","width","InputProps","startAdornment","position","endAdornment","capture","reset","update","toggle3DPlot","useState","is3DModeEnabled","set3DModeEnaabled","thicknessSliderPercentage","setThicknessSliderPercentage","useEffect","thickness","direction","container","color","component","onClick","spacing","mt","alignItems","traces","title","height","logX","hideX","hideY","yRange","hideLegends","customization","useSelector","state","plot","style","textAlign","data","layout","showlegend","margin","t","l","r","b","xaxis","rangemode","zeroline","type","visible","yaxis","range","hoverlabel","align","boxmode","font","legend","orientation","enableZoom","MapInteractionCSS","disablePan","PinchPanCard","border","Grid","Typography","px","lineHeight","m","className","src","mass_spring_damper_image","alt","mechanic_system_elements","MathJax","parameterFormulas","parameterUnits","c","k","F_t","x_i","v_i","t_i","t_f","output","$m","$c","$k","$F_t","$x_i","$v_i","$t_i","$t_f","$output","N","$N","out","$out","toLowerCase","SubCard","darkBorder","SimpleParametersList","p","Button","textTransform","variant","symbols","systems","setSystems","setTraces","diffEquation","setDiffEquation","setThickness","isGraphCatured","setGraphCaptured","is3DPlotEnabled","set3DPlotEnabled","fyt","x","v","Number","calculus","y0","dy_dt0","y","dy","length","mechanicSystemEquation","all","index","xi","yi","dyi","z","fill","line","mode","name","findIndex","sys","push","id","formula","indexedMechanicSystemEquation","marginTop","GraphMenu","capturedSystems","toString","changes","PlotlyBox","MainCard","background","gridSpacing","headerSX","mr","forwardRef","ref","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","others","theme","useTheme","overflowY","borderColor","palette","primary","action","disableZoom","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","cx","cy"],"sourceRoot":""}