{"version":3,"file":"static/js/608.bb00694c.chunk.js","mappings":"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","sources":["views/diagrams/assets/sample.bpmn.jsx","views/diagrams/BlockDiagramDesigner.js","views/diagrams/assets/sample.gojs.jsx","views/diagrams/SignalFlowGraphDesigner.jsx","views/toolbox/index.jsx"],"sourcesContent":["const block_diagram_sample = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:omgdi=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:omgdc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" id=\"sid-38422fae-e03e-43a3-bef4-bd33b32041b2\" targetNamespace=\"http://bpmn.io/bpmn\" exporter=\"bpmn-js (https://demo.bpmn.io)\" exporterVersion=\"9.0.3\">\n  <process id=\"Process_1\" isExecutable=\"false\">\n    <task id=\"Activity_16okqdz\" name=\"G1(s)\">\n      <outgoing>Flow_0wpb8oo</outgoing>\n    </task>\n    <task id=\"Activity_124024s\" name=\"G2(s)\">\n      <incoming>Flow_0wpb8oo</incoming>\n      <outgoing>Flow_0z206ir</outgoing>\n    </task>\n    <sequenceFlow id=\"Flow_0wpb8oo\" sourceRef=\"Activity_16okqdz\" targetRef=\"Activity_124024s\" />\n    <task id=\"Activity_04vwlks\" name=\"G3(s)\">\n      <incoming>Flow_0z206ir</incoming>\n      <outgoing>Flow_1im3vqx</outgoing>\n      <outgoing>Flow_030xgmh</outgoing>\n    </task>\n    <sequenceFlow id=\"Flow_0z206ir\" sourceRef=\"Activity_124024s\" targetRef=\"Activity_04vwlks\" />\n    <task id=\"Activity_1xug5vp\" name=\"G4(s)\">\n      <incoming>Flow_1im3vqx</incoming>\n      <outgoing>Flow_1wop0m5</outgoing>\n    </task>\n    <sequenceFlow id=\"Flow_1im3vqx\" sourceRef=\"Activity_04vwlks\" targetRef=\"Activity_1xug5vp\" />\n    <intermediateThrowEvent id=\"Event_0j3in9z\" name=\"+\">\n      <incoming>Flow_030xgmh</incoming>\n      <incoming>Flow_1wop0m5</incoming>\n      <outgoing>Flow_1iqs8dj</outgoing>\n    </intermediateThrowEvent>\n    <sequenceFlow id=\"Flow_030xgmh\" sourceRef=\"Activity_04vwlks\" targetRef=\"Event_0j3in9z\" />\n    <sequenceFlow id=\"Flow_1wop0m5\" sourceRef=\"Activity_1xug5vp\" targetRef=\"Event_0j3in9z\" />\n    <intermediateThrowEvent id=\"Event_1eoad32\" name=\"+\">\n      <incoming>Flow_1iqs8dj</incoming>\n      <incoming>Flow_0ye71qo</incoming>\n      <outgoing>Flow_1h9aj60</outgoing>\n    </intermediateThrowEvent>\n    <sequenceFlow id=\"Flow_1iqs8dj\" sourceRef=\"Event_0j3in9z\" targetRef=\"Event_1eoad32\" />\n    <task id=\"Activity_144gndd\" name=\"G5(s)\">\n      <incoming>Flow_1h9aj60</incoming>\n      <outgoing>Flow_0w6215x</outgoing>\n    </task>\n    <sequenceFlow id=\"Flow_1h9aj60\" sourceRef=\"Event_1eoad32\" targetRef=\"Activity_144gndd\" />\n    <task id=\"Activity_0ixl23n\" name=\"G6(s)\">\n      <incoming>Flow_0w6215x</incoming>\n      <outgoing>Flow_0ye71qo</outgoing>\n    </task>\n    <sequenceFlow id=\"Flow_0w6215x\" sourceRef=\"Activity_144gndd\" targetRef=\"Activity_0ixl23n\" />\n    <sequenceFlow id=\"Flow_0ye71qo\" sourceRef=\"Activity_0ixl23n\" targetRef=\"Event_1eoad32\" />\n  </process>\n  <bpmndi:BPMNDiagram id=\"BpmnDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BpmnPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNEdge id=\"Flow_0wpb8oo_di\" bpmnElement=\"Flow_0wpb8oo\">\n        <omgdi:waypoint x=\"260\" y=\"120\" />\n        <omgdi:waypoint x=\"310\" y=\"120\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_0z206ir_di\" bpmnElement=\"Flow_0z206ir\">\n        <omgdi:waypoint x=\"410\" y=\"120\" />\n        <omgdi:waypoint x=\"580\" y=\"120\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_1im3vqx_di\" bpmnElement=\"Flow_1im3vqx\">\n        <omgdi:waypoint x=\"580\" y=\"120\" />\n        <omgdi:waypoint x=\"480\" y=\"120\" />\n        <omgdi:waypoint x=\"480\" y=\"250\" />\n        <omgdi:waypoint x=\"580\" y=\"250\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_030xgmh_di\" bpmnElement=\"Flow_030xgmh\">\n        <omgdi:waypoint x=\"680\" y=\"120\" />\n        <omgdi:waypoint x=\"742\" y=\"120\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_1wop0m5_di\" bpmnElement=\"Flow_1wop0m5\">\n        <omgdi:waypoint x=\"680\" y=\"250\" />\n        <omgdi:waypoint x=\"760\" y=\"250\" />\n        <omgdi:waypoint x=\"760\" y=\"138\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_1iqs8dj_di\" bpmnElement=\"Flow_1iqs8dj\">\n        <omgdi:waypoint x=\"778\" y=\"120\" />\n        <omgdi:waypoint x=\"842\" y=\"120\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_1h9aj60_di\" bpmnElement=\"Flow_1h9aj60\">\n        <omgdi:waypoint x=\"878\" y=\"120\" />\n        <omgdi:waypoint x=\"950\" y=\"120\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_0w6215x_di\" bpmnElement=\"Flow_0w6215x\">\n        <omgdi:waypoint x=\"1050\" y=\"120\" />\n        <omgdi:waypoint x=\"1180\" y=\"120\" />\n        <omgdi:waypoint x=\"1180\" y=\"230\" />\n        <omgdi:waypoint x=\"1050\" y=\"230\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_0ye71qo_di\" bpmnElement=\"Flow_0ye71qo\">\n        <omgdi:waypoint x=\"950\" y=\"230\" />\n        <omgdi:waypoint x=\"860\" y=\"230\" />\n        <omgdi:waypoint x=\"860\" y=\"138\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNShape id=\"Activity_16okqdz_di\" bpmnElement=\"Activity_16okqdz\">\n        <omgdc:Bounds x=\"160\" y=\"80\" width=\"100\" height=\"80\" />\n        <bpmndi:BPMNLabel />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Activity_124024s_di\" bpmnElement=\"Activity_124024s\">\n        <omgdc:Bounds x=\"310\" y=\"80\" width=\"100\" height=\"80\" />\n        <bpmndi:BPMNLabel />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Activity_04vwlks_di\" bpmnElement=\"Activity_04vwlks\">\n        <omgdc:Bounds x=\"580\" y=\"80\" width=\"100\" height=\"80\" />\n        <bpmndi:BPMNLabel />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Activity_1xug5vp_di\" bpmnElement=\"Activity_1xug5vp\">\n        <omgdc:Bounds x=\"580\" y=\"210\" width=\"100\" height=\"80\" />\n        <bpmndi:BPMNLabel />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Event_0j3in9z_di\" bpmnElement=\"Event_0j3in9z\">\n        <omgdc:Bounds x=\"742\" y=\"102\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <omgdc:Bounds x=\"756\" y=\"113\" width=\"7\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Event_1eoad32_di\" bpmnElement=\"Event_1eoad32\">\n        <omgdc:Bounds x=\"842\" y=\"102\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <omgdc:Bounds x=\"856\" y=\"113\" width=\"7\" height=\"14\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Activity_144gndd_di\" bpmnElement=\"Activity_144gndd\">\n        <omgdc:Bounds x=\"950\" y=\"80\" width=\"100\" height=\"80\" />\n        <bpmndi:BPMNLabel />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Activity_0ixl23n_di\" bpmnElement=\"Activity_0ixl23n\">\n        <omgdc:Bounds x=\"950\" y=\"190\" width=\"100\" height=\"80\" />\n        <bpmndi:BPMNLabel />\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</definitions>`\n\nexport default block_diagram_sample;","import React, { Component } from \"react\";\nimport BpmnModeler from \"bpmn-js/lib/Modeler\";\nimport \"bpmn-js/dist/assets/diagram-js.css\";\nimport \"bpmn-font/dist/css/bpmn-embedded.css\";\nimport block_diagram_sample from \"./assets/sample.bpmn\";\nimport propertiesPanelModule from \"bpmn-js-properties-panel\";\nimport propertiesProviderModule from \"bpmn-js-properties-panel/lib/provider/camunda\";\nimport camundaModdleDescriptor from \"camunda-bpmn-moddle/resources/camunda\";\nimport SubCard from \"views/ui-component/cards/SubCard\";\n\nclass BlockDiagramDesigner extends Component {\n    state = { modeler: null };\n\n    initialize = () => {\n        this.setState({\n            modeler: new BpmnModeler({\n                container: \"#bpmnview\",\n                keyboard: {\n                    bindTo: window,\n                },\n                propertiesPanel: {\n                    parent: \"#propview\",\n                },\n                additionalModules: this.props.showProperties\n                    ? [propertiesPanelModule, propertiesProviderModule]\n                    : null,\n                moddleExtensions: {\n                    camunda: camundaModdleDescriptor,\n                },\n            }),\n        });\n\n        // after the state is updated => componentDidUpdate willl run and load the diagram xml into the modeler\n    };\n\n    updateDiagram = () => {\n        const xmlDiagram = this.props.diagram || block_diagram_sample;\n        const { modeler } = this.state;\n\n        modeler.importXML(xmlDiagram, (error) => {\n            if (error) {\n                return console.log(\"fail import xml\");\n            }\n\n            const canvas = modeler.get(\"canvas\");\n            canvas.zoom(\"fit-viewport\");\n        });\n    };\n\n    componentDidMount = () => this.initialize();\n\n    componentDidUpdate = () => {\n        if (this.state.modeler) this.updateDiagram();\n        else this.initialize();\n    };\n\n    render = () => (\n        <SubCard>\n            <div id=\"bpmncontainer\">\n                <div\n                    id=\"bpmnview\"\n                    style={{ width: \"100%\", height: \"80vh\", float: \"left\" }}\n                ></div>\n                {this.props.showProperties && (\n                    <div\n                        id=\"propview\"\n                        style={{\n                            width: \"100%\",\n                            height: \"50vh\",\n                            overflowX: \"auto\",\n                        }}\n                    >\n                        <hr />\n                    </div>\n                )}\n            </div>\n        </SubCard>\n    );\n}\n\nexport default BlockDiagramDesigner;\n","import * as go from 'gojs';\n\nconst nodes = [\n    { key: 0, text: \"Alpha\", color: \"lightblue\", loc: \"0 0\" },\n    { key: 1, text: \"Beta\", color: \"orange\", loc: \"150 0\" },\n    {\n        key: 2,\n        text: \"Gamma\",\n        color: \"lightgreen\",\n        loc: \"0 150\",\n    },\n    { key: 3, text: \"Delta\", color: \"pink\", loc: \"150 150\" },\n];\n\nconst links = [\n    { key: -1, from: 0, to: 1, text: \"title\", curve: go.Link.Bezier },\n    { key: -2, from: 0, to: 2, text: \"x2\" },\n    { key: -3, from: 1, to: 0, text: \"x3\", curve: go.Link.Bezier },\n    { key: -4, from: 2, to: 3 },\n    { key: -5, from: 3, to: 0, curve: go.Link.Bezier },\n];\n\nconst sfg_sample = { nodes, links };\nexport default sfg_sample;\n","import React from \"react\";\n\nimport * as go from \"gojs\";\nimport { ReactDiagram } from \"gojs-react\";\n\nimport \"./diagrams.css\"; // contains .diagram-component CSS\nimport SubCard from \"views/ui-component/cards/SubCard\";\nimport sfg_sample from \"./assets/sample.gojs\";\n// ...\n\n/**\n * Diagram initialization method, which is passed to the ReactDiagram component.\n * This method is responsible for making the diagram and initializing the model and any templates.\n * The model's data should not be set here, as the ReactDiagram component handles that via the other props.\n */\nfunction initDiagram() {\n    const $ = go.GraphObject.make;\n    // set your license key here before creating the diagram: go.Diagram.licenseKey = \"...\";\n    const diagram = $(go.Diagram, {\n        \"undoManager.isEnabled\": true, // must be set to allow for model change listening\n        // 'undoManager.maxHistoryLength': 0,  // uncomment disable undo/redo functionality\n        \"clickCreatingTool.archetypeNodeData\": {\n            text: \"new node\",\n            color: \"lightblue\",\n        },\n        model: new go.GraphLinksModel({\n            linkKeyProperty: \"key\", // IMPORTANT! must be defined for merges and data sync when using GraphLinksModel\n        }),\n    });\n\n    // define a simple Node template\n    diagram.nodeTemplate = $(\n        go.Node,\n        \"Vertical\",\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\n            go.Point.stringify\n        ),\n\n        $(\n            go.TextBlock,\n            { editable: true }, // some room around the text\n            new go.Binding(\"text\").makeTwoWay()\n        ),\n        $(\n            go.Panel,\n            \"Auto\",\n            $(\n                go.Shape,\n                \"Circle\",\n                {\n                    name: \"SHAPE\",\n                    width: 16,\n                    height: 16,\n                },\n                new go.Binding(\"fill\", \"color\")\n            ),\n            $(go.Shape, \"Circle\", { width: 6, height: 6, strokeWidth: 0 })\n        )\n    );\n    // remember for curved links: {curve: go.Link.Bezier}\n    diagram.linkTemplate = $(\n        go.Link,\n        new go.Binding(\"curve\", \"curve\"),\n        $(go.Shape),\n        $(go.Shape, {\n            toArrow: \"Standard\",\n            segmentFraction: 0.66,\n        }),\n        $(go.TextBlock, new go.Binding(\"text\", \"text\"), {\n            background: \"white\",\n            segmentFraction: 0.33,\n            margin: 7\n        })\n        // $(go.TextBlock, new go.Binding(\"text2\", \"text2\"), {\n        //     segmentOffset: new go.Point(0, 20),\n        // })\n    );\n    return diagram;\n}\n\n/**\n * This function handles any changes to the GoJS model.\n * It is here that you would make any updates to your React state, which is dicussed below.\n */\nfunction handleModelChange(changes) {\n    // alert(\"GoJS model changed!\");\n}\n\n// render function...\nconst SignalFlowGraphDesigner = ({ sfg = sfg_sample }) => {\n    return (\n        <SubCard>\n            <ReactDiagram\n                initDiagram={initDiagram}\n                divClassName=\"diagram-component\"\n                nodeDataArray={sfg.nodes}\n                linkDataArray={sfg.links}\n                onModelChange={handleModelChange}\n            />\n        </SubCard>\n    );\n};\n\nexport default SignalFlowGraphDesigner;\n","// project imports\nimport SubCard from \"views/ui-component/cards/SubCard\";\nimport BlockDiagramDesginer from \"views/diagrams/BlockDiagramDesigner\";\nimport \"bpmn-js-properties-panel/dist/assets/bpmn-js-properties-panel.css\";\nimport { Grid } from \"@mui/material\";\nimport SignalFlowGraphDesigner from \"views/diagrams/SignalFlowGraphDesigner\";\n\nconst ToolBox = () => {\n    return (\n        <Grid container>\n            <Grid xs={12} item>\n                <SignalFlowGraphDesigner />\n            </Grid>\n            <hr />\n            <Grid xs={12} item>\n                <SubCard background=\"rgba(255, 255, 255, 1.0)\">\n                    <BlockDiagramDesginer showProperties />\n                </SubCard>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ToolBox;\n"],"names":["BlockDiagramDesigner","state","modeler","initialize","setState","BpmnModeler","container","keyboard","bindTo","window","propertiesPanel","parent","additionalModules","props","showProperties","propertiesPanelModule","propertiesProviderModule","moddleExtensions","camunda","camundaModdleDescriptor","updateDiagram","xmlDiagram","diagram","block_diagram_sample","importXML","error","console","log","get","zoom","componentDidMount","componentDidUpdate","render","SubCard","id","style","width","height","float","overflowX","Component","nodes","key","text","color","loc","links","from","to","curve","go","initDiagram","$","model","linkKeyProperty","nodeTemplate","makeTwoWay","editable","name","strokeWidth","linkTemplate","toArrow","segmentFraction","background","margin","handleModelChange","changes","sfg","sfg_sample","divClassName","nodeDataArray","linkDataArray","onModelChange","Grid","xs","item","SignalFlowGraphDesigner"],"sourceRoot":""}